(() => {
  var __webpack_modules__ = {
    44914: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              Object.defineProperty(e, s, {
                enumerable: true,
                get: function () {
                  return t[r];
                },
              });
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.issue = t.issueCommand = void 0;
      const i = o(r(70857));
      const a = r(30302);
      function issueCommand(e, t, r) {
        const s = new Command(e, t, r);
        process.stdout.write(s.toString() + i.EOL);
      }
      t.issueCommand = issueCommand;
      function issue(e, t = "") {
        issueCommand(e, {}, t);
      }
      t.issue = issue;
      const A = "::";
      class Command {
        constructor(e, t, r) {
          if (!e) {
            e = "missing.command";
          }
          this.command = e;
          this.properties = t;
          this.message = r;
        }
        toString() {
          let e = A + this.command;
          if (this.properties && Object.keys(this.properties).length > 0) {
            e += " ";
            let t = true;
            for (const r in this.properties) {
              if (this.properties.hasOwnProperty(r)) {
                const s = this.properties[r];
                if (s) {
                  if (t) {
                    t = false;
                  } else {
                    e += ",";
                  }
                  e += `${r}=${escapeProperty(s)}`;
                }
              }
            }
          }
          e += `${A}${escapeData(this.message)}`;
          return e;
        }
      }
      function escapeData(e) {
        return a.toCommandValue(e).replace(/%/g, "%25").replace(/\r/g, "%0D").replace(/\n/g, "%0A");
      }
      function escapeProperty(e) {
        return a.toCommandValue(e).replace(/%/g, "%25").replace(/\r/g, "%0D").replace(/\n/g, "%0A").replace(/:/g, "%3A").replace(/,/g, "%2C");
      }
    },
    37484: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              Object.defineProperty(e, s, {
                enumerable: true,
                get: function () {
                  return t[r];
                },
              });
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      var i =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.getIDToken =
        t.getState =
        t.saveState =
        t.group =
        t.endGroup =
        t.startGroup =
        t.info =
        t.notice =
        t.warning =
        t.error =
        t.debug =
        t.isDebug =
        t.setFailed =
        t.setCommandEcho =
        t.setOutput =
        t.getBooleanInput =
        t.getMultilineInput =
        t.getInput =
        t.addPath =
        t.setSecret =
        t.exportVariable =
        t.ExitCode =
          void 0;
      const a = r(44914);
      const A = r(24753);
      const l = r(30302);
      const c = o(r(70857));
      const d = o(r(16928));
      const p = r(35306);
      var u;
      (function (e) {
        e[(e["Success"] = 0)] = "Success";
        e[(e["Failure"] = 1)] = "Failure";
      })((u = t.ExitCode || (t.ExitCode = {})));
      function exportVariable(e, t) {
        const r = l.toCommandValue(t);
        process.env[e] = r;
        const s = process.env["GITHUB_ENV"] || "";
        if (s) {
          return A.issueFileCommand("ENV", A.prepareKeyValueMessage(e, t));
        }
        a.issueCommand("set-env", { name: e }, r);
      }
      t.exportVariable = exportVariable;
      function setSecret(e) {
        a.issueCommand("add-mask", {}, e);
      }
      t.setSecret = setSecret;
      function addPath(e) {
        const t = process.env["GITHUB_PATH"] || "";
        if (t) {
          A.issueFileCommand("PATH", e);
        } else {
          a.issueCommand("add-path", {}, e);
        }
        process.env["PATH"] = `${e}${d.delimiter}${process.env["PATH"]}`;
      }
      t.addPath = addPath;
      function getInput(e, t) {
        const r = process.env[`INPUT_${e.replace(/ /g, "_").toUpperCase()}`] || "";
        if (t && t.required && !r) {
          throw new Error(`Input required and not supplied: ${e}`);
        }
        if (t && t.trimWhitespace === false) {
          return r;
        }
        return r.trim();
      }
      t.getInput = getInput;
      function getMultilineInput(e, t) {
        const r = getInput(e, t)
          .split("\n")
          .filter((e) => e !== "");
        if (t && t.trimWhitespace === false) {
          return r;
        }
        return r.map((e) => e.trim());
      }
      t.getMultilineInput = getMultilineInput;
      function getBooleanInput(e, t) {
        const r = ["true", "True", "TRUE"];
        const s = ["false", "False", "FALSE"];
        const n = getInput(e, t);
        if (r.includes(n)) return true;
        if (s.includes(n)) return false;
        throw new TypeError(
          `Input does not meet YAML 1.2 "Core Schema" specification: ${e}\n` + `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``
        );
      }
      t.getBooleanInput = getBooleanInput;
      function setOutput(e, t) {
        const r = process.env["GITHUB_OUTPUT"] || "";
        if (r) {
          return A.issueFileCommand("OUTPUT", A.prepareKeyValueMessage(e, t));
        }
        process.stdout.write(c.EOL);
        a.issueCommand("set-output", { name: e }, l.toCommandValue(t));
      }
      t.setOutput = setOutput;
      function setCommandEcho(e) {
        a.issue("echo", e ? "on" : "off");
      }
      t.setCommandEcho = setCommandEcho;
      function setFailed(e) {
        process.exitCode = u.Failure;
        error(e);
      }
      t.setFailed = setFailed;
      function isDebug() {
        return process.env["RUNNER_DEBUG"] === "1";
      }
      t.isDebug = isDebug;
      function debug(e) {
        a.issueCommand("debug", {}, e);
      }
      t.debug = debug;
      function error(e, t = {}) {
        a.issueCommand("error", l.toCommandProperties(t), e instanceof Error ? e.toString() : e);
      }
      t.error = error;
      function warning(e, t = {}) {
        a.issueCommand("warning", l.toCommandProperties(t), e instanceof Error ? e.toString() : e);
      }
      t.warning = warning;
      function notice(e, t = {}) {
        a.issueCommand("notice", l.toCommandProperties(t), e instanceof Error ? e.toString() : e);
      }
      t.notice = notice;
      function info(e) {
        process.stdout.write(e + c.EOL);
      }
      t.info = info;
      function startGroup(e) {
        a.issue("group", e);
      }
      t.startGroup = startGroup;
      function endGroup() {
        a.issue("endgroup");
      }
      t.endGroup = endGroup;
      function group(e, t) {
        return i(this, void 0, void 0, function* () {
          startGroup(e);
          let r;
          try {
            r = yield t();
          } finally {
            endGroup();
          }
          return r;
        });
      }
      t.group = group;
      function saveState(e, t) {
        const r = process.env["GITHUB_STATE"] || "";
        if (r) {
          return A.issueFileCommand("STATE", A.prepareKeyValueMessage(e, t));
        }
        a.issueCommand("save-state", { name: e }, l.toCommandValue(t));
      }
      t.saveState = saveState;
      function getState(e) {
        return process.env[`STATE_${e}`] || "";
      }
      t.getState = getState;
      function getIDToken(e) {
        return i(this, void 0, void 0, function* () {
          return yield p.OidcClient.getIDToken(e);
        });
      }
      t.getIDToken = getIDToken;
      var g = r(71847);
      Object.defineProperty(t, "summary", {
        enumerable: true,
        get: function () {
          return g.summary;
        },
      });
      var m = r(71847);
      Object.defineProperty(t, "markdownSummary", {
        enumerable: true,
        get: function () {
          return m.markdownSummary;
        },
      });
      var h = r(31976);
      Object.defineProperty(t, "toPosixPath", {
        enumerable: true,
        get: function () {
          return h.toPosixPath;
        },
      });
      Object.defineProperty(t, "toWin32Path", {
        enumerable: true,
        get: function () {
          return h.toWin32Path;
        },
      });
      Object.defineProperty(t, "toPlatformPath", {
        enumerable: true,
        get: function () {
          return h.toPlatformPath;
        },
      });
    },
    24753: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              Object.defineProperty(e, s, {
                enumerable: true,
                get: function () {
                  return t[r];
                },
              });
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.prepareKeyValueMessage = t.issueFileCommand = void 0;
      const i = o(r(79896));
      const a = o(r(70857));
      const A = r(12048);
      const l = r(30302);
      function issueFileCommand(e, t) {
        const r = process.env[`GITHUB_${e}`];
        if (!r) {
          throw new Error(`Unable to find environment variable for file command ${e}`);
        }
        if (!i.existsSync(r)) {
          throw new Error(`Missing file at path: ${r}`);
        }
        i.appendFileSync(r, `${l.toCommandValue(t)}${a.EOL}`, { encoding: "utf8" });
      }
      t.issueFileCommand = issueFileCommand;
      function prepareKeyValueMessage(e, t) {
        const r = `ghadelimiter_${A.v4()}`;
        const s = l.toCommandValue(t);
        if (e.includes(r)) {
          throw new Error(`Unexpected input: name should not contain the delimiter "${r}"`);
        }
        if (s.includes(r)) {
          throw new Error(`Unexpected input: value should not contain the delimiter "${r}"`);
        }
        return `${e}<<${r}${a.EOL}${s}${a.EOL}${r}`;
      }
      t.prepareKeyValueMessage = prepareKeyValueMessage;
    },
    35306: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.OidcClient = void 0;
      const n = r(54844);
      const o = r(44552);
      const i = r(37484);
      class OidcClient {
        static createHttpClient(e = true, t = 10) {
          const r = { allowRetries: e, maxRetries: t };
          return new n.HttpClient("actions/oidc-client", [new o.BearerCredentialHandler(OidcClient.getRequestToken())], r);
        }
        static getRequestToken() {
          const e = process.env["ACTIONS_ID_TOKEN_REQUEST_TOKEN"];
          if (!e) {
            throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable");
          }
          return e;
        }
        static getIDTokenUrl() {
          const e = process.env["ACTIONS_ID_TOKEN_REQUEST_URL"];
          if (!e) {
            throw new Error("Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable");
          }
          return e;
        }
        static getCall(e) {
          var t;
          return s(this, void 0, void 0, function* () {
            const r = OidcClient.createHttpClient();
            const s = yield r.getJson(e).catch((e) => {
              throw new Error(`Failed to get ID Token. \n \n        Error Code : ${e.statusCode}\n \n        Error Message: ${e.message}`);
            });
            const n = (t = s.result) === null || t === void 0 ? void 0 : t.value;
            if (!n) {
              throw new Error("Response json body do not have ID Token field");
            }
            return n;
          });
        }
        static getIDToken(e) {
          return s(this, void 0, void 0, function* () {
            try {
              let t = OidcClient.getIDTokenUrl();
              if (e) {
                const r = encodeURIComponent(e);
                t = `${t}&audience=${r}`;
              }
              i.debug(`ID token url is ${t}`);
              const r = yield OidcClient.getCall(t);
              i.setSecret(r);
              return r;
            } catch (e) {
              throw new Error(`Error message: ${e.message}`);
            }
          });
        }
      }
      t.OidcClient = OidcClient;
    },
    31976: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              Object.defineProperty(e, s, {
                enumerable: true,
                get: function () {
                  return t[r];
                },
              });
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.toPlatformPath = t.toWin32Path = t.toPosixPath = void 0;
      const i = o(r(16928));
      function toPosixPath(e) {
        return e.replace(/[\\]/g, "/");
      }
      t.toPosixPath = toPosixPath;
      function toWin32Path(e) {
        return e.replace(/[/]/g, "\\");
      }
      t.toWin32Path = toWin32Path;
      function toPlatformPath(e) {
        return e.replace(/[/\\]/g, i.sep);
      }
      t.toPlatformPath = toPlatformPath;
    },
    71847: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.summary = t.markdownSummary = t.SUMMARY_DOCS_URL = t.SUMMARY_ENV_VAR = void 0;
      const n = r(70857);
      const o = r(79896);
      const { access: i, appendFile: a, writeFile: A } = o.promises;
      t.SUMMARY_ENV_VAR = "GITHUB_STEP_SUMMARY";
      t.SUMMARY_DOCS_URL = "https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary";
      class Summary {
        constructor() {
          this._buffer = "";
        }
        filePath() {
          return s(this, void 0, void 0, function* () {
            if (this._filePath) {
              return this._filePath;
            }
            const e = process.env[t.SUMMARY_ENV_VAR];
            if (!e) {
              throw new Error(`Unable to find environment variable for $${t.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);
            }
            try {
              yield i(e, o.constants.R_OK | o.constants.W_OK);
            } catch (t) {
              throw new Error(`Unable to access summary file: '${e}'. Check if the file has correct read/write permissions.`);
            }
            this._filePath = e;
            return this._filePath;
          });
        }
        wrap(e, t, r = {}) {
          const s = Object.entries(r)
            .map(([e, t]) => ` ${e}="${t}"`)
            .join("");
          if (!t) {
            return `<${e}${s}>`;
          }
          return `<${e}${s}>${t}</${e}>`;
        }
        write(e) {
          return s(this, void 0, void 0, function* () {
            const t = !!(e === null || e === void 0 ? void 0 : e.overwrite);
            const r = yield this.filePath();
            const s = t ? A : a;
            yield s(r, this._buffer, { encoding: "utf8" });
            return this.emptyBuffer();
          });
        }
        clear() {
          return s(this, void 0, void 0, function* () {
            return this.emptyBuffer().write({ overwrite: true });
          });
        }
        stringify() {
          return this._buffer;
        }
        isEmptyBuffer() {
          return this._buffer.length === 0;
        }
        emptyBuffer() {
          this._buffer = "";
          return this;
        }
        addRaw(e, t = false) {
          this._buffer += e;
          return t ? this.addEOL() : this;
        }
        addEOL() {
          return this.addRaw(n.EOL);
        }
        addCodeBlock(e, t) {
          const r = Object.assign({}, t && { lang: t });
          const s = this.wrap("pre", this.wrap("code", e), r);
          return this.addRaw(s).addEOL();
        }
        addList(e, t = false) {
          const r = t ? "ol" : "ul";
          const s = e.map((e) => this.wrap("li", e)).join("");
          const n = this.wrap(r, s);
          return this.addRaw(n).addEOL();
        }
        addTable(e) {
          const t = e
            .map((e) => {
              const t = e
                .map((e) => {
                  if (typeof e === "string") {
                    return this.wrap("td", e);
                  }
                  const { header: t, data: r, colspan: s, rowspan: n } = e;
                  const o = t ? "th" : "td";
                  const i = Object.assign(Object.assign({}, s && { colspan: s }), n && { rowspan: n });
                  return this.wrap(o, r, i);
                })
                .join("");
              return this.wrap("tr", t);
            })
            .join("");
          const r = this.wrap("table", t);
          return this.addRaw(r).addEOL();
        }
        addDetails(e, t) {
          const r = this.wrap("details", this.wrap("summary", e) + t);
          return this.addRaw(r).addEOL();
        }
        addImage(e, t, r) {
          const { width: s, height: n } = r || {};
          const o = Object.assign(Object.assign({}, s && { width: s }), n && { height: n });
          const i = this.wrap("img", null, Object.assign({ src: e, alt: t }, o));
          return this.addRaw(i).addEOL();
        }
        addHeading(e, t) {
          const r = `h${t}`;
          const s = ["h1", "h2", "h3", "h4", "h5", "h6"].includes(r) ? r : "h1";
          const n = this.wrap(s, e);
          return this.addRaw(n).addEOL();
        }
        addSeparator() {
          const e = this.wrap("hr", null);
          return this.addRaw(e).addEOL();
        }
        addBreak() {
          const e = this.wrap("br", null);
          return this.addRaw(e).addEOL();
        }
        addQuote(e, t) {
          const r = Object.assign({}, t && { cite: t });
          const s = this.wrap("blockquote", e, r);
          return this.addRaw(s).addEOL();
        }
        addLink(e, t) {
          const r = this.wrap("a", e, { href: t });
          return this.addRaw(r).addEOL();
        }
      }
      const l = new Summary();
      t.markdownSummary = l;
      t.summary = l;
    },
    30302: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.toCommandProperties = t.toCommandValue = void 0;
      function toCommandValue(e) {
        if (e === null || e === undefined) {
          return "";
        } else if (typeof e === "string" || e instanceof String) {
          return e;
        }
        return JSON.stringify(e);
      }
      t.toCommandValue = toCommandValue;
      function toCommandProperties(e) {
        if (!Object.keys(e).length) {
          return {};
        }
        return { title: e.title, file: e.file, line: e.startLine, endLine: e.endLine, col: e.startColumn, endColumn: e.endColumn };
      }
      t.toCommandProperties = toCommandProperties;
    },
    51648: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Context = void 0;
      const s = r(79896);
      const n = r(70857);
      class Context {
        constructor() {
          var e, t, r;
          this.payload = {};
          if (process.env.GITHUB_EVENT_PATH) {
            if ((0, s.existsSync)(process.env.GITHUB_EVENT_PATH)) {
              this.payload = JSON.parse((0, s.readFileSync)(process.env.GITHUB_EVENT_PATH, { encoding: "utf8" }));
            } else {
              const e = process.env.GITHUB_EVENT_PATH;
              process.stdout.write(`GITHUB_EVENT_PATH ${e} does not exist${n.EOL}`);
            }
          }
          this.eventName = process.env.GITHUB_EVENT_NAME;
          this.sha = process.env.GITHUB_SHA;
          this.ref = process.env.GITHUB_REF;
          this.workflow = process.env.GITHUB_WORKFLOW;
          this.action = process.env.GITHUB_ACTION;
          this.actor = process.env.GITHUB_ACTOR;
          this.job = process.env.GITHUB_JOB;
          this.runNumber = parseInt(process.env.GITHUB_RUN_NUMBER, 10);
          this.runId = parseInt(process.env.GITHUB_RUN_ID, 10);
          this.apiUrl = (e = process.env.GITHUB_API_URL) !== null && e !== void 0 ? e : `https://api.github.com`;
          this.serverUrl = (t = process.env.GITHUB_SERVER_URL) !== null && t !== void 0 ? t : `https://github.com`;
          this.graphqlUrl = (r = process.env.GITHUB_GRAPHQL_URL) !== null && r !== void 0 ? r : `https://api.github.com/graphql`;
        }
        get issue() {
          const e = this.payload;
          return Object.assign(Object.assign({}, this.repo), { number: (e.issue || e.pull_request || e).number });
        }
        get repo() {
          if (process.env.GITHUB_REPOSITORY) {
            const [e, t] = process.env.GITHUB_REPOSITORY.split("/");
            return { owner: e, repo: t };
          }
          if (this.payload.repository) {
            return { owner: this.payload.repository.owner.login, repo: this.payload.repository.name };
          }
          throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'");
        }
      }
      t.Context = Context;
    },
    93228: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.prototype.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.getOctokit = t.context = void 0;
      const i = o(r(51648));
      const a = r(38006);
      t.context = new i.Context();
      function getOctokit(e, t, ...r) {
        const s = a.GitHub.plugin(...r);
        return new s((0, a.getOctokitOptions)(e, t));
      }
      t.getOctokit = getOctokit;
    },
    65156: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.prototype.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      var i =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.getApiBaseUrl = t.getProxyFetch = t.getProxyAgentDispatcher = t.getProxyAgent = t.getAuthString = void 0;
      const a = o(r(54844));
      const A = r(46752);
      function getAuthString(e, t) {
        if (!e && !t.auth) {
          throw new Error("Parameter token or opts.auth is required");
        } else if (e && t.auth) {
          throw new Error("Parameters token and opts.auth may not both be specified");
        }
        return typeof t.auth === "string" ? t.auth : `token ${e}`;
      }
      t.getAuthString = getAuthString;
      function getProxyAgent(e) {
        const t = new a.HttpClient();
        return t.getAgent(e);
      }
      t.getProxyAgent = getProxyAgent;
      function getProxyAgentDispatcher(e) {
        const t = new a.HttpClient();
        return t.getAgentDispatcher(e);
      }
      t.getProxyAgentDispatcher = getProxyAgentDispatcher;
      function getProxyFetch(e) {
        const t = getProxyAgentDispatcher(e);
        const proxyFetch = (e, r) =>
          i(this, void 0, void 0, function* () {
            return (0, A.fetch)(e, Object.assign(Object.assign({}, r), { dispatcher: t }));
          });
        return proxyFetch;
      }
      t.getProxyFetch = getProxyFetch;
      function getApiBaseUrl() {
        return process.env["GITHUB_API_URL"] || "https://api.github.com";
      }
      t.getApiBaseUrl = getApiBaseUrl;
    },
    38006: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.prototype.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.getOctokitOptions = t.GitHub = t.defaults = t.context = void 0;
      const i = o(r(51648));
      const a = o(r(65156));
      const A = r(61897);
      const l = r(75726);
      const c = r(37731);
      t.context = new i.Context();
      const d = a.getApiBaseUrl();
      t.defaults = { baseUrl: d, request: { agent: a.getProxyAgent(d), fetch: a.getProxyFetch(d) } };
      t.GitHub = A.Octokit.plugin(l.restEndpointMethods, c.paginateRest).defaults(t.defaults);
      function getOctokitOptions(e, t) {
        const r = Object.assign({}, t || {});
        const s = a.getAuthString(e, r);
        if (s) {
          r.auth = s;
        }
        return r;
      }
      t.getOctokitOptions = getOctokitOptions;
    },
    37731: (e) => {
      "use strict";
      var t = Object.defineProperty;
      var r = Object.getOwnPropertyDescriptor;
      var s = Object.getOwnPropertyNames;
      var n = Object.prototype.hasOwnProperty;
      var __export = (e, r) => {
        for (var s in r) t(e, s, { get: r[s], enumerable: true });
      };
      var __copyProps = (e, o, i, a) => {
        if ((o && typeof o === "object") || typeof o === "function") {
          for (let A of s(o)) if (!n.call(e, A) && A !== i) t(e, A, { get: () => o[A], enumerable: !(a = r(o, A)) || a.enumerable });
        }
        return e;
      };
      var __toCommonJS = (e) => __copyProps(t({}, "__esModule", { value: true }), e);
      var o = {};
      __export(o, {
        composePaginateRest: () => a,
        isPaginatingEndpoint: () => isPaginatingEndpoint,
        paginateRest: () => paginateRest,
        paginatingEndpoints: () => A,
      });
      e.exports = __toCommonJS(o);
      var i = "9.2.1";
      function normalizePaginatedListResponse(e) {
        if (!e.data) {
          return { ...e, data: [] };
        }
        const t = "total_count" in e.data && !("url" in e.data);
        if (!t) return e;
        const r = e.data.incomplete_results;
        const s = e.data.repository_selection;
        const n = e.data.total_count;
        delete e.data.incomplete_results;
        delete e.data.repository_selection;
        delete e.data.total_count;
        const o = Object.keys(e.data)[0];
        const i = e.data[o];
        e.data = i;
        if (typeof r !== "undefined") {
          e.data.incomplete_results = r;
        }
        if (typeof s !== "undefined") {
          e.data.repository_selection = s;
        }
        e.data.total_count = n;
        return e;
      }
      function iterator(e, t, r) {
        const s = typeof t === "function" ? t.endpoint(r) : e.request.endpoint(t, r);
        const n = typeof t === "function" ? t : e.request;
        const o = s.method;
        const i = s.headers;
        let a = s.url;
        return {
          [Symbol.asyncIterator]: () => ({
            async next() {
              if (!a) return { done: true };
              try {
                const e = await n({ method: o, url: a, headers: i });
                const t = normalizePaginatedListResponse(e);
                a = ((t.headers.link || "").match(/<([^>]+)>;\s*rel="next"/) || [])[1];
                return { value: t };
              } catch (e) {
                if (e.status !== 409) throw e;
                a = "";
                return { value: { status: 200, headers: {}, data: [] } };
              }
            },
          }),
        };
      }
      function paginate(e, t, r, s) {
        if (typeof r === "function") {
          s = r;
          r = void 0;
        }
        return gather(e, [], iterator(e, t, r)[Symbol.asyncIterator](), s);
      }
      function gather(e, t, r, s) {
        return r.next().then((n) => {
          if (n.done) {
            return t;
          }
          let o = false;
          function done() {
            o = true;
          }
          t = t.concat(s ? s(n.value, done) : n.value.data);
          if (o) {
            return t;
          }
          return gather(e, t, r, s);
        });
      }
      var a = Object.assign(paginate, { iterator: iterator });
      var A = [
        "GET /advisories",
        "GET /app/hook/deliveries",
        "GET /app/installation-requests",
        "GET /app/installations",
        "GET /assignments/{assignment_id}/accepted_assignments",
        "GET /classrooms",
        "GET /classrooms/{classroom_id}/assignments",
        "GET /enterprises/{enterprise}/dependabot/alerts",
        "GET /enterprises/{enterprise}/secret-scanning/alerts",
        "GET /events",
        "GET /gists",
        "GET /gists/public",
        "GET /gists/starred",
        "GET /gists/{gist_id}/comments",
        "GET /gists/{gist_id}/commits",
        "GET /gists/{gist_id}/forks",
        "GET /installation/repositories",
        "GET /issues",
        "GET /licenses",
        "GET /marketplace_listing/plans",
        "GET /marketplace_listing/plans/{plan_id}/accounts",
        "GET /marketplace_listing/stubbed/plans",
        "GET /marketplace_listing/stubbed/plans/{plan_id}/accounts",
        "GET /networks/{owner}/{repo}/events",
        "GET /notifications",
        "GET /organizations",
        "GET /orgs/{org}/actions/cache/usage-by-repository",
        "GET /orgs/{org}/actions/permissions/repositories",
        "GET /orgs/{org}/actions/runners",
        "GET /orgs/{org}/actions/secrets",
        "GET /orgs/{org}/actions/secrets/{secret_name}/repositories",
        "GET /orgs/{org}/actions/variables",
        "GET /orgs/{org}/actions/variables/{name}/repositories",
        "GET /orgs/{org}/blocks",
        "GET /orgs/{org}/code-scanning/alerts",
        "GET /orgs/{org}/codespaces",
        "GET /orgs/{org}/codespaces/secrets",
        "GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories",
        "GET /orgs/{org}/copilot/billing/seats",
        "GET /orgs/{org}/dependabot/alerts",
        "GET /orgs/{org}/dependabot/secrets",
        "GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories",
        "GET /orgs/{org}/events",
        "GET /orgs/{org}/failed_invitations",
        "GET /orgs/{org}/hooks",
        "GET /orgs/{org}/hooks/{hook_id}/deliveries",
        "GET /orgs/{org}/installations",
        "GET /orgs/{org}/invitations",
        "GET /orgs/{org}/invitations/{invitation_id}/teams",
        "GET /orgs/{org}/issues",
        "GET /orgs/{org}/members",
        "GET /orgs/{org}/members/{username}/codespaces",
        "GET /orgs/{org}/migrations",
        "GET /orgs/{org}/migrations/{migration_id}/repositories",
        "GET /orgs/{org}/organization-roles/{role_id}/teams",
        "GET /orgs/{org}/organization-roles/{role_id}/users",
        "GET /orgs/{org}/outside_collaborators",
        "GET /orgs/{org}/packages",
        "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
        "GET /orgs/{org}/personal-access-token-requests",
        "GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories",
        "GET /orgs/{org}/personal-access-tokens",
        "GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories",
        "GET /orgs/{org}/projects",
        "GET /orgs/{org}/properties/values",
        "GET /orgs/{org}/public_members",
        "GET /orgs/{org}/repos",
        "GET /orgs/{org}/rulesets",
        "GET /orgs/{org}/rulesets/rule-suites",
        "GET /orgs/{org}/secret-scanning/alerts",
        "GET /orgs/{org}/security-advisories",
        "GET /orgs/{org}/teams",
        "GET /orgs/{org}/teams/{team_slug}/discussions",
        "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
        "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
        "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
        "GET /orgs/{org}/teams/{team_slug}/invitations",
        "GET /orgs/{org}/teams/{team_slug}/members",
        "GET /orgs/{org}/teams/{team_slug}/projects",
        "GET /orgs/{org}/teams/{team_slug}/repos",
        "GET /orgs/{org}/teams/{team_slug}/teams",
        "GET /projects/columns/{column_id}/cards",
        "GET /projects/{project_id}/collaborators",
        "GET /projects/{project_id}/columns",
        "GET /repos/{owner}/{repo}/actions/artifacts",
        "GET /repos/{owner}/{repo}/actions/caches",
        "GET /repos/{owner}/{repo}/actions/organization-secrets",
        "GET /repos/{owner}/{repo}/actions/organization-variables",
        "GET /repos/{owner}/{repo}/actions/runners",
        "GET /repos/{owner}/{repo}/actions/runs",
        "GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
        "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs",
        "GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
        "GET /repos/{owner}/{repo}/actions/secrets",
        "GET /repos/{owner}/{repo}/actions/variables",
        "GET /repos/{owner}/{repo}/actions/workflows",
        "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
        "GET /repos/{owner}/{repo}/activity",
        "GET /repos/{owner}/{repo}/assignees",
        "GET /repos/{owner}/{repo}/branches",
        "GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",
        "GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
        "GET /repos/{owner}/{repo}/code-scanning/alerts",
        "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
        "GET /repos/{owner}/{repo}/code-scanning/analyses",
        "GET /repos/{owner}/{repo}/codespaces",
        "GET /repos/{owner}/{repo}/codespaces/devcontainers",
        "GET /repos/{owner}/{repo}/codespaces/secrets",
        "GET /repos/{owner}/{repo}/collaborators",
        "GET /repos/{owner}/{repo}/comments",
        "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",
        "GET /repos/{owner}/{repo}/commits",
        "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments",
        "GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",
        "GET /repos/{owner}/{repo}/commits/{ref}/check-runs",
        "GET /repos/{owner}/{repo}/commits/{ref}/check-suites",
        "GET /repos/{owner}/{repo}/commits/{ref}/status",
        "GET /repos/{owner}/{repo}/commits/{ref}/statuses",
        "GET /repos/{owner}/{repo}/contributors",
        "GET /repos/{owner}/{repo}/dependabot/alerts",
        "GET /repos/{owner}/{repo}/dependabot/secrets",
        "GET /repos/{owner}/{repo}/deployments",
        "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
        "GET /repos/{owner}/{repo}/environments",
        "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies",
        "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps",
        "GET /repos/{owner}/{repo}/events",
        "GET /repos/{owner}/{repo}/forks",
        "GET /repos/{owner}/{repo}/hooks",
        "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
        "GET /repos/{owner}/{repo}/invitations",
        "GET /repos/{owner}/{repo}/issues",
        "GET /repos/{owner}/{repo}/issues/comments",
        "GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
        "GET /repos/{owner}/{repo}/issues/events",
        "GET /repos/{owner}/{repo}/issues/{issue_number}/comments",
        "GET /repos/{owner}/{repo}/issues/{issue_number}/events",
        "GET /repos/{owner}/{repo}/issues/{issue_number}/labels",
        "GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",
        "GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",
        "GET /repos/{owner}/{repo}/keys",
        "GET /repos/{owner}/{repo}/labels",
        "GET /repos/{owner}/{repo}/milestones",
        "GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels",
        "GET /repos/{owner}/{repo}/notifications",
        "GET /repos/{owner}/{repo}/pages/builds",
        "GET /repos/{owner}/{repo}/projects",
        "GET /repos/{owner}/{repo}/pulls",
        "GET /repos/{owner}/{repo}/pulls/comments",
        "GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
        "GET /repos/{owner}/{repo}/pulls/{pull_number}/comments",
        "GET /repos/{owner}/{repo}/pulls/{pull_number}/commits",
        "GET /repos/{owner}/{repo}/pulls/{pull_number}/files",
        "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews",
        "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",
        "GET /repos/{owner}/{repo}/releases",
        "GET /repos/{owner}/{repo}/releases/{release_id}/assets",
        "GET /repos/{owner}/{repo}/releases/{release_id}/reactions",
        "GET /repos/{owner}/{repo}/rules/branches/{branch}",
        "GET /repos/{owner}/{repo}/rulesets",
        "GET /repos/{owner}/{repo}/rulesets/rule-suites",
        "GET /repos/{owner}/{repo}/secret-scanning/alerts",
        "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations",
        "GET /repos/{owner}/{repo}/security-advisories",
        "GET /repos/{owner}/{repo}/stargazers",
        "GET /repos/{owner}/{repo}/subscribers",
        "GET /repos/{owner}/{repo}/tags",
        "GET /repos/{owner}/{repo}/teams",
        "GET /repos/{owner}/{repo}/topics",
        "GET /repositories",
        "GET /repositories/{repository_id}/environments/{environment_name}/secrets",
        "GET /repositories/{repository_id}/environments/{environment_name}/variables",
        "GET /search/code",
        "GET /search/commits",
        "GET /search/issues",
        "GET /search/labels",
        "GET /search/repositories",
        "GET /search/topics",
        "GET /search/users",
        "GET /teams/{team_id}/discussions",
        "GET /teams/{team_id}/discussions/{discussion_number}/comments",
        "GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
        "GET /teams/{team_id}/discussions/{discussion_number}/reactions",
        "GET /teams/{team_id}/invitations",
        "GET /teams/{team_id}/members",
        "GET /teams/{team_id}/projects",
        "GET /teams/{team_id}/repos",
        "GET /teams/{team_id}/teams",
        "GET /user/blocks",
        "GET /user/codespaces",
        "GET /user/codespaces/secrets",
        "GET /user/emails",
        "GET /user/followers",
        "GET /user/following",
        "GET /user/gpg_keys",
        "GET /user/installations",
        "GET /user/installations/{installation_id}/repositories",
        "GET /user/issues",
        "GET /user/keys",
        "GET /user/marketplace_purchases",
        "GET /user/marketplace_purchases/stubbed",
        "GET /user/memberships/orgs",
        "GET /user/migrations",
        "GET /user/migrations/{migration_id}/repositories",
        "GET /user/orgs",
        "GET /user/packages",
        "GET /user/packages/{package_type}/{package_name}/versions",
        "GET /user/public_emails",
        "GET /user/repos",
        "GET /user/repository_invitations",
        "GET /user/social_accounts",
        "GET /user/ssh_signing_keys",
        "GET /user/starred",
        "GET /user/subscriptions",
        "GET /user/teams",
        "GET /users",
        "GET /users/{username}/events",
        "GET /users/{username}/events/orgs/{org}",
        "GET /users/{username}/events/public",
        "GET /users/{username}/followers",
        "GET /users/{username}/following",
        "GET /users/{username}/gists",
        "GET /users/{username}/gpg_keys",
        "GET /users/{username}/keys",
        "GET /users/{username}/orgs",
        "GET /users/{username}/packages",
        "GET /users/{username}/projects",
        "GET /users/{username}/received_events",
        "GET /users/{username}/received_events/public",
        "GET /users/{username}/repos",
        "GET /users/{username}/social_accounts",
        "GET /users/{username}/ssh_signing_keys",
        "GET /users/{username}/starred",
        "GET /users/{username}/subscriptions",
      ];
      function isPaginatingEndpoint(e) {
        if (typeof e === "string") {
          return A.includes(e);
        } else {
          return false;
        }
      }
      function paginateRest(e) {
        return { paginate: Object.assign(paginate.bind(null, e), { iterator: iterator.bind(null, e) }) };
      }
      paginateRest.VERSION = i;
      0 && 0;
    },
    75726: (e) => {
      "use strict";
      var t = Object.defineProperty;
      var r = Object.getOwnPropertyDescriptor;
      var s = Object.getOwnPropertyNames;
      var n = Object.prototype.hasOwnProperty;
      var __export = (e, r) => {
        for (var s in r) t(e, s, { get: r[s], enumerable: true });
      };
      var __copyProps = (e, o, i, a) => {
        if ((o && typeof o === "object") || typeof o === "function") {
          for (let A of s(o)) if (!n.call(e, A) && A !== i) t(e, A, { get: () => o[A], enumerable: !(a = r(o, A)) || a.enumerable });
        }
        return e;
      };
      var __toCommonJS = (e) => __copyProps(t({}, "__esModule", { value: true }), e);
      var o = {};
      __export(o, { legacyRestEndpointMethods: () => legacyRestEndpointMethods, restEndpointMethods: () => restEndpointMethods });
      e.exports = __toCommonJS(o);
      var i = "10.4.1";
      var a = {
        actions: {
          addCustomLabelsToSelfHostedRunnerForOrg: ["POST /orgs/{org}/actions/runners/{runner_id}/labels"],
          addCustomLabelsToSelfHostedRunnerForRepo: ["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
          addSelectedRepoToOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],
          addSelectedRepoToOrgVariable: ["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],
          approveWorkflowRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],
          cancelWorkflowRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],
          createEnvironmentVariable: ["POST /repositories/{repository_id}/environments/{environment_name}/variables"],
          createOrUpdateEnvironmentSecret: ["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],
          createOrUpdateOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}"],
          createOrUpdateRepoSecret: ["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
          createOrgVariable: ["POST /orgs/{org}/actions/variables"],
          createRegistrationTokenForOrg: ["POST /orgs/{org}/actions/runners/registration-token"],
          createRegistrationTokenForRepo: ["POST /repos/{owner}/{repo}/actions/runners/registration-token"],
          createRemoveTokenForOrg: ["POST /orgs/{org}/actions/runners/remove-token"],
          createRemoveTokenForRepo: ["POST /repos/{owner}/{repo}/actions/runners/remove-token"],
          createRepoVariable: ["POST /repos/{owner}/{repo}/actions/variables"],
          createWorkflowDispatch: ["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],
          deleteActionsCacheById: ["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],
          deleteActionsCacheByKey: ["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],
          deleteArtifact: ["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],
          deleteEnvironmentSecret: ["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],
          deleteEnvironmentVariable: ["DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],
          deleteOrgSecret: ["DELETE /orgs/{org}/actions/secrets/{secret_name}"],
          deleteOrgVariable: ["DELETE /orgs/{org}/actions/variables/{name}"],
          deleteRepoSecret: ["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
          deleteRepoVariable: ["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],
          deleteSelfHostedRunnerFromOrg: ["DELETE /orgs/{org}/actions/runners/{runner_id}"],
          deleteSelfHostedRunnerFromRepo: ["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],
          deleteWorkflowRun: ["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],
          deleteWorkflowRunLogs: ["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],
          disableSelectedRepositoryGithubActionsOrganization: ["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],
          disableWorkflow: ["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],
          downloadArtifact: ["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],
          downloadJobLogsForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],
          downloadWorkflowRunAttemptLogs: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],
          downloadWorkflowRunLogs: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],
          enableSelectedRepositoryGithubActionsOrganization: ["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],
          enableWorkflow: ["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],
          forceCancelWorkflowRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],
          generateRunnerJitconfigForOrg: ["POST /orgs/{org}/actions/runners/generate-jitconfig"],
          generateRunnerJitconfigForRepo: ["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],
          getActionsCacheList: ["GET /repos/{owner}/{repo}/actions/caches"],
          getActionsCacheUsage: ["GET /repos/{owner}/{repo}/actions/cache/usage"],
          getActionsCacheUsageByRepoForOrg: ["GET /orgs/{org}/actions/cache/usage-by-repository"],
          getActionsCacheUsageForOrg: ["GET /orgs/{org}/actions/cache/usage"],
          getAllowedActionsOrganization: ["GET /orgs/{org}/actions/permissions/selected-actions"],
          getAllowedActionsRepository: ["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],
          getArtifact: ["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],
          getCustomOidcSubClaimForRepo: ["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],
          getEnvironmentPublicKey: ["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],
          getEnvironmentSecret: ["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],
          getEnvironmentVariable: ["GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],
          getGithubActionsDefaultWorkflowPermissionsOrganization: ["GET /orgs/{org}/actions/permissions/workflow"],
          getGithubActionsDefaultWorkflowPermissionsRepository: ["GET /repos/{owner}/{repo}/actions/permissions/workflow"],
          getGithubActionsPermissionsOrganization: ["GET /orgs/{org}/actions/permissions"],
          getGithubActionsPermissionsRepository: ["GET /repos/{owner}/{repo}/actions/permissions"],
          getJobForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],
          getOrgPublicKey: ["GET /orgs/{org}/actions/secrets/public-key"],
          getOrgSecret: ["GET /orgs/{org}/actions/secrets/{secret_name}"],
          getOrgVariable: ["GET /orgs/{org}/actions/variables/{name}"],
          getPendingDeploymentsForRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],
          getRepoPermissions: ["GET /repos/{owner}/{repo}/actions/permissions", {}, { renamed: ["actions", "getGithubActionsPermissionsRepository"] }],
          getRepoPublicKey: ["GET /repos/{owner}/{repo}/actions/secrets/public-key"],
          getRepoSecret: ["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
          getRepoVariable: ["GET /repos/{owner}/{repo}/actions/variables/{name}"],
          getReviewsForRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],
          getSelfHostedRunnerForOrg: ["GET /orgs/{org}/actions/runners/{runner_id}"],
          getSelfHostedRunnerForRepo: ["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],
          getWorkflow: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],
          getWorkflowAccessToRepository: ["GET /repos/{owner}/{repo}/actions/permissions/access"],
          getWorkflowRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],
          getWorkflowRunAttempt: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],
          getWorkflowRunUsage: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],
          getWorkflowUsage: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],
          listArtifactsForRepo: ["GET /repos/{owner}/{repo}/actions/artifacts"],
          listEnvironmentSecrets: ["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],
          listEnvironmentVariables: ["GET /repositories/{repository_id}/environments/{environment_name}/variables"],
          listJobsForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],
          listJobsForWorkflowRunAttempt: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],
          listLabelsForSelfHostedRunnerForOrg: ["GET /orgs/{org}/actions/runners/{runner_id}/labels"],
          listLabelsForSelfHostedRunnerForRepo: ["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
          listOrgSecrets: ["GET /orgs/{org}/actions/secrets"],
          listOrgVariables: ["GET /orgs/{org}/actions/variables"],
          listRepoOrganizationSecrets: ["GET /repos/{owner}/{repo}/actions/organization-secrets"],
          listRepoOrganizationVariables: ["GET /repos/{owner}/{repo}/actions/organization-variables"],
          listRepoSecrets: ["GET /repos/{owner}/{repo}/actions/secrets"],
          listRepoVariables: ["GET /repos/{owner}/{repo}/actions/variables"],
          listRepoWorkflows: ["GET /repos/{owner}/{repo}/actions/workflows"],
          listRunnerApplicationsForOrg: ["GET /orgs/{org}/actions/runners/downloads"],
          listRunnerApplicationsForRepo: ["GET /repos/{owner}/{repo}/actions/runners/downloads"],
          listSelectedReposForOrgSecret: ["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],
          listSelectedReposForOrgVariable: ["GET /orgs/{org}/actions/variables/{name}/repositories"],
          listSelectedRepositoriesEnabledGithubActionsOrganization: ["GET /orgs/{org}/actions/permissions/repositories"],
          listSelfHostedRunnersForOrg: ["GET /orgs/{org}/actions/runners"],
          listSelfHostedRunnersForRepo: ["GET /repos/{owner}/{repo}/actions/runners"],
          listWorkflowRunArtifacts: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],
          listWorkflowRuns: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],
          listWorkflowRunsForRepo: ["GET /repos/{owner}/{repo}/actions/runs"],
          reRunJobForWorkflowRun: ["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],
          reRunWorkflow: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],
          reRunWorkflowFailedJobs: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],
          removeAllCustomLabelsFromSelfHostedRunnerForOrg: ["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],
          removeAllCustomLabelsFromSelfHostedRunnerForRepo: ["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
          removeCustomLabelFromSelfHostedRunnerForOrg: ["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],
          removeCustomLabelFromSelfHostedRunnerForRepo: ["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],
          removeSelectedRepoFromOrgSecret: ["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],
          removeSelectedRepoFromOrgVariable: ["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],
          reviewCustomGatesForRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],
          reviewPendingDeploymentsForRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],
          setAllowedActionsOrganization: ["PUT /orgs/{org}/actions/permissions/selected-actions"],
          setAllowedActionsRepository: ["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],
          setCustomLabelsForSelfHostedRunnerForOrg: ["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],
          setCustomLabelsForSelfHostedRunnerForRepo: ["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
          setCustomOidcSubClaimForRepo: ["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],
          setGithubActionsDefaultWorkflowPermissionsOrganization: ["PUT /orgs/{org}/actions/permissions/workflow"],
          setGithubActionsDefaultWorkflowPermissionsRepository: ["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],
          setGithubActionsPermissionsOrganization: ["PUT /orgs/{org}/actions/permissions"],
          setGithubActionsPermissionsRepository: ["PUT /repos/{owner}/{repo}/actions/permissions"],
          setSelectedReposForOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],
          setSelectedReposForOrgVariable: ["PUT /orgs/{org}/actions/variables/{name}/repositories"],
          setSelectedRepositoriesEnabledGithubActionsOrganization: ["PUT /orgs/{org}/actions/permissions/repositories"],
          setWorkflowAccessToRepository: ["PUT /repos/{owner}/{repo}/actions/permissions/access"],
          updateEnvironmentVariable: ["PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],
          updateOrgVariable: ["PATCH /orgs/{org}/actions/variables/{name}"],
          updateRepoVariable: ["PATCH /repos/{owner}/{repo}/actions/variables/{name}"],
        },
        activity: {
          checkRepoIsStarredByAuthenticatedUser: ["GET /user/starred/{owner}/{repo}"],
          deleteRepoSubscription: ["DELETE /repos/{owner}/{repo}/subscription"],
          deleteThreadSubscription: ["DELETE /notifications/threads/{thread_id}/subscription"],
          getFeeds: ["GET /feeds"],
          getRepoSubscription: ["GET /repos/{owner}/{repo}/subscription"],
          getThread: ["GET /notifications/threads/{thread_id}"],
          getThreadSubscriptionForAuthenticatedUser: ["GET /notifications/threads/{thread_id}/subscription"],
          listEventsForAuthenticatedUser: ["GET /users/{username}/events"],
          listNotificationsForAuthenticatedUser: ["GET /notifications"],
          listOrgEventsForAuthenticatedUser: ["GET /users/{username}/events/orgs/{org}"],
          listPublicEvents: ["GET /events"],
          listPublicEventsForRepoNetwork: ["GET /networks/{owner}/{repo}/events"],
          listPublicEventsForUser: ["GET /users/{username}/events/public"],
          listPublicOrgEvents: ["GET /orgs/{org}/events"],
          listReceivedEventsForUser: ["GET /users/{username}/received_events"],
          listReceivedPublicEventsForUser: ["GET /users/{username}/received_events/public"],
          listRepoEvents: ["GET /repos/{owner}/{repo}/events"],
          listRepoNotificationsForAuthenticatedUser: ["GET /repos/{owner}/{repo}/notifications"],
          listReposStarredByAuthenticatedUser: ["GET /user/starred"],
          listReposStarredByUser: ["GET /users/{username}/starred"],
          listReposWatchedByUser: ["GET /users/{username}/subscriptions"],
          listStargazersForRepo: ["GET /repos/{owner}/{repo}/stargazers"],
          listWatchedReposForAuthenticatedUser: ["GET /user/subscriptions"],
          listWatchersForRepo: ["GET /repos/{owner}/{repo}/subscribers"],
          markNotificationsAsRead: ["PUT /notifications"],
          markRepoNotificationsAsRead: ["PUT /repos/{owner}/{repo}/notifications"],
          markThreadAsDone: ["DELETE /notifications/threads/{thread_id}"],
          markThreadAsRead: ["PATCH /notifications/threads/{thread_id}"],
          setRepoSubscription: ["PUT /repos/{owner}/{repo}/subscription"],
          setThreadSubscription: ["PUT /notifications/threads/{thread_id}/subscription"],
          starRepoForAuthenticatedUser: ["PUT /user/starred/{owner}/{repo}"],
          unstarRepoForAuthenticatedUser: ["DELETE /user/starred/{owner}/{repo}"],
        },
        apps: {
          addRepoToInstallation: [
            "PUT /user/installations/{installation_id}/repositories/{repository_id}",
            {},
            { renamed: ["apps", "addRepoToInstallationForAuthenticatedUser"] },
          ],
          addRepoToInstallationForAuthenticatedUser: ["PUT /user/installations/{installation_id}/repositories/{repository_id}"],
          checkToken: ["POST /applications/{client_id}/token"],
          createFromManifest: ["POST /app-manifests/{code}/conversions"],
          createInstallationAccessToken: ["POST /app/installations/{installation_id}/access_tokens"],
          deleteAuthorization: ["DELETE /applications/{client_id}/grant"],
          deleteInstallation: ["DELETE /app/installations/{installation_id}"],
          deleteToken: ["DELETE /applications/{client_id}/token"],
          getAuthenticated: ["GET /app"],
          getBySlug: ["GET /apps/{app_slug}"],
          getInstallation: ["GET /app/installations/{installation_id}"],
          getOrgInstallation: ["GET /orgs/{org}/installation"],
          getRepoInstallation: ["GET /repos/{owner}/{repo}/installation"],
          getSubscriptionPlanForAccount: ["GET /marketplace_listing/accounts/{account_id}"],
          getSubscriptionPlanForAccountStubbed: ["GET /marketplace_listing/stubbed/accounts/{account_id}"],
          getUserInstallation: ["GET /users/{username}/installation"],
          getWebhookConfigForApp: ["GET /app/hook/config"],
          getWebhookDelivery: ["GET /app/hook/deliveries/{delivery_id}"],
          listAccountsForPlan: ["GET /marketplace_listing/plans/{plan_id}/accounts"],
          listAccountsForPlanStubbed: ["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],
          listInstallationReposForAuthenticatedUser: ["GET /user/installations/{installation_id}/repositories"],
          listInstallationRequestsForAuthenticatedApp: ["GET /app/installation-requests"],
          listInstallations: ["GET /app/installations"],
          listInstallationsForAuthenticatedUser: ["GET /user/installations"],
          listPlans: ["GET /marketplace_listing/plans"],
          listPlansStubbed: ["GET /marketplace_listing/stubbed/plans"],
          listReposAccessibleToInstallation: ["GET /installation/repositories"],
          listSubscriptionsForAuthenticatedUser: ["GET /user/marketplace_purchases"],
          listSubscriptionsForAuthenticatedUserStubbed: ["GET /user/marketplace_purchases/stubbed"],
          listWebhookDeliveries: ["GET /app/hook/deliveries"],
          redeliverWebhookDelivery: ["POST /app/hook/deliveries/{delivery_id}/attempts"],
          removeRepoFromInstallation: [
            "DELETE /user/installations/{installation_id}/repositories/{repository_id}",
            {},
            { renamed: ["apps", "removeRepoFromInstallationForAuthenticatedUser"] },
          ],
          removeRepoFromInstallationForAuthenticatedUser: ["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],
          resetToken: ["PATCH /applications/{client_id}/token"],
          revokeInstallationAccessToken: ["DELETE /installation/token"],
          scopeToken: ["POST /applications/{client_id}/token/scoped"],
          suspendInstallation: ["PUT /app/installations/{installation_id}/suspended"],
          unsuspendInstallation: ["DELETE /app/installations/{installation_id}/suspended"],
          updateWebhookConfigForApp: ["PATCH /app/hook/config"],
        },
        billing: {
          getGithubActionsBillingOrg: ["GET /orgs/{org}/settings/billing/actions"],
          getGithubActionsBillingUser: ["GET /users/{username}/settings/billing/actions"],
          getGithubPackagesBillingOrg: ["GET /orgs/{org}/settings/billing/packages"],
          getGithubPackagesBillingUser: ["GET /users/{username}/settings/billing/packages"],
          getSharedStorageBillingOrg: ["GET /orgs/{org}/settings/billing/shared-storage"],
          getSharedStorageBillingUser: ["GET /users/{username}/settings/billing/shared-storage"],
        },
        checks: {
          create: ["POST /repos/{owner}/{repo}/check-runs"],
          createSuite: ["POST /repos/{owner}/{repo}/check-suites"],
          get: ["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],
          getSuite: ["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],
          listAnnotations: ["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],
          listForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],
          listForSuite: ["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],
          listSuitesForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],
          rerequestRun: ["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],
          rerequestSuite: ["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],
          setSuitesPreferences: ["PATCH /repos/{owner}/{repo}/check-suites/preferences"],
          update: ["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"],
        },
        codeScanning: {
          deleteAnalysis: ["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],
          getAlert: ["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}", {}, { renamedParameters: { alert_id: "alert_number" } }],
          getAnalysis: ["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],
          getCodeqlDatabase: ["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],
          getDefaultSetup: ["GET /repos/{owner}/{repo}/code-scanning/default-setup"],
          getSarif: ["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],
          listAlertInstances: ["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],
          listAlertsForOrg: ["GET /orgs/{org}/code-scanning/alerts"],
          listAlertsForRepo: ["GET /repos/{owner}/{repo}/code-scanning/alerts"],
          listAlertsInstances: [
            "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
            {},
            { renamed: ["codeScanning", "listAlertInstances"] },
          ],
          listCodeqlDatabases: ["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],
          listRecentAnalyses: ["GET /repos/{owner}/{repo}/code-scanning/analyses"],
          updateAlert: ["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],
          updateDefaultSetup: ["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],
          uploadSarif: ["POST /repos/{owner}/{repo}/code-scanning/sarifs"],
        },
        codesOfConduct: { getAllCodesOfConduct: ["GET /codes_of_conduct"], getConductCode: ["GET /codes_of_conduct/{key}"] },
        codespaces: {
          addRepositoryForSecretForAuthenticatedUser: ["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
          addSelectedRepoToOrgSecret: ["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
          checkPermissionsForDevcontainer: ["GET /repos/{owner}/{repo}/codespaces/permissions_check"],
          codespaceMachinesForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}/machines"],
          createForAuthenticatedUser: ["POST /user/codespaces"],
          createOrUpdateOrgSecret: ["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],
          createOrUpdateRepoSecret: ["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],
          createOrUpdateSecretForAuthenticatedUser: ["PUT /user/codespaces/secrets/{secret_name}"],
          createWithPrForAuthenticatedUser: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],
          createWithRepoForAuthenticatedUser: ["POST /repos/{owner}/{repo}/codespaces"],
          deleteForAuthenticatedUser: ["DELETE /user/codespaces/{codespace_name}"],
          deleteFromOrganization: ["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],
          deleteOrgSecret: ["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],
          deleteRepoSecret: ["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],
          deleteSecretForAuthenticatedUser: ["DELETE /user/codespaces/secrets/{secret_name}"],
          exportForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/exports"],
          getCodespacesForUserInOrg: ["GET /orgs/{org}/members/{username}/codespaces"],
          getExportDetailsForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}/exports/{export_id}"],
          getForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}"],
          getOrgPublicKey: ["GET /orgs/{org}/codespaces/secrets/public-key"],
          getOrgSecret: ["GET /orgs/{org}/codespaces/secrets/{secret_name}"],
          getPublicKeyForAuthenticatedUser: ["GET /user/codespaces/secrets/public-key"],
          getRepoPublicKey: ["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],
          getRepoSecret: ["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],
          getSecretForAuthenticatedUser: ["GET /user/codespaces/secrets/{secret_name}"],
          listDevcontainersInRepositoryForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces/devcontainers"],
          listForAuthenticatedUser: ["GET /user/codespaces"],
          listInOrganization: ["GET /orgs/{org}/codespaces", {}, { renamedParameters: { org_id: "org" } }],
          listInRepositoryForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces"],
          listOrgSecrets: ["GET /orgs/{org}/codespaces/secrets"],
          listRepoSecrets: ["GET /repos/{owner}/{repo}/codespaces/secrets"],
          listRepositoriesForSecretForAuthenticatedUser: ["GET /user/codespaces/secrets/{secret_name}/repositories"],
          listSecretsForAuthenticatedUser: ["GET /user/codespaces/secrets"],
          listSelectedReposForOrgSecret: ["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],
          preFlightWithRepoForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces/new"],
          publishForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/publish"],
          removeRepositoryForSecretForAuthenticatedUser: ["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
          removeSelectedRepoFromOrgSecret: ["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
          repoMachinesForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces/machines"],
          setRepositoriesForSecretForAuthenticatedUser: ["PUT /user/codespaces/secrets/{secret_name}/repositories"],
          setSelectedReposForOrgSecret: ["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],
          startForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/start"],
          stopForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/stop"],
          stopInOrganization: ["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],
          updateForAuthenticatedUser: ["PATCH /user/codespaces/{codespace_name}"],
        },
        copilot: {
          addCopilotSeatsForTeams: ["POST /orgs/{org}/copilot/billing/selected_teams"],
          addCopilotSeatsForUsers: ["POST /orgs/{org}/copilot/billing/selected_users"],
          cancelCopilotSeatAssignmentForTeams: ["DELETE /orgs/{org}/copilot/billing/selected_teams"],
          cancelCopilotSeatAssignmentForUsers: ["DELETE /orgs/{org}/copilot/billing/selected_users"],
          getCopilotOrganizationDetails: ["GET /orgs/{org}/copilot/billing"],
          getCopilotSeatDetailsForUser: ["GET /orgs/{org}/members/{username}/copilot"],
          listCopilotSeats: ["GET /orgs/{org}/copilot/billing/seats"],
        },
        dependabot: {
          addSelectedRepoToOrgSecret: ["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],
          createOrUpdateOrgSecret: ["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],
          createOrUpdateRepoSecret: ["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],
          deleteOrgSecret: ["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],
          deleteRepoSecret: ["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],
          getAlert: ["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],
          getOrgPublicKey: ["GET /orgs/{org}/dependabot/secrets/public-key"],
          getOrgSecret: ["GET /orgs/{org}/dependabot/secrets/{secret_name}"],
          getRepoPublicKey: ["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],
          getRepoSecret: ["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],
          listAlertsForEnterprise: ["GET /enterprises/{enterprise}/dependabot/alerts"],
          listAlertsForOrg: ["GET /orgs/{org}/dependabot/alerts"],
          listAlertsForRepo: ["GET /repos/{owner}/{repo}/dependabot/alerts"],
          listOrgSecrets: ["GET /orgs/{org}/dependabot/secrets"],
          listRepoSecrets: ["GET /repos/{owner}/{repo}/dependabot/secrets"],
          listSelectedReposForOrgSecret: ["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],
          removeSelectedRepoFromOrgSecret: ["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],
          setSelectedReposForOrgSecret: ["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],
          updateAlert: ["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],
        },
        dependencyGraph: {
          createRepositorySnapshot: ["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],
          diffRange: ["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],
          exportSbom: ["GET /repos/{owner}/{repo}/dependency-graph/sbom"],
        },
        emojis: { get: ["GET /emojis"] },
        gists: {
          checkIsStarred: ["GET /gists/{gist_id}/star"],
          create: ["POST /gists"],
          createComment: ["POST /gists/{gist_id}/comments"],
          delete: ["DELETE /gists/{gist_id}"],
          deleteComment: ["DELETE /gists/{gist_id}/comments/{comment_id}"],
          fork: ["POST /gists/{gist_id}/forks"],
          get: ["GET /gists/{gist_id}"],
          getComment: ["GET /gists/{gist_id}/comments/{comment_id}"],
          getRevision: ["GET /gists/{gist_id}/{sha}"],
          list: ["GET /gists"],
          listComments: ["GET /gists/{gist_id}/comments"],
          listCommits: ["GET /gists/{gist_id}/commits"],
          listForUser: ["GET /users/{username}/gists"],
          listForks: ["GET /gists/{gist_id}/forks"],
          listPublic: ["GET /gists/public"],
          listStarred: ["GET /gists/starred"],
          star: ["PUT /gists/{gist_id}/star"],
          unstar: ["DELETE /gists/{gist_id}/star"],
          update: ["PATCH /gists/{gist_id}"],
          updateComment: ["PATCH /gists/{gist_id}/comments/{comment_id}"],
        },
        git: {
          createBlob: ["POST /repos/{owner}/{repo}/git/blobs"],
          createCommit: ["POST /repos/{owner}/{repo}/git/commits"],
          createRef: ["POST /repos/{owner}/{repo}/git/refs"],
          createTag: ["POST /repos/{owner}/{repo}/git/tags"],
          createTree: ["POST /repos/{owner}/{repo}/git/trees"],
          deleteRef: ["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],
          getBlob: ["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],
          getCommit: ["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],
          getRef: ["GET /repos/{owner}/{repo}/git/ref/{ref}"],
          getTag: ["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],
          getTree: ["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],
          listMatchingRefs: ["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],
          updateRef: ["PATCH /repos/{owner}/{repo}/git/refs/{ref}"],
        },
        gitignore: { getAllTemplates: ["GET /gitignore/templates"], getTemplate: ["GET /gitignore/templates/{name}"] },
        interactions: {
          getRestrictionsForAuthenticatedUser: ["GET /user/interaction-limits"],
          getRestrictionsForOrg: ["GET /orgs/{org}/interaction-limits"],
          getRestrictionsForRepo: ["GET /repos/{owner}/{repo}/interaction-limits"],
          getRestrictionsForYourPublicRepos: ["GET /user/interaction-limits", {}, { renamed: ["interactions", "getRestrictionsForAuthenticatedUser"] }],
          removeRestrictionsForAuthenticatedUser: ["DELETE /user/interaction-limits"],
          removeRestrictionsForOrg: ["DELETE /orgs/{org}/interaction-limits"],
          removeRestrictionsForRepo: ["DELETE /repos/{owner}/{repo}/interaction-limits"],
          removeRestrictionsForYourPublicRepos: [
            "DELETE /user/interaction-limits",
            {},
            { renamed: ["interactions", "removeRestrictionsForAuthenticatedUser"] },
          ],
          setRestrictionsForAuthenticatedUser: ["PUT /user/interaction-limits"],
          setRestrictionsForOrg: ["PUT /orgs/{org}/interaction-limits"],
          setRestrictionsForRepo: ["PUT /repos/{owner}/{repo}/interaction-limits"],
          setRestrictionsForYourPublicRepos: ["PUT /user/interaction-limits", {}, { renamed: ["interactions", "setRestrictionsForAuthenticatedUser"] }],
        },
        issues: {
          addAssignees: ["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],
          addLabels: ["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],
          checkUserCanBeAssigned: ["GET /repos/{owner}/{repo}/assignees/{assignee}"],
          checkUserCanBeAssignedToIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],
          create: ["POST /repos/{owner}/{repo}/issues"],
          createComment: ["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],
          createLabel: ["POST /repos/{owner}/{repo}/labels"],
          createMilestone: ["POST /repos/{owner}/{repo}/milestones"],
          deleteComment: ["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],
          deleteLabel: ["DELETE /repos/{owner}/{repo}/labels/{name}"],
          deleteMilestone: ["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],
          get: ["GET /repos/{owner}/{repo}/issues/{issue_number}"],
          getComment: ["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],
          getEvent: ["GET /repos/{owner}/{repo}/issues/events/{event_id}"],
          getLabel: ["GET /repos/{owner}/{repo}/labels/{name}"],
          getMilestone: ["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],
          list: ["GET /issues"],
          listAssignees: ["GET /repos/{owner}/{repo}/assignees"],
          listComments: ["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],
          listCommentsForRepo: ["GET /repos/{owner}/{repo}/issues/comments"],
          listEvents: ["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],
          listEventsForRepo: ["GET /repos/{owner}/{repo}/issues/events"],
          listEventsForTimeline: ["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],
          listForAuthenticatedUser: ["GET /user/issues"],
          listForOrg: ["GET /orgs/{org}/issues"],
          listForRepo: ["GET /repos/{owner}/{repo}/issues"],
          listLabelsForMilestone: ["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],
          listLabelsForRepo: ["GET /repos/{owner}/{repo}/labels"],
          listLabelsOnIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],
          listMilestones: ["GET /repos/{owner}/{repo}/milestones"],
          lock: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],
          removeAllLabels: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],
          removeAssignees: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],
          removeLabel: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],
          setLabels: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],
          unlock: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],
          update: ["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],
          updateComment: ["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],
          updateLabel: ["PATCH /repos/{owner}/{repo}/labels/{name}"],
          updateMilestone: ["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"],
        },
        licenses: { get: ["GET /licenses/{license}"], getAllCommonlyUsed: ["GET /licenses"], getForRepo: ["GET /repos/{owner}/{repo}/license"] },
        markdown: { render: ["POST /markdown"], renderRaw: ["POST /markdown/raw", { headers: { "content-type": "text/plain; charset=utf-8" } }] },
        meta: { get: ["GET /meta"], getAllVersions: ["GET /versions"], getOctocat: ["GET /octocat"], getZen: ["GET /zen"], root: ["GET /"] },
        migrations: {
          cancelImport: [
            "DELETE /repos/{owner}/{repo}/import",
            {},
            { deprecated: "octokit.rest.migrations.cancelImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#cancel-an-import" },
          ],
          deleteArchiveForAuthenticatedUser: ["DELETE /user/migrations/{migration_id}/archive"],
          deleteArchiveForOrg: ["DELETE /orgs/{org}/migrations/{migration_id}/archive"],
          downloadArchiveForOrg: ["GET /orgs/{org}/migrations/{migration_id}/archive"],
          getArchiveForAuthenticatedUser: ["GET /user/migrations/{migration_id}/archive"],
          getCommitAuthors: [
            "GET /repos/{owner}/{repo}/import/authors",
            {},
            {
              deprecated:
                "octokit.rest.migrations.getCommitAuthors() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-commit-authors",
            },
          ],
          getImportStatus: [
            "GET /repos/{owner}/{repo}/import",
            {},
            {
              deprecated:
                "octokit.rest.migrations.getImportStatus() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-an-import-status",
            },
          ],
          getLargeFiles: [
            "GET /repos/{owner}/{repo}/import/large_files",
            {},
            { deprecated: "octokit.rest.migrations.getLargeFiles() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-large-files" },
          ],
          getStatusForAuthenticatedUser: ["GET /user/migrations/{migration_id}"],
          getStatusForOrg: ["GET /orgs/{org}/migrations/{migration_id}"],
          listForAuthenticatedUser: ["GET /user/migrations"],
          listForOrg: ["GET /orgs/{org}/migrations"],
          listReposForAuthenticatedUser: ["GET /user/migrations/{migration_id}/repositories"],
          listReposForOrg: ["GET /orgs/{org}/migrations/{migration_id}/repositories"],
          listReposForUser: ["GET /user/migrations/{migration_id}/repositories", {}, { renamed: ["migrations", "listReposForAuthenticatedUser"] }],
          mapCommitAuthor: [
            "PATCH /repos/{owner}/{repo}/import/authors/{author_id}",
            {},
            {
              deprecated:
                "octokit.rest.migrations.mapCommitAuthor() is deprecated, see https://docs.github.com/rest/migrations/source-imports#map-a-commit-author",
            },
          ],
          setLfsPreference: [
            "PATCH /repos/{owner}/{repo}/import/lfs",
            {},
            {
              deprecated:
                "octokit.rest.migrations.setLfsPreference() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-git-lfs-preference",
            },
          ],
          startForAuthenticatedUser: ["POST /user/migrations"],
          startForOrg: ["POST /orgs/{org}/migrations"],
          startImport: [
            "PUT /repos/{owner}/{repo}/import",
            {},
            { deprecated: "octokit.rest.migrations.startImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#start-an-import" },
          ],
          unlockRepoForAuthenticatedUser: ["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],
          unlockRepoForOrg: ["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"],
          updateImport: [
            "PATCH /repos/{owner}/{repo}/import",
            {},
            { deprecated: "octokit.rest.migrations.updateImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-an-import" },
          ],
        },
        oidc: {
          getOidcCustomSubTemplateForOrg: ["GET /orgs/{org}/actions/oidc/customization/sub"],
          updateOidcCustomSubTemplateForOrg: ["PUT /orgs/{org}/actions/oidc/customization/sub"],
        },
        orgs: {
          addSecurityManagerTeam: ["PUT /orgs/{org}/security-managers/teams/{team_slug}"],
          assignTeamToOrgRole: ["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],
          assignUserToOrgRole: ["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],
          blockUser: ["PUT /orgs/{org}/blocks/{username}"],
          cancelInvitation: ["DELETE /orgs/{org}/invitations/{invitation_id}"],
          checkBlockedUser: ["GET /orgs/{org}/blocks/{username}"],
          checkMembershipForUser: ["GET /orgs/{org}/members/{username}"],
          checkPublicMembershipForUser: ["GET /orgs/{org}/public_members/{username}"],
          convertMemberToOutsideCollaborator: ["PUT /orgs/{org}/outside_collaborators/{username}"],
          createCustomOrganizationRole: ["POST /orgs/{org}/organization-roles"],
          createInvitation: ["POST /orgs/{org}/invitations"],
          createOrUpdateCustomProperties: ["PATCH /orgs/{org}/properties/schema"],
          createOrUpdateCustomPropertiesValuesForRepos: ["PATCH /orgs/{org}/properties/values"],
          createOrUpdateCustomProperty: ["PUT /orgs/{org}/properties/schema/{custom_property_name}"],
          createWebhook: ["POST /orgs/{org}/hooks"],
          delete: ["DELETE /orgs/{org}"],
          deleteCustomOrganizationRole: ["DELETE /orgs/{org}/organization-roles/{role_id}"],
          deleteWebhook: ["DELETE /orgs/{org}/hooks/{hook_id}"],
          enableOrDisableSecurityProductOnAllOrgRepos: ["POST /orgs/{org}/{security_product}/{enablement}"],
          get: ["GET /orgs/{org}"],
          getAllCustomProperties: ["GET /orgs/{org}/properties/schema"],
          getCustomProperty: ["GET /orgs/{org}/properties/schema/{custom_property_name}"],
          getMembershipForAuthenticatedUser: ["GET /user/memberships/orgs/{org}"],
          getMembershipForUser: ["GET /orgs/{org}/memberships/{username}"],
          getOrgRole: ["GET /orgs/{org}/organization-roles/{role_id}"],
          getWebhook: ["GET /orgs/{org}/hooks/{hook_id}"],
          getWebhookConfigForOrg: ["GET /orgs/{org}/hooks/{hook_id}/config"],
          getWebhookDelivery: ["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],
          list: ["GET /organizations"],
          listAppInstallations: ["GET /orgs/{org}/installations"],
          listBlockedUsers: ["GET /orgs/{org}/blocks"],
          listCustomPropertiesValuesForRepos: ["GET /orgs/{org}/properties/values"],
          listFailedInvitations: ["GET /orgs/{org}/failed_invitations"],
          listForAuthenticatedUser: ["GET /user/orgs"],
          listForUser: ["GET /users/{username}/orgs"],
          listInvitationTeams: ["GET /orgs/{org}/invitations/{invitation_id}/teams"],
          listMembers: ["GET /orgs/{org}/members"],
          listMembershipsForAuthenticatedUser: ["GET /user/memberships/orgs"],
          listOrgRoleTeams: ["GET /orgs/{org}/organization-roles/{role_id}/teams"],
          listOrgRoleUsers: ["GET /orgs/{org}/organization-roles/{role_id}/users"],
          listOrgRoles: ["GET /orgs/{org}/organization-roles"],
          listOrganizationFineGrainedPermissions: ["GET /orgs/{org}/organization-fine-grained-permissions"],
          listOutsideCollaborators: ["GET /orgs/{org}/outside_collaborators"],
          listPatGrantRepositories: ["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],
          listPatGrantRequestRepositories: ["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],
          listPatGrantRequests: ["GET /orgs/{org}/personal-access-token-requests"],
          listPatGrants: ["GET /orgs/{org}/personal-access-tokens"],
          listPendingInvitations: ["GET /orgs/{org}/invitations"],
          listPublicMembers: ["GET /orgs/{org}/public_members"],
          listSecurityManagerTeams: ["GET /orgs/{org}/security-managers"],
          listWebhookDeliveries: ["GET /orgs/{org}/hooks/{hook_id}/deliveries"],
          listWebhooks: ["GET /orgs/{org}/hooks"],
          patchCustomOrganizationRole: ["PATCH /orgs/{org}/organization-roles/{role_id}"],
          pingWebhook: ["POST /orgs/{org}/hooks/{hook_id}/pings"],
          redeliverWebhookDelivery: ["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],
          removeCustomProperty: ["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],
          removeMember: ["DELETE /orgs/{org}/members/{username}"],
          removeMembershipForUser: ["DELETE /orgs/{org}/memberships/{username}"],
          removeOutsideCollaborator: ["DELETE /orgs/{org}/outside_collaborators/{username}"],
          removePublicMembershipForAuthenticatedUser: ["DELETE /orgs/{org}/public_members/{username}"],
          removeSecurityManagerTeam: ["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],
          reviewPatGrantRequest: ["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],
          reviewPatGrantRequestsInBulk: ["POST /orgs/{org}/personal-access-token-requests"],
          revokeAllOrgRolesTeam: ["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],
          revokeAllOrgRolesUser: ["DELETE /orgs/{org}/organization-roles/users/{username}"],
          revokeOrgRoleTeam: ["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],
          revokeOrgRoleUser: ["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],
          setMembershipForUser: ["PUT /orgs/{org}/memberships/{username}"],
          setPublicMembershipForAuthenticatedUser: ["PUT /orgs/{org}/public_members/{username}"],
          unblockUser: ["DELETE /orgs/{org}/blocks/{username}"],
          update: ["PATCH /orgs/{org}"],
          updateMembershipForAuthenticatedUser: ["PATCH /user/memberships/orgs/{org}"],
          updatePatAccess: ["POST /orgs/{org}/personal-access-tokens/{pat_id}"],
          updatePatAccesses: ["POST /orgs/{org}/personal-access-tokens"],
          updateWebhook: ["PATCH /orgs/{org}/hooks/{hook_id}"],
          updateWebhookConfigForOrg: ["PATCH /orgs/{org}/hooks/{hook_id}/config"],
        },
        packages: {
          deletePackageForAuthenticatedUser: ["DELETE /user/packages/{package_type}/{package_name}"],
          deletePackageForOrg: ["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],
          deletePackageForUser: ["DELETE /users/{username}/packages/{package_type}/{package_name}"],
          deletePackageVersionForAuthenticatedUser: ["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],
          deletePackageVersionForOrg: ["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
          deletePackageVersionForUser: ["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
          getAllPackageVersionsForAPackageOwnedByAnOrg: [
            "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
            {},
            { renamed: ["packages", "getAllPackageVersionsForPackageOwnedByOrg"] },
          ],
          getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [
            "GET /user/packages/{package_type}/{package_name}/versions",
            {},
            { renamed: ["packages", "getAllPackageVersionsForPackageOwnedByAuthenticatedUser"] },
          ],
          getAllPackageVersionsForPackageOwnedByAuthenticatedUser: ["GET /user/packages/{package_type}/{package_name}/versions"],
          getAllPackageVersionsForPackageOwnedByOrg: ["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],
          getAllPackageVersionsForPackageOwnedByUser: ["GET /users/{username}/packages/{package_type}/{package_name}/versions"],
          getPackageForAuthenticatedUser: ["GET /user/packages/{package_type}/{package_name}"],
          getPackageForOrganization: ["GET /orgs/{org}/packages/{package_type}/{package_name}"],
          getPackageForUser: ["GET /users/{username}/packages/{package_type}/{package_name}"],
          getPackageVersionForAuthenticatedUser: ["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],
          getPackageVersionForOrganization: ["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
          getPackageVersionForUser: ["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
          listDockerMigrationConflictingPackagesForAuthenticatedUser: ["GET /user/docker/conflicts"],
          listDockerMigrationConflictingPackagesForOrganization: ["GET /orgs/{org}/docker/conflicts"],
          listDockerMigrationConflictingPackagesForUser: ["GET /users/{username}/docker/conflicts"],
          listPackagesForAuthenticatedUser: ["GET /user/packages"],
          listPackagesForOrganization: ["GET /orgs/{org}/packages"],
          listPackagesForUser: ["GET /users/{username}/packages"],
          restorePackageForAuthenticatedUser: ["POST /user/packages/{package_type}/{package_name}/restore{?token}"],
          restorePackageForOrg: ["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],
          restorePackageForUser: ["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],
          restorePackageVersionForAuthenticatedUser: ["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],
          restorePackageVersionForOrg: ["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],
          restorePackageVersionForUser: ["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],
        },
        projects: {
          addCollaborator: ["PUT /projects/{project_id}/collaborators/{username}"],
          createCard: ["POST /projects/columns/{column_id}/cards"],
          createColumn: ["POST /projects/{project_id}/columns"],
          createForAuthenticatedUser: ["POST /user/projects"],
          createForOrg: ["POST /orgs/{org}/projects"],
          createForRepo: ["POST /repos/{owner}/{repo}/projects"],
          delete: ["DELETE /projects/{project_id}"],
          deleteCard: ["DELETE /projects/columns/cards/{card_id}"],
          deleteColumn: ["DELETE /projects/columns/{column_id}"],
          get: ["GET /projects/{project_id}"],
          getCard: ["GET /projects/columns/cards/{card_id}"],
          getColumn: ["GET /projects/columns/{column_id}"],
          getPermissionForUser: ["GET /projects/{project_id}/collaborators/{username}/permission"],
          listCards: ["GET /projects/columns/{column_id}/cards"],
          listCollaborators: ["GET /projects/{project_id}/collaborators"],
          listColumns: ["GET /projects/{project_id}/columns"],
          listForOrg: ["GET /orgs/{org}/projects"],
          listForRepo: ["GET /repos/{owner}/{repo}/projects"],
          listForUser: ["GET /users/{username}/projects"],
          moveCard: ["POST /projects/columns/cards/{card_id}/moves"],
          moveColumn: ["POST /projects/columns/{column_id}/moves"],
          removeCollaborator: ["DELETE /projects/{project_id}/collaborators/{username}"],
          update: ["PATCH /projects/{project_id}"],
          updateCard: ["PATCH /projects/columns/cards/{card_id}"],
          updateColumn: ["PATCH /projects/columns/{column_id}"],
        },
        pulls: {
          checkIfMerged: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
          create: ["POST /repos/{owner}/{repo}/pulls"],
          createReplyForReviewComment: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],
          createReview: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
          createReviewComment: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],
          deletePendingReview: ["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],
          deleteReviewComment: ["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
          dismissReview: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],
          get: ["GET /repos/{owner}/{repo}/pulls/{pull_number}"],
          getReview: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],
          getReviewComment: ["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
          list: ["GET /repos/{owner}/{repo}/pulls"],
          listCommentsForReview: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],
          listCommits: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],
          listFiles: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],
          listRequestedReviewers: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],
          listReviewComments: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],
          listReviewCommentsForRepo: ["GET /repos/{owner}/{repo}/pulls/comments"],
          listReviews: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
          merge: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
          removeRequestedReviewers: ["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],
          requestReviewers: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],
          submitReview: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],
          update: ["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],
          updateBranch: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],
          updateReview: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],
          updateReviewComment: ["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
        },
        rateLimit: { get: ["GET /rate_limit"] },
        reactions: {
          createForCommitComment: ["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],
          createForIssue: ["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],
          createForIssueComment: ["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],
          createForPullRequestReviewComment: ["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],
          createForRelease: ["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],
          createForTeamDiscussionCommentInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],
          createForTeamDiscussionInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],
          deleteForCommitComment: ["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],
          deleteForIssue: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],
          deleteForIssueComment: ["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],
          deleteForPullRequestComment: ["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],
          deleteForRelease: ["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],
          deleteForTeamDiscussion: ["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],
          deleteForTeamDiscussionComment: [
            "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",
          ],
          listForCommitComment: ["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],
          listForIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],
          listForIssueComment: ["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],
          listForPullRequestReviewComment: ["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],
          listForRelease: ["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],
          listForTeamDiscussionCommentInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],
          listForTeamDiscussionInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],
        },
        repos: {
          acceptInvitation: ["PATCH /user/repository_invitations/{invitation_id}", {}, { renamed: ["repos", "acceptInvitationForAuthenticatedUser"] }],
          acceptInvitationForAuthenticatedUser: ["PATCH /user/repository_invitations/{invitation_id}"],
          addAppAccessRestrictions: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps", {}, { mapToData: "apps" }],
          addCollaborator: ["PUT /repos/{owner}/{repo}/collaborators/{username}"],
          addStatusCheckContexts: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts", {}, { mapToData: "contexts" }],
          addTeamAccessRestrictions: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams", {}, { mapToData: "teams" }],
          addUserAccessRestrictions: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users", {}, { mapToData: "users" }],
          cancelPagesDeployment: ["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],
          checkAutomatedSecurityFixes: ["GET /repos/{owner}/{repo}/automated-security-fixes"],
          checkCollaborator: ["GET /repos/{owner}/{repo}/collaborators/{username}"],
          checkVulnerabilityAlerts: ["GET /repos/{owner}/{repo}/vulnerability-alerts"],
          codeownersErrors: ["GET /repos/{owner}/{repo}/codeowners/errors"],
          compareCommits: ["GET /repos/{owner}/{repo}/compare/{base}...{head}"],
          compareCommitsWithBasehead: ["GET /repos/{owner}/{repo}/compare/{basehead}"],
          createAutolink: ["POST /repos/{owner}/{repo}/autolinks"],
          createCommitComment: ["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],
          createCommitSignatureProtection: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],
          createCommitStatus: ["POST /repos/{owner}/{repo}/statuses/{sha}"],
          createDeployKey: ["POST /repos/{owner}/{repo}/keys"],
          createDeployment: ["POST /repos/{owner}/{repo}/deployments"],
          createDeploymentBranchPolicy: ["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],
          createDeploymentProtectionRule: ["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],
          createDeploymentStatus: ["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],
          createDispatchEvent: ["POST /repos/{owner}/{repo}/dispatches"],
          createForAuthenticatedUser: ["POST /user/repos"],
          createFork: ["POST /repos/{owner}/{repo}/forks"],
          createInOrg: ["POST /orgs/{org}/repos"],
          createOrUpdateCustomPropertiesValues: ["PATCH /repos/{owner}/{repo}/properties/values"],
          createOrUpdateEnvironment: ["PUT /repos/{owner}/{repo}/environments/{environment_name}"],
          createOrUpdateFileContents: ["PUT /repos/{owner}/{repo}/contents/{path}"],
          createOrgRuleset: ["POST /orgs/{org}/rulesets"],
          createPagesDeployment: ["POST /repos/{owner}/{repo}/pages/deployments"],
          createPagesSite: ["POST /repos/{owner}/{repo}/pages"],
          createRelease: ["POST /repos/{owner}/{repo}/releases"],
          createRepoRuleset: ["POST /repos/{owner}/{repo}/rulesets"],
          createTagProtection: ["POST /repos/{owner}/{repo}/tags/protection"],
          createUsingTemplate: ["POST /repos/{template_owner}/{template_repo}/generate"],
          createWebhook: ["POST /repos/{owner}/{repo}/hooks"],
          declineInvitation: ["DELETE /user/repository_invitations/{invitation_id}", {}, { renamed: ["repos", "declineInvitationForAuthenticatedUser"] }],
          declineInvitationForAuthenticatedUser: ["DELETE /user/repository_invitations/{invitation_id}"],
          delete: ["DELETE /repos/{owner}/{repo}"],
          deleteAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],
          deleteAdminBranchProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],
          deleteAnEnvironment: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],
          deleteAutolink: ["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],
          deleteBranchProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],
          deleteCommitComment: ["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],
          deleteCommitSignatureProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],
          deleteDeployKey: ["DELETE /repos/{owner}/{repo}/keys/{key_id}"],
          deleteDeployment: ["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],
          deleteDeploymentBranchPolicy: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],
          deleteFile: ["DELETE /repos/{owner}/{repo}/contents/{path}"],
          deleteInvitation: ["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],
          deleteOrgRuleset: ["DELETE /orgs/{org}/rulesets/{ruleset_id}"],
          deletePagesSite: ["DELETE /repos/{owner}/{repo}/pages"],
          deletePullRequestReviewProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],
          deleteRelease: ["DELETE /repos/{owner}/{repo}/releases/{release_id}"],
          deleteReleaseAsset: ["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],
          deleteRepoRuleset: ["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
          deleteTagProtection: ["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],
          deleteWebhook: ["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],
          disableAutomatedSecurityFixes: ["DELETE /repos/{owner}/{repo}/automated-security-fixes"],
          disableDeploymentProtectionRule: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],
          disablePrivateVulnerabilityReporting: ["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],
          disableVulnerabilityAlerts: ["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],
          downloadArchive: ["GET /repos/{owner}/{repo}/zipball/{ref}", {}, { renamed: ["repos", "downloadZipballArchive"] }],
          downloadTarballArchive: ["GET /repos/{owner}/{repo}/tarball/{ref}"],
          downloadZipballArchive: ["GET /repos/{owner}/{repo}/zipball/{ref}"],
          enableAutomatedSecurityFixes: ["PUT /repos/{owner}/{repo}/automated-security-fixes"],
          enablePrivateVulnerabilityReporting: ["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],
          enableVulnerabilityAlerts: ["PUT /repos/{owner}/{repo}/vulnerability-alerts"],
          generateReleaseNotes: ["POST /repos/{owner}/{repo}/releases/generate-notes"],
          get: ["GET /repos/{owner}/{repo}"],
          getAccessRestrictions: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],
          getAdminBranchProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],
          getAllDeploymentProtectionRules: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],
          getAllEnvironments: ["GET /repos/{owner}/{repo}/environments"],
          getAllStatusCheckContexts: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],
          getAllTopics: ["GET /repos/{owner}/{repo}/topics"],
          getAppsWithAccessToProtectedBranch: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],
          getAutolink: ["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],
          getBranch: ["GET /repos/{owner}/{repo}/branches/{branch}"],
          getBranchProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection"],
          getBranchRules: ["GET /repos/{owner}/{repo}/rules/branches/{branch}"],
          getClones: ["GET /repos/{owner}/{repo}/traffic/clones"],
          getCodeFrequencyStats: ["GET /repos/{owner}/{repo}/stats/code_frequency"],
          getCollaboratorPermissionLevel: ["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],
          getCombinedStatusForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/status"],
          getCommit: ["GET /repos/{owner}/{repo}/commits/{ref}"],
          getCommitActivityStats: ["GET /repos/{owner}/{repo}/stats/commit_activity"],
          getCommitComment: ["GET /repos/{owner}/{repo}/comments/{comment_id}"],
          getCommitSignatureProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],
          getCommunityProfileMetrics: ["GET /repos/{owner}/{repo}/community/profile"],
          getContent: ["GET /repos/{owner}/{repo}/contents/{path}"],
          getContributorsStats: ["GET /repos/{owner}/{repo}/stats/contributors"],
          getCustomDeploymentProtectionRule: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],
          getCustomPropertiesValues: ["GET /repos/{owner}/{repo}/properties/values"],
          getDeployKey: ["GET /repos/{owner}/{repo}/keys/{key_id}"],
          getDeployment: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],
          getDeploymentBranchPolicy: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],
          getDeploymentStatus: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],
          getEnvironment: ["GET /repos/{owner}/{repo}/environments/{environment_name}"],
          getLatestPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/latest"],
          getLatestRelease: ["GET /repos/{owner}/{repo}/releases/latest"],
          getOrgRuleSuite: ["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],
          getOrgRuleSuites: ["GET /orgs/{org}/rulesets/rule-suites"],
          getOrgRuleset: ["GET /orgs/{org}/rulesets/{ruleset_id}"],
          getOrgRulesets: ["GET /orgs/{org}/rulesets"],
          getPages: ["GET /repos/{owner}/{repo}/pages"],
          getPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],
          getPagesDeployment: ["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],
          getPagesHealthCheck: ["GET /repos/{owner}/{repo}/pages/health"],
          getParticipationStats: ["GET /repos/{owner}/{repo}/stats/participation"],
          getPullRequestReviewProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],
          getPunchCardStats: ["GET /repos/{owner}/{repo}/stats/punch_card"],
          getReadme: ["GET /repos/{owner}/{repo}/readme"],
          getReadmeInDirectory: ["GET /repos/{owner}/{repo}/readme/{dir}"],
          getRelease: ["GET /repos/{owner}/{repo}/releases/{release_id}"],
          getReleaseAsset: ["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],
          getReleaseByTag: ["GET /repos/{owner}/{repo}/releases/tags/{tag}"],
          getRepoRuleSuite: ["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],
          getRepoRuleSuites: ["GET /repos/{owner}/{repo}/rulesets/rule-suites"],
          getRepoRuleset: ["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
          getRepoRulesets: ["GET /repos/{owner}/{repo}/rulesets"],
          getStatusChecksProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],
          getTeamsWithAccessToProtectedBranch: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],
          getTopPaths: ["GET /repos/{owner}/{repo}/traffic/popular/paths"],
          getTopReferrers: ["GET /repos/{owner}/{repo}/traffic/popular/referrers"],
          getUsersWithAccessToProtectedBranch: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],
          getViews: ["GET /repos/{owner}/{repo}/traffic/views"],
          getWebhook: ["GET /repos/{owner}/{repo}/hooks/{hook_id}"],
          getWebhookConfigForRepo: ["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],
          getWebhookDelivery: ["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],
          listActivities: ["GET /repos/{owner}/{repo}/activity"],
          listAutolinks: ["GET /repos/{owner}/{repo}/autolinks"],
          listBranches: ["GET /repos/{owner}/{repo}/branches"],
          listBranchesForHeadCommit: ["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],
          listCollaborators: ["GET /repos/{owner}/{repo}/collaborators"],
          listCommentsForCommit: ["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],
          listCommitCommentsForRepo: ["GET /repos/{owner}/{repo}/comments"],
          listCommitStatusesForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],
          listCommits: ["GET /repos/{owner}/{repo}/commits"],
          listContributors: ["GET /repos/{owner}/{repo}/contributors"],
          listCustomDeploymentRuleIntegrations: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],
          listDeployKeys: ["GET /repos/{owner}/{repo}/keys"],
          listDeploymentBranchPolicies: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],
          listDeploymentStatuses: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],
          listDeployments: ["GET /repos/{owner}/{repo}/deployments"],
          listForAuthenticatedUser: ["GET /user/repos"],
          listForOrg: ["GET /orgs/{org}/repos"],
          listForUser: ["GET /users/{username}/repos"],
          listForks: ["GET /repos/{owner}/{repo}/forks"],
          listInvitations: ["GET /repos/{owner}/{repo}/invitations"],
          listInvitationsForAuthenticatedUser: ["GET /user/repository_invitations"],
          listLanguages: ["GET /repos/{owner}/{repo}/languages"],
          listPagesBuilds: ["GET /repos/{owner}/{repo}/pages/builds"],
          listPublic: ["GET /repositories"],
          listPullRequestsAssociatedWithCommit: ["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],
          listReleaseAssets: ["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],
          listReleases: ["GET /repos/{owner}/{repo}/releases"],
          listTagProtection: ["GET /repos/{owner}/{repo}/tags/protection"],
          listTags: ["GET /repos/{owner}/{repo}/tags"],
          listTeams: ["GET /repos/{owner}/{repo}/teams"],
          listWebhookDeliveries: ["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],
          listWebhooks: ["GET /repos/{owner}/{repo}/hooks"],
          merge: ["POST /repos/{owner}/{repo}/merges"],
          mergeUpstream: ["POST /repos/{owner}/{repo}/merge-upstream"],
          pingWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],
          redeliverWebhookDelivery: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],
          removeAppAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps", {}, { mapToData: "apps" }],
          removeCollaborator: ["DELETE /repos/{owner}/{repo}/collaborators/{username}"],
          removeStatusCheckContexts: [
            "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
            {},
            { mapToData: "contexts" },
          ],
          removeStatusCheckProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],
          removeTeamAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams", {}, { mapToData: "teams" }],
          removeUserAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users", {}, { mapToData: "users" }],
          renameBranch: ["POST /repos/{owner}/{repo}/branches/{branch}/rename"],
          replaceAllTopics: ["PUT /repos/{owner}/{repo}/topics"],
          requestPagesBuild: ["POST /repos/{owner}/{repo}/pages/builds"],
          setAdminBranchProtection: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],
          setAppAccessRestrictions: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps", {}, { mapToData: "apps" }],
          setStatusCheckContexts: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts", {}, { mapToData: "contexts" }],
          setTeamAccessRestrictions: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams", {}, { mapToData: "teams" }],
          setUserAccessRestrictions: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users", {}, { mapToData: "users" }],
          testPushWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],
          transfer: ["POST /repos/{owner}/{repo}/transfer"],
          update: ["PATCH /repos/{owner}/{repo}"],
          updateBranchProtection: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],
          updateCommitComment: ["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],
          updateDeploymentBranchPolicy: ["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],
          updateInformationAboutPagesSite: ["PUT /repos/{owner}/{repo}/pages"],
          updateInvitation: ["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],
          updateOrgRuleset: ["PUT /orgs/{org}/rulesets/{ruleset_id}"],
          updatePullRequestReviewProtection: ["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],
          updateRelease: ["PATCH /repos/{owner}/{repo}/releases/{release_id}"],
          updateReleaseAsset: ["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],
          updateRepoRuleset: ["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
          updateStatusCheckPotection: [
            "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
            {},
            { renamed: ["repos", "updateStatusCheckProtection"] },
          ],
          updateStatusCheckProtection: ["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],
          updateWebhook: ["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],
          updateWebhookConfigForRepo: ["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],
          uploadReleaseAsset: ["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}", { baseUrl: "https://uploads.github.com" }],
        },
        search: {
          code: ["GET /search/code"],
          commits: ["GET /search/commits"],
          issuesAndPullRequests: ["GET /search/issues"],
          labels: ["GET /search/labels"],
          repos: ["GET /search/repositories"],
          topics: ["GET /search/topics"],
          users: ["GET /search/users"],
        },
        secretScanning: {
          getAlert: ["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],
          listAlertsForEnterprise: ["GET /enterprises/{enterprise}/secret-scanning/alerts"],
          listAlertsForOrg: ["GET /orgs/{org}/secret-scanning/alerts"],
          listAlertsForRepo: ["GET /repos/{owner}/{repo}/secret-scanning/alerts"],
          listLocationsForAlert: ["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],
          updateAlert: ["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],
        },
        securityAdvisories: {
          createFork: ["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],
          createPrivateVulnerabilityReport: ["POST /repos/{owner}/{repo}/security-advisories/reports"],
          createRepositoryAdvisory: ["POST /repos/{owner}/{repo}/security-advisories"],
          createRepositoryAdvisoryCveRequest: ["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],
          getGlobalAdvisory: ["GET /advisories/{ghsa_id}"],
          getRepositoryAdvisory: ["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],
          listGlobalAdvisories: ["GET /advisories"],
          listOrgRepositoryAdvisories: ["GET /orgs/{org}/security-advisories"],
          listRepositoryAdvisories: ["GET /repos/{owner}/{repo}/security-advisories"],
          updateRepositoryAdvisory: ["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],
        },
        teams: {
          addOrUpdateMembershipForUserInOrg: ["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],
          addOrUpdateProjectPermissionsInOrg: ["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],
          addOrUpdateRepoPermissionsInOrg: ["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],
          checkPermissionsForProjectInOrg: ["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],
          checkPermissionsForRepoInOrg: ["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],
          create: ["POST /orgs/{org}/teams"],
          createDiscussionCommentInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],
          createDiscussionInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions"],
          deleteDiscussionCommentInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],
          deleteDiscussionInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],
          deleteInOrg: ["DELETE /orgs/{org}/teams/{team_slug}"],
          getByName: ["GET /orgs/{org}/teams/{team_slug}"],
          getDiscussionCommentInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],
          getDiscussionInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],
          getMembershipForUserInOrg: ["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],
          list: ["GET /orgs/{org}/teams"],
          listChildInOrg: ["GET /orgs/{org}/teams/{team_slug}/teams"],
          listDiscussionCommentsInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],
          listDiscussionsInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions"],
          listForAuthenticatedUser: ["GET /user/teams"],
          listMembersInOrg: ["GET /orgs/{org}/teams/{team_slug}/members"],
          listPendingInvitationsInOrg: ["GET /orgs/{org}/teams/{team_slug}/invitations"],
          listProjectsInOrg: ["GET /orgs/{org}/teams/{team_slug}/projects"],
          listReposInOrg: ["GET /orgs/{org}/teams/{team_slug}/repos"],
          removeMembershipForUserInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],
          removeProjectInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],
          removeRepoInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],
          updateDiscussionCommentInOrg: ["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],
          updateDiscussionInOrg: ["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],
          updateInOrg: ["PATCH /orgs/{org}/teams/{team_slug}"],
        },
        users: {
          addEmailForAuthenticated: ["POST /user/emails", {}, { renamed: ["users", "addEmailForAuthenticatedUser"] }],
          addEmailForAuthenticatedUser: ["POST /user/emails"],
          addSocialAccountForAuthenticatedUser: ["POST /user/social_accounts"],
          block: ["PUT /user/blocks/{username}"],
          checkBlocked: ["GET /user/blocks/{username}"],
          checkFollowingForUser: ["GET /users/{username}/following/{target_user}"],
          checkPersonIsFollowedByAuthenticated: ["GET /user/following/{username}"],
          createGpgKeyForAuthenticated: ["POST /user/gpg_keys", {}, { renamed: ["users", "createGpgKeyForAuthenticatedUser"] }],
          createGpgKeyForAuthenticatedUser: ["POST /user/gpg_keys"],
          createPublicSshKeyForAuthenticated: ["POST /user/keys", {}, { renamed: ["users", "createPublicSshKeyForAuthenticatedUser"] }],
          createPublicSshKeyForAuthenticatedUser: ["POST /user/keys"],
          createSshSigningKeyForAuthenticatedUser: ["POST /user/ssh_signing_keys"],
          deleteEmailForAuthenticated: ["DELETE /user/emails", {}, { renamed: ["users", "deleteEmailForAuthenticatedUser"] }],
          deleteEmailForAuthenticatedUser: ["DELETE /user/emails"],
          deleteGpgKeyForAuthenticated: ["DELETE /user/gpg_keys/{gpg_key_id}", {}, { renamed: ["users", "deleteGpgKeyForAuthenticatedUser"] }],
          deleteGpgKeyForAuthenticatedUser: ["DELETE /user/gpg_keys/{gpg_key_id}"],
          deletePublicSshKeyForAuthenticated: ["DELETE /user/keys/{key_id}", {}, { renamed: ["users", "deletePublicSshKeyForAuthenticatedUser"] }],
          deletePublicSshKeyForAuthenticatedUser: ["DELETE /user/keys/{key_id}"],
          deleteSocialAccountForAuthenticatedUser: ["DELETE /user/social_accounts"],
          deleteSshSigningKeyForAuthenticatedUser: ["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],
          follow: ["PUT /user/following/{username}"],
          getAuthenticated: ["GET /user"],
          getByUsername: ["GET /users/{username}"],
          getContextForUser: ["GET /users/{username}/hovercard"],
          getGpgKeyForAuthenticated: ["GET /user/gpg_keys/{gpg_key_id}", {}, { renamed: ["users", "getGpgKeyForAuthenticatedUser"] }],
          getGpgKeyForAuthenticatedUser: ["GET /user/gpg_keys/{gpg_key_id}"],
          getPublicSshKeyForAuthenticated: ["GET /user/keys/{key_id}", {}, { renamed: ["users", "getPublicSshKeyForAuthenticatedUser"] }],
          getPublicSshKeyForAuthenticatedUser: ["GET /user/keys/{key_id}"],
          getSshSigningKeyForAuthenticatedUser: ["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],
          list: ["GET /users"],
          listBlockedByAuthenticated: ["GET /user/blocks", {}, { renamed: ["users", "listBlockedByAuthenticatedUser"] }],
          listBlockedByAuthenticatedUser: ["GET /user/blocks"],
          listEmailsForAuthenticated: ["GET /user/emails", {}, { renamed: ["users", "listEmailsForAuthenticatedUser"] }],
          listEmailsForAuthenticatedUser: ["GET /user/emails"],
          listFollowedByAuthenticated: ["GET /user/following", {}, { renamed: ["users", "listFollowedByAuthenticatedUser"] }],
          listFollowedByAuthenticatedUser: ["GET /user/following"],
          listFollowersForAuthenticatedUser: ["GET /user/followers"],
          listFollowersForUser: ["GET /users/{username}/followers"],
          listFollowingForUser: ["GET /users/{username}/following"],
          listGpgKeysForAuthenticated: ["GET /user/gpg_keys", {}, { renamed: ["users", "listGpgKeysForAuthenticatedUser"] }],
          listGpgKeysForAuthenticatedUser: ["GET /user/gpg_keys"],
          listGpgKeysForUser: ["GET /users/{username}/gpg_keys"],
          listPublicEmailsForAuthenticated: ["GET /user/public_emails", {}, { renamed: ["users", "listPublicEmailsForAuthenticatedUser"] }],
          listPublicEmailsForAuthenticatedUser: ["GET /user/public_emails"],
          listPublicKeysForUser: ["GET /users/{username}/keys"],
          listPublicSshKeysForAuthenticated: ["GET /user/keys", {}, { renamed: ["users", "listPublicSshKeysForAuthenticatedUser"] }],
          listPublicSshKeysForAuthenticatedUser: ["GET /user/keys"],
          listSocialAccountsForAuthenticatedUser: ["GET /user/social_accounts"],
          listSocialAccountsForUser: ["GET /users/{username}/social_accounts"],
          listSshSigningKeysForAuthenticatedUser: ["GET /user/ssh_signing_keys"],
          listSshSigningKeysForUser: ["GET /users/{username}/ssh_signing_keys"],
          setPrimaryEmailVisibilityForAuthenticated: [
            "PATCH /user/email/visibility",
            {},
            { renamed: ["users", "setPrimaryEmailVisibilityForAuthenticatedUser"] },
          ],
          setPrimaryEmailVisibilityForAuthenticatedUser: ["PATCH /user/email/visibility"],
          unblock: ["DELETE /user/blocks/{username}"],
          unfollow: ["DELETE /user/following/{username}"],
          updateAuthenticated: ["PATCH /user"],
        },
      };
      var A = a;
      var l = new Map();
      for (const [e, t] of Object.entries(A)) {
        for (const [r, s] of Object.entries(t)) {
          const [t, n, o] = s;
          const [i, a] = t.split(/ /);
          const A = Object.assign({ method: i, url: a }, n);
          if (!l.has(e)) {
            l.set(e, new Map());
          }
          l.get(e).set(r, { scope: e, methodName: r, endpointDefaults: A, decorations: o });
        }
      }
      var c = {
        has({ scope: e }, t) {
          return l.get(e).has(t);
        },
        getOwnPropertyDescriptor(e, t) {
          return { value: this.get(e, t), configurable: true, writable: true, enumerable: true };
        },
        defineProperty(e, t, r) {
          Object.defineProperty(e.cache, t, r);
          return true;
        },
        deleteProperty(e, t) {
          delete e.cache[t];
          return true;
        },
        ownKeys({ scope: e }) {
          return [...l.get(e).keys()];
        },
        set(e, t, r) {
          return (e.cache[t] = r);
        },
        get({ octokit: e, scope: t, cache: r }, s) {
          if (r[s]) {
            return r[s];
          }
          const n = l.get(t).get(s);
          if (!n) {
            return void 0;
          }
          const { endpointDefaults: o, decorations: i } = n;
          if (i) {
            r[s] = decorate(e, t, s, o, i);
          } else {
            r[s] = e.request.defaults(o);
          }
          return r[s];
        },
      };
      function endpointsToMethods(e) {
        const t = {};
        for (const r of l.keys()) {
          t[r] = new Proxy({ octokit: e, scope: r, cache: {} }, c);
        }
        return t;
      }
      function decorate(e, t, r, s, n) {
        const o = e.request.defaults(s);
        function withDecorations(...s) {
          let i = o.endpoint.merge(...s);
          if (n.mapToData) {
            i = Object.assign({}, i, { data: i[n.mapToData], [n.mapToData]: void 0 });
            return o(i);
          }
          if (n.renamed) {
            const [s, o] = n.renamed;
            e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${s}.${o}()`);
          }
          if (n.deprecated) {
            e.log.warn(n.deprecated);
          }
          if (n.renamedParameters) {
            const i = o.endpoint.merge(...s);
            for (const [s, o] of Object.entries(n.renamedParameters)) {
              if (s in i) {
                e.log.warn(`"${s}" parameter is deprecated for "octokit.${t}.${r}()". Use "${o}" instead`);
                if (!(o in i)) {
                  i[o] = i[s];
                }
                delete i[s];
              }
            }
            return o(i);
          }
          return o(...s);
        }
        return Object.assign(withDecorations, o);
      }
      function restEndpointMethods(e) {
        const t = endpointsToMethods(e);
        return { rest: t };
      }
      restEndpointMethods.VERSION = i;
      function legacyRestEndpointMethods(e) {
        const t = endpointsToMethods(e);
        return { ...t, rest: t };
      }
      legacyRestEndpointMethods.VERSION = i;
      0 && 0;
    },
    44552: function (e, t) {
      "use strict";
      var r =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.PersonalAccessTokenCredentialHandler = t.BearerCredentialHandler = t.BasicCredentialHandler = void 0;
      class BasicCredentialHandler {
        constructor(e, t) {
          this.username = e;
          this.password = t;
        }
        prepareRequest(e) {
          if (!e.headers) {
            throw Error("The request has no headers");
          }
          e.headers["Authorization"] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString("base64")}`;
        }
        canHandleAuthentication() {
          return false;
        }
        handleAuthentication() {
          return r(this, void 0, void 0, function* () {
            throw new Error("not implemented");
          });
        }
      }
      t.BasicCredentialHandler = BasicCredentialHandler;
      class BearerCredentialHandler {
        constructor(e) {
          this.token = e;
        }
        prepareRequest(e) {
          if (!e.headers) {
            throw Error("The request has no headers");
          }
          e.headers["Authorization"] = `Bearer ${this.token}`;
        }
        canHandleAuthentication() {
          return false;
        }
        handleAuthentication() {
          return r(this, void 0, void 0, function* () {
            throw new Error("not implemented");
          });
        }
      }
      t.BearerCredentialHandler = BearerCredentialHandler;
      class PersonalAccessTokenCredentialHandler {
        constructor(e) {
          this.token = e;
        }
        prepareRequest(e) {
          if (!e.headers) {
            throw Error("The request has no headers");
          }
          e.headers["Authorization"] = `Basic ${Buffer.from(`PAT:${this.token}`).toString("base64")}`;
        }
        canHandleAuthentication() {
          return false;
        }
        handleAuthentication() {
          return r(this, void 0, void 0, function* () {
            throw new Error("not implemented");
          });
        }
      }
      t.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;
    },
    54844: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.prototype.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      var i =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.HttpClient = t.isHttps = t.HttpClientResponse = t.HttpClientError = t.getProxyUrl = t.MediaTypes = t.Headers = t.HttpCodes = void 0;
      const a = o(r(58611));
      const A = o(r(65692));
      const l = o(r(54988));
      const c = o(r(20770));
      const d = r(46752);
      var p;
      (function (e) {
        e[(e["OK"] = 200)] = "OK";
        e[(e["MultipleChoices"] = 300)] = "MultipleChoices";
        e[(e["MovedPermanently"] = 301)] = "MovedPermanently";
        e[(e["ResourceMoved"] = 302)] = "ResourceMoved";
        e[(e["SeeOther"] = 303)] = "SeeOther";
        e[(e["NotModified"] = 304)] = "NotModified";
        e[(e["UseProxy"] = 305)] = "UseProxy";
        e[(e["SwitchProxy"] = 306)] = "SwitchProxy";
        e[(e["TemporaryRedirect"] = 307)] = "TemporaryRedirect";
        e[(e["PermanentRedirect"] = 308)] = "PermanentRedirect";
        e[(e["BadRequest"] = 400)] = "BadRequest";
        e[(e["Unauthorized"] = 401)] = "Unauthorized";
        e[(e["PaymentRequired"] = 402)] = "PaymentRequired";
        e[(e["Forbidden"] = 403)] = "Forbidden";
        e[(e["NotFound"] = 404)] = "NotFound";
        e[(e["MethodNotAllowed"] = 405)] = "MethodNotAllowed";
        e[(e["NotAcceptable"] = 406)] = "NotAcceptable";
        e[(e["ProxyAuthenticationRequired"] = 407)] = "ProxyAuthenticationRequired";
        e[(e["RequestTimeout"] = 408)] = "RequestTimeout";
        e[(e["Conflict"] = 409)] = "Conflict";
        e[(e["Gone"] = 410)] = "Gone";
        e[(e["TooManyRequests"] = 429)] = "TooManyRequests";
        e[(e["InternalServerError"] = 500)] = "InternalServerError";
        e[(e["NotImplemented"] = 501)] = "NotImplemented";
        e[(e["BadGateway"] = 502)] = "BadGateway";
        e[(e["ServiceUnavailable"] = 503)] = "ServiceUnavailable";
        e[(e["GatewayTimeout"] = 504)] = "GatewayTimeout";
      })(p || (t.HttpCodes = p = {}));
      var u;
      (function (e) {
        e["Accept"] = "accept";
        e["ContentType"] = "content-type";
      })(u || (t.Headers = u = {}));
      var g;
      (function (e) {
        e["ApplicationJson"] = "application/json";
      })(g || (t.MediaTypes = g = {}));
      function getProxyUrl(e) {
        const t = l.getProxyUrl(new URL(e));
        return t ? t.href : "";
      }
      t.getProxyUrl = getProxyUrl;
      const m = [p.MovedPermanently, p.ResourceMoved, p.SeeOther, p.TemporaryRedirect, p.PermanentRedirect];
      const h = [p.BadGateway, p.ServiceUnavailable, p.GatewayTimeout];
      const E = ["OPTIONS", "GET", "DELETE", "HEAD"];
      const I = 10;
      const C = 5;
      class HttpClientError extends Error {
        constructor(e, t) {
          super(e);
          this.name = "HttpClientError";
          this.statusCode = t;
          Object.setPrototypeOf(this, HttpClientError.prototype);
        }
      }
      t.HttpClientError = HttpClientError;
      class HttpClientResponse {
        constructor(e) {
          this.message = e;
        }
        readBody() {
          return i(this, void 0, void 0, function* () {
            return new Promise((e) =>
              i(this, void 0, void 0, function* () {
                let t = Buffer.alloc(0);
                this.message.on("data", (e) => {
                  t = Buffer.concat([t, e]);
                });
                this.message.on("end", () => {
                  e(t.toString());
                });
              })
            );
          });
        }
        readBodyBuffer() {
          return i(this, void 0, void 0, function* () {
            return new Promise((e) =>
              i(this, void 0, void 0, function* () {
                const t = [];
                this.message.on("data", (e) => {
                  t.push(e);
                });
                this.message.on("end", () => {
                  e(Buffer.concat(t));
                });
              })
            );
          });
        }
      }
      t.HttpClientResponse = HttpClientResponse;
      function isHttps(e) {
        const t = new URL(e);
        return t.protocol === "https:";
      }
      t.isHttps = isHttps;
      class HttpClient {
        constructor(e, t, r) {
          this._ignoreSslError = false;
          this._allowRedirects = true;
          this._allowRedirectDowngrade = false;
          this._maxRedirects = 50;
          this._allowRetries = false;
          this._maxRetries = 1;
          this._keepAlive = false;
          this._disposed = false;
          this.userAgent = e;
          this.handlers = t || [];
          this.requestOptions = r;
          if (r) {
            if (r.ignoreSslError != null) {
              this._ignoreSslError = r.ignoreSslError;
            }
            this._socketTimeout = r.socketTimeout;
            if (r.allowRedirects != null) {
              this._allowRedirects = r.allowRedirects;
            }
            if (r.allowRedirectDowngrade != null) {
              this._allowRedirectDowngrade = r.allowRedirectDowngrade;
            }
            if (r.maxRedirects != null) {
              this._maxRedirects = Math.max(r.maxRedirects, 0);
            }
            if (r.keepAlive != null) {
              this._keepAlive = r.keepAlive;
            }
            if (r.allowRetries != null) {
              this._allowRetries = r.allowRetries;
            }
            if (r.maxRetries != null) {
              this._maxRetries = r.maxRetries;
            }
          }
        }
        options(e, t) {
          return i(this, void 0, void 0, function* () {
            return this.request("OPTIONS", e, null, t || {});
          });
        }
        get(e, t) {
          return i(this, void 0, void 0, function* () {
            return this.request("GET", e, null, t || {});
          });
        }
        del(e, t) {
          return i(this, void 0, void 0, function* () {
            return this.request("DELETE", e, null, t || {});
          });
        }
        post(e, t, r) {
          return i(this, void 0, void 0, function* () {
            return this.request("POST", e, t, r || {});
          });
        }
        patch(e, t, r) {
          return i(this, void 0, void 0, function* () {
            return this.request("PATCH", e, t, r || {});
          });
        }
        put(e, t, r) {
          return i(this, void 0, void 0, function* () {
            return this.request("PUT", e, t, r || {});
          });
        }
        head(e, t) {
          return i(this, void 0, void 0, function* () {
            return this.request("HEAD", e, null, t || {});
          });
        }
        sendStream(e, t, r, s) {
          return i(this, void 0, void 0, function* () {
            return this.request(e, t, r, s);
          });
        }
        getJson(e, t = {}) {
          return i(this, void 0, void 0, function* () {
            t[u.Accept] = this._getExistingOrDefaultHeader(t, u.Accept, g.ApplicationJson);
            const r = yield this.get(e, t);
            return this._processResponse(r, this.requestOptions);
          });
        }
        postJson(e, t, r = {}) {
          return i(this, void 0, void 0, function* () {
            const s = JSON.stringify(t, null, 2);
            r[u.Accept] = this._getExistingOrDefaultHeader(r, u.Accept, g.ApplicationJson);
            r[u.ContentType] = this._getExistingOrDefaultHeader(r, u.ContentType, g.ApplicationJson);
            const n = yield this.post(e, s, r);
            return this._processResponse(n, this.requestOptions);
          });
        }
        putJson(e, t, r = {}) {
          return i(this, void 0, void 0, function* () {
            const s = JSON.stringify(t, null, 2);
            r[u.Accept] = this._getExistingOrDefaultHeader(r, u.Accept, g.ApplicationJson);
            r[u.ContentType] = this._getExistingOrDefaultHeader(r, u.ContentType, g.ApplicationJson);
            const n = yield this.put(e, s, r);
            return this._processResponse(n, this.requestOptions);
          });
        }
        patchJson(e, t, r = {}) {
          return i(this, void 0, void 0, function* () {
            const s = JSON.stringify(t, null, 2);
            r[u.Accept] = this._getExistingOrDefaultHeader(r, u.Accept, g.ApplicationJson);
            r[u.ContentType] = this._getExistingOrDefaultHeader(r, u.ContentType, g.ApplicationJson);
            const n = yield this.patch(e, s, r);
            return this._processResponse(n, this.requestOptions);
          });
        }
        request(e, t, r, s) {
          return i(this, void 0, void 0, function* () {
            if (this._disposed) {
              throw new Error("Client has already been disposed.");
            }
            const n = new URL(t);
            let o = this._prepareRequest(e, n, s);
            const i = this._allowRetries && E.includes(e) ? this._maxRetries + 1 : 1;
            let a = 0;
            let A;
            do {
              A = yield this.requestRaw(o, r);
              if (A && A.message && A.message.statusCode === p.Unauthorized) {
                let e;
                for (const t of this.handlers) {
                  if (t.canHandleAuthentication(A)) {
                    e = t;
                    break;
                  }
                }
                if (e) {
                  return e.handleAuthentication(this, o, r);
                } else {
                  return A;
                }
              }
              let t = this._maxRedirects;
              while (A.message.statusCode && m.includes(A.message.statusCode) && this._allowRedirects && t > 0) {
                const i = A.message.headers["location"];
                if (!i) {
                  break;
                }
                const a = new URL(i);
                if (n.protocol === "https:" && n.protocol !== a.protocol && !this._allowRedirectDowngrade) {
                  throw new Error(
                    "Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true."
                  );
                }
                yield A.readBody();
                if (a.hostname !== n.hostname) {
                  for (const e in s) {
                    if (e.toLowerCase() === "authorization") {
                      delete s[e];
                    }
                  }
                }
                o = this._prepareRequest(e, a, s);
                A = yield this.requestRaw(o, r);
                t--;
              }
              if (!A.message.statusCode || !h.includes(A.message.statusCode)) {
                return A;
              }
              a += 1;
              if (a < i) {
                yield A.readBody();
                yield this._performExponentialBackoff(a);
              }
            } while (a < i);
            return A;
          });
        }
        dispose() {
          if (this._agent) {
            this._agent.destroy();
          }
          this._disposed = true;
        }
        requestRaw(e, t) {
          return i(this, void 0, void 0, function* () {
            return new Promise((r, s) => {
              function callbackForResult(e, t) {
                if (e) {
                  s(e);
                } else if (!t) {
                  s(new Error("Unknown error"));
                } else {
                  r(t);
                }
              }
              this.requestRawWithCallback(e, t, callbackForResult);
            });
          });
        }
        requestRawWithCallback(e, t, r) {
          if (typeof t === "string") {
            if (!e.options.headers) {
              e.options.headers = {};
            }
            e.options.headers["Content-Length"] = Buffer.byteLength(t, "utf8");
          }
          let s = false;
          function handleResult(e, t) {
            if (!s) {
              s = true;
              r(e, t);
            }
          }
          const n = e.httpModule.request(e.options, (e) => {
            const t = new HttpClientResponse(e);
            handleResult(undefined, t);
          });
          let o;
          n.on("socket", (e) => {
            o = e;
          });
          n.setTimeout(this._socketTimeout || 3 * 6e4, () => {
            if (o) {
              o.end();
            }
            handleResult(new Error(`Request timeout: ${e.options.path}`));
          });
          n.on("error", function (e) {
            handleResult(e);
          });
          if (t && typeof t === "string") {
            n.write(t, "utf8");
          }
          if (t && typeof t !== "string") {
            t.on("close", function () {
              n.end();
            });
            t.pipe(n);
          } else {
            n.end();
          }
        }
        getAgent(e) {
          const t = new URL(e);
          return this._getAgent(t);
        }
        getAgentDispatcher(e) {
          const t = new URL(e);
          const r = l.getProxyUrl(t);
          const s = r && r.hostname;
          if (!s) {
            return;
          }
          return this._getProxyAgentDispatcher(t, r);
        }
        _prepareRequest(e, t, r) {
          const s = {};
          s.parsedUrl = t;
          const n = s.parsedUrl.protocol === "https:";
          s.httpModule = n ? A : a;
          const o = n ? 443 : 80;
          s.options = {};
          s.options.host = s.parsedUrl.hostname;
          s.options.port = s.parsedUrl.port ? parseInt(s.parsedUrl.port) : o;
          s.options.path = (s.parsedUrl.pathname || "") + (s.parsedUrl.search || "");
          s.options.method = e;
          s.options.headers = this._mergeHeaders(r);
          if (this.userAgent != null) {
            s.options.headers["user-agent"] = this.userAgent;
          }
          s.options.agent = this._getAgent(s.parsedUrl);
          if (this.handlers) {
            for (const e of this.handlers) {
              e.prepareRequest(s.options);
            }
          }
          return s;
        }
        _mergeHeaders(e) {
          if (this.requestOptions && this.requestOptions.headers) {
            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(e || {}));
          }
          return lowercaseKeys(e || {});
        }
        _getExistingOrDefaultHeader(e, t, r) {
          let s;
          if (this.requestOptions && this.requestOptions.headers) {
            s = lowercaseKeys(this.requestOptions.headers)[t];
          }
          return e[t] || s || r;
        }
        _getAgent(e) {
          let t;
          const r = l.getProxyUrl(e);
          const s = r && r.hostname;
          if (this._keepAlive && s) {
            t = this._proxyAgent;
          }
          if (!s) {
            t = this._agent;
          }
          if (t) {
            return t;
          }
          const n = e.protocol === "https:";
          let o = 100;
          if (this.requestOptions) {
            o = this.requestOptions.maxSockets || a.globalAgent.maxSockets;
          }
          if (r && r.hostname) {
            const e = {
              maxSockets: o,
              keepAlive: this._keepAlive,
              proxy: Object.assign(Object.assign({}, (r.username || r.password) && { proxyAuth: `${r.username}:${r.password}` }), {
                host: r.hostname,
                port: r.port,
              }),
            };
            let s;
            const i = r.protocol === "https:";
            if (n) {
              s = i ? c.httpsOverHttps : c.httpsOverHttp;
            } else {
              s = i ? c.httpOverHttps : c.httpOverHttp;
            }
            t = s(e);
            this._proxyAgent = t;
          }
          if (!t) {
            const e = { keepAlive: this._keepAlive, maxSockets: o };
            t = n ? new A.Agent(e) : new a.Agent(e);
            this._agent = t;
          }
          if (n && this._ignoreSslError) {
            t.options = Object.assign(t.options || {}, { rejectUnauthorized: false });
          }
          return t;
        }
        _getProxyAgentDispatcher(e, t) {
          let r;
          if (this._keepAlive) {
            r = this._proxyAgentDispatcher;
          }
          if (r) {
            return r;
          }
          const s = e.protocol === "https:";
          r = new d.ProxyAgent(
            Object.assign({ uri: t.href, pipelining: !this._keepAlive ? 0 : 1 }, (t.username || t.password) && { token: `${t.username}:${t.password}` })
          );
          this._proxyAgentDispatcher = r;
          if (s && this._ignoreSslError) {
            r.options = Object.assign(r.options.requestTls || {}, { rejectUnauthorized: false });
          }
          return r;
        }
        _performExponentialBackoff(e) {
          return i(this, void 0, void 0, function* () {
            e = Math.min(I, e);
            const t = C * Math.pow(2, e);
            return new Promise((e) => setTimeout(() => e(), t));
          });
        }
        _processResponse(e, t) {
          return i(this, void 0, void 0, function* () {
            return new Promise((r, s) =>
              i(this, void 0, void 0, function* () {
                const n = e.message.statusCode || 0;
                const o = { statusCode: n, result: null, headers: {} };
                if (n === p.NotFound) {
                  r(o);
                }
                function dateTimeDeserializer(e, t) {
                  if (typeof t === "string") {
                    const e = new Date(t);
                    if (!isNaN(e.valueOf())) {
                      return e;
                    }
                  }
                  return t;
                }
                let i;
                let a;
                try {
                  a = yield e.readBody();
                  if (a && a.length > 0) {
                    if (t && t.deserializeDates) {
                      i = JSON.parse(a, dateTimeDeserializer);
                    } else {
                      i = JSON.parse(a);
                    }
                    o.result = i;
                  }
                  o.headers = e.message.headers;
                } catch (e) {}
                if (n > 299) {
                  let e;
                  if (i && i.message) {
                    e = i.message;
                  } else if (a && a.length > 0) {
                    e = a;
                  } else {
                    e = `Failed request: (${n})`;
                  }
                  const t = new HttpClientError(e, n);
                  t.result = o.result;
                  s(t);
                } else {
                  r(o);
                }
              })
            );
          });
        }
      }
      t.HttpClient = HttpClient;
      const lowercaseKeys = (e) => Object.keys(e).reduce((t, r) => ((t[r.toLowerCase()] = e[r]), t), {});
    },
    54988: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.checkBypass = t.getProxyUrl = void 0;
      function getProxyUrl(e) {
        const t = e.protocol === "https:";
        if (checkBypass(e)) {
          return undefined;
        }
        const r = (() => {
          if (t) {
            return process.env["https_proxy"] || process.env["HTTPS_PROXY"];
          } else {
            return process.env["http_proxy"] || process.env["HTTP_PROXY"];
          }
        })();
        if (r) {
          try {
            return new URL(r);
          } catch (e) {
            if (!r.startsWith("http://") && !r.startsWith("https://")) return new URL(`http://${r}`);
          }
        } else {
          return undefined;
        }
      }
      t.getProxyUrl = getProxyUrl;
      function checkBypass(e) {
        if (!e.hostname) {
          return false;
        }
        const t = e.hostname;
        if (isLoopbackAddress(t)) {
          return true;
        }
        const r = process.env["no_proxy"] || process.env["NO_PROXY"] || "";
        if (!r) {
          return false;
        }
        let s;
        if (e.port) {
          s = Number(e.port);
        } else if (e.protocol === "http:") {
          s = 80;
        } else if (e.protocol === "https:") {
          s = 443;
        }
        const n = [e.hostname.toUpperCase()];
        if (typeof s === "number") {
          n.push(`${n[0]}:${s}`);
        }
        for (const e of r
          .split(",")
          .map((e) => e.trim().toUpperCase())
          .filter((e) => e)) {
          if (e === "*" || n.some((t) => t === e || t.endsWith(`.${e}`) || (e.startsWith(".") && t.endsWith(`${e}`)))) {
            return true;
          }
        }
        return false;
      }
      t.checkBypass = checkBypass;
      function isLoopbackAddress(e) {
        const t = e.toLowerCase();
        return t === "localhost" || t.startsWith("127.") || t.startsWith("[::1]") || t.startsWith("[0:0:0:0:0:0:0:1]");
      }
    },
    77864: (e) => {
      "use strict";
      var t = Object.defineProperty;
      var r = Object.getOwnPropertyDescriptor;
      var s = Object.getOwnPropertyNames;
      var n = Object.prototype.hasOwnProperty;
      var __export = (e, r) => {
        for (var s in r) t(e, s, { get: r[s], enumerable: true });
      };
      var __copyProps = (e, o, i, a) => {
        if ((o && typeof o === "object") || typeof o === "function") {
          for (let A of s(o)) if (!n.call(e, A) && A !== i) t(e, A, { get: () => o[A], enumerable: !(a = r(o, A)) || a.enumerable });
        }
        return e;
      };
      var __toCommonJS = (e) => __copyProps(t({}, "__esModule", { value: true }), e);
      var o = {};
      __export(o, { createTokenAuth: () => l });
      e.exports = __toCommonJS(o);
      var i = /^v1\./;
      var a = /^ghs_/;
      var A = /^ghu_/;
      async function auth(e) {
        const t = e.split(/\./).length === 3;
        const r = i.test(e) || a.test(e);
        const s = A.test(e);
        const n = t ? "app" : r ? "installation" : s ? "user-to-server" : "oauth";
        return { type: "token", token: e, tokenType: n };
      }
      function withAuthorizationPrefix(e) {
        if (e.split(/\./).length === 3) {
          return `bearer ${e}`;
        }
        return `token ${e}`;
      }
      async function hook(e, t, r, s) {
        const n = t.endpoint.merge(r, s);
        n.headers.authorization = withAuthorizationPrefix(e);
        return t(n);
      }
      var l = function createTokenAuth2(e) {
        if (!e) {
          throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");
        }
        if (typeof e !== "string") {
          throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");
        }
        e = e.replace(/^(token|bearer) +/i, "");
        return Object.assign(auth.bind(null, e), { hook: hook.bind(null, e) });
      };
      0 && 0;
    },
    61897: (e, t, r) => {
      "use strict";
      var s = Object.defineProperty;
      var n = Object.getOwnPropertyDescriptor;
      var o = Object.getOwnPropertyNames;
      var i = Object.prototype.hasOwnProperty;
      var __export = (e, t) => {
        for (var r in t) s(e, r, { get: t[r], enumerable: true });
      };
      var __copyProps = (e, t, r, a) => {
        if ((t && typeof t === "object") || typeof t === "function") {
          for (let A of o(t)) if (!i.call(e, A) && A !== r) s(e, A, { get: () => t[A], enumerable: !(a = n(t, A)) || a.enumerable });
        }
        return e;
      };
      var __toCommonJS = (e) => __copyProps(s({}, "__esModule", { value: true }), e);
      var a = {};
      __export(a, { Octokit: () => E });
      e.exports = __toCommonJS(a);
      var A = r(33843);
      var l = r(52732);
      var c = r(66255);
      var d = r(70007);
      var p = r(77864);
      var u = "5.2.0";
      var noop = () => {};
      var g = console.warn.bind(console);
      var m = console.error.bind(console);
      var h = `octokit-core.js/${u} ${(0, A.getUserAgent)()}`;
      var E = class {
        static {
          this.VERSION = u;
        }
        static defaults(e) {
          const t = class extends this {
            constructor(...t) {
              const r = t[0] || {};
              if (typeof e === "function") {
                super(e(r));
                return;
              }
              super(Object.assign({}, e, r, r.userAgent && e.userAgent ? { userAgent: `${r.userAgent} ${e.userAgent}` } : null));
            }
          };
          return t;
        }
        static {
          this.plugins = [];
        }
        static plugin(...e) {
          const t = this.plugins;
          const r = class extends this {
            static {
              this.plugins = t.concat(e.filter((e) => !t.includes(e)));
            }
          };
          return r;
        }
        constructor(e = {}) {
          const t = new l.Collection();
          const r = {
            baseUrl: c.request.endpoint.DEFAULTS.baseUrl,
            headers: {},
            request: Object.assign({}, e.request, { hook: t.bind(null, "request") }),
            mediaType: { previews: [], format: "" },
          };
          r.headers["user-agent"] = e.userAgent ? `${e.userAgent} ${h}` : h;
          if (e.baseUrl) {
            r.baseUrl = e.baseUrl;
          }
          if (e.previews) {
            r.mediaType.previews = e.previews;
          }
          if (e.timeZone) {
            r.headers["time-zone"] = e.timeZone;
          }
          this.request = c.request.defaults(r);
          this.graphql = (0, d.withCustomRequest)(this.request).defaults(r);
          this.log = Object.assign({ debug: noop, info: noop, warn: g, error: m }, e.log);
          this.hook = t;
          if (!e.authStrategy) {
            if (!e.auth) {
              this.auth = async () => ({ type: "unauthenticated" });
            } else {
              const r = (0, p.createTokenAuth)(e.auth);
              t.wrap("request", r.hook);
              this.auth = r;
            }
          } else {
            const { authStrategy: r, ...s } = e;
            const n = r(Object.assign({ request: this.request, log: this.log, octokit: this, octokitOptions: s }, e.auth));
            t.wrap("request", n.hook);
            this.auth = n;
          }
          const s = this.constructor;
          for (let t = 0; t < s.plugins.length; ++t) {
            Object.assign(this, s.plugins[t](this, e));
          }
        }
      };
      0 && 0;
    },
    54471: (e, t, r) => {
      "use strict";
      var s = Object.defineProperty;
      var n = Object.getOwnPropertyDescriptor;
      var o = Object.getOwnPropertyNames;
      var i = Object.prototype.hasOwnProperty;
      var __export = (e, t) => {
        for (var r in t) s(e, r, { get: t[r], enumerable: true });
      };
      var __copyProps = (e, t, r, a) => {
        if ((t && typeof t === "object") || typeof t === "function") {
          for (let A of o(t)) if (!i.call(e, A) && A !== r) s(e, A, { get: () => t[A], enumerable: !(a = n(t, A)) || a.enumerable });
        }
        return e;
      };
      var __toCommonJS = (e) => __copyProps(s({}, "__esModule", { value: true }), e);
      var a = {};
      __export(a, { endpoint: () => u });
      e.exports = __toCommonJS(a);
      var A = r(33843);
      var l = "9.0.5";
      var c = `octokit-endpoint.js/${l} ${(0, A.getUserAgent)()}`;
      var d = {
        method: "GET",
        baseUrl: "https://api.github.com",
        headers: { accept: "application/vnd.github.v3+json", "user-agent": c },
        mediaType: { format: "" },
      };
      function lowercaseKeys(e) {
        if (!e) {
          return {};
        }
        return Object.keys(e).reduce((t, r) => {
          t[r.toLowerCase()] = e[r];
          return t;
        }, {});
      }
      function isPlainObject(e) {
        if (typeof e !== "object" || e === null) return false;
        if (Object.prototype.toString.call(e) !== "[object Object]") return false;
        const t = Object.getPrototypeOf(e);
        if (t === null) return true;
        const r = Object.prototype.hasOwnProperty.call(t, "constructor") && t.constructor;
        return typeof r === "function" && r instanceof r && Function.prototype.call(r) === Function.prototype.call(e);
      }
      function mergeDeep(e, t) {
        const r = Object.assign({}, e);
        Object.keys(t).forEach((s) => {
          if (isPlainObject(t[s])) {
            if (!(s in e)) Object.assign(r, { [s]: t[s] });
            else r[s] = mergeDeep(e[s], t[s]);
          } else {
            Object.assign(r, { [s]: t[s] });
          }
        });
        return r;
      }
      function removeUndefinedProperties(e) {
        for (const t in e) {
          if (e[t] === void 0) {
            delete e[t];
          }
        }
        return e;
      }
      function merge(e, t, r) {
        if (typeof t === "string") {
          let [e, s] = t.split(" ");
          r = Object.assign(s ? { method: e, url: s } : { url: e }, r);
        } else {
          r = Object.assign({}, t);
        }
        r.headers = lowercaseKeys(r.headers);
        removeUndefinedProperties(r);
        removeUndefinedProperties(r.headers);
        const s = mergeDeep(e || {}, r);
        if (r.url === "/graphql") {
          if (e && e.mediaType.previews?.length) {
            s.mediaType.previews = e.mediaType.previews.filter((e) => !s.mediaType.previews.includes(e)).concat(s.mediaType.previews);
          }
          s.mediaType.previews = (s.mediaType.previews || []).map((e) => e.replace(/-preview/, ""));
        }
        return s;
      }
      function addQueryParameters(e, t) {
        const r = /\?/.test(e) ? "&" : "?";
        const s = Object.keys(t);
        if (s.length === 0) {
          return e;
        }
        return (
          e +
          r +
          s
            .map((e) => {
              if (e === "q") {
                return "q=" + t.q.split("+").map(encodeURIComponent).join("+");
              }
              return `${e}=${encodeURIComponent(t[e])}`;
            })
            .join("&")
        );
      }
      var p = /\{[^}]+\}/g;
      function removeNonChars(e) {
        return e.replace(/^\W+|\W+$/g, "").split(/,/);
      }
      function extractUrlVariableNames(e) {
        const t = e.match(p);
        if (!t) {
          return [];
        }
        return t.map(removeNonChars).reduce((e, t) => e.concat(t), []);
      }
      function omit(e, t) {
        const r = { __proto__: null };
        for (const s of Object.keys(e)) {
          if (t.indexOf(s) === -1) {
            r[s] = e[s];
          }
        }
        return r;
      }
      function encodeReserved(e) {
        return e
          .split(/(%[0-9A-Fa-f]{2})/g)
          .map(function (e) {
            if (!/%[0-9A-Fa-f]/.test(e)) {
              e = encodeURI(e).replace(/%5B/g, "[").replace(/%5D/g, "]");
            }
            return e;
          })
          .join("");
      }
      function encodeUnreserved(e) {
        return encodeURIComponent(e).replace(/[!'()*]/g, function (e) {
          return "%" + e.charCodeAt(0).toString(16).toUpperCase();
        });
      }
      function encodeValue(e, t, r) {
        t = e === "+" || e === "#" ? encodeReserved(t) : encodeUnreserved(t);
        if (r) {
          return encodeUnreserved(r) + "=" + t;
        } else {
          return t;
        }
      }
      function isDefined(e) {
        return e !== void 0 && e !== null;
      }
      function isKeyOperator(e) {
        return e === ";" || e === "&" || e === "?";
      }
      function getValues(e, t, r, s) {
        var n = e[r],
          o = [];
        if (isDefined(n) && n !== "") {
          if (typeof n === "string" || typeof n === "number" || typeof n === "boolean") {
            n = n.toString();
            if (s && s !== "*") {
              n = n.substring(0, parseInt(s, 10));
            }
            o.push(encodeValue(t, n, isKeyOperator(t) ? r : ""));
          } else {
            if (s === "*") {
              if (Array.isArray(n)) {
                n.filter(isDefined).forEach(function (e) {
                  o.push(encodeValue(t, e, isKeyOperator(t) ? r : ""));
                });
              } else {
                Object.keys(n).forEach(function (e) {
                  if (isDefined(n[e])) {
                    o.push(encodeValue(t, n[e], e));
                  }
                });
              }
            } else {
              const e = [];
              if (Array.isArray(n)) {
                n.filter(isDefined).forEach(function (r) {
                  e.push(encodeValue(t, r));
                });
              } else {
                Object.keys(n).forEach(function (r) {
                  if (isDefined(n[r])) {
                    e.push(encodeUnreserved(r));
                    e.push(encodeValue(t, n[r].toString()));
                  }
                });
              }
              if (isKeyOperator(t)) {
                o.push(encodeUnreserved(r) + "=" + e.join(","));
              } else if (e.length !== 0) {
                o.push(e.join(","));
              }
            }
          }
        } else {
          if (t === ";") {
            if (isDefined(n)) {
              o.push(encodeUnreserved(r));
            }
          } else if (n === "" && (t === "&" || t === "?")) {
            o.push(encodeUnreserved(r) + "=");
          } else if (n === "") {
            o.push("");
          }
        }
        return o;
      }
      function parseUrl(e) {
        return { expand: expand.bind(null, e) };
      }
      function expand(e, t) {
        var r = ["+", "#", ".", "/", ";", "?", "&"];
        e = e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function (e, s, n) {
          if (s) {
            let e = "";
            const n = [];
            if (r.indexOf(s.charAt(0)) !== -1) {
              e = s.charAt(0);
              s = s.substr(1);
            }
            s.split(/,/g).forEach(function (r) {
              var s = /([^:\*]*)(?::(\d+)|(\*))?/.exec(r);
              n.push(getValues(t, e, s[1], s[2] || s[3]));
            });
            if (e && e !== "+") {
              var o = ",";
              if (e === "?") {
                o = "&";
              } else if (e !== "#") {
                o = e;
              }
              return (n.length !== 0 ? e : "") + n.join(o);
            } else {
              return n.join(",");
            }
          } else {
            return encodeReserved(n);
          }
        });
        if (e === "/") {
          return e;
        } else {
          return e.replace(/\/$/, "");
        }
      }
      function parse(e) {
        let t = e.method.toUpperCase();
        let r = (e.url || "/").replace(/:([a-z]\w+)/g, "{$1}");
        let s = Object.assign({}, e.headers);
        let n;
        let o = omit(e, ["method", "baseUrl", "url", "headers", "request", "mediaType"]);
        const i = extractUrlVariableNames(r);
        r = parseUrl(r).expand(o);
        if (!/^http/.test(r)) {
          r = e.baseUrl + r;
        }
        const a = Object.keys(e)
          .filter((e) => i.includes(e))
          .concat("baseUrl");
        const A = omit(o, a);
        const l = /application\/octet-stream/i.test(s.accept);
        if (!l) {
          if (e.mediaType.format) {
            s.accept = s.accept
              .split(/,/)
              .map((t) => t.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/, `application/vnd$1$2.${e.mediaType.format}`))
              .join(",");
          }
          if (r.endsWith("/graphql")) {
            if (e.mediaType.previews?.length) {
              const t = s.accept.match(/[\w-]+(?=-preview)/g) || [];
              s.accept = t
                .concat(e.mediaType.previews)
                .map((t) => {
                  const r = e.mediaType.format ? `.${e.mediaType.format}` : "+json";
                  return `application/vnd.github.${t}-preview${r}`;
                })
                .join(",");
            }
          }
        }
        if (["GET", "HEAD"].includes(t)) {
          r = addQueryParameters(r, A);
        } else {
          if ("data" in A) {
            n = A.data;
          } else {
            if (Object.keys(A).length) {
              n = A;
            }
          }
        }
        if (!s["content-type"] && typeof n !== "undefined") {
          s["content-type"] = "application/json; charset=utf-8";
        }
        if (["PATCH", "PUT"].includes(t) && typeof n === "undefined") {
          n = "";
        }
        return Object.assign({ method: t, url: r, headers: s }, typeof n !== "undefined" ? { body: n } : null, e.request ? { request: e.request } : null);
      }
      function endpointWithDefaults(e, t, r) {
        return parse(merge(e, t, r));
      }
      function withDefaults(e, t) {
        const r = merge(e, t);
        const s = endpointWithDefaults.bind(null, r);
        return Object.assign(s, { DEFAULTS: r, defaults: withDefaults.bind(null, r), merge: merge.bind(null, r), parse: parse });
      }
      var u = withDefaults(null, d);
      0 && 0;
    },
    70007: (e, t, r) => {
      "use strict";
      var s = Object.defineProperty;
      var n = Object.getOwnPropertyDescriptor;
      var o = Object.getOwnPropertyNames;
      var i = Object.prototype.hasOwnProperty;
      var __export = (e, t) => {
        for (var r in t) s(e, r, { get: t[r], enumerable: true });
      };
      var __copyProps = (e, t, r, a) => {
        if ((t && typeof t === "object") || typeof t === "function") {
          for (let A of o(t)) if (!i.call(e, A) && A !== r) s(e, A, { get: () => t[A], enumerable: !(a = n(t, A)) || a.enumerable });
        }
        return e;
      };
      var __toCommonJS = (e) => __copyProps(s({}, "__esModule", { value: true }), e);
      var a = {};
      __export(a, { GraphqlResponseError: () => u, graphql: () => E, withCustomRequest: () => withCustomRequest });
      e.exports = __toCommonJS(a);
      var A = r(66255);
      var l = r(33843);
      var c = "7.1.0";
      var d = r(66255);
      var p = r(66255);
      function _buildMessageForResponseErrors(e) {
        return `Request failed due to following response errors:\n` + e.errors.map((e) => ` - ${e.message}`).join("\n");
      }
      var u = class extends Error {
        constructor(e, t, r) {
          super(_buildMessageForResponseErrors(r));
          this.request = e;
          this.headers = t;
          this.response = r;
          this.name = "GraphqlResponseError";
          this.errors = r.errors;
          this.data = r.data;
          if (Error.captureStackTrace) {
            Error.captureStackTrace(this, this.constructor);
          }
        }
      };
      var g = ["method", "baseUrl", "url", "headers", "request", "query", "mediaType"];
      var m = ["query", "method", "url"];
      var h = /\/api\/v3\/?$/;
      function graphql(e, t, r) {
        if (r) {
          if (typeof t === "string" && "query" in r) {
            return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`));
          }
          for (const e in r) {
            if (!m.includes(e)) continue;
            return Promise.reject(new Error(`[@octokit/graphql] "${e}" cannot be used as variable name`));
          }
        }
        const s = typeof t === "string" ? Object.assign({ query: t }, r) : t;
        const n = Object.keys(s).reduce((e, t) => {
          if (g.includes(t)) {
            e[t] = s[t];
            return e;
          }
          if (!e.variables) {
            e.variables = {};
          }
          e.variables[t] = s[t];
          return e;
        }, {});
        const o = s.baseUrl || e.endpoint.DEFAULTS.baseUrl;
        if (h.test(o)) {
          n.url = o.replace(h, "/api/graphql");
        }
        return e(n).then((e) => {
          if (e.data.errors) {
            const t = {};
            for (const r of Object.keys(e.headers)) {
              t[r] = e.headers[r];
            }
            throw new u(n, t, e.data);
          }
          return e.data.data;
        });
      }
      function withDefaults(e, t) {
        const r = e.defaults(t);
        const newApi = (e, t) => graphql(r, e, t);
        return Object.assign(newApi, { defaults: withDefaults.bind(null, r), endpoint: r.endpoint });
      }
      var E = withDefaults(A.request, { headers: { "user-agent": `octokit-graphql.js/${c} ${(0, l.getUserAgent)()}` }, method: "POST", url: "/graphql" });
      function withCustomRequest(e) {
        return withDefaults(e, { method: "POST", url: "/graphql" });
      }
      0 && 0;
    },
    38082: (e) => {
      "use strict";
      var t = Object.defineProperty;
      var r = Object.getOwnPropertyDescriptor;
      var s = Object.getOwnPropertyNames;
      var n = Object.prototype.hasOwnProperty;
      var __export = (e, r) => {
        for (var s in r) t(e, s, { get: r[s], enumerable: true });
      };
      var __copyProps = (e, o, i, a) => {
        if ((o && typeof o === "object") || typeof o === "function") {
          for (let A of s(o)) if (!n.call(e, A) && A !== i) t(e, A, { get: () => o[A], enumerable: !(a = r(o, A)) || a.enumerable });
        }
        return e;
      };
      var __toCommonJS = (e) => __copyProps(t({}, "__esModule", { value: true }), e);
      var o = {};
      __export(o, {
        composePaginateRest: () => a,
        isPaginatingEndpoint: () => isPaginatingEndpoint,
        paginateRest: () => paginateRest,
        paginatingEndpoints: () => A,
      });
      e.exports = __toCommonJS(o);
      var i = "11.3.1";
      function normalizePaginatedListResponse(e) {
        if (!e.data) {
          return { ...e, data: [] };
        }
        const t = "total_count" in e.data && !("url" in e.data);
        if (!t) return e;
        const r = e.data.incomplete_results;
        const s = e.data.repository_selection;
        const n = e.data.total_count;
        delete e.data.incomplete_results;
        delete e.data.repository_selection;
        delete e.data.total_count;
        const o = Object.keys(e.data)[0];
        const i = e.data[o];
        e.data = i;
        if (typeof r !== "undefined") {
          e.data.incomplete_results = r;
        }
        if (typeof s !== "undefined") {
          e.data.repository_selection = s;
        }
        e.data.total_count = n;
        return e;
      }
      function iterator(e, t, r) {
        const s = typeof t === "function" ? t.endpoint(r) : e.request.endpoint(t, r);
        const n = typeof t === "function" ? t : e.request;
        const o = s.method;
        const i = s.headers;
        let a = s.url;
        return {
          [Symbol.asyncIterator]: () => ({
            async next() {
              if (!a) return { done: true };
              try {
                const e = await n({ method: o, url: a, headers: i });
                const t = normalizePaginatedListResponse(e);
                a = ((t.headers.link || "").match(/<([^>]+)>;\s*rel="next"/) || [])[1];
                return { value: t };
              } catch (e) {
                if (e.status !== 409) throw e;
                a = "";
                return { value: { status: 200, headers: {}, data: [] } };
              }
            },
          }),
        };
      }
      function paginate(e, t, r, s) {
        if (typeof r === "function") {
          s = r;
          r = void 0;
        }
        return gather(e, [], iterator(e, t, r)[Symbol.asyncIterator](), s);
      }
      function gather(e, t, r, s) {
        return r.next().then((n) => {
          if (n.done) {
            return t;
          }
          let o = false;
          function done() {
            o = true;
          }
          t = t.concat(s ? s(n.value, done) : n.value.data);
          if (o) {
            return t;
          }
          return gather(e, t, r, s);
        });
      }
      var a = Object.assign(paginate, { iterator: iterator });
      var A = [
        "GET /advisories",
        "GET /app/hook/deliveries",
        "GET /app/installation-requests",
        "GET /app/installations",
        "GET /assignments/{assignment_id}/accepted_assignments",
        "GET /classrooms",
        "GET /classrooms/{classroom_id}/assignments",
        "GET /enterprises/{enterprise}/copilot/usage",
        "GET /enterprises/{enterprise}/dependabot/alerts",
        "GET /enterprises/{enterprise}/secret-scanning/alerts",
        "GET /events",
        "GET /gists",
        "GET /gists/public",
        "GET /gists/starred",
        "GET /gists/{gist_id}/comments",
        "GET /gists/{gist_id}/commits",
        "GET /gists/{gist_id}/forks",
        "GET /installation/repositories",
        "GET /issues",
        "GET /licenses",
        "GET /marketplace_listing/plans",
        "GET /marketplace_listing/plans/{plan_id}/accounts",
        "GET /marketplace_listing/stubbed/plans",
        "GET /marketplace_listing/stubbed/plans/{plan_id}/accounts",
        "GET /networks/{owner}/{repo}/events",
        "GET /notifications",
        "GET /organizations",
        "GET /orgs/{org}/actions/cache/usage-by-repository",
        "GET /orgs/{org}/actions/permissions/repositories",
        "GET /orgs/{org}/actions/runners",
        "GET /orgs/{org}/actions/secrets",
        "GET /orgs/{org}/actions/secrets/{secret_name}/repositories",
        "GET /orgs/{org}/actions/variables",
        "GET /orgs/{org}/actions/variables/{name}/repositories",
        "GET /orgs/{org}/blocks",
        "GET /orgs/{org}/code-scanning/alerts",
        "GET /orgs/{org}/codespaces",
        "GET /orgs/{org}/codespaces/secrets",
        "GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories",
        "GET /orgs/{org}/copilot/billing/seats",
        "GET /orgs/{org}/copilot/usage",
        "GET /orgs/{org}/dependabot/alerts",
        "GET /orgs/{org}/dependabot/secrets",
        "GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories",
        "GET /orgs/{org}/events",
        "GET /orgs/{org}/failed_invitations",
        "GET /orgs/{org}/hooks",
        "GET /orgs/{org}/hooks/{hook_id}/deliveries",
        "GET /orgs/{org}/installations",
        "GET /orgs/{org}/invitations",
        "GET /orgs/{org}/invitations/{invitation_id}/teams",
        "GET /orgs/{org}/issues",
        "GET /orgs/{org}/members",
        "GET /orgs/{org}/members/{username}/codespaces",
        "GET /orgs/{org}/migrations",
        "GET /orgs/{org}/migrations/{migration_id}/repositories",
        "GET /orgs/{org}/organization-roles/{role_id}/teams",
        "GET /orgs/{org}/organization-roles/{role_id}/users",
        "GET /orgs/{org}/outside_collaborators",
        "GET /orgs/{org}/packages",
        "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
        "GET /orgs/{org}/personal-access-token-requests",
        "GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories",
        "GET /orgs/{org}/personal-access-tokens",
        "GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories",
        "GET /orgs/{org}/projects",
        "GET /orgs/{org}/properties/values",
        "GET /orgs/{org}/public_members",
        "GET /orgs/{org}/repos",
        "GET /orgs/{org}/rulesets",
        "GET /orgs/{org}/rulesets/rule-suites",
        "GET /orgs/{org}/secret-scanning/alerts",
        "GET /orgs/{org}/security-advisories",
        "GET /orgs/{org}/team/{team_slug}/copilot/usage",
        "GET /orgs/{org}/teams",
        "GET /orgs/{org}/teams/{team_slug}/discussions",
        "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
        "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
        "GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
        "GET /orgs/{org}/teams/{team_slug}/invitations",
        "GET /orgs/{org}/teams/{team_slug}/members",
        "GET /orgs/{org}/teams/{team_slug}/projects",
        "GET /orgs/{org}/teams/{team_slug}/repos",
        "GET /orgs/{org}/teams/{team_slug}/teams",
        "GET /projects/columns/{column_id}/cards",
        "GET /projects/{project_id}/collaborators",
        "GET /projects/{project_id}/columns",
        "GET /repos/{owner}/{repo}/actions/artifacts",
        "GET /repos/{owner}/{repo}/actions/caches",
        "GET /repos/{owner}/{repo}/actions/organization-secrets",
        "GET /repos/{owner}/{repo}/actions/organization-variables",
        "GET /repos/{owner}/{repo}/actions/runners",
        "GET /repos/{owner}/{repo}/actions/runs",
        "GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
        "GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs",
        "GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
        "GET /repos/{owner}/{repo}/actions/secrets",
        "GET /repos/{owner}/{repo}/actions/variables",
        "GET /repos/{owner}/{repo}/actions/workflows",
        "GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
        "GET /repos/{owner}/{repo}/activity",
        "GET /repos/{owner}/{repo}/assignees",
        "GET /repos/{owner}/{repo}/branches",
        "GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",
        "GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",
        "GET /repos/{owner}/{repo}/code-scanning/alerts",
        "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
        "GET /repos/{owner}/{repo}/code-scanning/analyses",
        "GET /repos/{owner}/{repo}/codespaces",
        "GET /repos/{owner}/{repo}/codespaces/devcontainers",
        "GET /repos/{owner}/{repo}/codespaces/secrets",
        "GET /repos/{owner}/{repo}/collaborators",
        "GET /repos/{owner}/{repo}/comments",
        "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",
        "GET /repos/{owner}/{repo}/commits",
        "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments",
        "GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",
        "GET /repos/{owner}/{repo}/commits/{ref}/check-runs",
        "GET /repos/{owner}/{repo}/commits/{ref}/check-suites",
        "GET /repos/{owner}/{repo}/commits/{ref}/status",
        "GET /repos/{owner}/{repo}/commits/{ref}/statuses",
        "GET /repos/{owner}/{repo}/contributors",
        "GET /repos/{owner}/{repo}/dependabot/alerts",
        "GET /repos/{owner}/{repo}/dependabot/secrets",
        "GET /repos/{owner}/{repo}/deployments",
        "GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses",
        "GET /repos/{owner}/{repo}/environments",
        "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies",
        "GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps",
        "GET /repos/{owner}/{repo}/environments/{environment_name}/secrets",
        "GET /repos/{owner}/{repo}/environments/{environment_name}/variables",
        "GET /repos/{owner}/{repo}/events",
        "GET /repos/{owner}/{repo}/forks",
        "GET /repos/{owner}/{repo}/hooks",
        "GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
        "GET /repos/{owner}/{repo}/invitations",
        "GET /repos/{owner}/{repo}/issues",
        "GET /repos/{owner}/{repo}/issues/comments",
        "GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",
        "GET /repos/{owner}/{repo}/issues/events",
        "GET /repos/{owner}/{repo}/issues/{issue_number}/comments",
        "GET /repos/{owner}/{repo}/issues/{issue_number}/events",
        "GET /repos/{owner}/{repo}/issues/{issue_number}/labels",
        "GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",
        "GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",
        "GET /repos/{owner}/{repo}/keys",
        "GET /repos/{owner}/{repo}/labels",
        "GET /repos/{owner}/{repo}/milestones",
        "GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels",
        "GET /repos/{owner}/{repo}/notifications",
        "GET /repos/{owner}/{repo}/pages/builds",
        "GET /repos/{owner}/{repo}/projects",
        "GET /repos/{owner}/{repo}/pulls",
        "GET /repos/{owner}/{repo}/pulls/comments",
        "GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
        "GET /repos/{owner}/{repo}/pulls/{pull_number}/comments",
        "GET /repos/{owner}/{repo}/pulls/{pull_number}/commits",
        "GET /repos/{owner}/{repo}/pulls/{pull_number}/files",
        "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews",
        "GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",
        "GET /repos/{owner}/{repo}/releases",
        "GET /repos/{owner}/{repo}/releases/{release_id}/assets",
        "GET /repos/{owner}/{repo}/releases/{release_id}/reactions",
        "GET /repos/{owner}/{repo}/rules/branches/{branch}",
        "GET /repos/{owner}/{repo}/rulesets",
        "GET /repos/{owner}/{repo}/rulesets/rule-suites",
        "GET /repos/{owner}/{repo}/secret-scanning/alerts",
        "GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations",
        "GET /repos/{owner}/{repo}/security-advisories",
        "GET /repos/{owner}/{repo}/stargazers",
        "GET /repos/{owner}/{repo}/subscribers",
        "GET /repos/{owner}/{repo}/tags",
        "GET /repos/{owner}/{repo}/teams",
        "GET /repos/{owner}/{repo}/topics",
        "GET /repositories",
        "GET /search/code",
        "GET /search/commits",
        "GET /search/issues",
        "GET /search/labels",
        "GET /search/repositories",
        "GET /search/topics",
        "GET /search/users",
        "GET /teams/{team_id}/discussions",
        "GET /teams/{team_id}/discussions/{discussion_number}/comments",
        "GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions",
        "GET /teams/{team_id}/discussions/{discussion_number}/reactions",
        "GET /teams/{team_id}/invitations",
        "GET /teams/{team_id}/members",
        "GET /teams/{team_id}/projects",
        "GET /teams/{team_id}/repos",
        "GET /teams/{team_id}/teams",
        "GET /user/blocks",
        "GET /user/codespaces",
        "GET /user/codespaces/secrets",
        "GET /user/emails",
        "GET /user/followers",
        "GET /user/following",
        "GET /user/gpg_keys",
        "GET /user/installations",
        "GET /user/installations/{installation_id}/repositories",
        "GET /user/issues",
        "GET /user/keys",
        "GET /user/marketplace_purchases",
        "GET /user/marketplace_purchases/stubbed",
        "GET /user/memberships/orgs",
        "GET /user/migrations",
        "GET /user/migrations/{migration_id}/repositories",
        "GET /user/orgs",
        "GET /user/packages",
        "GET /user/packages/{package_type}/{package_name}/versions",
        "GET /user/public_emails",
        "GET /user/repos",
        "GET /user/repository_invitations",
        "GET /user/social_accounts",
        "GET /user/ssh_signing_keys",
        "GET /user/starred",
        "GET /user/subscriptions",
        "GET /user/teams",
        "GET /users",
        "GET /users/{username}/events",
        "GET /users/{username}/events/orgs/{org}",
        "GET /users/{username}/events/public",
        "GET /users/{username}/followers",
        "GET /users/{username}/following",
        "GET /users/{username}/gists",
        "GET /users/{username}/gpg_keys",
        "GET /users/{username}/keys",
        "GET /users/{username}/orgs",
        "GET /users/{username}/packages",
        "GET /users/{username}/projects",
        "GET /users/{username}/received_events",
        "GET /users/{username}/received_events/public",
        "GET /users/{username}/repos",
        "GET /users/{username}/social_accounts",
        "GET /users/{username}/ssh_signing_keys",
        "GET /users/{username}/starred",
        "GET /users/{username}/subscriptions",
      ];
      function isPaginatingEndpoint(e) {
        if (typeof e === "string") {
          return A.includes(e);
        } else {
          return false;
        }
      }
      function paginateRest(e) {
        return { paginate: Object.assign(paginate.bind(null, e), { iterator: iterator.bind(null, e) }) };
      }
      paginateRest.VERSION = i;
      0 && 0;
    },
    6966: (e) => {
      "use strict";
      var t = Object.defineProperty;
      var r = Object.getOwnPropertyDescriptor;
      var s = Object.getOwnPropertyNames;
      var n = Object.prototype.hasOwnProperty;
      var __export = (e, r) => {
        for (var s in r) t(e, s, { get: r[s], enumerable: true });
      };
      var __copyProps = (e, o, i, a) => {
        if ((o && typeof o === "object") || typeof o === "function") {
          for (let A of s(o)) if (!n.call(e, A) && A !== i) t(e, A, { get: () => o[A], enumerable: !(a = r(o, A)) || a.enumerable });
        }
        return e;
      };
      var __toCommonJS = (e) => __copyProps(t({}, "__esModule", { value: true }), e);
      var o = {};
      __export(o, { requestLog: () => requestLog });
      e.exports = __toCommonJS(o);
      var i = "4.0.1";
      function requestLog(e) {
        e.hook.wrap("request", (t, r) => {
          e.log.debug("request", r);
          const s = Date.now();
          const n = e.request.endpoint.parse(r);
          const o = n.url.replace(r.baseUrl, "");
          return t(r)
            .then((t) => {
              e.log.info(`${n.method} ${o} - ${t.status} in ${Date.now() - s}ms`);
              return t;
            })
            .catch((t) => {
              e.log.info(`${n.method} ${o} - ${t.status} in ${Date.now() - s}ms`);
              throw t;
            });
        });
      }
      requestLog.VERSION = i;
      0 && 0;
    },
    84935: (e) => {
      "use strict";
      var t = Object.defineProperty;
      var r = Object.getOwnPropertyDescriptor;
      var s = Object.getOwnPropertyNames;
      var n = Object.prototype.hasOwnProperty;
      var __export = (e, r) => {
        for (var s in r) t(e, s, { get: r[s], enumerable: true });
      };
      var __copyProps = (e, o, i, a) => {
        if ((o && typeof o === "object") || typeof o === "function") {
          for (let A of s(o)) if (!n.call(e, A) && A !== i) t(e, A, { get: () => o[A], enumerable: !(a = r(o, A)) || a.enumerable });
        }
        return e;
      };
      var __toCommonJS = (e) => __copyProps(t({}, "__esModule", { value: true }), e);
      var o = {};
      __export(o, { legacyRestEndpointMethods: () => legacyRestEndpointMethods, restEndpointMethods: () => restEndpointMethods });
      e.exports = __toCommonJS(o);
      var i = "13.2.2";
      var a = {
        actions: {
          addCustomLabelsToSelfHostedRunnerForOrg: ["POST /orgs/{org}/actions/runners/{runner_id}/labels"],
          addCustomLabelsToSelfHostedRunnerForRepo: ["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
          addSelectedRepoToOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],
          addSelectedRepoToOrgVariable: ["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],
          approveWorkflowRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],
          cancelWorkflowRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],
          createEnvironmentVariable: ["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],
          createOrUpdateEnvironmentSecret: ["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],
          createOrUpdateOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}"],
          createOrUpdateRepoSecret: ["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
          createOrgVariable: ["POST /orgs/{org}/actions/variables"],
          createRegistrationTokenForOrg: ["POST /orgs/{org}/actions/runners/registration-token"],
          createRegistrationTokenForRepo: ["POST /repos/{owner}/{repo}/actions/runners/registration-token"],
          createRemoveTokenForOrg: ["POST /orgs/{org}/actions/runners/remove-token"],
          createRemoveTokenForRepo: ["POST /repos/{owner}/{repo}/actions/runners/remove-token"],
          createRepoVariable: ["POST /repos/{owner}/{repo}/actions/variables"],
          createWorkflowDispatch: ["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],
          deleteActionsCacheById: ["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],
          deleteActionsCacheByKey: ["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],
          deleteArtifact: ["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],
          deleteEnvironmentSecret: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],
          deleteEnvironmentVariable: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],
          deleteOrgSecret: ["DELETE /orgs/{org}/actions/secrets/{secret_name}"],
          deleteOrgVariable: ["DELETE /orgs/{org}/actions/variables/{name}"],
          deleteRepoSecret: ["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
          deleteRepoVariable: ["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],
          deleteSelfHostedRunnerFromOrg: ["DELETE /orgs/{org}/actions/runners/{runner_id}"],
          deleteSelfHostedRunnerFromRepo: ["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],
          deleteWorkflowRun: ["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],
          deleteWorkflowRunLogs: ["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],
          disableSelectedRepositoryGithubActionsOrganization: ["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],
          disableWorkflow: ["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],
          downloadArtifact: ["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],
          downloadJobLogsForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],
          downloadWorkflowRunAttemptLogs: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],
          downloadWorkflowRunLogs: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],
          enableSelectedRepositoryGithubActionsOrganization: ["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],
          enableWorkflow: ["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],
          forceCancelWorkflowRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],
          generateRunnerJitconfigForOrg: ["POST /orgs/{org}/actions/runners/generate-jitconfig"],
          generateRunnerJitconfigForRepo: ["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],
          getActionsCacheList: ["GET /repos/{owner}/{repo}/actions/caches"],
          getActionsCacheUsage: ["GET /repos/{owner}/{repo}/actions/cache/usage"],
          getActionsCacheUsageByRepoForOrg: ["GET /orgs/{org}/actions/cache/usage-by-repository"],
          getActionsCacheUsageForOrg: ["GET /orgs/{org}/actions/cache/usage"],
          getAllowedActionsOrganization: ["GET /orgs/{org}/actions/permissions/selected-actions"],
          getAllowedActionsRepository: ["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],
          getArtifact: ["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],
          getCustomOidcSubClaimForRepo: ["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],
          getEnvironmentPublicKey: ["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],
          getEnvironmentSecret: ["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],
          getEnvironmentVariable: ["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],
          getGithubActionsDefaultWorkflowPermissionsOrganization: ["GET /orgs/{org}/actions/permissions/workflow"],
          getGithubActionsDefaultWorkflowPermissionsRepository: ["GET /repos/{owner}/{repo}/actions/permissions/workflow"],
          getGithubActionsPermissionsOrganization: ["GET /orgs/{org}/actions/permissions"],
          getGithubActionsPermissionsRepository: ["GET /repos/{owner}/{repo}/actions/permissions"],
          getJobForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],
          getOrgPublicKey: ["GET /orgs/{org}/actions/secrets/public-key"],
          getOrgSecret: ["GET /orgs/{org}/actions/secrets/{secret_name}"],
          getOrgVariable: ["GET /orgs/{org}/actions/variables/{name}"],
          getPendingDeploymentsForRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],
          getRepoPermissions: ["GET /repos/{owner}/{repo}/actions/permissions", {}, { renamed: ["actions", "getGithubActionsPermissionsRepository"] }],
          getRepoPublicKey: ["GET /repos/{owner}/{repo}/actions/secrets/public-key"],
          getRepoSecret: ["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],
          getRepoVariable: ["GET /repos/{owner}/{repo}/actions/variables/{name}"],
          getReviewsForRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],
          getSelfHostedRunnerForOrg: ["GET /orgs/{org}/actions/runners/{runner_id}"],
          getSelfHostedRunnerForRepo: ["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],
          getWorkflow: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],
          getWorkflowAccessToRepository: ["GET /repos/{owner}/{repo}/actions/permissions/access"],
          getWorkflowRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],
          getWorkflowRunAttempt: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],
          getWorkflowRunUsage: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],
          getWorkflowUsage: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],
          listArtifactsForRepo: ["GET /repos/{owner}/{repo}/actions/artifacts"],
          listEnvironmentSecrets: ["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],
          listEnvironmentVariables: ["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],
          listJobsForWorkflowRun: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],
          listJobsForWorkflowRunAttempt: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],
          listLabelsForSelfHostedRunnerForOrg: ["GET /orgs/{org}/actions/runners/{runner_id}/labels"],
          listLabelsForSelfHostedRunnerForRepo: ["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
          listOrgSecrets: ["GET /orgs/{org}/actions/secrets"],
          listOrgVariables: ["GET /orgs/{org}/actions/variables"],
          listRepoOrganizationSecrets: ["GET /repos/{owner}/{repo}/actions/organization-secrets"],
          listRepoOrganizationVariables: ["GET /repos/{owner}/{repo}/actions/organization-variables"],
          listRepoSecrets: ["GET /repos/{owner}/{repo}/actions/secrets"],
          listRepoVariables: ["GET /repos/{owner}/{repo}/actions/variables"],
          listRepoWorkflows: ["GET /repos/{owner}/{repo}/actions/workflows"],
          listRunnerApplicationsForOrg: ["GET /orgs/{org}/actions/runners/downloads"],
          listRunnerApplicationsForRepo: ["GET /repos/{owner}/{repo}/actions/runners/downloads"],
          listSelectedReposForOrgSecret: ["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],
          listSelectedReposForOrgVariable: ["GET /orgs/{org}/actions/variables/{name}/repositories"],
          listSelectedRepositoriesEnabledGithubActionsOrganization: ["GET /orgs/{org}/actions/permissions/repositories"],
          listSelfHostedRunnersForOrg: ["GET /orgs/{org}/actions/runners"],
          listSelfHostedRunnersForRepo: ["GET /repos/{owner}/{repo}/actions/runners"],
          listWorkflowRunArtifacts: ["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],
          listWorkflowRuns: ["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],
          listWorkflowRunsForRepo: ["GET /repos/{owner}/{repo}/actions/runs"],
          reRunJobForWorkflowRun: ["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],
          reRunWorkflow: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],
          reRunWorkflowFailedJobs: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],
          removeAllCustomLabelsFromSelfHostedRunnerForOrg: ["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],
          removeAllCustomLabelsFromSelfHostedRunnerForRepo: ["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
          removeCustomLabelFromSelfHostedRunnerForOrg: ["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],
          removeCustomLabelFromSelfHostedRunnerForRepo: ["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],
          removeSelectedRepoFromOrgSecret: ["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],
          removeSelectedRepoFromOrgVariable: ["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],
          reviewCustomGatesForRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],
          reviewPendingDeploymentsForRun: ["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],
          setAllowedActionsOrganization: ["PUT /orgs/{org}/actions/permissions/selected-actions"],
          setAllowedActionsRepository: ["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],
          setCustomLabelsForSelfHostedRunnerForOrg: ["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],
          setCustomLabelsForSelfHostedRunnerForRepo: ["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],
          setCustomOidcSubClaimForRepo: ["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],
          setGithubActionsDefaultWorkflowPermissionsOrganization: ["PUT /orgs/{org}/actions/permissions/workflow"],
          setGithubActionsDefaultWorkflowPermissionsRepository: ["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],
          setGithubActionsPermissionsOrganization: ["PUT /orgs/{org}/actions/permissions"],
          setGithubActionsPermissionsRepository: ["PUT /repos/{owner}/{repo}/actions/permissions"],
          setSelectedReposForOrgSecret: ["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],
          setSelectedReposForOrgVariable: ["PUT /orgs/{org}/actions/variables/{name}/repositories"],
          setSelectedRepositoriesEnabledGithubActionsOrganization: ["PUT /orgs/{org}/actions/permissions/repositories"],
          setWorkflowAccessToRepository: ["PUT /repos/{owner}/{repo}/actions/permissions/access"],
          updateEnvironmentVariable: ["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],
          updateOrgVariable: ["PATCH /orgs/{org}/actions/variables/{name}"],
          updateRepoVariable: ["PATCH /repos/{owner}/{repo}/actions/variables/{name}"],
        },
        activity: {
          checkRepoIsStarredByAuthenticatedUser: ["GET /user/starred/{owner}/{repo}"],
          deleteRepoSubscription: ["DELETE /repos/{owner}/{repo}/subscription"],
          deleteThreadSubscription: ["DELETE /notifications/threads/{thread_id}/subscription"],
          getFeeds: ["GET /feeds"],
          getRepoSubscription: ["GET /repos/{owner}/{repo}/subscription"],
          getThread: ["GET /notifications/threads/{thread_id}"],
          getThreadSubscriptionForAuthenticatedUser: ["GET /notifications/threads/{thread_id}/subscription"],
          listEventsForAuthenticatedUser: ["GET /users/{username}/events"],
          listNotificationsForAuthenticatedUser: ["GET /notifications"],
          listOrgEventsForAuthenticatedUser: ["GET /users/{username}/events/orgs/{org}"],
          listPublicEvents: ["GET /events"],
          listPublicEventsForRepoNetwork: ["GET /networks/{owner}/{repo}/events"],
          listPublicEventsForUser: ["GET /users/{username}/events/public"],
          listPublicOrgEvents: ["GET /orgs/{org}/events"],
          listReceivedEventsForUser: ["GET /users/{username}/received_events"],
          listReceivedPublicEventsForUser: ["GET /users/{username}/received_events/public"],
          listRepoEvents: ["GET /repos/{owner}/{repo}/events"],
          listRepoNotificationsForAuthenticatedUser: ["GET /repos/{owner}/{repo}/notifications"],
          listReposStarredByAuthenticatedUser: ["GET /user/starred"],
          listReposStarredByUser: ["GET /users/{username}/starred"],
          listReposWatchedByUser: ["GET /users/{username}/subscriptions"],
          listStargazersForRepo: ["GET /repos/{owner}/{repo}/stargazers"],
          listWatchedReposForAuthenticatedUser: ["GET /user/subscriptions"],
          listWatchersForRepo: ["GET /repos/{owner}/{repo}/subscribers"],
          markNotificationsAsRead: ["PUT /notifications"],
          markRepoNotificationsAsRead: ["PUT /repos/{owner}/{repo}/notifications"],
          markThreadAsDone: ["DELETE /notifications/threads/{thread_id}"],
          markThreadAsRead: ["PATCH /notifications/threads/{thread_id}"],
          setRepoSubscription: ["PUT /repos/{owner}/{repo}/subscription"],
          setThreadSubscription: ["PUT /notifications/threads/{thread_id}/subscription"],
          starRepoForAuthenticatedUser: ["PUT /user/starred/{owner}/{repo}"],
          unstarRepoForAuthenticatedUser: ["DELETE /user/starred/{owner}/{repo}"],
        },
        apps: {
          addRepoToInstallation: [
            "PUT /user/installations/{installation_id}/repositories/{repository_id}",
            {},
            { renamed: ["apps", "addRepoToInstallationForAuthenticatedUser"] },
          ],
          addRepoToInstallationForAuthenticatedUser: ["PUT /user/installations/{installation_id}/repositories/{repository_id}"],
          checkToken: ["POST /applications/{client_id}/token"],
          createFromManifest: ["POST /app-manifests/{code}/conversions"],
          createInstallationAccessToken: ["POST /app/installations/{installation_id}/access_tokens"],
          deleteAuthorization: ["DELETE /applications/{client_id}/grant"],
          deleteInstallation: ["DELETE /app/installations/{installation_id}"],
          deleteToken: ["DELETE /applications/{client_id}/token"],
          getAuthenticated: ["GET /app"],
          getBySlug: ["GET /apps/{app_slug}"],
          getInstallation: ["GET /app/installations/{installation_id}"],
          getOrgInstallation: ["GET /orgs/{org}/installation"],
          getRepoInstallation: ["GET /repos/{owner}/{repo}/installation"],
          getSubscriptionPlanForAccount: ["GET /marketplace_listing/accounts/{account_id}"],
          getSubscriptionPlanForAccountStubbed: ["GET /marketplace_listing/stubbed/accounts/{account_id}"],
          getUserInstallation: ["GET /users/{username}/installation"],
          getWebhookConfigForApp: ["GET /app/hook/config"],
          getWebhookDelivery: ["GET /app/hook/deliveries/{delivery_id}"],
          listAccountsForPlan: ["GET /marketplace_listing/plans/{plan_id}/accounts"],
          listAccountsForPlanStubbed: ["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],
          listInstallationReposForAuthenticatedUser: ["GET /user/installations/{installation_id}/repositories"],
          listInstallationRequestsForAuthenticatedApp: ["GET /app/installation-requests"],
          listInstallations: ["GET /app/installations"],
          listInstallationsForAuthenticatedUser: ["GET /user/installations"],
          listPlans: ["GET /marketplace_listing/plans"],
          listPlansStubbed: ["GET /marketplace_listing/stubbed/plans"],
          listReposAccessibleToInstallation: ["GET /installation/repositories"],
          listSubscriptionsForAuthenticatedUser: ["GET /user/marketplace_purchases"],
          listSubscriptionsForAuthenticatedUserStubbed: ["GET /user/marketplace_purchases/stubbed"],
          listWebhookDeliveries: ["GET /app/hook/deliveries"],
          redeliverWebhookDelivery: ["POST /app/hook/deliveries/{delivery_id}/attempts"],
          removeRepoFromInstallation: [
            "DELETE /user/installations/{installation_id}/repositories/{repository_id}",
            {},
            { renamed: ["apps", "removeRepoFromInstallationForAuthenticatedUser"] },
          ],
          removeRepoFromInstallationForAuthenticatedUser: ["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],
          resetToken: ["PATCH /applications/{client_id}/token"],
          revokeInstallationAccessToken: ["DELETE /installation/token"],
          scopeToken: ["POST /applications/{client_id}/token/scoped"],
          suspendInstallation: ["PUT /app/installations/{installation_id}/suspended"],
          unsuspendInstallation: ["DELETE /app/installations/{installation_id}/suspended"],
          updateWebhookConfigForApp: ["PATCH /app/hook/config"],
        },
        billing: {
          getGithubActionsBillingOrg: ["GET /orgs/{org}/settings/billing/actions"],
          getGithubActionsBillingUser: ["GET /users/{username}/settings/billing/actions"],
          getGithubPackagesBillingOrg: ["GET /orgs/{org}/settings/billing/packages"],
          getGithubPackagesBillingUser: ["GET /users/{username}/settings/billing/packages"],
          getSharedStorageBillingOrg: ["GET /orgs/{org}/settings/billing/shared-storage"],
          getSharedStorageBillingUser: ["GET /users/{username}/settings/billing/shared-storage"],
        },
        checks: {
          create: ["POST /repos/{owner}/{repo}/check-runs"],
          createSuite: ["POST /repos/{owner}/{repo}/check-suites"],
          get: ["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],
          getSuite: ["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],
          listAnnotations: ["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],
          listForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],
          listForSuite: ["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],
          listSuitesForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],
          rerequestRun: ["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],
          rerequestSuite: ["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],
          setSuitesPreferences: ["PATCH /repos/{owner}/{repo}/check-suites/preferences"],
          update: ["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"],
        },
        codeScanning: {
          deleteAnalysis: ["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],
          getAlert: ["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}", {}, { renamedParameters: { alert_id: "alert_number" } }],
          getAnalysis: ["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],
          getCodeqlDatabase: ["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],
          getDefaultSetup: ["GET /repos/{owner}/{repo}/code-scanning/default-setup"],
          getSarif: ["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],
          listAlertInstances: ["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],
          listAlertsForOrg: ["GET /orgs/{org}/code-scanning/alerts"],
          listAlertsForRepo: ["GET /repos/{owner}/{repo}/code-scanning/alerts"],
          listAlertsInstances: [
            "GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",
            {},
            { renamed: ["codeScanning", "listAlertInstances"] },
          ],
          listCodeqlDatabases: ["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],
          listRecentAnalyses: ["GET /repos/{owner}/{repo}/code-scanning/analyses"],
          updateAlert: ["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],
          updateDefaultSetup: ["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],
          uploadSarif: ["POST /repos/{owner}/{repo}/code-scanning/sarifs"],
        },
        codesOfConduct: { getAllCodesOfConduct: ["GET /codes_of_conduct"], getConductCode: ["GET /codes_of_conduct/{key}"] },
        codespaces: {
          addRepositoryForSecretForAuthenticatedUser: ["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
          addSelectedRepoToOrgSecret: ["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
          checkPermissionsForDevcontainer: ["GET /repos/{owner}/{repo}/codespaces/permissions_check"],
          codespaceMachinesForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}/machines"],
          createForAuthenticatedUser: ["POST /user/codespaces"],
          createOrUpdateOrgSecret: ["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],
          createOrUpdateRepoSecret: ["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],
          createOrUpdateSecretForAuthenticatedUser: ["PUT /user/codespaces/secrets/{secret_name}"],
          createWithPrForAuthenticatedUser: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],
          createWithRepoForAuthenticatedUser: ["POST /repos/{owner}/{repo}/codespaces"],
          deleteForAuthenticatedUser: ["DELETE /user/codespaces/{codespace_name}"],
          deleteFromOrganization: ["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],
          deleteOrgSecret: ["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],
          deleteRepoSecret: ["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],
          deleteSecretForAuthenticatedUser: ["DELETE /user/codespaces/secrets/{secret_name}"],
          exportForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/exports"],
          getCodespacesForUserInOrg: ["GET /orgs/{org}/members/{username}/codespaces"],
          getExportDetailsForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}/exports/{export_id}"],
          getForAuthenticatedUser: ["GET /user/codespaces/{codespace_name}"],
          getOrgPublicKey: ["GET /orgs/{org}/codespaces/secrets/public-key"],
          getOrgSecret: ["GET /orgs/{org}/codespaces/secrets/{secret_name}"],
          getPublicKeyForAuthenticatedUser: ["GET /user/codespaces/secrets/public-key"],
          getRepoPublicKey: ["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],
          getRepoSecret: ["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],
          getSecretForAuthenticatedUser: ["GET /user/codespaces/secrets/{secret_name}"],
          listDevcontainersInRepositoryForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces/devcontainers"],
          listForAuthenticatedUser: ["GET /user/codespaces"],
          listInOrganization: ["GET /orgs/{org}/codespaces", {}, { renamedParameters: { org_id: "org" } }],
          listInRepositoryForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces"],
          listOrgSecrets: ["GET /orgs/{org}/codespaces/secrets"],
          listRepoSecrets: ["GET /repos/{owner}/{repo}/codespaces/secrets"],
          listRepositoriesForSecretForAuthenticatedUser: ["GET /user/codespaces/secrets/{secret_name}/repositories"],
          listSecretsForAuthenticatedUser: ["GET /user/codespaces/secrets"],
          listSelectedReposForOrgSecret: ["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],
          preFlightWithRepoForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces/new"],
          publishForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/publish"],
          removeRepositoryForSecretForAuthenticatedUser: ["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
          removeSelectedRepoFromOrgSecret: ["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],
          repoMachinesForAuthenticatedUser: ["GET /repos/{owner}/{repo}/codespaces/machines"],
          setRepositoriesForSecretForAuthenticatedUser: ["PUT /user/codespaces/secrets/{secret_name}/repositories"],
          setSelectedReposForOrgSecret: ["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],
          startForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/start"],
          stopForAuthenticatedUser: ["POST /user/codespaces/{codespace_name}/stop"],
          stopInOrganization: ["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],
          updateForAuthenticatedUser: ["PATCH /user/codespaces/{codespace_name}"],
        },
        copilot: {
          addCopilotSeatsForTeams: ["POST /orgs/{org}/copilot/billing/selected_teams"],
          addCopilotSeatsForUsers: ["POST /orgs/{org}/copilot/billing/selected_users"],
          cancelCopilotSeatAssignmentForTeams: ["DELETE /orgs/{org}/copilot/billing/selected_teams"],
          cancelCopilotSeatAssignmentForUsers: ["DELETE /orgs/{org}/copilot/billing/selected_users"],
          getCopilotOrganizationDetails: ["GET /orgs/{org}/copilot/billing"],
          getCopilotSeatDetailsForUser: ["GET /orgs/{org}/members/{username}/copilot"],
          listCopilotSeats: ["GET /orgs/{org}/copilot/billing/seats"],
          usageMetricsForEnterprise: ["GET /enterprises/{enterprise}/copilot/usage"],
          usageMetricsForOrg: ["GET /orgs/{org}/copilot/usage"],
          usageMetricsForTeam: ["GET /orgs/{org}/team/{team_slug}/copilot/usage"],
        },
        dependabot: {
          addSelectedRepoToOrgSecret: ["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],
          createOrUpdateOrgSecret: ["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],
          createOrUpdateRepoSecret: ["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],
          deleteOrgSecret: ["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],
          deleteRepoSecret: ["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],
          getAlert: ["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],
          getOrgPublicKey: ["GET /orgs/{org}/dependabot/secrets/public-key"],
          getOrgSecret: ["GET /orgs/{org}/dependabot/secrets/{secret_name}"],
          getRepoPublicKey: ["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],
          getRepoSecret: ["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],
          listAlertsForEnterprise: ["GET /enterprises/{enterprise}/dependabot/alerts"],
          listAlertsForOrg: ["GET /orgs/{org}/dependabot/alerts"],
          listAlertsForRepo: ["GET /repos/{owner}/{repo}/dependabot/alerts"],
          listOrgSecrets: ["GET /orgs/{org}/dependabot/secrets"],
          listRepoSecrets: ["GET /repos/{owner}/{repo}/dependabot/secrets"],
          listSelectedReposForOrgSecret: ["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],
          removeSelectedRepoFromOrgSecret: ["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],
          setSelectedReposForOrgSecret: ["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],
          updateAlert: ["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],
        },
        dependencyGraph: {
          createRepositorySnapshot: ["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],
          diffRange: ["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],
          exportSbom: ["GET /repos/{owner}/{repo}/dependency-graph/sbom"],
        },
        emojis: { get: ["GET /emojis"] },
        gists: {
          checkIsStarred: ["GET /gists/{gist_id}/star"],
          create: ["POST /gists"],
          createComment: ["POST /gists/{gist_id}/comments"],
          delete: ["DELETE /gists/{gist_id}"],
          deleteComment: ["DELETE /gists/{gist_id}/comments/{comment_id}"],
          fork: ["POST /gists/{gist_id}/forks"],
          get: ["GET /gists/{gist_id}"],
          getComment: ["GET /gists/{gist_id}/comments/{comment_id}"],
          getRevision: ["GET /gists/{gist_id}/{sha}"],
          list: ["GET /gists"],
          listComments: ["GET /gists/{gist_id}/comments"],
          listCommits: ["GET /gists/{gist_id}/commits"],
          listForUser: ["GET /users/{username}/gists"],
          listForks: ["GET /gists/{gist_id}/forks"],
          listPublic: ["GET /gists/public"],
          listStarred: ["GET /gists/starred"],
          star: ["PUT /gists/{gist_id}/star"],
          unstar: ["DELETE /gists/{gist_id}/star"],
          update: ["PATCH /gists/{gist_id}"],
          updateComment: ["PATCH /gists/{gist_id}/comments/{comment_id}"],
        },
        git: {
          createBlob: ["POST /repos/{owner}/{repo}/git/blobs"],
          createCommit: ["POST /repos/{owner}/{repo}/git/commits"],
          createRef: ["POST /repos/{owner}/{repo}/git/refs"],
          createTag: ["POST /repos/{owner}/{repo}/git/tags"],
          createTree: ["POST /repos/{owner}/{repo}/git/trees"],
          deleteRef: ["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],
          getBlob: ["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],
          getCommit: ["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],
          getRef: ["GET /repos/{owner}/{repo}/git/ref/{ref}"],
          getTag: ["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],
          getTree: ["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],
          listMatchingRefs: ["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],
          updateRef: ["PATCH /repos/{owner}/{repo}/git/refs/{ref}"],
        },
        gitignore: { getAllTemplates: ["GET /gitignore/templates"], getTemplate: ["GET /gitignore/templates/{name}"] },
        interactions: {
          getRestrictionsForAuthenticatedUser: ["GET /user/interaction-limits"],
          getRestrictionsForOrg: ["GET /orgs/{org}/interaction-limits"],
          getRestrictionsForRepo: ["GET /repos/{owner}/{repo}/interaction-limits"],
          getRestrictionsForYourPublicRepos: ["GET /user/interaction-limits", {}, { renamed: ["interactions", "getRestrictionsForAuthenticatedUser"] }],
          removeRestrictionsForAuthenticatedUser: ["DELETE /user/interaction-limits"],
          removeRestrictionsForOrg: ["DELETE /orgs/{org}/interaction-limits"],
          removeRestrictionsForRepo: ["DELETE /repos/{owner}/{repo}/interaction-limits"],
          removeRestrictionsForYourPublicRepos: [
            "DELETE /user/interaction-limits",
            {},
            { renamed: ["interactions", "removeRestrictionsForAuthenticatedUser"] },
          ],
          setRestrictionsForAuthenticatedUser: ["PUT /user/interaction-limits"],
          setRestrictionsForOrg: ["PUT /orgs/{org}/interaction-limits"],
          setRestrictionsForRepo: ["PUT /repos/{owner}/{repo}/interaction-limits"],
          setRestrictionsForYourPublicRepos: ["PUT /user/interaction-limits", {}, { renamed: ["interactions", "setRestrictionsForAuthenticatedUser"] }],
        },
        issues: {
          addAssignees: ["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],
          addLabels: ["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],
          checkUserCanBeAssigned: ["GET /repos/{owner}/{repo}/assignees/{assignee}"],
          checkUserCanBeAssignedToIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],
          create: ["POST /repos/{owner}/{repo}/issues"],
          createComment: ["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],
          createLabel: ["POST /repos/{owner}/{repo}/labels"],
          createMilestone: ["POST /repos/{owner}/{repo}/milestones"],
          deleteComment: ["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],
          deleteLabel: ["DELETE /repos/{owner}/{repo}/labels/{name}"],
          deleteMilestone: ["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],
          get: ["GET /repos/{owner}/{repo}/issues/{issue_number}"],
          getComment: ["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],
          getEvent: ["GET /repos/{owner}/{repo}/issues/events/{event_id}"],
          getLabel: ["GET /repos/{owner}/{repo}/labels/{name}"],
          getMilestone: ["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],
          list: ["GET /issues"],
          listAssignees: ["GET /repos/{owner}/{repo}/assignees"],
          listComments: ["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],
          listCommentsForRepo: ["GET /repos/{owner}/{repo}/issues/comments"],
          listEvents: ["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],
          listEventsForRepo: ["GET /repos/{owner}/{repo}/issues/events"],
          listEventsForTimeline: ["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],
          listForAuthenticatedUser: ["GET /user/issues"],
          listForOrg: ["GET /orgs/{org}/issues"],
          listForRepo: ["GET /repos/{owner}/{repo}/issues"],
          listLabelsForMilestone: ["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],
          listLabelsForRepo: ["GET /repos/{owner}/{repo}/labels"],
          listLabelsOnIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],
          listMilestones: ["GET /repos/{owner}/{repo}/milestones"],
          lock: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],
          removeAllLabels: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],
          removeAssignees: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],
          removeLabel: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],
          setLabels: ["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],
          unlock: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],
          update: ["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],
          updateComment: ["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],
          updateLabel: ["PATCH /repos/{owner}/{repo}/labels/{name}"],
          updateMilestone: ["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"],
        },
        licenses: { get: ["GET /licenses/{license}"], getAllCommonlyUsed: ["GET /licenses"], getForRepo: ["GET /repos/{owner}/{repo}/license"] },
        markdown: { render: ["POST /markdown"], renderRaw: ["POST /markdown/raw", { headers: { "content-type": "text/plain; charset=utf-8" } }] },
        meta: { get: ["GET /meta"], getAllVersions: ["GET /versions"], getOctocat: ["GET /octocat"], getZen: ["GET /zen"], root: ["GET /"] },
        migrations: {
          deleteArchiveForAuthenticatedUser: ["DELETE /user/migrations/{migration_id}/archive"],
          deleteArchiveForOrg: ["DELETE /orgs/{org}/migrations/{migration_id}/archive"],
          downloadArchiveForOrg: ["GET /orgs/{org}/migrations/{migration_id}/archive"],
          getArchiveForAuthenticatedUser: ["GET /user/migrations/{migration_id}/archive"],
          getStatusForAuthenticatedUser: ["GET /user/migrations/{migration_id}"],
          getStatusForOrg: ["GET /orgs/{org}/migrations/{migration_id}"],
          listForAuthenticatedUser: ["GET /user/migrations"],
          listForOrg: ["GET /orgs/{org}/migrations"],
          listReposForAuthenticatedUser: ["GET /user/migrations/{migration_id}/repositories"],
          listReposForOrg: ["GET /orgs/{org}/migrations/{migration_id}/repositories"],
          listReposForUser: ["GET /user/migrations/{migration_id}/repositories", {}, { renamed: ["migrations", "listReposForAuthenticatedUser"] }],
          startForAuthenticatedUser: ["POST /user/migrations"],
          startForOrg: ["POST /orgs/{org}/migrations"],
          unlockRepoForAuthenticatedUser: ["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],
          unlockRepoForOrg: ["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"],
        },
        oidc: {
          getOidcCustomSubTemplateForOrg: ["GET /orgs/{org}/actions/oidc/customization/sub"],
          updateOidcCustomSubTemplateForOrg: ["PUT /orgs/{org}/actions/oidc/customization/sub"],
        },
        orgs: {
          addSecurityManagerTeam: ["PUT /orgs/{org}/security-managers/teams/{team_slug}"],
          assignTeamToOrgRole: ["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],
          assignUserToOrgRole: ["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],
          blockUser: ["PUT /orgs/{org}/blocks/{username}"],
          cancelInvitation: ["DELETE /orgs/{org}/invitations/{invitation_id}"],
          checkBlockedUser: ["GET /orgs/{org}/blocks/{username}"],
          checkMembershipForUser: ["GET /orgs/{org}/members/{username}"],
          checkPublicMembershipForUser: ["GET /orgs/{org}/public_members/{username}"],
          convertMemberToOutsideCollaborator: ["PUT /orgs/{org}/outside_collaborators/{username}"],
          createCustomOrganizationRole: ["POST /orgs/{org}/organization-roles"],
          createInvitation: ["POST /orgs/{org}/invitations"],
          createOrUpdateCustomProperties: ["PATCH /orgs/{org}/properties/schema"],
          createOrUpdateCustomPropertiesValuesForRepos: ["PATCH /orgs/{org}/properties/values"],
          createOrUpdateCustomProperty: ["PUT /orgs/{org}/properties/schema/{custom_property_name}"],
          createWebhook: ["POST /orgs/{org}/hooks"],
          delete: ["DELETE /orgs/{org}"],
          deleteCustomOrganizationRole: ["DELETE /orgs/{org}/organization-roles/{role_id}"],
          deleteWebhook: ["DELETE /orgs/{org}/hooks/{hook_id}"],
          enableOrDisableSecurityProductOnAllOrgRepos: ["POST /orgs/{org}/{security_product}/{enablement}"],
          get: ["GET /orgs/{org}"],
          getAllCustomProperties: ["GET /orgs/{org}/properties/schema"],
          getCustomProperty: ["GET /orgs/{org}/properties/schema/{custom_property_name}"],
          getMembershipForAuthenticatedUser: ["GET /user/memberships/orgs/{org}"],
          getMembershipForUser: ["GET /orgs/{org}/memberships/{username}"],
          getOrgRole: ["GET /orgs/{org}/organization-roles/{role_id}"],
          getWebhook: ["GET /orgs/{org}/hooks/{hook_id}"],
          getWebhookConfigForOrg: ["GET /orgs/{org}/hooks/{hook_id}/config"],
          getWebhookDelivery: ["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],
          list: ["GET /organizations"],
          listAppInstallations: ["GET /orgs/{org}/installations"],
          listBlockedUsers: ["GET /orgs/{org}/blocks"],
          listCustomPropertiesValuesForRepos: ["GET /orgs/{org}/properties/values"],
          listFailedInvitations: ["GET /orgs/{org}/failed_invitations"],
          listForAuthenticatedUser: ["GET /user/orgs"],
          listForUser: ["GET /users/{username}/orgs"],
          listInvitationTeams: ["GET /orgs/{org}/invitations/{invitation_id}/teams"],
          listMembers: ["GET /orgs/{org}/members"],
          listMembershipsForAuthenticatedUser: ["GET /user/memberships/orgs"],
          listOrgRoleTeams: ["GET /orgs/{org}/organization-roles/{role_id}/teams"],
          listOrgRoleUsers: ["GET /orgs/{org}/organization-roles/{role_id}/users"],
          listOrgRoles: ["GET /orgs/{org}/organization-roles"],
          listOrganizationFineGrainedPermissions: ["GET /orgs/{org}/organization-fine-grained-permissions"],
          listOutsideCollaborators: ["GET /orgs/{org}/outside_collaborators"],
          listPatGrantRepositories: ["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],
          listPatGrantRequestRepositories: ["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],
          listPatGrantRequests: ["GET /orgs/{org}/personal-access-token-requests"],
          listPatGrants: ["GET /orgs/{org}/personal-access-tokens"],
          listPendingInvitations: ["GET /orgs/{org}/invitations"],
          listPublicMembers: ["GET /orgs/{org}/public_members"],
          listSecurityManagerTeams: ["GET /orgs/{org}/security-managers"],
          listWebhookDeliveries: ["GET /orgs/{org}/hooks/{hook_id}/deliveries"],
          listWebhooks: ["GET /orgs/{org}/hooks"],
          patchCustomOrganizationRole: ["PATCH /orgs/{org}/organization-roles/{role_id}"],
          pingWebhook: ["POST /orgs/{org}/hooks/{hook_id}/pings"],
          redeliverWebhookDelivery: ["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],
          removeCustomProperty: ["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],
          removeMember: ["DELETE /orgs/{org}/members/{username}"],
          removeMembershipForUser: ["DELETE /orgs/{org}/memberships/{username}"],
          removeOutsideCollaborator: ["DELETE /orgs/{org}/outside_collaborators/{username}"],
          removePublicMembershipForAuthenticatedUser: ["DELETE /orgs/{org}/public_members/{username}"],
          removeSecurityManagerTeam: ["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],
          reviewPatGrantRequest: ["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],
          reviewPatGrantRequestsInBulk: ["POST /orgs/{org}/personal-access-token-requests"],
          revokeAllOrgRolesTeam: ["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],
          revokeAllOrgRolesUser: ["DELETE /orgs/{org}/organization-roles/users/{username}"],
          revokeOrgRoleTeam: ["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],
          revokeOrgRoleUser: ["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],
          setMembershipForUser: ["PUT /orgs/{org}/memberships/{username}"],
          setPublicMembershipForAuthenticatedUser: ["PUT /orgs/{org}/public_members/{username}"],
          unblockUser: ["DELETE /orgs/{org}/blocks/{username}"],
          update: ["PATCH /orgs/{org}"],
          updateMembershipForAuthenticatedUser: ["PATCH /user/memberships/orgs/{org}"],
          updatePatAccess: ["POST /orgs/{org}/personal-access-tokens/{pat_id}"],
          updatePatAccesses: ["POST /orgs/{org}/personal-access-tokens"],
          updateWebhook: ["PATCH /orgs/{org}/hooks/{hook_id}"],
          updateWebhookConfigForOrg: ["PATCH /orgs/{org}/hooks/{hook_id}/config"],
        },
        packages: {
          deletePackageForAuthenticatedUser: ["DELETE /user/packages/{package_type}/{package_name}"],
          deletePackageForOrg: ["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],
          deletePackageForUser: ["DELETE /users/{username}/packages/{package_type}/{package_name}"],
          deletePackageVersionForAuthenticatedUser: ["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],
          deletePackageVersionForOrg: ["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
          deletePackageVersionForUser: ["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
          getAllPackageVersionsForAPackageOwnedByAnOrg: [
            "GET /orgs/{org}/packages/{package_type}/{package_name}/versions",
            {},
            { renamed: ["packages", "getAllPackageVersionsForPackageOwnedByOrg"] },
          ],
          getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [
            "GET /user/packages/{package_type}/{package_name}/versions",
            {},
            { renamed: ["packages", "getAllPackageVersionsForPackageOwnedByAuthenticatedUser"] },
          ],
          getAllPackageVersionsForPackageOwnedByAuthenticatedUser: ["GET /user/packages/{package_type}/{package_name}/versions"],
          getAllPackageVersionsForPackageOwnedByOrg: ["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],
          getAllPackageVersionsForPackageOwnedByUser: ["GET /users/{username}/packages/{package_type}/{package_name}/versions"],
          getPackageForAuthenticatedUser: ["GET /user/packages/{package_type}/{package_name}"],
          getPackageForOrganization: ["GET /orgs/{org}/packages/{package_type}/{package_name}"],
          getPackageForUser: ["GET /users/{username}/packages/{package_type}/{package_name}"],
          getPackageVersionForAuthenticatedUser: ["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],
          getPackageVersionForOrganization: ["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
          getPackageVersionForUser: ["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],
          listDockerMigrationConflictingPackagesForAuthenticatedUser: ["GET /user/docker/conflicts"],
          listDockerMigrationConflictingPackagesForOrganization: ["GET /orgs/{org}/docker/conflicts"],
          listDockerMigrationConflictingPackagesForUser: ["GET /users/{username}/docker/conflicts"],
          listPackagesForAuthenticatedUser: ["GET /user/packages"],
          listPackagesForOrganization: ["GET /orgs/{org}/packages"],
          listPackagesForUser: ["GET /users/{username}/packages"],
          restorePackageForAuthenticatedUser: ["POST /user/packages/{package_type}/{package_name}/restore{?token}"],
          restorePackageForOrg: ["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],
          restorePackageForUser: ["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],
          restorePackageVersionForAuthenticatedUser: ["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],
          restorePackageVersionForOrg: ["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],
          restorePackageVersionForUser: ["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],
        },
        projects: {
          addCollaborator: ["PUT /projects/{project_id}/collaborators/{username}"],
          createCard: ["POST /projects/columns/{column_id}/cards"],
          createColumn: ["POST /projects/{project_id}/columns"],
          createForAuthenticatedUser: ["POST /user/projects"],
          createForOrg: ["POST /orgs/{org}/projects"],
          createForRepo: ["POST /repos/{owner}/{repo}/projects"],
          delete: ["DELETE /projects/{project_id}"],
          deleteCard: ["DELETE /projects/columns/cards/{card_id}"],
          deleteColumn: ["DELETE /projects/columns/{column_id}"],
          get: ["GET /projects/{project_id}"],
          getCard: ["GET /projects/columns/cards/{card_id}"],
          getColumn: ["GET /projects/columns/{column_id}"],
          getPermissionForUser: ["GET /projects/{project_id}/collaborators/{username}/permission"],
          listCards: ["GET /projects/columns/{column_id}/cards"],
          listCollaborators: ["GET /projects/{project_id}/collaborators"],
          listColumns: ["GET /projects/{project_id}/columns"],
          listForOrg: ["GET /orgs/{org}/projects"],
          listForRepo: ["GET /repos/{owner}/{repo}/projects"],
          listForUser: ["GET /users/{username}/projects"],
          moveCard: ["POST /projects/columns/cards/{card_id}/moves"],
          moveColumn: ["POST /projects/columns/{column_id}/moves"],
          removeCollaborator: ["DELETE /projects/{project_id}/collaborators/{username}"],
          update: ["PATCH /projects/{project_id}"],
          updateCard: ["PATCH /projects/columns/cards/{card_id}"],
          updateColumn: ["PATCH /projects/columns/{column_id}"],
        },
        pulls: {
          checkIfMerged: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
          create: ["POST /repos/{owner}/{repo}/pulls"],
          createReplyForReviewComment: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],
          createReview: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
          createReviewComment: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],
          deletePendingReview: ["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],
          deleteReviewComment: ["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
          dismissReview: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],
          get: ["GET /repos/{owner}/{repo}/pulls/{pull_number}"],
          getReview: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],
          getReviewComment: ["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
          list: ["GET /repos/{owner}/{repo}/pulls"],
          listCommentsForReview: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],
          listCommits: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],
          listFiles: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],
          listRequestedReviewers: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],
          listReviewComments: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],
          listReviewCommentsForRepo: ["GET /repos/{owner}/{repo}/pulls/comments"],
          listReviews: ["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],
          merge: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],
          removeRequestedReviewers: ["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],
          requestReviewers: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],
          submitReview: ["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],
          update: ["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],
          updateBranch: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],
          updateReview: ["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],
          updateReviewComment: ["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"],
        },
        rateLimit: { get: ["GET /rate_limit"] },
        reactions: {
          createForCommitComment: ["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],
          createForIssue: ["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],
          createForIssueComment: ["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],
          createForPullRequestReviewComment: ["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],
          createForRelease: ["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],
          createForTeamDiscussionCommentInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],
          createForTeamDiscussionInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],
          deleteForCommitComment: ["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],
          deleteForIssue: ["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],
          deleteForIssueComment: ["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],
          deleteForPullRequestComment: ["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],
          deleteForRelease: ["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],
          deleteForTeamDiscussion: ["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],
          deleteForTeamDiscussionComment: [
            "DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",
          ],
          listForCommitComment: ["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],
          listForIssue: ["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],
          listForIssueComment: ["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],
          listForPullRequestReviewComment: ["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],
          listForRelease: ["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],
          listForTeamDiscussionCommentInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],
          listForTeamDiscussionInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],
        },
        repos: {
          acceptInvitation: ["PATCH /user/repository_invitations/{invitation_id}", {}, { renamed: ["repos", "acceptInvitationForAuthenticatedUser"] }],
          acceptInvitationForAuthenticatedUser: ["PATCH /user/repository_invitations/{invitation_id}"],
          addAppAccessRestrictions: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps", {}, { mapToData: "apps" }],
          addCollaborator: ["PUT /repos/{owner}/{repo}/collaborators/{username}"],
          addStatusCheckContexts: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts", {}, { mapToData: "contexts" }],
          addTeamAccessRestrictions: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams", {}, { mapToData: "teams" }],
          addUserAccessRestrictions: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users", {}, { mapToData: "users" }],
          cancelPagesDeployment: ["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],
          checkAutomatedSecurityFixes: ["GET /repos/{owner}/{repo}/automated-security-fixes"],
          checkCollaborator: ["GET /repos/{owner}/{repo}/collaborators/{username}"],
          checkPrivateVulnerabilityReporting: ["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],
          checkVulnerabilityAlerts: ["GET /repos/{owner}/{repo}/vulnerability-alerts"],
          codeownersErrors: ["GET /repos/{owner}/{repo}/codeowners/errors"],
          compareCommits: ["GET /repos/{owner}/{repo}/compare/{base}...{head}"],
          compareCommitsWithBasehead: ["GET /repos/{owner}/{repo}/compare/{basehead}"],
          createAutolink: ["POST /repos/{owner}/{repo}/autolinks"],
          createCommitComment: ["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],
          createCommitSignatureProtection: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],
          createCommitStatus: ["POST /repos/{owner}/{repo}/statuses/{sha}"],
          createDeployKey: ["POST /repos/{owner}/{repo}/keys"],
          createDeployment: ["POST /repos/{owner}/{repo}/deployments"],
          createDeploymentBranchPolicy: ["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],
          createDeploymentProtectionRule: ["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],
          createDeploymentStatus: ["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],
          createDispatchEvent: ["POST /repos/{owner}/{repo}/dispatches"],
          createForAuthenticatedUser: ["POST /user/repos"],
          createFork: ["POST /repos/{owner}/{repo}/forks"],
          createInOrg: ["POST /orgs/{org}/repos"],
          createOrUpdateCustomPropertiesValues: ["PATCH /repos/{owner}/{repo}/properties/values"],
          createOrUpdateEnvironment: ["PUT /repos/{owner}/{repo}/environments/{environment_name}"],
          createOrUpdateFileContents: ["PUT /repos/{owner}/{repo}/contents/{path}"],
          createOrgRuleset: ["POST /orgs/{org}/rulesets"],
          createPagesDeployment: ["POST /repos/{owner}/{repo}/pages/deployments"],
          createPagesSite: ["POST /repos/{owner}/{repo}/pages"],
          createRelease: ["POST /repos/{owner}/{repo}/releases"],
          createRepoRuleset: ["POST /repos/{owner}/{repo}/rulesets"],
          createTagProtection: ["POST /repos/{owner}/{repo}/tags/protection"],
          createUsingTemplate: ["POST /repos/{template_owner}/{template_repo}/generate"],
          createWebhook: ["POST /repos/{owner}/{repo}/hooks"],
          declineInvitation: ["DELETE /user/repository_invitations/{invitation_id}", {}, { renamed: ["repos", "declineInvitationForAuthenticatedUser"] }],
          declineInvitationForAuthenticatedUser: ["DELETE /user/repository_invitations/{invitation_id}"],
          delete: ["DELETE /repos/{owner}/{repo}"],
          deleteAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],
          deleteAdminBranchProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],
          deleteAnEnvironment: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],
          deleteAutolink: ["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],
          deleteBranchProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],
          deleteCommitComment: ["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],
          deleteCommitSignatureProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],
          deleteDeployKey: ["DELETE /repos/{owner}/{repo}/keys/{key_id}"],
          deleteDeployment: ["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],
          deleteDeploymentBranchPolicy: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],
          deleteFile: ["DELETE /repos/{owner}/{repo}/contents/{path}"],
          deleteInvitation: ["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],
          deleteOrgRuleset: ["DELETE /orgs/{org}/rulesets/{ruleset_id}"],
          deletePagesSite: ["DELETE /repos/{owner}/{repo}/pages"],
          deletePullRequestReviewProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],
          deleteRelease: ["DELETE /repos/{owner}/{repo}/releases/{release_id}"],
          deleteReleaseAsset: ["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],
          deleteRepoRuleset: ["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
          deleteTagProtection: ["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],
          deleteWebhook: ["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],
          disableAutomatedSecurityFixes: ["DELETE /repos/{owner}/{repo}/automated-security-fixes"],
          disableDeploymentProtectionRule: ["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],
          disablePrivateVulnerabilityReporting: ["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],
          disableVulnerabilityAlerts: ["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],
          downloadArchive: ["GET /repos/{owner}/{repo}/zipball/{ref}", {}, { renamed: ["repos", "downloadZipballArchive"] }],
          downloadTarballArchive: ["GET /repos/{owner}/{repo}/tarball/{ref}"],
          downloadZipballArchive: ["GET /repos/{owner}/{repo}/zipball/{ref}"],
          enableAutomatedSecurityFixes: ["PUT /repos/{owner}/{repo}/automated-security-fixes"],
          enablePrivateVulnerabilityReporting: ["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],
          enableVulnerabilityAlerts: ["PUT /repos/{owner}/{repo}/vulnerability-alerts"],
          generateReleaseNotes: ["POST /repos/{owner}/{repo}/releases/generate-notes"],
          get: ["GET /repos/{owner}/{repo}"],
          getAccessRestrictions: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],
          getAdminBranchProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],
          getAllDeploymentProtectionRules: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],
          getAllEnvironments: ["GET /repos/{owner}/{repo}/environments"],
          getAllStatusCheckContexts: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],
          getAllTopics: ["GET /repos/{owner}/{repo}/topics"],
          getAppsWithAccessToProtectedBranch: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],
          getAutolink: ["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],
          getBranch: ["GET /repos/{owner}/{repo}/branches/{branch}"],
          getBranchProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection"],
          getBranchRules: ["GET /repos/{owner}/{repo}/rules/branches/{branch}"],
          getClones: ["GET /repos/{owner}/{repo}/traffic/clones"],
          getCodeFrequencyStats: ["GET /repos/{owner}/{repo}/stats/code_frequency"],
          getCollaboratorPermissionLevel: ["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],
          getCombinedStatusForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/status"],
          getCommit: ["GET /repos/{owner}/{repo}/commits/{ref}"],
          getCommitActivityStats: ["GET /repos/{owner}/{repo}/stats/commit_activity"],
          getCommitComment: ["GET /repos/{owner}/{repo}/comments/{comment_id}"],
          getCommitSignatureProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],
          getCommunityProfileMetrics: ["GET /repos/{owner}/{repo}/community/profile"],
          getContent: ["GET /repos/{owner}/{repo}/contents/{path}"],
          getContributorsStats: ["GET /repos/{owner}/{repo}/stats/contributors"],
          getCustomDeploymentProtectionRule: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],
          getCustomPropertiesValues: ["GET /repos/{owner}/{repo}/properties/values"],
          getDeployKey: ["GET /repos/{owner}/{repo}/keys/{key_id}"],
          getDeployment: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],
          getDeploymentBranchPolicy: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],
          getDeploymentStatus: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],
          getEnvironment: ["GET /repos/{owner}/{repo}/environments/{environment_name}"],
          getLatestPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/latest"],
          getLatestRelease: ["GET /repos/{owner}/{repo}/releases/latest"],
          getOrgRuleSuite: ["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],
          getOrgRuleSuites: ["GET /orgs/{org}/rulesets/rule-suites"],
          getOrgRuleset: ["GET /orgs/{org}/rulesets/{ruleset_id}"],
          getOrgRulesets: ["GET /orgs/{org}/rulesets"],
          getPages: ["GET /repos/{owner}/{repo}/pages"],
          getPagesBuild: ["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],
          getPagesDeployment: ["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],
          getPagesHealthCheck: ["GET /repos/{owner}/{repo}/pages/health"],
          getParticipationStats: ["GET /repos/{owner}/{repo}/stats/participation"],
          getPullRequestReviewProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],
          getPunchCardStats: ["GET /repos/{owner}/{repo}/stats/punch_card"],
          getReadme: ["GET /repos/{owner}/{repo}/readme"],
          getReadmeInDirectory: ["GET /repos/{owner}/{repo}/readme/{dir}"],
          getRelease: ["GET /repos/{owner}/{repo}/releases/{release_id}"],
          getReleaseAsset: ["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],
          getReleaseByTag: ["GET /repos/{owner}/{repo}/releases/tags/{tag}"],
          getRepoRuleSuite: ["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],
          getRepoRuleSuites: ["GET /repos/{owner}/{repo}/rulesets/rule-suites"],
          getRepoRuleset: ["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
          getRepoRulesets: ["GET /repos/{owner}/{repo}/rulesets"],
          getStatusChecksProtection: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],
          getTeamsWithAccessToProtectedBranch: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],
          getTopPaths: ["GET /repos/{owner}/{repo}/traffic/popular/paths"],
          getTopReferrers: ["GET /repos/{owner}/{repo}/traffic/popular/referrers"],
          getUsersWithAccessToProtectedBranch: ["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],
          getViews: ["GET /repos/{owner}/{repo}/traffic/views"],
          getWebhook: ["GET /repos/{owner}/{repo}/hooks/{hook_id}"],
          getWebhookConfigForRepo: ["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],
          getWebhookDelivery: ["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],
          listActivities: ["GET /repos/{owner}/{repo}/activity"],
          listAutolinks: ["GET /repos/{owner}/{repo}/autolinks"],
          listBranches: ["GET /repos/{owner}/{repo}/branches"],
          listBranchesForHeadCommit: ["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],
          listCollaborators: ["GET /repos/{owner}/{repo}/collaborators"],
          listCommentsForCommit: ["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],
          listCommitCommentsForRepo: ["GET /repos/{owner}/{repo}/comments"],
          listCommitStatusesForRef: ["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],
          listCommits: ["GET /repos/{owner}/{repo}/commits"],
          listContributors: ["GET /repos/{owner}/{repo}/contributors"],
          listCustomDeploymentRuleIntegrations: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],
          listDeployKeys: ["GET /repos/{owner}/{repo}/keys"],
          listDeploymentBranchPolicies: ["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],
          listDeploymentStatuses: ["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],
          listDeployments: ["GET /repos/{owner}/{repo}/deployments"],
          listForAuthenticatedUser: ["GET /user/repos"],
          listForOrg: ["GET /orgs/{org}/repos"],
          listForUser: ["GET /users/{username}/repos"],
          listForks: ["GET /repos/{owner}/{repo}/forks"],
          listInvitations: ["GET /repos/{owner}/{repo}/invitations"],
          listInvitationsForAuthenticatedUser: ["GET /user/repository_invitations"],
          listLanguages: ["GET /repos/{owner}/{repo}/languages"],
          listPagesBuilds: ["GET /repos/{owner}/{repo}/pages/builds"],
          listPublic: ["GET /repositories"],
          listPullRequestsAssociatedWithCommit: ["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],
          listReleaseAssets: ["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],
          listReleases: ["GET /repos/{owner}/{repo}/releases"],
          listTagProtection: ["GET /repos/{owner}/{repo}/tags/protection"],
          listTags: ["GET /repos/{owner}/{repo}/tags"],
          listTeams: ["GET /repos/{owner}/{repo}/teams"],
          listWebhookDeliveries: ["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],
          listWebhooks: ["GET /repos/{owner}/{repo}/hooks"],
          merge: ["POST /repos/{owner}/{repo}/merges"],
          mergeUpstream: ["POST /repos/{owner}/{repo}/merge-upstream"],
          pingWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],
          redeliverWebhookDelivery: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],
          removeAppAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps", {}, { mapToData: "apps" }],
          removeCollaborator: ["DELETE /repos/{owner}/{repo}/collaborators/{username}"],
          removeStatusCheckContexts: [
            "DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
            {},
            { mapToData: "contexts" },
          ],
          removeStatusCheckProtection: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],
          removeTeamAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams", {}, { mapToData: "teams" }],
          removeUserAccessRestrictions: ["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users", {}, { mapToData: "users" }],
          renameBranch: ["POST /repos/{owner}/{repo}/branches/{branch}/rename"],
          replaceAllTopics: ["PUT /repos/{owner}/{repo}/topics"],
          requestPagesBuild: ["POST /repos/{owner}/{repo}/pages/builds"],
          setAdminBranchProtection: ["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],
          setAppAccessRestrictions: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps", {}, { mapToData: "apps" }],
          setStatusCheckContexts: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts", {}, { mapToData: "contexts" }],
          setTeamAccessRestrictions: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams", {}, { mapToData: "teams" }],
          setUserAccessRestrictions: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users", {}, { mapToData: "users" }],
          testPushWebhook: ["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],
          transfer: ["POST /repos/{owner}/{repo}/transfer"],
          update: ["PATCH /repos/{owner}/{repo}"],
          updateBranchProtection: ["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],
          updateCommitComment: ["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],
          updateDeploymentBranchPolicy: ["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],
          updateInformationAboutPagesSite: ["PUT /repos/{owner}/{repo}/pages"],
          updateInvitation: ["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],
          updateOrgRuleset: ["PUT /orgs/{org}/rulesets/{ruleset_id}"],
          updatePullRequestReviewProtection: ["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],
          updateRelease: ["PATCH /repos/{owner}/{repo}/releases/{release_id}"],
          updateReleaseAsset: ["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],
          updateRepoRuleset: ["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],
          updateStatusCheckPotection: [
            "PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
            {},
            { renamed: ["repos", "updateStatusCheckProtection"] },
          ],
          updateStatusCheckProtection: ["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],
          updateWebhook: ["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],
          updateWebhookConfigForRepo: ["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],
          uploadReleaseAsset: ["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}", { baseUrl: "https://uploads.github.com" }],
        },
        search: {
          code: ["GET /search/code"],
          commits: ["GET /search/commits"],
          issuesAndPullRequests: ["GET /search/issues"],
          labels: ["GET /search/labels"],
          repos: ["GET /search/repositories"],
          topics: ["GET /search/topics"],
          users: ["GET /search/users"],
        },
        secretScanning: {
          getAlert: ["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],
          listAlertsForEnterprise: ["GET /enterprises/{enterprise}/secret-scanning/alerts"],
          listAlertsForOrg: ["GET /orgs/{org}/secret-scanning/alerts"],
          listAlertsForRepo: ["GET /repos/{owner}/{repo}/secret-scanning/alerts"],
          listLocationsForAlert: ["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],
          updateAlert: ["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],
        },
        securityAdvisories: {
          createFork: ["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],
          createPrivateVulnerabilityReport: ["POST /repos/{owner}/{repo}/security-advisories/reports"],
          createRepositoryAdvisory: ["POST /repos/{owner}/{repo}/security-advisories"],
          createRepositoryAdvisoryCveRequest: ["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],
          getGlobalAdvisory: ["GET /advisories/{ghsa_id}"],
          getRepositoryAdvisory: ["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],
          listGlobalAdvisories: ["GET /advisories"],
          listOrgRepositoryAdvisories: ["GET /orgs/{org}/security-advisories"],
          listRepositoryAdvisories: ["GET /repos/{owner}/{repo}/security-advisories"],
          updateRepositoryAdvisory: ["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],
        },
        teams: {
          addOrUpdateMembershipForUserInOrg: ["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],
          addOrUpdateProjectPermissionsInOrg: ["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],
          addOrUpdateRepoPermissionsInOrg: ["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],
          checkPermissionsForProjectInOrg: ["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],
          checkPermissionsForRepoInOrg: ["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],
          create: ["POST /orgs/{org}/teams"],
          createDiscussionCommentInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],
          createDiscussionInOrg: ["POST /orgs/{org}/teams/{team_slug}/discussions"],
          deleteDiscussionCommentInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],
          deleteDiscussionInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],
          deleteInOrg: ["DELETE /orgs/{org}/teams/{team_slug}"],
          getByName: ["GET /orgs/{org}/teams/{team_slug}"],
          getDiscussionCommentInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],
          getDiscussionInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],
          getMembershipForUserInOrg: ["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],
          list: ["GET /orgs/{org}/teams"],
          listChildInOrg: ["GET /orgs/{org}/teams/{team_slug}/teams"],
          listDiscussionCommentsInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],
          listDiscussionsInOrg: ["GET /orgs/{org}/teams/{team_slug}/discussions"],
          listForAuthenticatedUser: ["GET /user/teams"],
          listMembersInOrg: ["GET /orgs/{org}/teams/{team_slug}/members"],
          listPendingInvitationsInOrg: ["GET /orgs/{org}/teams/{team_slug}/invitations"],
          listProjectsInOrg: ["GET /orgs/{org}/teams/{team_slug}/projects"],
          listReposInOrg: ["GET /orgs/{org}/teams/{team_slug}/repos"],
          removeMembershipForUserInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],
          removeProjectInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],
          removeRepoInOrg: ["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],
          updateDiscussionCommentInOrg: ["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],
          updateDiscussionInOrg: ["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],
          updateInOrg: ["PATCH /orgs/{org}/teams/{team_slug}"],
        },
        users: {
          addEmailForAuthenticated: ["POST /user/emails", {}, { renamed: ["users", "addEmailForAuthenticatedUser"] }],
          addEmailForAuthenticatedUser: ["POST /user/emails"],
          addSocialAccountForAuthenticatedUser: ["POST /user/social_accounts"],
          block: ["PUT /user/blocks/{username}"],
          checkBlocked: ["GET /user/blocks/{username}"],
          checkFollowingForUser: ["GET /users/{username}/following/{target_user}"],
          checkPersonIsFollowedByAuthenticated: ["GET /user/following/{username}"],
          createGpgKeyForAuthenticated: ["POST /user/gpg_keys", {}, { renamed: ["users", "createGpgKeyForAuthenticatedUser"] }],
          createGpgKeyForAuthenticatedUser: ["POST /user/gpg_keys"],
          createPublicSshKeyForAuthenticated: ["POST /user/keys", {}, { renamed: ["users", "createPublicSshKeyForAuthenticatedUser"] }],
          createPublicSshKeyForAuthenticatedUser: ["POST /user/keys"],
          createSshSigningKeyForAuthenticatedUser: ["POST /user/ssh_signing_keys"],
          deleteEmailForAuthenticated: ["DELETE /user/emails", {}, { renamed: ["users", "deleteEmailForAuthenticatedUser"] }],
          deleteEmailForAuthenticatedUser: ["DELETE /user/emails"],
          deleteGpgKeyForAuthenticated: ["DELETE /user/gpg_keys/{gpg_key_id}", {}, { renamed: ["users", "deleteGpgKeyForAuthenticatedUser"] }],
          deleteGpgKeyForAuthenticatedUser: ["DELETE /user/gpg_keys/{gpg_key_id}"],
          deletePublicSshKeyForAuthenticated: ["DELETE /user/keys/{key_id}", {}, { renamed: ["users", "deletePublicSshKeyForAuthenticatedUser"] }],
          deletePublicSshKeyForAuthenticatedUser: ["DELETE /user/keys/{key_id}"],
          deleteSocialAccountForAuthenticatedUser: ["DELETE /user/social_accounts"],
          deleteSshSigningKeyForAuthenticatedUser: ["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],
          follow: ["PUT /user/following/{username}"],
          getAuthenticated: ["GET /user"],
          getByUsername: ["GET /users/{username}"],
          getContextForUser: ["GET /users/{username}/hovercard"],
          getGpgKeyForAuthenticated: ["GET /user/gpg_keys/{gpg_key_id}", {}, { renamed: ["users", "getGpgKeyForAuthenticatedUser"] }],
          getGpgKeyForAuthenticatedUser: ["GET /user/gpg_keys/{gpg_key_id}"],
          getPublicSshKeyForAuthenticated: ["GET /user/keys/{key_id}", {}, { renamed: ["users", "getPublicSshKeyForAuthenticatedUser"] }],
          getPublicSshKeyForAuthenticatedUser: ["GET /user/keys/{key_id}"],
          getSshSigningKeyForAuthenticatedUser: ["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],
          list: ["GET /users"],
          listBlockedByAuthenticated: ["GET /user/blocks", {}, { renamed: ["users", "listBlockedByAuthenticatedUser"] }],
          listBlockedByAuthenticatedUser: ["GET /user/blocks"],
          listEmailsForAuthenticated: ["GET /user/emails", {}, { renamed: ["users", "listEmailsForAuthenticatedUser"] }],
          listEmailsForAuthenticatedUser: ["GET /user/emails"],
          listFollowedByAuthenticated: ["GET /user/following", {}, { renamed: ["users", "listFollowedByAuthenticatedUser"] }],
          listFollowedByAuthenticatedUser: ["GET /user/following"],
          listFollowersForAuthenticatedUser: ["GET /user/followers"],
          listFollowersForUser: ["GET /users/{username}/followers"],
          listFollowingForUser: ["GET /users/{username}/following"],
          listGpgKeysForAuthenticated: ["GET /user/gpg_keys", {}, { renamed: ["users", "listGpgKeysForAuthenticatedUser"] }],
          listGpgKeysForAuthenticatedUser: ["GET /user/gpg_keys"],
          listGpgKeysForUser: ["GET /users/{username}/gpg_keys"],
          listPublicEmailsForAuthenticated: ["GET /user/public_emails", {}, { renamed: ["users", "listPublicEmailsForAuthenticatedUser"] }],
          listPublicEmailsForAuthenticatedUser: ["GET /user/public_emails"],
          listPublicKeysForUser: ["GET /users/{username}/keys"],
          listPublicSshKeysForAuthenticated: ["GET /user/keys", {}, { renamed: ["users", "listPublicSshKeysForAuthenticatedUser"] }],
          listPublicSshKeysForAuthenticatedUser: ["GET /user/keys"],
          listSocialAccountsForAuthenticatedUser: ["GET /user/social_accounts"],
          listSocialAccountsForUser: ["GET /users/{username}/social_accounts"],
          listSshSigningKeysForAuthenticatedUser: ["GET /user/ssh_signing_keys"],
          listSshSigningKeysForUser: ["GET /users/{username}/ssh_signing_keys"],
          setPrimaryEmailVisibilityForAuthenticated: [
            "PATCH /user/email/visibility",
            {},
            { renamed: ["users", "setPrimaryEmailVisibilityForAuthenticatedUser"] },
          ],
          setPrimaryEmailVisibilityForAuthenticatedUser: ["PATCH /user/email/visibility"],
          unblock: ["DELETE /user/blocks/{username}"],
          unfollow: ["DELETE /user/following/{username}"],
          updateAuthenticated: ["PATCH /user"],
        },
      };
      var A = a;
      var l = new Map();
      for (const [e, t] of Object.entries(A)) {
        for (const [r, s] of Object.entries(t)) {
          const [t, n, o] = s;
          const [i, a] = t.split(/ /);
          const A = Object.assign({ method: i, url: a }, n);
          if (!l.has(e)) {
            l.set(e, new Map());
          }
          l.get(e).set(r, { scope: e, methodName: r, endpointDefaults: A, decorations: o });
        }
      }
      var c = {
        has({ scope: e }, t) {
          return l.get(e).has(t);
        },
        getOwnPropertyDescriptor(e, t) {
          return { value: this.get(e, t), configurable: true, writable: true, enumerable: true };
        },
        defineProperty(e, t, r) {
          Object.defineProperty(e.cache, t, r);
          return true;
        },
        deleteProperty(e, t) {
          delete e.cache[t];
          return true;
        },
        ownKeys({ scope: e }) {
          return [...l.get(e).keys()];
        },
        set(e, t, r) {
          return (e.cache[t] = r);
        },
        get({ octokit: e, scope: t, cache: r }, s) {
          if (r[s]) {
            return r[s];
          }
          const n = l.get(t).get(s);
          if (!n) {
            return void 0;
          }
          const { endpointDefaults: o, decorations: i } = n;
          if (i) {
            r[s] = decorate(e, t, s, o, i);
          } else {
            r[s] = e.request.defaults(o);
          }
          return r[s];
        },
      };
      function endpointsToMethods(e) {
        const t = {};
        for (const r of l.keys()) {
          t[r] = new Proxy({ octokit: e, scope: r, cache: {} }, c);
        }
        return t;
      }
      function decorate(e, t, r, s, n) {
        const o = e.request.defaults(s);
        function withDecorations(...s) {
          let i = o.endpoint.merge(...s);
          if (n.mapToData) {
            i = Object.assign({}, i, { data: i[n.mapToData], [n.mapToData]: void 0 });
            return o(i);
          }
          if (n.renamed) {
            const [s, o] = n.renamed;
            e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${s}.${o}()`);
          }
          if (n.deprecated) {
            e.log.warn(n.deprecated);
          }
          if (n.renamedParameters) {
            const i = o.endpoint.merge(...s);
            for (const [s, o] of Object.entries(n.renamedParameters)) {
              if (s in i) {
                e.log.warn(`"${s}" parameter is deprecated for "octokit.${t}.${r}()". Use "${o}" instead`);
                if (!(o in i)) {
                  i[o] = i[s];
                }
                delete i[s];
              }
            }
            return o(i);
          }
          return o(...s);
        }
        return Object.assign(withDecorations, o);
      }
      function restEndpointMethods(e) {
        const t = endpointsToMethods(e);
        return { rest: t };
      }
      restEndpointMethods.VERSION = i;
      function legacyRestEndpointMethods(e) {
        const t = endpointsToMethods(e);
        return { ...t, rest: t };
      }
      legacyRestEndpointMethods.VERSION = i;
      0 && 0;
    },
    93708: (e, t, r) => {
      "use strict";
      var s = Object.create;
      var n = Object.defineProperty;
      var o = Object.getOwnPropertyDescriptor;
      var i = Object.getOwnPropertyNames;
      var a = Object.getPrototypeOf;
      var A = Object.prototype.hasOwnProperty;
      var __export = (e, t) => {
        for (var r in t) n(e, r, { get: t[r], enumerable: true });
      };
      var __copyProps = (e, t, r, s) => {
        if ((t && typeof t === "object") || typeof t === "function") {
          for (let a of i(t)) if (!A.call(e, a) && a !== r) n(e, a, { get: () => t[a], enumerable: !(s = o(t, a)) || s.enumerable });
        }
        return e;
      };
      var __toESM = (e, t, r) => (
        (r = e != null ? s(a(e)) : {}), __copyProps(t || !e || !e.__esModule ? n(r, "default", { value: e, enumerable: true }) : r, e)
      );
      var __toCommonJS = (e) => __copyProps(n({}, "__esModule", { value: true }), e);
      var l = {};
      __export(l, { RequestError: () => g });
      e.exports = __toCommonJS(l);
      var c = r(14150);
      var d = __toESM(r(55560));
      var p = (0, d.default)((e) => console.warn(e));
      var u = (0, d.default)((e) => console.warn(e));
      var g = class extends Error {
        constructor(e, t, r) {
          super(e);
          if (Error.captureStackTrace) {
            Error.captureStackTrace(this, this.constructor);
          }
          this.name = "HttpError";
          this.status = t;
          let s;
          if ("headers" in r && typeof r.headers !== "undefined") {
            s = r.headers;
          }
          if ("response" in r) {
            this.response = r.response;
            s = r.response.headers;
          }
          const n = Object.assign({}, r.request);
          if (r.request.headers.authorization) {
            n.headers = Object.assign({}, r.request.headers, { authorization: r.request.headers.authorization.replace(/ .*$/, " [REDACTED]") });
          }
          n.url = n.url.replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]").replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
          this.request = n;
          Object.defineProperty(this, "code", {
            get() {
              p(new c.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));
              return t;
            },
          });
          Object.defineProperty(this, "headers", {
            get() {
              u(new c.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."));
              return s || {};
            },
          });
        }
      };
      0 && 0;
    },
    66255: (e, t, r) => {
      "use strict";
      var s = Object.defineProperty;
      var n = Object.getOwnPropertyDescriptor;
      var o = Object.getOwnPropertyNames;
      var i = Object.prototype.hasOwnProperty;
      var __export = (e, t) => {
        for (var r in t) s(e, r, { get: t[r], enumerable: true });
      };
      var __copyProps = (e, t, r, a) => {
        if ((t && typeof t === "object") || typeof t === "function") {
          for (let A of o(t)) if (!i.call(e, A) && A !== r) s(e, A, { get: () => t[A], enumerable: !(a = n(t, A)) || a.enumerable });
        }
        return e;
      };
      var __toCommonJS = (e) => __copyProps(s({}, "__esModule", { value: true }), e);
      var a = {};
      __export(a, { request: () => p });
      e.exports = __toCommonJS(a);
      var A = r(54471);
      var l = r(33843);
      var c = "8.4.0";
      function isPlainObject(e) {
        if (typeof e !== "object" || e === null) return false;
        if (Object.prototype.toString.call(e) !== "[object Object]") return false;
        const t = Object.getPrototypeOf(e);
        if (t === null) return true;
        const r = Object.prototype.hasOwnProperty.call(t, "constructor") && t.constructor;
        return typeof r === "function" && r instanceof r && Function.prototype.call(r) === Function.prototype.call(e);
      }
      var d = r(93708);
      function getBufferResponse(e) {
        return e.arrayBuffer();
      }
      function fetchWrapper(e) {
        var t, r, s, n;
        const o = e.request && e.request.log ? e.request.log : console;
        const i = ((t = e.request) == null ? void 0 : t.parseSuccessResponseBody) !== false;
        if (isPlainObject(e.body) || Array.isArray(e.body)) {
          e.body = JSON.stringify(e.body);
        }
        let a = {};
        let A;
        let l;
        let { fetch: c } = globalThis;
        if ((r = e.request) == null ? void 0 : r.fetch) {
          c = e.request.fetch;
        }
        if (!c) {
          throw new Error(
            "fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing"
          );
        }
        return c(e.url, {
          method: e.method,
          body: e.body,
          redirect: (s = e.request) == null ? void 0 : s.redirect,
          headers: e.headers,
          signal: (n = e.request) == null ? void 0 : n.signal,
          ...(e.body && { duplex: "half" }),
        })
          .then(async (t) => {
            l = t.url;
            A = t.status;
            for (const e of t.headers) {
              a[e[0]] = e[1];
            }
            if ("deprecation" in a) {
              const t = a.link && a.link.match(/<([^>]+)>; rel="deprecation"/);
              const r = t && t.pop();
              o.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${a.sunset}${r ? `. See ${r}` : ""}`);
            }
            if (A === 204 || A === 205) {
              return;
            }
            if (e.method === "HEAD") {
              if (A < 400) {
                return;
              }
              throw new d.RequestError(t.statusText, A, { response: { url: l, status: A, headers: a, data: void 0 }, request: e });
            }
            if (A === 304) {
              throw new d.RequestError("Not modified", A, { response: { url: l, status: A, headers: a, data: await getResponseData(t) }, request: e });
            }
            if (A >= 400) {
              const r = await getResponseData(t);
              const s = new d.RequestError(toErrorMessage(r), A, { response: { url: l, status: A, headers: a, data: r }, request: e });
              throw s;
            }
            return i ? await getResponseData(t) : t.body;
          })
          .then((e) => ({ status: A, url: l, headers: a, data: e }))
          .catch((t) => {
            if (t instanceof d.RequestError) throw t;
            else if (t.name === "AbortError") throw t;
            let r = t.message;
            if (t.name === "TypeError" && "cause" in t) {
              if (t.cause instanceof Error) {
                r = t.cause.message;
              } else if (typeof t.cause === "string") {
                r = t.cause;
              }
            }
            throw new d.RequestError(r, 500, { request: e });
          });
      }
      async function getResponseData(e) {
        const t = e.headers.get("content-type");
        if (/application\/json/.test(t)) {
          return e
            .json()
            .catch(() => e.text())
            .catch(() => "");
        }
        if (!t || /^text\/|charset=utf-8$/.test(t)) {
          return e.text();
        }
        return getBufferResponse(e);
      }
      function toErrorMessage(e) {
        if (typeof e === "string") return e;
        let t;
        if ("documentation_url" in e) {
          t = ` - ${e.documentation_url}`;
        } else {
          t = "";
        }
        if ("message" in e) {
          if (Array.isArray(e.errors)) {
            return `${e.message}: ${e.errors.map(JSON.stringify).join(", ")}${t}`;
          }
          return `${e.message}${t}`;
        }
        return `Unknown error: ${JSON.stringify(e)}`;
      }
      function withDefaults(e, t) {
        const r = e.defaults(t);
        const newApi = function (e, t) {
          const s = r.merge(e, t);
          if (!s.request || !s.request.hook) {
            return fetchWrapper(r.parse(s));
          }
          const request2 = (e, t) => fetchWrapper(r.parse(r.merge(e, t)));
          Object.assign(request2, { endpoint: r, defaults: withDefaults.bind(null, r) });
          return s.request.hook(request2, s);
        };
        return Object.assign(newApi, { endpoint: r, defaults: withDefaults.bind(null, r) });
      }
      var p = withDefaults(A.endpoint, { headers: { "user-agent": `octokit-request.js/${c} ${(0, l.getUserAgent)()}` } });
      0 && 0;
    },
    65772: (e, t, r) => {
      "use strict";
      var s = Object.defineProperty;
      var n = Object.getOwnPropertyDescriptor;
      var o = Object.getOwnPropertyNames;
      var i = Object.prototype.hasOwnProperty;
      var __export = (e, t) => {
        for (var r in t) s(e, r, { get: t[r], enumerable: true });
      };
      var __copyProps = (e, t, r, a) => {
        if ((t && typeof t === "object") || typeof t === "function") {
          for (let A of o(t)) if (!i.call(e, A) && A !== r) s(e, A, { get: () => t[A], enumerable: !(a = n(t, A)) || a.enumerable });
        }
        return e;
      };
      var __toCommonJS = (e) => __copyProps(s({}, "__esModule", { value: true }), e);
      var a = {};
      __export(a, { Octokit: () => u });
      e.exports = __toCommonJS(a);
      var A = r(61897);
      var l = r(6966);
      var c = r(38082);
      var d = r(84935);
      var p = "20.1.1";
      var u = A.Octokit.plugin(l.requestLog, d.legacyRestEndpointMethods, c.paginateRest).defaults({ userAgent: `octokit-rest.js/${p}` });
      0 && 0;
    },
    75364: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TypeCompiler = t.Policy = t.TypeCompilerTypeGuardError = t.TypeCompilerUnknownTypeError = t.TypeCheck = void 0;
      const s = r(50038);
      const n = r(65507);
      const o = r(82129);
      const i = r(26113);
      const a = r(40886);
      const A = r(7210);
      const l = r(97034);
      const c = r(51786);
      const d = r(73373);
      const p = r(82486);
      const u = r(54025);
      const g = r(17479);
      const m = r(70384);
      class TypeCheck {
        constructor(e, t, r, n) {
          this.schema = e;
          this.references = t;
          this.checkFunc = r;
          this.code = n;
          this.hasTransform = (0, s.HasTransform)(e, t);
        }
        Code() {
          return this.code;
        }
        Errors(e) {
          return (0, n.Errors)(this.schema, this.references, e);
        }
        Check(e) {
          return this.checkFunc(e);
        }
        Decode(e) {
          if (!this.checkFunc(e)) throw new s.TransformDecodeCheckError(this.schema, e, this.Errors(e).First());
          return this.hasTransform ? (0, s.TransformDecode)(this.schema, this.references, e) : e;
        }
        Encode(e) {
          const t = this.hasTransform ? (0, s.TransformEncode)(this.schema, this.references, e) : e;
          if (!this.checkFunc(t)) throw new s.TransformEncodeCheckError(this.schema, e, this.Errors(e).First());
          return t;
        }
      }
      t.TypeCheck = TypeCheck;
      var h;
      (function (e) {
        function DollarSign(e) {
          return e === 36;
        }
        e.DollarSign = DollarSign;
        function IsUnderscore(e) {
          return e === 95;
        }
        e.IsUnderscore = IsUnderscore;
        function IsAlpha(e) {
          return (e >= 65 && e <= 90) || (e >= 97 && e <= 122);
        }
        e.IsAlpha = IsAlpha;
        function IsNumeric(e) {
          return e >= 48 && e <= 57;
        }
        e.IsNumeric = IsNumeric;
      })(h || (h = {}));
      var E;
      (function (e) {
        function IsFirstCharacterNumeric(e) {
          if (e.length === 0) return false;
          return h.IsNumeric(e.charCodeAt(0));
        }
        function IsAccessor(e) {
          if (IsFirstCharacterNumeric(e)) return false;
          for (let t = 0; t < e.length; t++) {
            const r = e.charCodeAt(t);
            const s = h.IsAlpha(r) || h.IsNumeric(r) || h.DollarSign(r) || h.IsUnderscore(r);
            if (!s) return false;
          }
          return true;
        }
        function EscapeHyphen(e) {
          return e.replace(/'/g, "\\'");
        }
        function Encode(e, t) {
          return IsAccessor(t) ? `${e}.${t}` : `${e}['${EscapeHyphen(t)}']`;
        }
        e.Encode = Encode;
      })(E || (E = {}));
      var I;
      (function (e) {
        function Encode(e) {
          const t = [];
          for (let r = 0; r < e.length; r++) {
            const s = e.charCodeAt(r);
            if (h.IsNumeric(s) || h.IsAlpha(s)) {
              t.push(e.charAt(r));
            } else {
              t.push(`_${s}_`);
            }
          }
          return t.join("").replace(/__/g, "_");
        }
        e.Encode = Encode;
      })(I || (I = {}));
      var C;
      (function (e) {
        function Escape(e) {
          return e.replace(/'/g, "\\'");
        }
        e.Escape = Escape;
      })(C || (C = {}));
      class TypeCompilerUnknownTypeError extends i.TypeBoxError {
        constructor(e) {
          super("Unknown type");
          this.schema = e;
        }
      }
      t.TypeCompilerUnknownTypeError = TypeCompilerUnknownTypeError;
      class TypeCompilerTypeGuardError extends i.TypeBoxError {
        constructor(e) {
          super("Preflight validation check failed to guard for the given schema");
          this.schema = e;
        }
      }
      t.TypeCompilerTypeGuardError = TypeCompilerTypeGuardError;
      var y;
      (function (e) {
        function IsExactOptionalProperty(e, t, r) {
          return o.TypeSystemPolicy.ExactOptionalPropertyTypes ? `('${t}' in ${e} ? ${r} : true)` : `(${E.Encode(e, t)} !== undefined ? ${r} : true)`;
        }
        e.IsExactOptionalProperty = IsExactOptionalProperty;
        function IsObjectLike(e) {
          return !o.TypeSystemPolicy.AllowArrayObject
            ? `(typeof ${e} === 'object' && ${e} !== null && !Array.isArray(${e}))`
            : `(typeof ${e} === 'object' && ${e} !== null)`;
        }
        e.IsObjectLike = IsObjectLike;
        function IsRecordLike(e) {
          return !o.TypeSystemPolicy.AllowArrayObject
            ? `(typeof ${e} === 'object' && ${e} !== null && !Array.isArray(${e}) && !(${e} instanceof Date) && !(${e} instanceof Uint8Array))`
            : `(typeof ${e} === 'object' && ${e} !== null && !(${e} instanceof Date) && !(${e} instanceof Uint8Array))`;
        }
        e.IsRecordLike = IsRecordLike;
        function IsNumberLike(e) {
          return o.TypeSystemPolicy.AllowNaN ? `typeof ${e} === 'number'` : `Number.isFinite(${e})`;
        }
        e.IsNumberLike = IsNumberLike;
        function IsVoidLike(e) {
          return o.TypeSystemPolicy.AllowNullVoid ? `(${e} === undefined || ${e} === null)` : `${e} === undefined`;
        }
        e.IsVoidLike = IsVoidLike;
      })(y || (t.Policy = y = {}));
      var B;
      (function (e) {
        function IsAnyOrUnknown(e) {
          return e[l.Kind] === "Any" || e[l.Kind] === "Unknown";
        }
        function* FromAny(e, t, r) {
          yield "true";
        }
        function* FromArray(e, t, r) {
          yield `Array.isArray(${r})`;
          const [s, n] = [CreateParameter("value", "any"), CreateParameter("acc", "number")];
          if ((0, g.IsNumber)(e.maxItems)) yield `${r}.length <= ${e.maxItems}`;
          if ((0, g.IsNumber)(e.minItems)) yield `${r}.length >= ${e.minItems}`;
          const o = CreateExpression(e.items, t, "value");
          yield `${r}.every((${s}) => ${o})`;
          if ((0, m.IsSchema)(e.contains) || (0, g.IsNumber)(e.minContains) || (0, g.IsNumber)(e.maxContains)) {
            const o = (0, m.IsSchema)(e.contains) ? e.contains : (0, u.Never)();
            const i = CreateExpression(o, t, "value");
            const a = (0, g.IsNumber)(e.minContains) ? [`(count >= ${e.minContains})`] : [];
            const A = (0, g.IsNumber)(e.maxContains) ? [`(count <= ${e.maxContains})`] : [];
            const l = `const count = value.reduce((${n}, ${s}) => ${i} ? acc + 1 : acc, 0)`;
            const c = [`(count > 0)`, ...a, ...A].join(" && ");
            yield `((${s}) => { ${l}; return ${c}})(${r})`;
          }
          if (e.uniqueItems === true) {
            const e = `const hashed = hash(element); if(set.has(hashed)) { return false } else { set.add(hashed) } } return true`;
            const t = `const set = new Set(); for(const element of value) { ${e} }`;
            yield `((${s}) => { ${t} )(${r})`;
          }
        }
        function* FromAsyncIterator(e, t, r) {
          yield `(typeof value === 'object' && Symbol.asyncIterator in ${r})`;
        }
        function* FromBigInt(e, t, r) {
          yield `(typeof ${r} === 'bigint')`;
          if ((0, g.IsBigInt)(e.exclusiveMaximum)) yield `${r} < BigInt(${e.exclusiveMaximum})`;
          if ((0, g.IsBigInt)(e.exclusiveMinimum)) yield `${r} > BigInt(${e.exclusiveMinimum})`;
          if ((0, g.IsBigInt)(e.maximum)) yield `${r} <= BigInt(${e.maximum})`;
          if ((0, g.IsBigInt)(e.minimum)) yield `${r} >= BigInt(${e.minimum})`;
          if ((0, g.IsBigInt)(e.multipleOf)) yield `(${r} % BigInt(${e.multipleOf})) === 0`;
        }
        function* FromBoolean(e, t, r) {
          yield `(typeof ${r} === 'boolean')`;
        }
        function* FromConstructor(e, t, r) {
          yield* Visit(e.returns, t, `${r}.prototype`);
        }
        function* FromDate(e, t, r) {
          yield `(${r} instanceof Date) && Number.isFinite(${r}.getTime())`;
          if ((0, g.IsNumber)(e.exclusiveMaximumTimestamp)) yield `${r}.getTime() < ${e.exclusiveMaximumTimestamp}`;
          if ((0, g.IsNumber)(e.exclusiveMinimumTimestamp)) yield `${r}.getTime() > ${e.exclusiveMinimumTimestamp}`;
          if ((0, g.IsNumber)(e.maximumTimestamp)) yield `${r}.getTime() <= ${e.maximumTimestamp}`;
          if ((0, g.IsNumber)(e.minimumTimestamp)) yield `${r}.getTime() >= ${e.minimumTimestamp}`;
          if ((0, g.IsNumber)(e.multipleOfTimestamp)) yield `(${r}.getTime() % ${e.multipleOfTimestamp}) === 0`;
        }
        function* FromFunction(e, t, r) {
          yield `(typeof ${r} === 'function')`;
        }
        function* FromInteger(e, t, r) {
          yield `Number.isInteger(${r})`;
          if ((0, g.IsNumber)(e.exclusiveMaximum)) yield `${r} < ${e.exclusiveMaximum}`;
          if ((0, g.IsNumber)(e.exclusiveMinimum)) yield `${r} > ${e.exclusiveMinimum}`;
          if ((0, g.IsNumber)(e.maximum)) yield `${r} <= ${e.maximum}`;
          if ((0, g.IsNumber)(e.minimum)) yield `${r} >= ${e.minimum}`;
          if ((0, g.IsNumber)(e.multipleOf)) yield `(${r} % ${e.multipleOf}) === 0`;
        }
        function* FromIntersect(e, t, r) {
          const s = e.allOf.map((e) => CreateExpression(e, t, r)).join(" && ");
          if (e.unevaluatedProperties === false) {
            const t = CreateVariable(`${new RegExp((0, d.KeyOfPattern)(e))};`);
            const n = `Object.getOwnPropertyNames(${r}).every(key => ${t}.test(key))`;
            yield `(${s} && ${n})`;
          } else if ((0, m.IsSchema)(e.unevaluatedProperties)) {
            const n = CreateVariable(`${new RegExp((0, d.KeyOfPattern)(e))};`);
            const o = `Object.getOwnPropertyNames(${r}).every(key => ${n}.test(key) || ${CreateExpression(e.unevaluatedProperties, t, `${r}[key]`)})`;
            yield `(${s} && ${o})`;
          } else {
            yield `(${s})`;
          }
        }
        function* FromIterator(e, t, r) {
          yield `(typeof value === 'object' && Symbol.iterator in ${r})`;
        }
        function* FromLiteral(e, t, r) {
          if (typeof e.const === "number" || typeof e.const === "boolean") {
            yield `(${r} === ${e.const})`;
          } else {
            yield `(${r} === '${C.Escape(e.const)}')`;
          }
        }
        function* FromNever(e, t, r) {
          yield `false`;
        }
        function* FromNot(e, t, r) {
          const s = CreateExpression(e.not, t, r);
          yield `(!${s})`;
        }
        function* FromNull(e, t, r) {
          yield `(${r} === null)`;
        }
        function* FromNumber(e, t, r) {
          yield y.IsNumberLike(r);
          if ((0, g.IsNumber)(e.exclusiveMaximum)) yield `${r} < ${e.exclusiveMaximum}`;
          if ((0, g.IsNumber)(e.exclusiveMinimum)) yield `${r} > ${e.exclusiveMinimum}`;
          if ((0, g.IsNumber)(e.maximum)) yield `${r} <= ${e.maximum}`;
          if ((0, g.IsNumber)(e.minimum)) yield `${r} >= ${e.minimum}`;
          if ((0, g.IsNumber)(e.multipleOf)) yield `(${r} % ${e.multipleOf}) === 0`;
        }
        function* FromObject(e, t, r) {
          yield y.IsObjectLike(r);
          if ((0, g.IsNumber)(e.minProperties)) yield `Object.getOwnPropertyNames(${r}).length >= ${e.minProperties}`;
          if ((0, g.IsNumber)(e.maxProperties)) yield `Object.getOwnPropertyNames(${r}).length <= ${e.maxProperties}`;
          const s = Object.getOwnPropertyNames(e.properties);
          for (const n of s) {
            const s = E.Encode(r, n);
            const o = e.properties[n];
            if (e.required && e.required.includes(n)) {
              yield* Visit(o, t, s);
              if ((0, p.ExtendsUndefinedCheck)(o) || IsAnyOrUnknown(o)) yield `('${n}' in ${r})`;
            } else {
              const e = CreateExpression(o, t, s);
              yield y.IsExactOptionalProperty(r, n, e);
            }
          }
          if (e.additionalProperties === false) {
            if (e.required && e.required.length === s.length) {
              yield `Object.getOwnPropertyNames(${r}).length === ${s.length}`;
            } else {
              const e = `[${s.map((e) => `'${e}'`).join(", ")}]`;
              yield `Object.getOwnPropertyNames(${r}).every(key => ${e}.includes(key))`;
            }
          }
          if (typeof e.additionalProperties === "object") {
            const n = CreateExpression(e.additionalProperties, t, `${r}[key]`);
            const o = `[${s.map((e) => `'${e}'`).join(", ")}]`;
            yield `(Object.getOwnPropertyNames(${r}).every(key => ${o}.includes(key) || ${n}))`;
          }
        }
        function* FromPromise(e, t, r) {
          yield `(typeof value === 'object' && typeof ${r}.then === 'function')`;
        }
        function* FromRecord(e, t, r) {
          yield y.IsRecordLike(r);
          if ((0, g.IsNumber)(e.minProperties)) yield `Object.getOwnPropertyNames(${r}).length >= ${e.minProperties}`;
          if ((0, g.IsNumber)(e.maxProperties)) yield `Object.getOwnPropertyNames(${r}).length <= ${e.maxProperties}`;
          const [s, n] = Object.entries(e.patternProperties)[0];
          const o = CreateVariable(`${new RegExp(s)}`);
          const i = CreateExpression(n, t, "value");
          const a = (0, m.IsSchema)(e.additionalProperties)
            ? CreateExpression(e.additionalProperties, t, r)
            : e.additionalProperties === false
              ? "false"
              : "true";
          const A = `(${o}.test(key) ? ${i} : ${a})`;
          yield `(Object.entries(${r}).every(([key, value]) => ${A}))`;
        }
        function* FromRef(e, r, s) {
          const n = (0, a.Deref)(e, r);
          if (t.functions.has(e.$ref)) return yield `${CreateFunctionName(e.$ref)}(${s})`;
          yield* Visit(n, r, s);
        }
        function* FromRegExp(e, t, r) {
          const s = CreateVariable(`${new RegExp(e.source, e.flags)};`);
          yield `(typeof ${r} === 'string')`;
          if ((0, g.IsNumber)(e.maxLength)) yield `${r}.length <= ${e.maxLength}`;
          if ((0, g.IsNumber)(e.minLength)) yield `${r}.length >= ${e.minLength}`;
          yield `${s}.test(${r})`;
        }
        function* FromString(e, t, r) {
          yield `(typeof ${r} === 'string')`;
          if ((0, g.IsNumber)(e.maxLength)) yield `${r}.length <= ${e.maxLength}`;
          if ((0, g.IsNumber)(e.minLength)) yield `${r}.length >= ${e.minLength}`;
          if (e.pattern !== undefined) {
            const t = CreateVariable(`${new RegExp(e.pattern)};`);
            yield `${t}.test(${r})`;
          }
          if (e.format !== undefined) {
            yield `format('${e.format}', ${r})`;
          }
        }
        function* FromSymbol(e, t, r) {
          yield `(typeof ${r} === 'symbol')`;
        }
        function* FromTemplateLiteral(e, t, r) {
          yield `(typeof ${r} === 'string')`;
          const s = CreateVariable(`${new RegExp(e.pattern)};`);
          yield `${s}.test(${r})`;
        }
        function* FromThis(e, t, r) {
          yield `${CreateFunctionName(e.$ref)}(${r})`;
        }
        function* FromTuple(e, t, r) {
          yield `Array.isArray(${r})`;
          if (e.items === undefined) return yield `${r}.length === 0`;
          yield `(${r}.length === ${e.maxItems})`;
          for (let s = 0; s < e.items.length; s++) {
            const n = CreateExpression(e.items[s], t, `${r}[${s}]`);
            yield `${n}`;
          }
        }
        function* FromUndefined(e, t, r) {
          yield `${r} === undefined`;
        }
        function* FromUnion(e, t, r) {
          const s = e.anyOf.map((e) => CreateExpression(e, t, r));
          yield `(${s.join(" || ")})`;
        }
        function* FromUint8Array(e, t, r) {
          yield `${r} instanceof Uint8Array`;
          if ((0, g.IsNumber)(e.maxByteLength)) yield `(${r}.length <= ${e.maxByteLength})`;
          if ((0, g.IsNumber)(e.minByteLength)) yield `(${r}.length >= ${e.minByteLength})`;
        }
        function* FromUnknown(e, t, r) {
          yield "true";
        }
        function* FromVoid(e, t, r) {
          yield y.IsVoidLike(r);
        }
        function* FromKind(e, r, s) {
          const n = t.instances.size;
          t.instances.set(n, e);
          yield `kind('${e[l.Kind]}', ${n}, ${s})`;
        }
        function* Visit(e, r, s, n = true) {
          const o = (0, g.IsString)(e.$id) ? [...r, e] : r;
          const i = e;
          if (n && (0, g.IsString)(e.$id)) {
            const n = CreateFunctionName(e.$id);
            if (t.functions.has(n)) {
              return yield `${n}(${s})`;
            } else {
              const o = CreateFunction(n, e, r, "value", false);
              t.functions.set(n, o);
              return yield `${n}(${s})`;
            }
          }
          switch (i[l.Kind]) {
            case "Any":
              return yield* FromAny(i, o, s);
            case "Array":
              return yield* FromArray(i, o, s);
            case "AsyncIterator":
              return yield* FromAsyncIterator(i, o, s);
            case "BigInt":
              return yield* FromBigInt(i, o, s);
            case "Boolean":
              return yield* FromBoolean(i, o, s);
            case "Constructor":
              return yield* FromConstructor(i, o, s);
            case "Date":
              return yield* FromDate(i, o, s);
            case "Function":
              return yield* FromFunction(i, o, s);
            case "Integer":
              return yield* FromInteger(i, o, s);
            case "Intersect":
              return yield* FromIntersect(i, o, s);
            case "Iterator":
              return yield* FromIterator(i, o, s);
            case "Literal":
              return yield* FromLiteral(i, o, s);
            case "Never":
              return yield* FromNever(i, o, s);
            case "Not":
              return yield* FromNot(i, o, s);
            case "Null":
              return yield* FromNull(i, o, s);
            case "Number":
              return yield* FromNumber(i, o, s);
            case "Object":
              return yield* FromObject(i, o, s);
            case "Promise":
              return yield* FromPromise(i, o, s);
            case "Record":
              return yield* FromRecord(i, o, s);
            case "Ref":
              return yield* FromRef(i, o, s);
            case "RegExp":
              return yield* FromRegExp(i, o, s);
            case "String":
              return yield* FromString(i, o, s);
            case "Symbol":
              return yield* FromSymbol(i, o, s);
            case "TemplateLiteral":
              return yield* FromTemplateLiteral(i, o, s);
            case "This":
              return yield* FromThis(i, o, s);
            case "Tuple":
              return yield* FromTuple(i, o, s);
            case "Undefined":
              return yield* FromUndefined(i, o, s);
            case "Union":
              return yield* FromUnion(i, o, s);
            case "Uint8Array":
              return yield* FromUint8Array(i, o, s);
            case "Unknown":
              return yield* FromUnknown(i, o, s);
            case "Void":
              return yield* FromVoid(i, o, s);
            default:
              if (!c.TypeRegistry.Has(i[l.Kind])) throw new TypeCompilerUnknownTypeError(e);
              return yield* FromKind(i, o, s);
          }
        }
        const t = { language: "javascript", functions: new Map(), variables: new Map(), instances: new Map() };
        function CreateExpression(e, t, r, s = true) {
          return `(${[...Visit(e, t, r, s)].join(" && ")})`;
        }
        function CreateFunctionName(e) {
          return `check_${I.Encode(e)}`;
        }
        function CreateVariable(e) {
          const r = `local_${t.variables.size}`;
          t.variables.set(r, `const ${r} = ${e}`);
          return r;
        }
        function CreateFunction(e, t, r, s, n = true) {
          const [o, i] = ["\n", (e) => "".padStart(e, " ")];
          const a = CreateParameter("value", "any");
          const A = CreateReturns("boolean");
          const l = [...Visit(t, r, s, n)].map((e) => `${i(4)}${e}`).join(` &&${o}`);
          return `function ${e}(${a})${A} {${o}${i(2)}return (${o}${l}${o}${i(2)})\n}`;
        }
        function CreateParameter(e, r) {
          const s = t.language === "typescript" ? `: ${r}` : "";
          return `${e}${s}`;
        }
        function CreateReturns(e) {
          return t.language === "typescript" ? `: ${e}` : "";
        }
        function Build(e, r, s) {
          const n = CreateFunction("check", e, r, "value");
          const o = CreateParameter("value", "any");
          const i = CreateReturns("boolean");
          const a = [...t.functions.values()];
          const A = [...t.variables.values()];
          const l = (0, g.IsString)(e.$id) ? `return function check(${o})${i} {\n  return ${CreateFunctionName(e.$id)}(value)\n}` : `return ${n}`;
          return [...A, ...a, l].join("\n");
        }
        function Code(...e) {
          const r = { language: "javascript" };
          const [s, n, o] =
            e.length === 2 && (0, g.IsArray)(e[1])
              ? [e[0], e[1], r]
              : e.length === 2 && !(0, g.IsArray)(e[1])
                ? [e[0], [], e[1]]
                : e.length === 3
                  ? [e[0], e[1], e[2]]
                  : e.length === 1
                    ? [e[0], [], r]
                    : [null, [], r];
          t.language = o.language;
          t.variables.clear();
          t.functions.clear();
          t.instances.clear();
          if (!(0, m.IsSchema)(s)) throw new TypeCompilerTypeGuardError(s);
          for (const e of n) if (!(0, m.IsSchema)(e)) throw new TypeCompilerTypeGuardError(e);
          return Build(s, n, o);
        }
        e.Code = Code;
        function Compile(e, r = []) {
          const s = Code(e, r, { language: "javascript" });
          const n = globalThis.Function("kind", "format", "hash", s);
          const o = new Map(t.instances);
          function typeRegistryFunction(e, t, r) {
            if (!c.TypeRegistry.Has(e) || !o.has(t)) return false;
            const s = c.TypeRegistry.Get(e);
            const n = o.get(t);
            return s(n, r);
          }
          function formatRegistryFunction(e, t) {
            if (!c.FormatRegistry.Has(e)) return false;
            const r = c.FormatRegistry.Get(e);
            return r(t);
          }
          function hashFunction(e) {
            return (0, A.Hash)(e);
          }
          const i = n(typeRegistryFunction, formatRegistryFunction, hashFunction);
          return new TypeCheck(e, r, i, s);
        }
        e.Compile = Compile;
      })(B || (t.TypeCompiler = B = {}));
    },
    25269: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.ValueErrorIterator = t.ValueErrorType = void 0;
      var o = r(65507);
      Object.defineProperty(t, "ValueErrorType", {
        enumerable: true,
        get: function () {
          return o.ValueErrorType;
        },
      });
      Object.defineProperty(t, "ValueErrorIterator", {
        enumerable: true,
        get: function () {
          return o.ValueErrorIterator;
        },
      });
      n(r(75364), t);
    },
    91660: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Errors = t.ValueErrorIterator = t.ValueErrorsUnknownTypeError = t.ValueErrorType = void 0;
      const s = r(82129);
      const n = r(73373);
      const o = r(51786);
      const i = r(82486);
      const a = r(84039);
      const A = r(26113);
      const l = r(40886);
      const c = r(7210);
      const d = r(97034);
      const p = r(54025);
      const u = r(17479);
      var g;
      (function (e) {
        e[(e["ArrayContains"] = 0)] = "ArrayContains";
        e[(e["ArrayMaxContains"] = 1)] = "ArrayMaxContains";
        e[(e["ArrayMaxItems"] = 2)] = "ArrayMaxItems";
        e[(e["ArrayMinContains"] = 3)] = "ArrayMinContains";
        e[(e["ArrayMinItems"] = 4)] = "ArrayMinItems";
        e[(e["ArrayUniqueItems"] = 5)] = "ArrayUniqueItems";
        e[(e["Array"] = 6)] = "Array";
        e[(e["AsyncIterator"] = 7)] = "AsyncIterator";
        e[(e["BigIntExclusiveMaximum"] = 8)] = "BigIntExclusiveMaximum";
        e[(e["BigIntExclusiveMinimum"] = 9)] = "BigIntExclusiveMinimum";
        e[(e["BigIntMaximum"] = 10)] = "BigIntMaximum";
        e[(e["BigIntMinimum"] = 11)] = "BigIntMinimum";
        e[(e["BigIntMultipleOf"] = 12)] = "BigIntMultipleOf";
        e[(e["BigInt"] = 13)] = "BigInt";
        e[(e["Boolean"] = 14)] = "Boolean";
        e[(e["DateExclusiveMaximumTimestamp"] = 15)] = "DateExclusiveMaximumTimestamp";
        e[(e["DateExclusiveMinimumTimestamp"] = 16)] = "DateExclusiveMinimumTimestamp";
        e[(e["DateMaximumTimestamp"] = 17)] = "DateMaximumTimestamp";
        e[(e["DateMinimumTimestamp"] = 18)] = "DateMinimumTimestamp";
        e[(e["DateMultipleOfTimestamp"] = 19)] = "DateMultipleOfTimestamp";
        e[(e["Date"] = 20)] = "Date";
        e[(e["Function"] = 21)] = "Function";
        e[(e["IntegerExclusiveMaximum"] = 22)] = "IntegerExclusiveMaximum";
        e[(e["IntegerExclusiveMinimum"] = 23)] = "IntegerExclusiveMinimum";
        e[(e["IntegerMaximum"] = 24)] = "IntegerMaximum";
        e[(e["IntegerMinimum"] = 25)] = "IntegerMinimum";
        e[(e["IntegerMultipleOf"] = 26)] = "IntegerMultipleOf";
        e[(e["Integer"] = 27)] = "Integer";
        e[(e["IntersectUnevaluatedProperties"] = 28)] = "IntersectUnevaluatedProperties";
        e[(e["Intersect"] = 29)] = "Intersect";
        e[(e["Iterator"] = 30)] = "Iterator";
        e[(e["Kind"] = 31)] = "Kind";
        e[(e["Literal"] = 32)] = "Literal";
        e[(e["Never"] = 33)] = "Never";
        e[(e["Not"] = 34)] = "Not";
        e[(e["Null"] = 35)] = "Null";
        e[(e["NumberExclusiveMaximum"] = 36)] = "NumberExclusiveMaximum";
        e[(e["NumberExclusiveMinimum"] = 37)] = "NumberExclusiveMinimum";
        e[(e["NumberMaximum"] = 38)] = "NumberMaximum";
        e[(e["NumberMinimum"] = 39)] = "NumberMinimum";
        e[(e["NumberMultipleOf"] = 40)] = "NumberMultipleOf";
        e[(e["Number"] = 41)] = "Number";
        e[(e["ObjectAdditionalProperties"] = 42)] = "ObjectAdditionalProperties";
        e[(e["ObjectMaxProperties"] = 43)] = "ObjectMaxProperties";
        e[(e["ObjectMinProperties"] = 44)] = "ObjectMinProperties";
        e[(e["ObjectRequiredProperty"] = 45)] = "ObjectRequiredProperty";
        e[(e["Object"] = 46)] = "Object";
        e[(e["Promise"] = 47)] = "Promise";
        e[(e["RegExp"] = 48)] = "RegExp";
        e[(e["StringFormatUnknown"] = 49)] = "StringFormatUnknown";
        e[(e["StringFormat"] = 50)] = "StringFormat";
        e[(e["StringMaxLength"] = 51)] = "StringMaxLength";
        e[(e["StringMinLength"] = 52)] = "StringMinLength";
        e[(e["StringPattern"] = 53)] = "StringPattern";
        e[(e["String"] = 54)] = "String";
        e[(e["Symbol"] = 55)] = "Symbol";
        e[(e["TupleLength"] = 56)] = "TupleLength";
        e[(e["Tuple"] = 57)] = "Tuple";
        e[(e["Uint8ArrayMaxByteLength"] = 58)] = "Uint8ArrayMaxByteLength";
        e[(e["Uint8ArrayMinByteLength"] = 59)] = "Uint8ArrayMinByteLength";
        e[(e["Uint8Array"] = 60)] = "Uint8Array";
        e[(e["Undefined"] = 61)] = "Undefined";
        e[(e["Union"] = 62)] = "Union";
        e[(e["Void"] = 63)] = "Void";
      })(g || (t.ValueErrorType = g = {}));
      class ValueErrorsUnknownTypeError extends A.TypeBoxError {
        constructor(e) {
          super("Unknown type");
          this.schema = e;
        }
      }
      t.ValueErrorsUnknownTypeError = ValueErrorsUnknownTypeError;
      function EscapeKey(e) {
        return e.replace(/~/g, "~0").replace(/\//g, "~1");
      }
      function IsDefined(e) {
        return e !== undefined;
      }
      class ValueErrorIterator {
        constructor(e) {
          this.iterator = e;
        }
        [Symbol.iterator]() {
          return this.iterator;
        }
        First() {
          const e = this.iterator.next();
          return e.done ? undefined : e.value;
        }
      }
      t.ValueErrorIterator = ValueErrorIterator;
      function Create(e, t, r, s) {
        return { type: e, schema: t, path: r, value: s, message: (0, a.GetErrorFunction)()({ errorType: e, path: r, schema: t, value: s }) };
      }
      function* FromAny(e, t, r, s) {}
      function* FromArray(e, t, r, s) {
        if (!(0, u.IsArray)(s)) {
          return yield Create(g.Array, e, r, s);
        }
        if (IsDefined(e.minItems) && !(s.length >= e.minItems)) {
          yield Create(g.ArrayMinItems, e, r, s);
        }
        if (IsDefined(e.maxItems) && !(s.length <= e.maxItems)) {
          yield Create(g.ArrayMaxItems, e, r, s);
        }
        for (let n = 0; n < s.length; n++) {
          yield* Visit(e.items, t, `${r}/${n}`, s[n]);
        }
        if (
          e.uniqueItems === true &&
          !(function () {
            const e = new Set();
            for (const t of s) {
              const r = (0, c.Hash)(t);
              if (e.has(r)) {
                return false;
              } else {
                e.add(r);
              }
            }
            return true;
          })()
        ) {
          yield Create(g.ArrayUniqueItems, e, r, s);
        }
        if (!(IsDefined(e.contains) || IsDefined(e.minContains) || IsDefined(e.maxContains))) {
          return;
        }
        const n = IsDefined(e.contains) ? e.contains : (0, p.Never)();
        const o = s.reduce((e, s, o) => (Visit(n, t, `${r}${o}`, s).next().done === true ? e + 1 : e), 0);
        if (o === 0) {
          yield Create(g.ArrayContains, e, r, s);
        }
        if ((0, u.IsNumber)(e.minContains) && o < e.minContains) {
          yield Create(g.ArrayMinContains, e, r, s);
        }
        if ((0, u.IsNumber)(e.maxContains) && o > e.maxContains) {
          yield Create(g.ArrayMaxContains, e, r, s);
        }
      }
      function* FromAsyncIterator(e, t, r, s) {
        if (!(0, u.IsAsyncIterator)(s)) yield Create(g.AsyncIterator, e, r, s);
      }
      function* FromBigInt(e, t, r, s) {
        if (!(0, u.IsBigInt)(s)) return yield Create(g.BigInt, e, r, s);
        if (IsDefined(e.exclusiveMaximum) && !(s < e.exclusiveMaximum)) {
          yield Create(g.BigIntExclusiveMaximum, e, r, s);
        }
        if (IsDefined(e.exclusiveMinimum) && !(s > e.exclusiveMinimum)) {
          yield Create(g.BigIntExclusiveMinimum, e, r, s);
        }
        if (IsDefined(e.maximum) && !(s <= e.maximum)) {
          yield Create(g.BigIntMaximum, e, r, s);
        }
        if (IsDefined(e.minimum) && !(s >= e.minimum)) {
          yield Create(g.BigIntMinimum, e, r, s);
        }
        if (IsDefined(e.multipleOf) && !(s % e.multipleOf === BigInt(0))) {
          yield Create(g.BigIntMultipleOf, e, r, s);
        }
      }
      function* FromBoolean(e, t, r, s) {
        if (!(0, u.IsBoolean)(s)) yield Create(g.Boolean, e, r, s);
      }
      function* FromConstructor(e, t, r, s) {
        yield* Visit(e.returns, t, r, s.prototype);
      }
      function* FromDate(e, t, r, s) {
        if (!(0, u.IsDate)(s)) return yield Create(g.Date, e, r, s);
        if (IsDefined(e.exclusiveMaximumTimestamp) && !(s.getTime() < e.exclusiveMaximumTimestamp)) {
          yield Create(g.DateExclusiveMaximumTimestamp, e, r, s);
        }
        if (IsDefined(e.exclusiveMinimumTimestamp) && !(s.getTime() > e.exclusiveMinimumTimestamp)) {
          yield Create(g.DateExclusiveMinimumTimestamp, e, r, s);
        }
        if (IsDefined(e.maximumTimestamp) && !(s.getTime() <= e.maximumTimestamp)) {
          yield Create(g.DateMaximumTimestamp, e, r, s);
        }
        if (IsDefined(e.minimumTimestamp) && !(s.getTime() >= e.minimumTimestamp)) {
          yield Create(g.DateMinimumTimestamp, e, r, s);
        }
        if (IsDefined(e.multipleOfTimestamp) && !(s.getTime() % e.multipleOfTimestamp === 0)) {
          yield Create(g.DateMultipleOfTimestamp, e, r, s);
        }
      }
      function* FromFunction(e, t, r, s) {
        if (!(0, u.IsFunction)(s)) yield Create(g.Function, e, r, s);
      }
      function* FromInteger(e, t, r, s) {
        if (!(0, u.IsInteger)(s)) return yield Create(g.Integer, e, r, s);
        if (IsDefined(e.exclusiveMaximum) && !(s < e.exclusiveMaximum)) {
          yield Create(g.IntegerExclusiveMaximum, e, r, s);
        }
        if (IsDefined(e.exclusiveMinimum) && !(s > e.exclusiveMinimum)) {
          yield Create(g.IntegerExclusiveMinimum, e, r, s);
        }
        if (IsDefined(e.maximum) && !(s <= e.maximum)) {
          yield Create(g.IntegerMaximum, e, r, s);
        }
        if (IsDefined(e.minimum) && !(s >= e.minimum)) {
          yield Create(g.IntegerMinimum, e, r, s);
        }
        if (IsDefined(e.multipleOf) && !(s % e.multipleOf === 0)) {
          yield Create(g.IntegerMultipleOf, e, r, s);
        }
      }
      function* FromIntersect(e, t, r, s) {
        for (const n of e.allOf) {
          const o = Visit(n, t, r, s).next();
          if (!o.done) {
            yield Create(g.Intersect, e, r, s);
            yield o.value;
          }
        }
        if (e.unevaluatedProperties === false) {
          const t = new RegExp((0, n.KeyOfPattern)(e));
          for (const n of Object.getOwnPropertyNames(s)) {
            if (!t.test(n)) {
              yield Create(g.IntersectUnevaluatedProperties, e, `${r}/${n}`, s);
            }
          }
        }
        if (typeof e.unevaluatedProperties === "object") {
          const o = new RegExp((0, n.KeyOfPattern)(e));
          for (const n of Object.getOwnPropertyNames(s)) {
            if (!o.test(n)) {
              const o = Visit(e.unevaluatedProperties, t, `${r}/${n}`, s[n]).next();
              if (!o.done) yield o.value;
            }
          }
        }
      }
      function* FromIterator(e, t, r, s) {
        if (!(0, u.IsIterator)(s)) yield Create(g.Iterator, e, r, s);
      }
      function* FromLiteral(e, t, r, s) {
        if (!(s === e.const)) yield Create(g.Literal, e, r, s);
      }
      function* FromNever(e, t, r, s) {
        yield Create(g.Never, e, r, s);
      }
      function* FromNot(e, t, r, s) {
        if (Visit(e.not, t, r, s).next().done === true) yield Create(g.Not, e, r, s);
      }
      function* FromNull(e, t, r, s) {
        if (!(0, u.IsNull)(s)) yield Create(g.Null, e, r, s);
      }
      function* FromNumber(e, t, r, n) {
        if (!s.TypeSystemPolicy.IsNumberLike(n)) return yield Create(g.Number, e, r, n);
        if (IsDefined(e.exclusiveMaximum) && !(n < e.exclusiveMaximum)) {
          yield Create(g.NumberExclusiveMaximum, e, r, n);
        }
        if (IsDefined(e.exclusiveMinimum) && !(n > e.exclusiveMinimum)) {
          yield Create(g.NumberExclusiveMinimum, e, r, n);
        }
        if (IsDefined(e.maximum) && !(n <= e.maximum)) {
          yield Create(g.NumberMaximum, e, r, n);
        }
        if (IsDefined(e.minimum) && !(n >= e.minimum)) {
          yield Create(g.NumberMinimum, e, r, n);
        }
        if (IsDefined(e.multipleOf) && !(n % e.multipleOf === 0)) {
          yield Create(g.NumberMultipleOf, e, r, n);
        }
      }
      function* FromObject(e, t, r, n) {
        if (!s.TypeSystemPolicy.IsObjectLike(n)) return yield Create(g.Object, e, r, n);
        if (IsDefined(e.minProperties) && !(Object.getOwnPropertyNames(n).length >= e.minProperties)) {
          yield Create(g.ObjectMinProperties, e, r, n);
        }
        if (IsDefined(e.maxProperties) && !(Object.getOwnPropertyNames(n).length <= e.maxProperties)) {
          yield Create(g.ObjectMaxProperties, e, r, n);
        }
        const o = Array.isArray(e.required) ? e.required : [];
        const a = Object.getOwnPropertyNames(e.properties);
        const A = Object.getOwnPropertyNames(n);
        for (const t of o) {
          if (A.includes(t)) continue;
          yield Create(g.ObjectRequiredProperty, e.properties[t], `${r}/${EscapeKey(t)}`, undefined);
        }
        if (e.additionalProperties === false) {
          for (const t of A) {
            if (!a.includes(t)) {
              yield Create(g.ObjectAdditionalProperties, e, `${r}/${EscapeKey(t)}`, n[t]);
            }
          }
        }
        if (typeof e.additionalProperties === "object") {
          for (const s of A) {
            if (a.includes(s)) continue;
            yield* Visit(e.additionalProperties, t, `${r}/${EscapeKey(s)}`, n[s]);
          }
        }
        for (const o of a) {
          const a = e.properties[o];
          if (e.required && e.required.includes(o)) {
            yield* Visit(a, t, `${r}/${EscapeKey(o)}`, n[o]);
            if ((0, i.ExtendsUndefinedCheck)(e) && !(o in n)) {
              yield Create(g.ObjectRequiredProperty, a, `${r}/${EscapeKey(o)}`, undefined);
            }
          } else {
            if (s.TypeSystemPolicy.IsExactOptionalProperty(n, o)) {
              yield* Visit(a, t, `${r}/${EscapeKey(o)}`, n[o]);
            }
          }
        }
      }
      function* FromPromise(e, t, r, s) {
        if (!(0, u.IsPromise)(s)) yield Create(g.Promise, e, r, s);
      }
      function* FromRecord(e, t, r, n) {
        if (!s.TypeSystemPolicy.IsRecordLike(n)) return yield Create(g.Object, e, r, n);
        if (IsDefined(e.minProperties) && !(Object.getOwnPropertyNames(n).length >= e.minProperties)) {
          yield Create(g.ObjectMinProperties, e, r, n);
        }
        if (IsDefined(e.maxProperties) && !(Object.getOwnPropertyNames(n).length <= e.maxProperties)) {
          yield Create(g.ObjectMaxProperties, e, r, n);
        }
        const [o, i] = Object.entries(e.patternProperties)[0];
        const a = new RegExp(o);
        for (const [e, s] of Object.entries(n)) {
          if (a.test(e)) yield* Visit(i, t, `${r}/${EscapeKey(e)}`, s);
        }
        if (typeof e.additionalProperties === "object") {
          for (const [s, o] of Object.entries(n)) {
            if (!a.test(s)) yield* Visit(e.additionalProperties, t, `${r}/${EscapeKey(s)}`, o);
          }
        }
        if (e.additionalProperties === false) {
          for (const [t, s] of Object.entries(n)) {
            if (a.test(t)) continue;
            return yield Create(g.ObjectAdditionalProperties, e, `${r}/${EscapeKey(t)}`, s);
          }
        }
      }
      function* FromRef(e, t, r, s) {
        yield* Visit((0, l.Deref)(e, t), t, r, s);
      }
      function* FromRegExp(e, t, r, s) {
        if (!(0, u.IsString)(s)) return yield Create(g.String, e, r, s);
        if (IsDefined(e.minLength) && !(s.length >= e.minLength)) {
          yield Create(g.StringMinLength, e, r, s);
        }
        if (IsDefined(e.maxLength) && !(s.length <= e.maxLength)) {
          yield Create(g.StringMaxLength, e, r, s);
        }
        const n = new RegExp(e.source, e.flags);
        if (!n.test(s)) {
          return yield Create(g.RegExp, e, r, s);
        }
      }
      function* FromString(e, t, r, s) {
        if (!(0, u.IsString)(s)) return yield Create(g.String, e, r, s);
        if (IsDefined(e.minLength) && !(s.length >= e.minLength)) {
          yield Create(g.StringMinLength, e, r, s);
        }
        if (IsDefined(e.maxLength) && !(s.length <= e.maxLength)) {
          yield Create(g.StringMaxLength, e, r, s);
        }
        if ((0, u.IsString)(e.pattern)) {
          const t = new RegExp(e.pattern);
          if (!t.test(s)) {
            yield Create(g.StringPattern, e, r, s);
          }
        }
        if ((0, u.IsString)(e.format)) {
          if (!o.FormatRegistry.Has(e.format)) {
            yield Create(g.StringFormatUnknown, e, r, s);
          } else {
            const t = o.FormatRegistry.Get(e.format);
            if (!t(s)) {
              yield Create(g.StringFormat, e, r, s);
            }
          }
        }
      }
      function* FromSymbol(e, t, r, s) {
        if (!(0, u.IsSymbol)(s)) yield Create(g.Symbol, e, r, s);
      }
      function* FromTemplateLiteral(e, t, r, s) {
        if (!(0, u.IsString)(s)) return yield Create(g.String, e, r, s);
        const n = new RegExp(e.pattern);
        if (!n.test(s)) {
          yield Create(g.StringPattern, e, r, s);
        }
      }
      function* FromThis(e, t, r, s) {
        yield* Visit((0, l.Deref)(e, t), t, r, s);
      }
      function* FromTuple(e, t, r, s) {
        if (!(0, u.IsArray)(s)) return yield Create(g.Tuple, e, r, s);
        if (e.items === undefined && !(s.length === 0)) {
          return yield Create(g.TupleLength, e, r, s);
        }
        if (!(s.length === e.maxItems)) {
          return yield Create(g.TupleLength, e, r, s);
        }
        if (!e.items) {
          return;
        }
        for (let n = 0; n < e.items.length; n++) {
          yield* Visit(e.items[n], t, `${r}/${n}`, s[n]);
        }
      }
      function* FromUndefined(e, t, r, s) {
        if (!(0, u.IsUndefined)(s)) yield Create(g.Undefined, e, r, s);
      }
      function* FromUnion(e, t, r, s) {
        let n = 0;
        for (const o of e.anyOf) {
          const e = [...Visit(o, t, r, s)];
          if (e.length === 0) return;
          n += e.length;
        }
        if (n > 0) {
          yield Create(g.Union, e, r, s);
        }
      }
      function* FromUint8Array(e, t, r, s) {
        if (!(0, u.IsUint8Array)(s)) return yield Create(g.Uint8Array, e, r, s);
        if (IsDefined(e.maxByteLength) && !(s.length <= e.maxByteLength)) {
          yield Create(g.Uint8ArrayMaxByteLength, e, r, s);
        }
        if (IsDefined(e.minByteLength) && !(s.length >= e.minByteLength)) {
          yield Create(g.Uint8ArrayMinByteLength, e, r, s);
        }
      }
      function* FromUnknown(e, t, r, s) {}
      function* FromVoid(e, t, r, n) {
        if (!s.TypeSystemPolicy.IsVoidLike(n)) yield Create(g.Void, e, r, n);
      }
      function* FromKind(e, t, r, s) {
        const n = o.TypeRegistry.Get(e[d.Kind]);
        if (!n(e, s)) yield Create(g.Kind, e, r, s);
      }
      function* Visit(e, t, r, s) {
        const n = IsDefined(e.$id) ? [...t, e] : t;
        const i = e;
        switch (i[d.Kind]) {
          case "Any":
            return yield* FromAny(i, n, r, s);
          case "Array":
            return yield* FromArray(i, n, r, s);
          case "AsyncIterator":
            return yield* FromAsyncIterator(i, n, r, s);
          case "BigInt":
            return yield* FromBigInt(i, n, r, s);
          case "Boolean":
            return yield* FromBoolean(i, n, r, s);
          case "Constructor":
            return yield* FromConstructor(i, n, r, s);
          case "Date":
            return yield* FromDate(i, n, r, s);
          case "Function":
            return yield* FromFunction(i, n, r, s);
          case "Integer":
            return yield* FromInteger(i, n, r, s);
          case "Intersect":
            return yield* FromIntersect(i, n, r, s);
          case "Iterator":
            return yield* FromIterator(i, n, r, s);
          case "Literal":
            return yield* FromLiteral(i, n, r, s);
          case "Never":
            return yield* FromNever(i, n, r, s);
          case "Not":
            return yield* FromNot(i, n, r, s);
          case "Null":
            return yield* FromNull(i, n, r, s);
          case "Number":
            return yield* FromNumber(i, n, r, s);
          case "Object":
            return yield* FromObject(i, n, r, s);
          case "Promise":
            return yield* FromPromise(i, n, r, s);
          case "Record":
            return yield* FromRecord(i, n, r, s);
          case "Ref":
            return yield* FromRef(i, n, r, s);
          case "RegExp":
            return yield* FromRegExp(i, n, r, s);
          case "String":
            return yield* FromString(i, n, r, s);
          case "Symbol":
            return yield* FromSymbol(i, n, r, s);
          case "TemplateLiteral":
            return yield* FromTemplateLiteral(i, n, r, s);
          case "This":
            return yield* FromThis(i, n, r, s);
          case "Tuple":
            return yield* FromTuple(i, n, r, s);
          case "Undefined":
            return yield* FromUndefined(i, n, r, s);
          case "Union":
            return yield* FromUnion(i, n, r, s);
          case "Uint8Array":
            return yield* FromUint8Array(i, n, r, s);
          case "Unknown":
            return yield* FromUnknown(i, n, r, s);
          case "Void":
            return yield* FromVoid(i, n, r, s);
          default:
            if (!o.TypeRegistry.Has(i[d.Kind])) throw new ValueErrorsUnknownTypeError(e);
            return yield* FromKind(i, n, r, s);
        }
      }
      function Errors(...e) {
        const t = e.length === 3 ? Visit(e[0], e[1], "", e[2]) : Visit(e[0], [], "", e[1]);
        return new ValueErrorIterator(t);
      }
      t.Errors = Errors;
    },
    84039: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.GetErrorFunction = t.SetErrorFunction = t.DefaultErrorFunction = void 0;
      const s = r(97034);
      const n = r(91660);
      function DefaultErrorFunction(e) {
        switch (e.errorType) {
          case n.ValueErrorType.ArrayContains:
            return "Expected array to contain at least one matching value";
          case n.ValueErrorType.ArrayMaxContains:
            return `Expected array to contain no more than ${e.schema.maxContains} matching values`;
          case n.ValueErrorType.ArrayMinContains:
            return `Expected array to contain at least ${e.schema.minContains} matching values`;
          case n.ValueErrorType.ArrayMaxItems:
            return `Expected array length to be less or equal to ${e.schema.maxItems}`;
          case n.ValueErrorType.ArrayMinItems:
            return `Expected array length to be greater or equal to ${e.schema.minItems}`;
          case n.ValueErrorType.ArrayUniqueItems:
            return "Expected array elements to be unique";
          case n.ValueErrorType.Array:
            return "Expected array";
          case n.ValueErrorType.AsyncIterator:
            return "Expected AsyncIterator";
          case n.ValueErrorType.BigIntExclusiveMaximum:
            return `Expected bigint to be less than ${e.schema.exclusiveMaximum}`;
          case n.ValueErrorType.BigIntExclusiveMinimum:
            return `Expected bigint to be greater than ${e.schema.exclusiveMinimum}`;
          case n.ValueErrorType.BigIntMaximum:
            return `Expected bigint to be less or equal to ${e.schema.maximum}`;
          case n.ValueErrorType.BigIntMinimum:
            return `Expected bigint to be greater or equal to ${e.schema.minimum}`;
          case n.ValueErrorType.BigIntMultipleOf:
            return `Expected bigint to be a multiple of ${e.schema.multipleOf}`;
          case n.ValueErrorType.BigInt:
            return "Expected bigint";
          case n.ValueErrorType.Boolean:
            return "Expected boolean";
          case n.ValueErrorType.DateExclusiveMinimumTimestamp:
            return `Expected Date timestamp to be greater than ${e.schema.exclusiveMinimumTimestamp}`;
          case n.ValueErrorType.DateExclusiveMaximumTimestamp:
            return `Expected Date timestamp to be less than ${e.schema.exclusiveMaximumTimestamp}`;
          case n.ValueErrorType.DateMinimumTimestamp:
            return `Expected Date timestamp to be greater or equal to ${e.schema.minimumTimestamp}`;
          case n.ValueErrorType.DateMaximumTimestamp:
            return `Expected Date timestamp to be less or equal to ${e.schema.maximumTimestamp}`;
          case n.ValueErrorType.DateMultipleOfTimestamp:
            return `Expected Date timestamp to be a multiple of ${e.schema.multipleOfTimestamp}`;
          case n.ValueErrorType.Date:
            return "Expected Date";
          case n.ValueErrorType.Function:
            return "Expected function";
          case n.ValueErrorType.IntegerExclusiveMaximum:
            return `Expected integer to be less than ${e.schema.exclusiveMaximum}`;
          case n.ValueErrorType.IntegerExclusiveMinimum:
            return `Expected integer to be greater than ${e.schema.exclusiveMinimum}`;
          case n.ValueErrorType.IntegerMaximum:
            return `Expected integer to be less or equal to ${e.schema.maximum}`;
          case n.ValueErrorType.IntegerMinimum:
            return `Expected integer to be greater or equal to ${e.schema.minimum}`;
          case n.ValueErrorType.IntegerMultipleOf:
            return `Expected integer to be a multiple of ${e.schema.multipleOf}`;
          case n.ValueErrorType.Integer:
            return "Expected integer";
          case n.ValueErrorType.IntersectUnevaluatedProperties:
            return "Unexpected property";
          case n.ValueErrorType.Intersect:
            return "Expected all values to match";
          case n.ValueErrorType.Iterator:
            return "Expected Iterator";
          case n.ValueErrorType.Literal:
            return `Expected ${typeof e.schema.const === "string" ? `'${e.schema.const}'` : e.schema.const}`;
          case n.ValueErrorType.Never:
            return "Never";
          case n.ValueErrorType.Not:
            return "Value should not match";
          case n.ValueErrorType.Null:
            return "Expected null";
          case n.ValueErrorType.NumberExclusiveMaximum:
            return `Expected number to be less than ${e.schema.exclusiveMaximum}`;
          case n.ValueErrorType.NumberExclusiveMinimum:
            return `Expected number to be greater than ${e.schema.exclusiveMinimum}`;
          case n.ValueErrorType.NumberMaximum:
            return `Expected number to be less or equal to ${e.schema.maximum}`;
          case n.ValueErrorType.NumberMinimum:
            return `Expected number to be greater or equal to ${e.schema.minimum}`;
          case n.ValueErrorType.NumberMultipleOf:
            return `Expected number to be a multiple of ${e.schema.multipleOf}`;
          case n.ValueErrorType.Number:
            return "Expected number";
          case n.ValueErrorType.Object:
            return "Expected object";
          case n.ValueErrorType.ObjectAdditionalProperties:
            return "Unexpected property";
          case n.ValueErrorType.ObjectMaxProperties:
            return `Expected object to have no more than ${e.schema.maxProperties} properties`;
          case n.ValueErrorType.ObjectMinProperties:
            return `Expected object to have at least ${e.schema.minProperties} properties`;
          case n.ValueErrorType.ObjectRequiredProperty:
            return "Required property";
          case n.ValueErrorType.Promise:
            return "Expected Promise";
          case n.ValueErrorType.RegExp:
            return "Expected string to match regular expression";
          case n.ValueErrorType.StringFormatUnknown:
            return `Unknown format '${e.schema.format}'`;
          case n.ValueErrorType.StringFormat:
            return `Expected string to match '${e.schema.format}' format`;
          case n.ValueErrorType.StringMaxLength:
            return `Expected string length less or equal to ${e.schema.maxLength}`;
          case n.ValueErrorType.StringMinLength:
            return `Expected string length greater or equal to ${e.schema.minLength}`;
          case n.ValueErrorType.StringPattern:
            return `Expected string to match '${e.schema.pattern}'`;
          case n.ValueErrorType.String:
            return "Expected string";
          case n.ValueErrorType.Symbol:
            return "Expected symbol";
          case n.ValueErrorType.TupleLength:
            return `Expected tuple to have ${e.schema.maxItems || 0} elements`;
          case n.ValueErrorType.Tuple:
            return "Expected tuple";
          case n.ValueErrorType.Uint8ArrayMaxByteLength:
            return `Expected byte length less or equal to ${e.schema.maxByteLength}`;
          case n.ValueErrorType.Uint8ArrayMinByteLength:
            return `Expected byte length greater or equal to ${e.schema.minByteLength}`;
          case n.ValueErrorType.Uint8Array:
            return "Expected Uint8Array";
          case n.ValueErrorType.Undefined:
            return "Expected undefined";
          case n.ValueErrorType.Union:
            return "Expected union value";
          case n.ValueErrorType.Void:
            return "Expected void";
          case n.ValueErrorType.Kind:
            return `Expected kind '${e.schema[s.Kind]}'`;
          default:
            return "Unknown error type";
        }
      }
      t.DefaultErrorFunction = DefaultErrorFunction;
      let o = DefaultErrorFunction;
      function SetErrorFunction(e) {
        o = e;
      }
      t.SetErrorFunction = SetErrorFunction;
      function GetErrorFunction() {
        return o;
      }
      t.GetErrorFunction = GetErrorFunction;
    },
    65507: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(91660), t);
      n(r(84039), t);
    },
    14019: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(91769), t);
      n(r(26113), t);
      n(r(64754), t);
      n(r(57782), t);
      n(r(94354), t);
      n(r(51786), t);
      n(r(12760), t);
      n(r(97034), t);
      n(r(36813), t);
      n(r(17186), t);
      n(r(68092), t);
      n(r(85164), t);
      n(r(13278), t);
      n(r(64515), t);
      n(r(80788), t);
      n(r(19236), t);
      n(r(16939), t);
      n(r(58562), t);
      n(r(49305), t);
      n(r(911), t);
      n(r(98056), t);
      n(r(41153), t);
      n(r(94850), t);
      n(r(69682), t);
      n(r(29857), t);
      n(r(86918), t);
      n(r(26277), t);
      n(r(4949), t);
      n(r(62746), t);
      n(r(35907), t);
      n(r(30568), t);
      n(r(73373), t);
      n(r(98076), t);
      n(r(41094), t);
      n(r(54025), t);
      n(r(1078), t);
      n(r(50468), t);
      n(r(85544), t);
      n(r(62094), t);
      n(r(88932), t);
      n(r(38425), t);
      n(r(30449), t);
      n(r(53345), t);
      n(r(40640), t);
      n(r(70062), t);
      n(r(40675), t);
      n(r(78946), t);
      n(r(30420), t);
      n(r(33107), t);
      n(r(80470), t);
      n(r(26936), t);
      n(r(42744), t);
      n(r(83003), t);
      n(r(32970), t);
      n(r(68954), t);
      n(r(60343), t);
      n(r(23556), t);
      n(r(81688), t);
      n(r(2129), t);
      n(r(26609), t);
      n(r(67575), t);
      n(r(7521), t);
      n(r(45760), t);
      n(r(96231), t);
      n(r(69100), t);
      n(r(51897), t);
      n(r(23339), t);
      n(r(81947), t);
      n(r(68237), t);
    },
    82129: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(17755), t);
      n(r(15912), t);
    },
    17755: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TypeSystemPolicy = void 0;
      const s = r(17479);
      var n;
      (function (e) {
        e.ExactOptionalPropertyTypes = false;
        e.AllowArrayObject = false;
        e.AllowNaN = false;
        e.AllowNullVoid = false;
        function IsExactOptionalProperty(t, r) {
          return e.ExactOptionalPropertyTypes ? r in t : t[r] !== undefined;
        }
        e.IsExactOptionalProperty = IsExactOptionalProperty;
        function IsObjectLike(t) {
          const r = (0, s.IsObject)(t);
          return e.AllowArrayObject ? r : r && !(0, s.IsArray)(t);
        }
        e.IsObjectLike = IsObjectLike;
        function IsRecordLike(e) {
          return IsObjectLike(e) && !(e instanceof Date) && !(e instanceof Uint8Array);
        }
        e.IsRecordLike = IsRecordLike;
        function IsNumberLike(t) {
          return e.AllowNaN ? (0, s.IsNumber)(t) : Number.isFinite(t);
        }
        e.IsNumberLike = IsNumberLike;
        function IsVoidLike(t) {
          const r = (0, s.IsUndefined)(t);
          return e.AllowNullVoid ? r || t === null : r;
        }
        e.IsVoidLike = IsVoidLike;
      })(n || (t.TypeSystemPolicy = n = {}));
    },
    15912: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TypeSystem = t.TypeSystemDuplicateFormat = t.TypeSystemDuplicateTypeKind = void 0;
      const s = r(51786);
      const n = r(23339);
      const o = r(97034);
      const i = r(26113);
      class TypeSystemDuplicateTypeKind extends i.TypeBoxError {
        constructor(e) {
          super(`Duplicate type kind '${e}' detected`);
        }
      }
      t.TypeSystemDuplicateTypeKind = TypeSystemDuplicateTypeKind;
      class TypeSystemDuplicateFormat extends i.TypeBoxError {
        constructor(e) {
          super(`Duplicate string format '${e}' detected`);
        }
      }
      t.TypeSystemDuplicateFormat = TypeSystemDuplicateFormat;
      var a;
      (function (e) {
        function Type(e, t) {
          if (s.TypeRegistry.Has(e)) throw new TypeSystemDuplicateTypeKind(e);
          s.TypeRegistry.Set(e, t);
          return (t = {}) => (0, n.Unsafe)({ ...t, [o.Kind]: e });
        }
        e.Type = Type;
        function Format(e, t) {
          if (s.FormatRegistry.Has(e)) throw new TypeSystemDuplicateFormat(e);
          s.FormatRegistry.Set(e, t);
          return e;
        }
        e.Format = Format;
      })(a || (t.TypeSystem = a = {}));
    },
    57815: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Any = void 0;
      const s = r(97034);
      function Any(e = {}) {
        return { ...e, [s.Kind]: "Any" };
      }
      t.Any = Any;
    },
    36813: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(57815), t);
    },
    45311: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Array = void 0;
      const s = r(38100);
      const n = r(97034);
      function Array(e, t = {}) {
        return { ...t, [n.Kind]: "Array", type: "array", items: (0, s.CloneType)(e) };
      }
      t.Array = Array;
    },
    17186: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(45311), t);
    },
    15007: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.AsyncIterator = void 0;
      const s = r(97034);
      const n = r(38100);
      function AsyncIterator(e, t = {}) {
        return { ...t, [s.Kind]: "AsyncIterator", type: "AsyncIterator", items: (0, n.CloneType)(e) };
      }
      t.AsyncIterator = AsyncIterator;
    },
    68092: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(15007), t);
    },
    68263: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Awaited = void 0;
      const s = r(62746);
      const n = r(69100);
      const o = r(38100);
      const i = r(96994);
      function FromRest(e) {
        return e.map((e) => AwaitedResolve(e));
      }
      function FromIntersect(e) {
        return (0, s.Intersect)(FromRest(e));
      }
      function FromUnion(e) {
        return (0, n.Union)(FromRest(e));
      }
      function FromPromise(e) {
        return AwaitedResolve(e);
      }
      function AwaitedResolve(e) {
        return (0, i.IsIntersect)(e) ? FromIntersect(e.allOf) : (0, i.IsUnion)(e) ? FromUnion(e.anyOf) : (0, i.IsPromise)(e) ? FromPromise(e.item) : e;
      }
      function Awaited(e, t = {}) {
        return (0, o.CloneType)(AwaitedResolve(e), t);
      }
      t.Awaited = Awaited;
    },
    85164: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(68263), t);
    },
    9495: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.BigInt = void 0;
      const s = r(97034);
      function BigInt(e = {}) {
        return { ...e, [s.Kind]: "BigInt", type: "bigint" };
      }
      t.BigInt = BigInt;
    },
    13278: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(9495), t);
    },
    53715: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Boolean = void 0;
      const s = r(97034);
      function Boolean(e = {}) {
        return { ...e, [s.Kind]: "Boolean", type: "boolean" };
      }
      t.Boolean = Boolean;
    },
    64515: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(53715), t);
    },
    91769: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(38100), t);
      n(r(80387), t);
    },
    38100: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.CloneType = t.CloneRest = void 0;
      const s = r(80387);
      function CloneRest(e) {
        return e.map((e) => CloneType(e));
      }
      t.CloneRest = CloneRest;
      function CloneType(e, t = {}) {
        return { ...(0, s.Clone)(e), ...t };
      }
      t.CloneType = CloneType;
    },
    80387: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Clone = void 0;
      const s = r(13415);
      function ArrayType(e) {
        return e.map((e) => Visit(e));
      }
      function DateType(e) {
        return new Date(e.getTime());
      }
      function Uint8ArrayType(e) {
        return new Uint8Array(e);
      }
      function RegExpType(e) {
        return new RegExp(e.source, e.flags);
      }
      function ObjectType(e) {
        const t = {};
        for (const r of Object.getOwnPropertyNames(e)) {
          t[r] = Visit(e[r]);
        }
        for (const r of Object.getOwnPropertySymbols(e)) {
          t[r] = Visit(e[r]);
        }
        return t;
      }
      function Visit(e) {
        return s.IsArray(e)
          ? ArrayType(e)
          : s.IsDate(e)
            ? DateType(e)
            : s.IsUint8Array(e)
              ? Uint8ArrayType(e)
              : s.IsRegExp(e)
                ? RegExpType(e)
                : s.IsObject(e)
                  ? ObjectType(e)
                  : e;
      }
      function Clone(e) {
        return Visit(e);
      }
      t.Clone = Clone;
    },
    67263: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Composite = void 0;
      const s = r(62746);
      const n = r(86918);
      const o = r(73373);
      const i = r(62094);
      const a = r(12760);
      const A = r(96994);
      function CompositeKeys(e) {
        const t = [];
        for (const r of e) t.push(...(0, o.KeyOfPropertyKeys)(r));
        return (0, a.SetDistinct)(t);
      }
      function FilterNever(e) {
        return e.filter((e) => !(0, A.IsNever)(e));
      }
      function CompositeProperty(e, t) {
        const r = [];
        for (const s of e) r.push(...(0, n.IndexFromPropertyKeys)(s, [t]));
        return FilterNever(r);
      }
      function CompositeProperties(e, t) {
        const r = {};
        for (const n of t) {
          r[n] = (0, s.IntersectEvaluated)(CompositeProperty(e, n));
        }
        return r;
      }
      function Composite(e, t = {}) {
        const r = CompositeKeys(e);
        const s = CompositeProperties(e, r);
        const n = (0, i.Object)(s, t);
        return n;
      }
      t.Composite = Composite;
    },
    80788: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(67263), t);
    },
    54191: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Const = void 0;
      const s = r(36813);
      const n = r(13278);
      const o = r(49305);
      const i = r(29857);
      const a = r(98076);
      const A = r(50468);
      const l = r(62094);
      const c = r(2129);
      const d = r(7521);
      const p = r(40675);
      const u = r(96231);
      const g = r(45760);
      const m = r(51897);
      const h = r(91769);
      const E = r(13415);
      function FromArray(e) {
        return e.map((e) => FromValue(e, false));
      }
      function FromProperties(e) {
        const t = {};
        for (const r of globalThis.Object.getOwnPropertyNames(e)) t[r] = (0, p.Readonly)(FromValue(e[r], false));
        return t;
      }
      function ConditionalReadonly(e, t) {
        return t === true ? e : (0, p.Readonly)(e);
      }
      function FromValue(e, t) {
        return (0, E.IsAsyncIterator)(e)
          ? ConditionalReadonly((0, s.Any)(), t)
          : (0, E.IsIterator)(e)
            ? ConditionalReadonly((0, s.Any)(), t)
            : (0, E.IsArray)(e)
              ? (0, p.Readonly)((0, d.Tuple)(FromArray(e)))
              : (0, E.IsUint8Array)(e)
                ? (0, g.Uint8Array)()
                : (0, E.IsDate)(e)
                  ? (0, o.Date)()
                  : (0, E.IsObject)(e)
                    ? ConditionalReadonly((0, l.Object)(FromProperties(e)), t)
                    : (0, E.IsFunction)(e)
                      ? ConditionalReadonly((0, i.Function)([], (0, m.Unknown)()), t)
                      : (0, E.IsUndefined)(e)
                        ? (0, u.Undefined)()
                        : (0, E.IsNull)(e)
                          ? (0, A.Null)()
                          : (0, E.IsSymbol)(e)
                            ? (0, c.Symbol)()
                            : (0, E.IsBigInt)(e)
                              ? (0, n.BigInt)()
                              : (0, E.IsNumber)(e)
                                ? (0, a.Literal)(e)
                                : (0, E.IsBoolean)(e)
                                  ? (0, a.Literal)(e)
                                  : (0, E.IsString)(e)
                                    ? (0, a.Literal)(e)
                                    : (0, l.Object)({});
      }
      function Const(e, t = {}) {
        return (0, h.CloneType)(FromValue(e, true), t);
      }
      t.Const = Const;
    },
    19236: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(54191), t);
    },
    96127: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ConstructorParameters = void 0;
      const s = r(7521);
      const n = r(38100);
      function ConstructorParameters(e, t = {}) {
        return (0, s.Tuple)((0, n.CloneRest)(e.parameters), { ...t });
      }
      t.ConstructorParameters = ConstructorParameters;
    },
    58562: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(96127), t);
    },
    89035: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Constructor = void 0;
      const s = r(38100);
      const n = r(97034);
      function Constructor(e, t, r) {
        return { ...r, [n.Kind]: "Constructor", type: "Constructor", parameters: (0, s.CloneRest)(e), returns: (0, s.CloneType)(t) };
      }
      t.Constructor = Constructor;
    },
    16939: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(89035), t);
    },
    7617: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Date = void 0;
      const s = r(97034);
      function Date(e = {}) {
        return { ...e, [s.Kind]: "Date", type: "Date" };
      }
      t.Date = Date;
    },
    49305: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(7617), t);
    },
    79911: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Deref = void 0;
      const s = r(38100);
      const n = r(83889);
      const o = r(13415);
      const i = r(96994);
      function FromRest(e, t) {
        return e.map((e) => Deref(e, t));
      }
      function FromProperties(e, t) {
        const r = {};
        for (const s of globalThis.Object.getOwnPropertyNames(e)) {
          r[s] = Deref(e[s], t);
        }
        return r;
      }
      function FromConstructor(e, t) {
        e.parameters = FromRest(e.parameters, t);
        e.returns = Deref(e.returns, t);
        return e;
      }
      function FromFunction(e, t) {
        e.parameters = FromRest(e.parameters, t);
        e.returns = Deref(e.returns, t);
        return e;
      }
      function FromIntersect(e, t) {
        e.allOf = FromRest(e.allOf, t);
        return e;
      }
      function FromUnion(e, t) {
        e.anyOf = FromRest(e.anyOf, t);
        return e;
      }
      function FromTuple(e, t) {
        if ((0, o.IsUndefined)(e.items)) return e;
        e.items = FromRest(e.items, t);
        return e;
      }
      function FromArray(e, t) {
        e.items = Deref(e.items, t);
        return e;
      }
      function FromObject(e, t) {
        e.properties = FromProperties(e.properties, t);
        return e;
      }
      function FromPromise(e, t) {
        e.item = Deref(e.item, t);
        return e;
      }
      function FromAsyncIterator(e, t) {
        e.items = Deref(e.items, t);
        return e;
      }
      function FromIterator(e, t) {
        e.items = Deref(e.items, t);
        return e;
      }
      function FromRef(e, t) {
        const r = t.find((t) => t.$id === e.$ref);
        if (r === undefined) throw Error(`Unable to dereference schema with $id ${e.$ref}`);
        const s = (0, n.Discard)(r, ["$id"]);
        return Deref(s, t);
      }
      function DerefResolve(e, t) {
        return (0, i.IsConstructor)(e)
          ? FromConstructor(e, t)
          : (0, i.IsFunction)(e)
            ? FromFunction(e, t)
            : (0, i.IsIntersect)(e)
              ? FromIntersect(e, t)
              : (0, i.IsUnion)(e)
                ? FromUnion(e, t)
                : (0, i.IsTuple)(e)
                  ? FromTuple(e, t)
                  : (0, i.IsArray)(e)
                    ? FromArray(e, t)
                    : (0, i.IsObject)(e)
                      ? FromObject(e, t)
                      : (0, i.IsPromise)(e)
                        ? FromPromise(e, t)
                        : (0, i.IsAsyncIterator)(e)
                          ? FromAsyncIterator(e, t)
                          : (0, i.IsIterator)(e)
                            ? FromIterator(e, t)
                            : (0, i.IsRef)(e)
                              ? FromRef(e, t)
                              : e;
      }
      function Deref(e, t) {
        return DerefResolve((0, s.CloneType)(e), (0, s.CloneRest)(t));
      }
      t.Deref = Deref;
    },
    911: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(79911), t);
    },
    8147: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Discard = void 0;
      function DiscardKey(e, t) {
        const { [t]: r, ...s } = e;
        return s;
      }
      function Discard(e, t) {
        return t.reduce((e, t) => DiscardKey(e, t), e);
      }
      t.Discard = Discard;
    },
    83889: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(8147), t);
    },
    77991: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Enum = void 0;
      const s = r(98076);
      const n = r(97034);
      const o = r(69100);
      const i = r(13415);
      function Enum(e, t = {}) {
        if ((0, i.IsUndefined)(e)) throw new Error("Enum undefined or empty");
        const r = globalThis.Object.getOwnPropertyNames(e)
          .filter((e) => isNaN(e))
          .map((t) => e[t]);
        const a = [...new Set(r)];
        const A = a.map((e) => (0, s.Literal)(e));
        return (0, o.Union)(A, { ...t, [n.Hint]: "Enum" });
      }
      t.Enum = Enum;
    },
    98056: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(77991), t);
    },
    85523: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TypeBoxError = void 0;
      class TypeBoxError extends Error {
        constructor(e) {
          super(e);
        }
      }
      t.TypeBoxError = TypeBoxError;
    },
    26113: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(85523), t);
    },
    92094: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ExcludeFromMappedResult = void 0;
      const s = r(41094);
      const n = r(63651);
      function FromProperties(e, t) {
        const r = {};
        for (const s of globalThis.Object.getOwnPropertyNames(e)) r[s] = (0, n.Exclude)(e[s], t);
        return r;
      }
      function FromMappedResult(e, t) {
        return FromProperties(e.properties, t);
      }
      function ExcludeFromMappedResult(e, t) {
        const r = FromMappedResult(e, t);
        return (0, s.MappedResult)(r);
      }
      t.ExcludeFromMappedResult = ExcludeFromMappedResult;
    },
    9505: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ExcludeFromTemplateLiteral = void 0;
      const s = r(63651);
      const n = r(26609);
      function ExcludeFromTemplateLiteral(e, t) {
        return (0, s.Exclude)((0, n.TemplateLiteralToUnion)(e), t);
      }
      t.ExcludeFromTemplateLiteral = ExcludeFromTemplateLiteral;
    },
    63651: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Exclude = void 0;
      const s = r(69100);
      const n = r(54025);
      const o = r(94850);
      const i = r(38100);
      const a = r(92094);
      const A = r(9505);
      const l = r(96994);
      function ExcludeRest(e, t) {
        const r = e.filter((e) => (0, o.ExtendsCheck)(e, t) === o.ExtendsResult.False);
        return r.length === 1 ? r[0] : (0, s.Union)(r);
      }
      function Exclude(e, t, r = {}) {
        if ((0, l.IsTemplateLiteral)(e)) return (0, i.CloneType)((0, A.ExcludeFromTemplateLiteral)(e, t), r);
        if ((0, l.IsMappedResult)(e)) return (0, i.CloneType)((0, a.ExcludeFromMappedResult)(e, t), r);
        return (0, i.CloneType)((0, l.IsUnion)(e) ? ExcludeRest(e.anyOf, t) : (0, o.ExtendsCheck)(e, t) !== o.ExtendsResult.False ? (0, n.Never)() : e, r);
      }
      t.Exclude = Exclude;
    },
    41153: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(92094), t);
      n(r(9505), t);
      n(r(63651), t);
    },
    18410: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ExtendsCheck = t.ExtendsResult = t.ExtendsResolverError = void 0;
      const s = r(36813);
      const n = r(29857);
      const o = r(85544);
      const i = r(81688);
      const a = r(51897);
      const A = r(26609);
      const l = r(94354);
      const c = r(97034);
      const d = r(26113);
      const p = r(64754);
      class ExtendsResolverError extends d.TypeBoxError {}
      t.ExtendsResolverError = ExtendsResolverError;
      var u;
      (function (e) {
        e[(e["Union"] = 0)] = "Union";
        e[(e["True"] = 1)] = "True";
        e[(e["False"] = 2)] = "False";
      })(u || (t.ExtendsResult = u = {}));
      function IntoBooleanResult(e) {
        return e === u.False ? e : u.True;
      }
      function Throw(e) {
        throw new ExtendsResolverError(e);
      }
      function IsStructuralRight(e) {
        return p.TypeGuard.IsNever(e) || p.TypeGuard.IsIntersect(e) || p.TypeGuard.IsUnion(e) || p.TypeGuard.IsUnknown(e) || p.TypeGuard.IsAny(e);
      }
      function StructuralRight(e, t) {
        return p.TypeGuard.IsNever(t)
          ? FromNeverRight(e, t)
          : p.TypeGuard.IsIntersect(t)
            ? FromIntersectRight(e, t)
            : p.TypeGuard.IsUnion(t)
              ? FromUnionRight(e, t)
              : p.TypeGuard.IsUnknown(t)
                ? FromUnknownRight(e, t)
                : p.TypeGuard.IsAny(t)
                  ? FromAnyRight(e, t)
                  : Throw("StructuralRight");
      }
      function FromAnyRight(e, t) {
        return u.True;
      }
      function FromAny(e, t) {
        return p.TypeGuard.IsIntersect(t)
          ? FromIntersectRight(e, t)
          : p.TypeGuard.IsUnion(t) && t.anyOf.some((e) => p.TypeGuard.IsAny(e) || p.TypeGuard.IsUnknown(e))
            ? u.True
            : p.TypeGuard.IsUnion(t)
              ? u.Union
              : p.TypeGuard.IsUnknown(t)
                ? u.True
                : p.TypeGuard.IsAny(t)
                  ? u.True
                  : u.Union;
      }
      function FromArrayRight(e, t) {
        return p.TypeGuard.IsUnknown(e) ? u.False : p.TypeGuard.IsAny(e) ? u.Union : p.TypeGuard.IsNever(e) ? u.True : u.False;
      }
      function FromArray(e, t) {
        return p.TypeGuard.IsObject(t) && IsObjectArrayLike(t)
          ? u.True
          : IsStructuralRight(t)
            ? StructuralRight(e, t)
            : !p.TypeGuard.IsArray(t)
              ? u.False
              : IntoBooleanResult(Visit(e.items, t.items));
      }
      function FromAsyncIterator(e, t) {
        return IsStructuralRight(t) ? StructuralRight(e, t) : !p.TypeGuard.IsAsyncIterator(t) ? u.False : IntoBooleanResult(Visit(e.items, t.items));
      }
      function FromBigInt(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t)
            ? FromObjectRight(e, t)
            : p.TypeGuard.IsRecord(t)
              ? FromRecordRight(e, t)
              : p.TypeGuard.IsBigInt(t)
                ? u.True
                : u.False;
      }
      function FromBooleanRight(e, t) {
        return p.TypeGuard.IsLiteralBoolean(e) ? u.True : p.TypeGuard.IsBoolean(e) ? u.True : u.False;
      }
      function FromBoolean(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t)
            ? FromObjectRight(e, t)
            : p.TypeGuard.IsRecord(t)
              ? FromRecordRight(e, t)
              : p.TypeGuard.IsBoolean(t)
                ? u.True
                : u.False;
      }
      function FromConstructor(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t)
            ? FromObjectRight(e, t)
            : !p.TypeGuard.IsConstructor(t)
              ? u.False
              : e.parameters.length > t.parameters.length
                ? u.False
                : !e.parameters.every((e, r) => IntoBooleanResult(Visit(t.parameters[r], e)) === u.True)
                  ? u.False
                  : IntoBooleanResult(Visit(e.returns, t.returns));
      }
      function FromDate(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t)
            ? FromObjectRight(e, t)
            : p.TypeGuard.IsRecord(t)
              ? FromRecordRight(e, t)
              : p.TypeGuard.IsDate(t)
                ? u.True
                : u.False;
      }
      function FromFunction(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t)
            ? FromObjectRight(e, t)
            : !p.TypeGuard.IsFunction(t)
              ? u.False
              : e.parameters.length > t.parameters.length
                ? u.False
                : !e.parameters.every((e, r) => IntoBooleanResult(Visit(t.parameters[r], e)) === u.True)
                  ? u.False
                  : IntoBooleanResult(Visit(e.returns, t.returns));
      }
      function FromIntegerRight(e, t) {
        return p.TypeGuard.IsLiteral(e) && p.ValueGuard.IsNumber(e.const) ? u.True : p.TypeGuard.IsNumber(e) || p.TypeGuard.IsInteger(e) ? u.True : u.False;
      }
      function FromInteger(e, t) {
        return p.TypeGuard.IsInteger(t) || p.TypeGuard.IsNumber(t)
          ? u.True
          : IsStructuralRight(t)
            ? StructuralRight(e, t)
            : p.TypeGuard.IsObject(t)
              ? FromObjectRight(e, t)
              : p.TypeGuard.IsRecord(t)
                ? FromRecordRight(e, t)
                : u.False;
      }
      function FromIntersectRight(e, t) {
        return t.allOf.every((t) => Visit(e, t) === u.True) ? u.True : u.False;
      }
      function FromIntersect(e, t) {
        return e.allOf.some((e) => Visit(e, t) === u.True) ? u.True : u.False;
      }
      function FromIterator(e, t) {
        return IsStructuralRight(t) ? StructuralRight(e, t) : !p.TypeGuard.IsIterator(t) ? u.False : IntoBooleanResult(Visit(e.items, t.items));
      }
      function FromLiteral(e, t) {
        return p.TypeGuard.IsLiteral(t) && t.const === e.const
          ? u.True
          : IsStructuralRight(t)
            ? StructuralRight(e, t)
            : p.TypeGuard.IsObject(t)
              ? FromObjectRight(e, t)
              : p.TypeGuard.IsRecord(t)
                ? FromRecordRight(e, t)
                : p.TypeGuard.IsString(t)
                  ? FromStringRight(e, t)
                  : p.TypeGuard.IsNumber(t)
                    ? FromNumberRight(e, t)
                    : p.TypeGuard.IsInteger(t)
                      ? FromIntegerRight(e, t)
                      : p.TypeGuard.IsBoolean(t)
                        ? FromBooleanRight(e, t)
                        : u.False;
      }
      function FromNeverRight(e, t) {
        return u.False;
      }
      function FromNever(e, t) {
        return u.True;
      }
      function UnwrapTNot(e) {
        let [t, r] = [e, 0];
        while (true) {
          if (!p.TypeGuard.IsNot(t)) break;
          t = t.not;
          r += 1;
        }
        return r % 2 === 0 ? t : (0, a.Unknown)();
      }
      function FromNot(e, t) {
        return p.TypeGuard.IsNot(e) ? Visit(UnwrapTNot(e), t) : p.TypeGuard.IsNot(t) ? Visit(e, UnwrapTNot(t)) : Throw("Invalid fallthrough for Not");
      }
      function FromNull(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t)
            ? FromObjectRight(e, t)
            : p.TypeGuard.IsRecord(t)
              ? FromRecordRight(e, t)
              : p.TypeGuard.IsNull(t)
                ? u.True
                : u.False;
      }
      function FromNumberRight(e, t) {
        return p.TypeGuard.IsLiteralNumber(e) ? u.True : p.TypeGuard.IsNumber(e) || p.TypeGuard.IsInteger(e) ? u.True : u.False;
      }
      function FromNumber(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t)
            ? FromObjectRight(e, t)
            : p.TypeGuard.IsRecord(t)
              ? FromRecordRight(e, t)
              : p.TypeGuard.IsInteger(t) || p.TypeGuard.IsNumber(t)
                ? u.True
                : u.False;
      }
      function IsObjectPropertyCount(e, t) {
        return Object.getOwnPropertyNames(e.properties).length === t;
      }
      function IsObjectStringLike(e) {
        return IsObjectArrayLike(e);
      }
      function IsObjectSymbolLike(e) {
        return (
          IsObjectPropertyCount(e, 0) ||
          (IsObjectPropertyCount(e, 1) &&
            "description" in e.properties &&
            p.TypeGuard.IsUnion(e.properties.description) &&
            e.properties.description.anyOf.length === 2 &&
            ((p.TypeGuard.IsString(e.properties.description.anyOf[0]) && p.TypeGuard.IsUndefined(e.properties.description.anyOf[1])) ||
              (p.TypeGuard.IsString(e.properties.description.anyOf[1]) && p.TypeGuard.IsUndefined(e.properties.description.anyOf[0]))))
        );
      }
      function IsObjectNumberLike(e) {
        return IsObjectPropertyCount(e, 0);
      }
      function IsObjectBooleanLike(e) {
        return IsObjectPropertyCount(e, 0);
      }
      function IsObjectBigIntLike(e) {
        return IsObjectPropertyCount(e, 0);
      }
      function IsObjectDateLike(e) {
        return IsObjectPropertyCount(e, 0);
      }
      function IsObjectUint8ArrayLike(e) {
        return IsObjectArrayLike(e);
      }
      function IsObjectFunctionLike(e) {
        const t = (0, o.Number)();
        return (
          IsObjectPropertyCount(e, 0) ||
          (IsObjectPropertyCount(e, 1) && "length" in e.properties && IntoBooleanResult(Visit(e.properties["length"], t)) === u.True)
        );
      }
      function IsObjectConstructorLike(e) {
        return IsObjectPropertyCount(e, 0);
      }
      function IsObjectArrayLike(e) {
        const t = (0, o.Number)();
        return (
          IsObjectPropertyCount(e, 0) ||
          (IsObjectPropertyCount(e, 1) && "length" in e.properties && IntoBooleanResult(Visit(e.properties["length"], t)) === u.True)
        );
      }
      function IsObjectPromiseLike(e) {
        const t = (0, n.Function)([(0, s.Any)()], (0, s.Any)());
        return (
          IsObjectPropertyCount(e, 0) || (IsObjectPropertyCount(e, 1) && "then" in e.properties && IntoBooleanResult(Visit(e.properties["then"], t)) === u.True)
        );
      }
      function Property(e, t) {
        return Visit(e, t) === u.False ? u.False : p.TypeGuard.IsOptional(e) && !p.TypeGuard.IsOptional(t) ? u.False : u.True;
      }
      function FromObjectRight(e, t) {
        return p.TypeGuard.IsUnknown(e)
          ? u.False
          : p.TypeGuard.IsAny(e)
            ? u.Union
            : p.TypeGuard.IsNever(e) ||
                (p.TypeGuard.IsLiteralString(e) && IsObjectStringLike(t)) ||
                (p.TypeGuard.IsLiteralNumber(e) && IsObjectNumberLike(t)) ||
                (p.TypeGuard.IsLiteralBoolean(e) && IsObjectBooleanLike(t)) ||
                (p.TypeGuard.IsSymbol(e) && IsObjectSymbolLike(t)) ||
                (p.TypeGuard.IsBigInt(e) && IsObjectBigIntLike(t)) ||
                (p.TypeGuard.IsString(e) && IsObjectStringLike(t)) ||
                (p.TypeGuard.IsSymbol(e) && IsObjectSymbolLike(t)) ||
                (p.TypeGuard.IsNumber(e) && IsObjectNumberLike(t)) ||
                (p.TypeGuard.IsInteger(e) && IsObjectNumberLike(t)) ||
                (p.TypeGuard.IsBoolean(e) && IsObjectBooleanLike(t)) ||
                (p.TypeGuard.IsUint8Array(e) && IsObjectUint8ArrayLike(t)) ||
                (p.TypeGuard.IsDate(e) && IsObjectDateLike(t)) ||
                (p.TypeGuard.IsConstructor(e) && IsObjectConstructorLike(t)) ||
                (p.TypeGuard.IsFunction(e) && IsObjectFunctionLike(t))
              ? u.True
              : p.TypeGuard.IsRecord(e) && p.TypeGuard.IsString(RecordKey(e))
                ? (() => (t[c.Hint] === "Record" ? u.True : u.False))()
                : p.TypeGuard.IsRecord(e) && p.TypeGuard.IsNumber(RecordKey(e))
                  ? (() => (IsObjectPropertyCount(t, 0) ? u.True : u.False))()
                  : u.False;
      }
      function FromObject(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsRecord(t)
            ? FromRecordRight(e, t)
            : !p.TypeGuard.IsObject(t)
              ? u.False
              : (() => {
                  for (const r of Object.getOwnPropertyNames(t.properties)) {
                    if (!(r in e.properties) && !p.TypeGuard.IsOptional(t.properties[r])) {
                      return u.False;
                    }
                    if (p.TypeGuard.IsOptional(t.properties[r])) {
                      return u.True;
                    }
                    if (Property(e.properties[r], t.properties[r]) === u.False) {
                      return u.False;
                    }
                  }
                  return u.True;
                })();
      }
      function FromPromise(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t) && IsObjectPromiseLike(t)
            ? u.True
            : !p.TypeGuard.IsPromise(t)
              ? u.False
              : IntoBooleanResult(Visit(e.item, t.item));
      }
      function RecordKey(e) {
        return l.PatternNumberExact in e.patternProperties
          ? (0, o.Number)()
          : l.PatternStringExact in e.patternProperties
            ? (0, i.String)()
            : Throw("Unknown record key pattern");
      }
      function RecordValue(e) {
        return l.PatternNumberExact in e.patternProperties
          ? e.patternProperties[l.PatternNumberExact]
          : l.PatternStringExact in e.patternProperties
            ? e.patternProperties[l.PatternStringExact]
            : Throw("Unable to get record value schema");
      }
      function FromRecordRight(e, t) {
        const [r, s] = [RecordKey(t), RecordValue(t)];
        return p.TypeGuard.IsLiteralString(e) && p.TypeGuard.IsNumber(r) && IntoBooleanResult(Visit(e, s)) === u.True
          ? u.True
          : p.TypeGuard.IsUint8Array(e) && p.TypeGuard.IsNumber(r)
            ? Visit(e, s)
            : p.TypeGuard.IsString(e) && p.TypeGuard.IsNumber(r)
              ? Visit(e, s)
              : p.TypeGuard.IsArray(e) && p.TypeGuard.IsNumber(r)
                ? Visit(e, s)
                : p.TypeGuard.IsObject(e)
                  ? (() => {
                      for (const t of Object.getOwnPropertyNames(e.properties)) {
                        if (Property(s, e.properties[t]) === u.False) {
                          return u.False;
                        }
                      }
                      return u.True;
                    })()
                  : u.False;
      }
      function FromRecord(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t)
            ? FromObjectRight(e, t)
            : !p.TypeGuard.IsRecord(t)
              ? u.False
              : Visit(RecordValue(e), RecordValue(t));
      }
      function FromRegExp(e, t) {
        const r = p.TypeGuard.IsRegExp(e) ? (0, i.String)() : e;
        const s = p.TypeGuard.IsRegExp(t) ? (0, i.String)() : t;
        return Visit(r, s);
      }
      function FromStringRight(e, t) {
        return p.TypeGuard.IsLiteral(e) && p.ValueGuard.IsString(e.const) ? u.True : p.TypeGuard.IsString(e) ? u.True : u.False;
      }
      function FromString(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t)
            ? FromObjectRight(e, t)
            : p.TypeGuard.IsRecord(t)
              ? FromRecordRight(e, t)
              : p.TypeGuard.IsString(t)
                ? u.True
                : u.False;
      }
      function FromSymbol(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t)
            ? FromObjectRight(e, t)
            : p.TypeGuard.IsRecord(t)
              ? FromRecordRight(e, t)
              : p.TypeGuard.IsSymbol(t)
                ? u.True
                : u.False;
      }
      function FromTemplateLiteral(e, t) {
        return p.TypeGuard.IsTemplateLiteral(e)
          ? Visit((0, A.TemplateLiteralToUnion)(e), t)
          : p.TypeGuard.IsTemplateLiteral(t)
            ? Visit(e, (0, A.TemplateLiteralToUnion)(t))
            : Throw("Invalid fallthrough for TemplateLiteral");
      }
      function IsArrayOfTuple(e, t) {
        return p.TypeGuard.IsArray(t) && e.items !== undefined && e.items.every((e) => Visit(e, t.items) === u.True);
      }
      function FromTupleRight(e, t) {
        return p.TypeGuard.IsNever(e) ? u.True : p.TypeGuard.IsUnknown(e) ? u.False : p.TypeGuard.IsAny(e) ? u.Union : u.False;
      }
      function FromTuple(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t) && IsObjectArrayLike(t)
            ? u.True
            : p.TypeGuard.IsArray(t) && IsArrayOfTuple(e, t)
              ? u.True
              : !p.TypeGuard.IsTuple(t)
                ? u.False
                : (p.ValueGuard.IsUndefined(e.items) && !p.ValueGuard.IsUndefined(t.items)) ||
                    (!p.ValueGuard.IsUndefined(e.items) && p.ValueGuard.IsUndefined(t.items))
                  ? u.False
                  : p.ValueGuard.IsUndefined(e.items) && !p.ValueGuard.IsUndefined(t.items)
                    ? u.True
                    : e.items.every((e, r) => Visit(e, t.items[r]) === u.True)
                      ? u.True
                      : u.False;
      }
      function FromUint8Array(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t)
            ? FromObjectRight(e, t)
            : p.TypeGuard.IsRecord(t)
              ? FromRecordRight(e, t)
              : p.TypeGuard.IsUint8Array(t)
                ? u.True
                : u.False;
      }
      function FromUndefined(e, t) {
        return IsStructuralRight(t)
          ? StructuralRight(e, t)
          : p.TypeGuard.IsObject(t)
            ? FromObjectRight(e, t)
            : p.TypeGuard.IsRecord(t)
              ? FromRecordRight(e, t)
              : p.TypeGuard.IsVoid(t)
                ? FromVoidRight(e, t)
                : p.TypeGuard.IsUndefined(t)
                  ? u.True
                  : u.False;
      }
      function FromUnionRight(e, t) {
        return t.anyOf.some((t) => Visit(e, t) === u.True) ? u.True : u.False;
      }
      function FromUnion(e, t) {
        return e.anyOf.every((e) => Visit(e, t) === u.True) ? u.True : u.False;
      }
      function FromUnknownRight(e, t) {
        return u.True;
      }
      function FromUnknown(e, t) {
        return p.TypeGuard.IsNever(t)
          ? FromNeverRight(e, t)
          : p.TypeGuard.IsIntersect(t)
            ? FromIntersectRight(e, t)
            : p.TypeGuard.IsUnion(t)
              ? FromUnionRight(e, t)
              : p.TypeGuard.IsAny(t)
                ? FromAnyRight(e, t)
                : p.TypeGuard.IsString(t)
                  ? FromStringRight(e, t)
                  : p.TypeGuard.IsNumber(t)
                    ? FromNumberRight(e, t)
                    : p.TypeGuard.IsInteger(t)
                      ? FromIntegerRight(e, t)
                      : p.TypeGuard.IsBoolean(t)
                        ? FromBooleanRight(e, t)
                        : p.TypeGuard.IsArray(t)
                          ? FromArrayRight(e, t)
                          : p.TypeGuard.IsTuple(t)
                            ? FromTupleRight(e, t)
                            : p.TypeGuard.IsObject(t)
                              ? FromObjectRight(e, t)
                              : p.TypeGuard.IsUnknown(t)
                                ? u.True
                                : u.False;
      }
      function FromVoidRight(e, t) {
        return p.TypeGuard.IsUndefined(e) ? u.True : p.TypeGuard.IsUndefined(e) ? u.True : u.False;
      }
      function FromVoid(e, t) {
        return p.TypeGuard.IsIntersect(t)
          ? FromIntersectRight(e, t)
          : p.TypeGuard.IsUnion(t)
            ? FromUnionRight(e, t)
            : p.TypeGuard.IsUnknown(t)
              ? FromUnknownRight(e, t)
              : p.TypeGuard.IsAny(t)
                ? FromAnyRight(e, t)
                : p.TypeGuard.IsObject(t)
                  ? FromObjectRight(e, t)
                  : p.TypeGuard.IsVoid(t)
                    ? u.True
                    : u.False;
      }
      function Visit(e, t) {
        return p.TypeGuard.IsTemplateLiteral(e) || p.TypeGuard.IsTemplateLiteral(t)
          ? FromTemplateLiteral(e, t)
          : p.TypeGuard.IsRegExp(e) || p.TypeGuard.IsRegExp(t)
            ? FromRegExp(e, t)
            : p.TypeGuard.IsNot(e) || p.TypeGuard.IsNot(t)
              ? FromNot(e, t)
              : p.TypeGuard.IsAny(e)
                ? FromAny(e, t)
                : p.TypeGuard.IsArray(e)
                  ? FromArray(e, t)
                  : p.TypeGuard.IsBigInt(e)
                    ? FromBigInt(e, t)
                    : p.TypeGuard.IsBoolean(e)
                      ? FromBoolean(e, t)
                      : p.TypeGuard.IsAsyncIterator(e)
                        ? FromAsyncIterator(e, t)
                        : p.TypeGuard.IsConstructor(e)
                          ? FromConstructor(e, t)
                          : p.TypeGuard.IsDate(e)
                            ? FromDate(e, t)
                            : p.TypeGuard.IsFunction(e)
                              ? FromFunction(e, t)
                              : p.TypeGuard.IsInteger(e)
                                ? FromInteger(e, t)
                                : p.TypeGuard.IsIntersect(e)
                                  ? FromIntersect(e, t)
                                  : p.TypeGuard.IsIterator(e)
                                    ? FromIterator(e, t)
                                    : p.TypeGuard.IsLiteral(e)
                                      ? FromLiteral(e, t)
                                      : p.TypeGuard.IsNever(e)
                                        ? FromNever(e, t)
                                        : p.TypeGuard.IsNull(e)
                                          ? FromNull(e, t)
                                          : p.TypeGuard.IsNumber(e)
                                            ? FromNumber(e, t)
                                            : p.TypeGuard.IsObject(e)
                                              ? FromObject(e, t)
                                              : p.TypeGuard.IsRecord(e)
                                                ? FromRecord(e, t)
                                                : p.TypeGuard.IsString(e)
                                                  ? FromString(e, t)
                                                  : p.TypeGuard.IsSymbol(e)
                                                    ? FromSymbol(e, t)
                                                    : p.TypeGuard.IsTuple(e)
                                                      ? FromTuple(e, t)
                                                      : p.TypeGuard.IsPromise(e)
                                                        ? FromPromise(e, t)
                                                        : p.TypeGuard.IsUint8Array(e)
                                                          ? FromUint8Array(e, t)
                                                          : p.TypeGuard.IsUndefined(e)
                                                            ? FromUndefined(e, t)
                                                            : p.TypeGuard.IsUnion(e)
                                                              ? FromUnion(e, t)
                                                              : p.TypeGuard.IsUnknown(e)
                                                                ? FromUnknown(e, t)
                                                                : p.TypeGuard.IsVoid(e)
                                                                  ? FromVoid(e, t)
                                                                  : Throw(`Unknown left type operand '${e[c.Kind]}'`);
      }
      function ExtendsCheck(e, t) {
        return Visit(e, t);
      }
      t.ExtendsCheck = ExtendsCheck;
    },
    83948: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ExtendsFromMappedKey = void 0;
      const s = r(41094);
      const n = r(98076);
      const o = r(34263);
      function FromPropertyKey(e, t, r, s, i) {
        return { [e]: (0, o.Extends)((0, n.Literal)(e), t, r, s, i) };
      }
      function FromPropertyKeys(e, t, r, s, n) {
        return e.reduce((e, o) => ({ ...e, ...FromPropertyKey(o, t, r, s, n) }), {});
      }
      function FromMappedKey(e, t, r, s, n) {
        return FromPropertyKeys(e.keys, t, r, s, n);
      }
      function ExtendsFromMappedKey(e, t, r, n, o) {
        const i = FromMappedKey(e, t, r, n, o);
        return (0, s.MappedResult)(i);
      }
      t.ExtendsFromMappedKey = ExtendsFromMappedKey;
    },
    80338: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ExtendsFromMappedResult = void 0;
      const s = r(41094);
      const n = r(34263);
      function FromProperties(e, t, r, s, o) {
        const i = {};
        for (const a of globalThis.Object.getOwnPropertyNames(e)) i[a] = (0, n.Extends)(e[a], t, r, s, o);
        return i;
      }
      function FromMappedResult(e, t, r, s, n) {
        return FromProperties(e.properties, t, r, s, n);
      }
      function ExtendsFromMappedResult(e, t, r, n, o) {
        const i = FromMappedResult(e, t, r, n, o);
        return (0, s.MappedResult)(i);
      }
      t.ExtendsFromMappedResult = ExtendsFromMappedResult;
    },
    82486: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ExtendsUndefinedCheck = void 0;
      const s = r(97034);
      function Intersect(e) {
        return e.allOf.every((e) => ExtendsUndefinedCheck(e));
      }
      function Union(e) {
        return e.anyOf.some((e) => ExtendsUndefinedCheck(e));
      }
      function Not(e) {
        return !ExtendsUndefinedCheck(e.not);
      }
      function ExtendsUndefinedCheck(e) {
        return e[s.Kind] === "Intersect"
          ? Intersect(e)
          : e[s.Kind] === "Union"
            ? Union(e)
            : e[s.Kind] === "Not"
              ? Not(e)
              : e[s.Kind] === "Undefined"
                ? true
                : false;
      }
      t.ExtendsUndefinedCheck = ExtendsUndefinedCheck;
    },
    34263: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Extends = void 0;
      const s = r(69100);
      const n = r(18410);
      const o = r(38100);
      const i = r(83948);
      const a = r(80338);
      const A = r(96994);
      function ExtendsResolve(e, t, r, o) {
        const i = (0, n.ExtendsCheck)(e, t);
        return i === n.ExtendsResult.Union ? (0, s.Union)([r, o]) : i === n.ExtendsResult.True ? r : o;
      }
      function Extends(e, t, r, s, n = {}) {
        return (0, A.IsMappedResult)(e)
          ? (0, a.ExtendsFromMappedResult)(e, t, r, s, n)
          : (0, A.IsMappedKey)(e)
            ? (0, o.CloneType)((0, i.ExtendsFromMappedKey)(e, t, r, s, n))
            : (0, o.CloneType)(ExtendsResolve(e, t, r, s), n);
      }
      t.Extends = Extends;
    },
    94850: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(18410), t);
      n(r(83948), t);
      n(r(80338), t);
      n(r(82486), t);
      n(r(34263), t);
    },
    70826: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ExtractFromMappedResult = void 0;
      const s = r(41094);
      const n = r(4847);
      function FromProperties(e, t) {
        const r = {};
        for (const s of globalThis.Object.getOwnPropertyNames(e)) r[s] = (0, n.Extract)(e[s], t);
        return r;
      }
      function FromMappedResult(e, t) {
        return FromProperties(e.properties, t);
      }
      function ExtractFromMappedResult(e, t) {
        const r = FromMappedResult(e, t);
        return (0, s.MappedResult)(r);
      }
      t.ExtractFromMappedResult = ExtractFromMappedResult;
    },
    50253: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ExtractFromTemplateLiteral = void 0;
      const s = r(4847);
      const n = r(26609);
      function ExtractFromTemplateLiteral(e, t) {
        return (0, s.Extract)((0, n.TemplateLiteralToUnion)(e), t);
      }
      t.ExtractFromTemplateLiteral = ExtractFromTemplateLiteral;
    },
    4847: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Extract = void 0;
      const s = r(69100);
      const n = r(54025);
      const o = r(94850);
      const i = r(38100);
      const a = r(70826);
      const A = r(50253);
      const l = r(96994);
      function ExtractRest(e, t) {
        const r = e.filter((e) => (0, o.ExtendsCheck)(e, t) !== o.ExtendsResult.False);
        return r.length === 1 ? r[0] : (0, s.Union)(r);
      }
      function Extract(e, t, r = {}) {
        if ((0, l.IsTemplateLiteral)(e)) return (0, i.CloneType)((0, A.ExtractFromTemplateLiteral)(e, t), r);
        if ((0, l.IsMappedResult)(e)) return (0, i.CloneType)((0, a.ExtractFromMappedResult)(e, t), r);
        return (0, i.CloneType)((0, l.IsUnion)(e) ? ExtractRest(e.anyOf, t) : (0, o.ExtendsCheck)(e, t) !== o.ExtendsResult.False ? e : (0, n.Never)(), r);
      }
      t.Extract = Extract;
    },
    69682: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(70826), t);
      n(r(50253), t);
      n(r(4847), t);
    },
    93649: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Function = void 0;
      const s = r(38100);
      const n = r(97034);
      function Function(e, t, r) {
        return { ...r, [n.Kind]: "Function", type: "Function", parameters: (0, s.CloneRest)(e), returns: (0, s.CloneType)(t) };
      }
      t.Function = Function;
    },
    29857: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(93649), t);
    },
    64754: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ValueGuard = t.TypeGuard = t.KindGuard = void 0;
      t.KindGuard = r(96994);
      t.TypeGuard = r(70384);
      t.ValueGuard = r(13415);
    },
    96994: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.IsSchema =
        t.IsKind =
        t.IsVoid =
        t.IsUnsafe =
        t.IsUnknown =
        t.IsUint8Array =
        t.IsUnion =
        t.IsUndefined =
        t.IsTuple =
        t.IsTransform =
        t.IsThis =
        t.IsTemplateLiteral =
        t.IsSymbol =
        t.IsString =
        t.IsRegExp =
        t.IsRef =
        t.IsRecursive =
        t.IsRecord =
        t.IsPromise =
        t.IsObject =
        t.IsNumber =
        t.IsNull =
        t.IsNot =
        t.IsNever =
        t.IsMappedResult =
        t.IsMappedKey =
        t.IsLiteral =
        t.IsLiteralBoolean =
        t.IsLiteralNumber =
        t.IsLiteralString =
        t.IsKindOf =
        t.IsIterator =
        t.IsIntersect =
        t.IsProperties =
        t.IsInteger =
        t.IsFunction =
        t.IsDate =
        t.IsConstructor =
        t.IsBoolean =
        t.IsBigInt =
        t.IsAsyncIterator =
        t.IsArray =
        t.IsAny =
        t.IsOptional =
        t.IsReadonly =
          void 0;
      const s = r(13415);
      const n = r(97034);
      function IsReadonly(e) {
        return s.IsObject(e) && e[n.ReadonlyKind] === "Readonly";
      }
      t.IsReadonly = IsReadonly;
      function IsOptional(e) {
        return s.IsObject(e) && e[n.OptionalKind] === "Optional";
      }
      t.IsOptional = IsOptional;
      function IsAny(e) {
        return IsKindOf(e, "Any");
      }
      t.IsAny = IsAny;
      function IsArray(e) {
        return IsKindOf(e, "Array");
      }
      t.IsArray = IsArray;
      function IsAsyncIterator(e) {
        return IsKindOf(e, "AsyncIterator");
      }
      t.IsAsyncIterator = IsAsyncIterator;
      function IsBigInt(e) {
        return IsKindOf(e, "BigInt");
      }
      t.IsBigInt = IsBigInt;
      function IsBoolean(e) {
        return IsKindOf(e, "Boolean");
      }
      t.IsBoolean = IsBoolean;
      function IsConstructor(e) {
        return IsKindOf(e, "Constructor");
      }
      t.IsConstructor = IsConstructor;
      function IsDate(e) {
        return IsKindOf(e, "Date");
      }
      t.IsDate = IsDate;
      function IsFunction(e) {
        return IsKindOf(e, "Function");
      }
      t.IsFunction = IsFunction;
      function IsInteger(e) {
        return IsKindOf(e, "Integer");
      }
      t.IsInteger = IsInteger;
      function IsProperties(e) {
        return s.IsObject(e);
      }
      t.IsProperties = IsProperties;
      function IsIntersect(e) {
        return IsKindOf(e, "Intersect");
      }
      t.IsIntersect = IsIntersect;
      function IsIterator(e) {
        return IsKindOf(e, "Iterator");
      }
      t.IsIterator = IsIterator;
      function IsKindOf(e, t) {
        return s.IsObject(e) && n.Kind in e && e[n.Kind] === t;
      }
      t.IsKindOf = IsKindOf;
      function IsLiteralString(e) {
        return IsLiteral(e) && s.IsString(e.const);
      }
      t.IsLiteralString = IsLiteralString;
      function IsLiteralNumber(e) {
        return IsLiteral(e) && s.IsNumber(e.const);
      }
      t.IsLiteralNumber = IsLiteralNumber;
      function IsLiteralBoolean(e) {
        return IsLiteral(e) && s.IsBoolean(e.const);
      }
      t.IsLiteralBoolean = IsLiteralBoolean;
      function IsLiteral(e) {
        return IsKindOf(e, "Literal");
      }
      t.IsLiteral = IsLiteral;
      function IsMappedKey(e) {
        return IsKindOf(e, "MappedKey");
      }
      t.IsMappedKey = IsMappedKey;
      function IsMappedResult(e) {
        return IsKindOf(e, "MappedResult");
      }
      t.IsMappedResult = IsMappedResult;
      function IsNever(e) {
        return IsKindOf(e, "Never");
      }
      t.IsNever = IsNever;
      function IsNot(e) {
        return IsKindOf(e, "Not");
      }
      t.IsNot = IsNot;
      function IsNull(e) {
        return IsKindOf(e, "Null");
      }
      t.IsNull = IsNull;
      function IsNumber(e) {
        return IsKindOf(e, "Number");
      }
      t.IsNumber = IsNumber;
      function IsObject(e) {
        return IsKindOf(e, "Object");
      }
      t.IsObject = IsObject;
      function IsPromise(e) {
        return IsKindOf(e, "Promise");
      }
      t.IsPromise = IsPromise;
      function IsRecord(e) {
        return IsKindOf(e, "Record");
      }
      t.IsRecord = IsRecord;
      function IsRecursive(e) {
        return s.IsObject(e) && n.Hint in e && e[n.Hint] === "Recursive";
      }
      t.IsRecursive = IsRecursive;
      function IsRef(e) {
        return IsKindOf(e, "Ref");
      }
      t.IsRef = IsRef;
      function IsRegExp(e) {
        return IsKindOf(e, "RegExp");
      }
      t.IsRegExp = IsRegExp;
      function IsString(e) {
        return IsKindOf(e, "String");
      }
      t.IsString = IsString;
      function IsSymbol(e) {
        return IsKindOf(e, "Symbol");
      }
      t.IsSymbol = IsSymbol;
      function IsTemplateLiteral(e) {
        return IsKindOf(e, "TemplateLiteral");
      }
      t.IsTemplateLiteral = IsTemplateLiteral;
      function IsThis(e) {
        return IsKindOf(e, "This");
      }
      t.IsThis = IsThis;
      function IsTransform(e) {
        return s.IsObject(e) && n.TransformKind in e;
      }
      t.IsTransform = IsTransform;
      function IsTuple(e) {
        return IsKindOf(e, "Tuple");
      }
      t.IsTuple = IsTuple;
      function IsUndefined(e) {
        return IsKindOf(e, "Undefined");
      }
      t.IsUndefined = IsUndefined;
      function IsUnion(e) {
        return IsKindOf(e, "Union");
      }
      t.IsUnion = IsUnion;
      function IsUint8Array(e) {
        return IsKindOf(e, "Uint8Array");
      }
      t.IsUint8Array = IsUint8Array;
      function IsUnknown(e) {
        return IsKindOf(e, "Unknown");
      }
      t.IsUnknown = IsUnknown;
      function IsUnsafe(e) {
        return IsKindOf(e, "Unsafe");
      }
      t.IsUnsafe = IsUnsafe;
      function IsVoid(e) {
        return IsKindOf(e, "Void");
      }
      t.IsVoid = IsVoid;
      function IsKind(e) {
        return s.IsObject(e) && n.Kind in e && s.IsString(e[n.Kind]);
      }
      t.IsKind = IsKind;
      function IsSchema(e) {
        return (
          IsAny(e) ||
          IsArray(e) ||
          IsBoolean(e) ||
          IsBigInt(e) ||
          IsAsyncIterator(e) ||
          IsConstructor(e) ||
          IsDate(e) ||
          IsFunction(e) ||
          IsInteger(e) ||
          IsIntersect(e) ||
          IsIterator(e) ||
          IsLiteral(e) ||
          IsMappedKey(e) ||
          IsMappedResult(e) ||
          IsNever(e) ||
          IsNot(e) ||
          IsNull(e) ||
          IsNumber(e) ||
          IsObject(e) ||
          IsPromise(e) ||
          IsRecord(e) ||
          IsRef(e) ||
          IsRegExp(e) ||
          IsString(e) ||
          IsSymbol(e) ||
          IsTemplateLiteral(e) ||
          IsThis(e) ||
          IsTuple(e) ||
          IsUndefined(e) ||
          IsUnion(e) ||
          IsUint8Array(e) ||
          IsUnknown(e) ||
          IsUnsafe(e) ||
          IsVoid(e) ||
          IsKind(e)
        );
      }
      t.IsSchema = IsSchema;
    },
    70384: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.IsSchema =
        t.IsKind =
        t.IsVoid =
        t.IsUnsafe =
        t.IsUnknown =
        t.IsUint8Array =
        t.IsUnion =
        t.IsUnionLiteral =
        t.IsUndefined =
        t.IsTuple =
        t.IsTransform =
        t.IsThis =
        t.IsTemplateLiteral =
        t.IsSymbol =
        t.IsString =
        t.IsRegExp =
        t.IsRef =
        t.IsRecursive =
        t.IsRecord =
        t.IsPromise =
        t.IsObject =
        t.IsNumber =
        t.IsNull =
        t.IsNot =
        t.IsNever =
        t.IsMappedResult =
        t.IsMappedKey =
        t.IsLiteralValue =
        t.IsLiteral =
        t.IsLiteralBoolean =
        t.IsLiteralNumber =
        t.IsLiteralString =
        t.IsKindOf =
        t.IsIterator =
        t.IsIntersect =
        t.IsProperties =
        t.IsInteger =
        t.IsFunction =
        t.IsDate =
        t.IsConstructor =
        t.IsBoolean =
        t.IsBigInt =
        t.IsAsyncIterator =
        t.IsArray =
        t.IsAny =
        t.IsOptional =
        t.IsReadonly =
        t.TypeGuardUnknownTypeError =
          void 0;
      const s = r(13415);
      const n = r(97034);
      const o = r(26113);
      class TypeGuardUnknownTypeError extends o.TypeBoxError {}
      t.TypeGuardUnknownTypeError = TypeGuardUnknownTypeError;
      const i = [
        "Any",
        "Array",
        "AsyncIterator",
        "BigInt",
        "Boolean",
        "Constructor",
        "Date",
        "Enum",
        "Function",
        "Integer",
        "Intersect",
        "Iterator",
        "Literal",
        "MappedKey",
        "MappedResult",
        "Not",
        "Null",
        "Number",
        "Object",
        "Promise",
        "Record",
        "Ref",
        "RegExp",
        "String",
        "Symbol",
        "TemplateLiteral",
        "This",
        "Tuple",
        "Undefined",
        "Union",
        "Uint8Array",
        "Unknown",
        "Void",
      ];
      function IsPattern(e) {
        try {
          new RegExp(e);
          return true;
        } catch {
          return false;
        }
      }
      function IsControlCharacterFree(e) {
        if (!s.IsString(e)) return false;
        for (let t = 0; t < e.length; t++) {
          const r = e.charCodeAt(t);
          if ((r >= 7 && r <= 13) || r === 27 || r === 127) {
            return false;
          }
        }
        return true;
      }
      function IsAdditionalProperties(e) {
        return IsOptionalBoolean(e) || IsSchema(e);
      }
      function IsOptionalBigInt(e) {
        return s.IsUndefined(e) || s.IsBigInt(e);
      }
      function IsOptionalNumber(e) {
        return s.IsUndefined(e) || s.IsNumber(e);
      }
      function IsOptionalBoolean(e) {
        return s.IsUndefined(e) || s.IsBoolean(e);
      }
      function IsOptionalString(e) {
        return s.IsUndefined(e) || s.IsString(e);
      }
      function IsOptionalPattern(e) {
        return s.IsUndefined(e) || (s.IsString(e) && IsControlCharacterFree(e) && IsPattern(e));
      }
      function IsOptionalFormat(e) {
        return s.IsUndefined(e) || (s.IsString(e) && IsControlCharacterFree(e));
      }
      function IsOptionalSchema(e) {
        return s.IsUndefined(e) || IsSchema(e);
      }
      function IsReadonly(e) {
        return s.IsObject(e) && e[n.ReadonlyKind] === "Readonly";
      }
      t.IsReadonly = IsReadonly;
      function IsOptional(e) {
        return s.IsObject(e) && e[n.OptionalKind] === "Optional";
      }
      t.IsOptional = IsOptional;
      function IsAny(e) {
        return IsKindOf(e, "Any") && IsOptionalString(e.$id);
      }
      t.IsAny = IsAny;
      function IsArray(e) {
        return (
          IsKindOf(e, "Array") &&
          e.type === "array" &&
          IsOptionalString(e.$id) &&
          IsSchema(e.items) &&
          IsOptionalNumber(e.minItems) &&
          IsOptionalNumber(e.maxItems) &&
          IsOptionalBoolean(e.uniqueItems) &&
          IsOptionalSchema(e.contains) &&
          IsOptionalNumber(e.minContains) &&
          IsOptionalNumber(e.maxContains)
        );
      }
      t.IsArray = IsArray;
      function IsAsyncIterator(e) {
        return IsKindOf(e, "AsyncIterator") && e.type === "AsyncIterator" && IsOptionalString(e.$id) && IsSchema(e.items);
      }
      t.IsAsyncIterator = IsAsyncIterator;
      function IsBigInt(e) {
        return (
          IsKindOf(e, "BigInt") &&
          e.type === "bigint" &&
          IsOptionalString(e.$id) &&
          IsOptionalBigInt(e.exclusiveMaximum) &&
          IsOptionalBigInt(e.exclusiveMinimum) &&
          IsOptionalBigInt(e.maximum) &&
          IsOptionalBigInt(e.minimum) &&
          IsOptionalBigInt(e.multipleOf)
        );
      }
      t.IsBigInt = IsBigInt;
      function IsBoolean(e) {
        return IsKindOf(e, "Boolean") && e.type === "boolean" && IsOptionalString(e.$id);
      }
      t.IsBoolean = IsBoolean;
      function IsConstructor(e) {
        return (
          IsKindOf(e, "Constructor") &&
          e.type === "Constructor" &&
          IsOptionalString(e.$id) &&
          s.IsArray(e.parameters) &&
          e.parameters.every((e) => IsSchema(e)) &&
          IsSchema(e.returns)
        );
      }
      t.IsConstructor = IsConstructor;
      function IsDate(e) {
        return (
          IsKindOf(e, "Date") &&
          e.type === "Date" &&
          IsOptionalString(e.$id) &&
          IsOptionalNumber(e.exclusiveMaximumTimestamp) &&
          IsOptionalNumber(e.exclusiveMinimumTimestamp) &&
          IsOptionalNumber(e.maximumTimestamp) &&
          IsOptionalNumber(e.minimumTimestamp) &&
          IsOptionalNumber(e.multipleOfTimestamp)
        );
      }
      t.IsDate = IsDate;
      function IsFunction(e) {
        return (
          IsKindOf(e, "Function") &&
          e.type === "Function" &&
          IsOptionalString(e.$id) &&
          s.IsArray(e.parameters) &&
          e.parameters.every((e) => IsSchema(e)) &&
          IsSchema(e.returns)
        );
      }
      t.IsFunction = IsFunction;
      function IsInteger(e) {
        return (
          IsKindOf(e, "Integer") &&
          e.type === "integer" &&
          IsOptionalString(e.$id) &&
          IsOptionalNumber(e.exclusiveMaximum) &&
          IsOptionalNumber(e.exclusiveMinimum) &&
          IsOptionalNumber(e.maximum) &&
          IsOptionalNumber(e.minimum) &&
          IsOptionalNumber(e.multipleOf)
        );
      }
      t.IsInteger = IsInteger;
      function IsProperties(e) {
        return s.IsObject(e) && Object.entries(e).every(([e, t]) => IsControlCharacterFree(e) && IsSchema(t));
      }
      t.IsProperties = IsProperties;
      function IsIntersect(e) {
        return (
          IsKindOf(e, "Intersect") &&
          (s.IsString(e.type) && e.type !== "object" ? false : true) &&
          s.IsArray(e.allOf) &&
          e.allOf.every((e) => IsSchema(e) && !IsTransform(e)) &&
          IsOptionalString(e.type) &&
          (IsOptionalBoolean(e.unevaluatedProperties) || IsOptionalSchema(e.unevaluatedProperties)) &&
          IsOptionalString(e.$id)
        );
      }
      t.IsIntersect = IsIntersect;
      function IsIterator(e) {
        return IsKindOf(e, "Iterator") && e.type === "Iterator" && IsOptionalString(e.$id) && IsSchema(e.items);
      }
      t.IsIterator = IsIterator;
      function IsKindOf(e, t) {
        return s.IsObject(e) && n.Kind in e && e[n.Kind] === t;
      }
      t.IsKindOf = IsKindOf;
      function IsLiteralString(e) {
        return IsLiteral(e) && s.IsString(e.const);
      }
      t.IsLiteralString = IsLiteralString;
      function IsLiteralNumber(e) {
        return IsLiteral(e) && s.IsNumber(e.const);
      }
      t.IsLiteralNumber = IsLiteralNumber;
      function IsLiteralBoolean(e) {
        return IsLiteral(e) && s.IsBoolean(e.const);
      }
      t.IsLiteralBoolean = IsLiteralBoolean;
      function IsLiteral(e) {
        return IsKindOf(e, "Literal") && IsOptionalString(e.$id) && IsLiteralValue(e.const);
      }
      t.IsLiteral = IsLiteral;
      function IsLiteralValue(e) {
        return s.IsBoolean(e) || s.IsNumber(e) || s.IsString(e);
      }
      t.IsLiteralValue = IsLiteralValue;
      function IsMappedKey(e) {
        return IsKindOf(e, "MappedKey") && s.IsArray(e.keys) && e.keys.every((e) => s.IsNumber(e) || s.IsString(e));
      }
      t.IsMappedKey = IsMappedKey;
      function IsMappedResult(e) {
        return IsKindOf(e, "MappedResult") && IsProperties(e.properties);
      }
      t.IsMappedResult = IsMappedResult;
      function IsNever(e) {
        return IsKindOf(e, "Never") && s.IsObject(e.not) && Object.getOwnPropertyNames(e.not).length === 0;
      }
      t.IsNever = IsNever;
      function IsNot(e) {
        return IsKindOf(e, "Not") && IsSchema(e.not);
      }
      t.IsNot = IsNot;
      function IsNull(e) {
        return IsKindOf(e, "Null") && e.type === "null" && IsOptionalString(e.$id);
      }
      t.IsNull = IsNull;
      function IsNumber(e) {
        return (
          IsKindOf(e, "Number") &&
          e.type === "number" &&
          IsOptionalString(e.$id) &&
          IsOptionalNumber(e.exclusiveMaximum) &&
          IsOptionalNumber(e.exclusiveMinimum) &&
          IsOptionalNumber(e.maximum) &&
          IsOptionalNumber(e.minimum) &&
          IsOptionalNumber(e.multipleOf)
        );
      }
      t.IsNumber = IsNumber;
      function IsObject(e) {
        return (
          IsKindOf(e, "Object") &&
          e.type === "object" &&
          IsOptionalString(e.$id) &&
          IsProperties(e.properties) &&
          IsAdditionalProperties(e.additionalProperties) &&
          IsOptionalNumber(e.minProperties) &&
          IsOptionalNumber(e.maxProperties)
        );
      }
      t.IsObject = IsObject;
      function IsPromise(e) {
        return IsKindOf(e, "Promise") && e.type === "Promise" && IsOptionalString(e.$id) && IsSchema(e.item);
      }
      t.IsPromise = IsPromise;
      function IsRecord(e) {
        return (
          IsKindOf(e, "Record") &&
          e.type === "object" &&
          IsOptionalString(e.$id) &&
          IsAdditionalProperties(e.additionalProperties) &&
          s.IsObject(e.patternProperties) &&
          ((e) => {
            const t = Object.getOwnPropertyNames(e.patternProperties);
            return t.length === 1 && IsPattern(t[0]) && s.IsObject(e.patternProperties) && IsSchema(e.patternProperties[t[0]]);
          })(e)
        );
      }
      t.IsRecord = IsRecord;
      function IsRecursive(e) {
        return s.IsObject(e) && n.Hint in e && e[n.Hint] === "Recursive";
      }
      t.IsRecursive = IsRecursive;
      function IsRef(e) {
        return IsKindOf(e, "Ref") && IsOptionalString(e.$id) && s.IsString(e.$ref);
      }
      t.IsRef = IsRef;
      function IsRegExp(e) {
        return (
          IsKindOf(e, "RegExp") &&
          IsOptionalString(e.$id) &&
          s.IsString(e.source) &&
          s.IsString(e.flags) &&
          IsOptionalNumber(e.maxLength) &&
          IsOptionalNumber(e.minLength)
        );
      }
      t.IsRegExp = IsRegExp;
      function IsString(e) {
        return (
          IsKindOf(e, "String") &&
          e.type === "string" &&
          IsOptionalString(e.$id) &&
          IsOptionalNumber(e.minLength) &&
          IsOptionalNumber(e.maxLength) &&
          IsOptionalPattern(e.pattern) &&
          IsOptionalFormat(e.format)
        );
      }
      t.IsString = IsString;
      function IsSymbol(e) {
        return IsKindOf(e, "Symbol") && e.type === "symbol" && IsOptionalString(e.$id);
      }
      t.IsSymbol = IsSymbol;
      function IsTemplateLiteral(e) {
        return (
          IsKindOf(e, "TemplateLiteral") && e.type === "string" && s.IsString(e.pattern) && e.pattern[0] === "^" && e.pattern[e.pattern.length - 1] === "$"
        );
      }
      t.IsTemplateLiteral = IsTemplateLiteral;
      function IsThis(e) {
        return IsKindOf(e, "This") && IsOptionalString(e.$id) && s.IsString(e.$ref);
      }
      t.IsThis = IsThis;
      function IsTransform(e) {
        return s.IsObject(e) && n.TransformKind in e;
      }
      t.IsTransform = IsTransform;
      function IsTuple(e) {
        return (
          IsKindOf(e, "Tuple") &&
          e.type === "array" &&
          IsOptionalString(e.$id) &&
          s.IsNumber(e.minItems) &&
          s.IsNumber(e.maxItems) &&
          e.minItems === e.maxItems &&
          ((s.IsUndefined(e.items) && s.IsUndefined(e.additionalItems) && e.minItems === 0) || (s.IsArray(e.items) && e.items.every((e) => IsSchema(e))))
        );
      }
      t.IsTuple = IsTuple;
      function IsUndefined(e) {
        return IsKindOf(e, "Undefined") && e.type === "undefined" && IsOptionalString(e.$id);
      }
      t.IsUndefined = IsUndefined;
      function IsUnionLiteral(e) {
        return IsUnion(e) && e.anyOf.every((e) => IsLiteralString(e) || IsLiteralNumber(e));
      }
      t.IsUnionLiteral = IsUnionLiteral;
      function IsUnion(e) {
        return IsKindOf(e, "Union") && IsOptionalString(e.$id) && s.IsObject(e) && s.IsArray(e.anyOf) && e.anyOf.every((e) => IsSchema(e));
      }
      t.IsUnion = IsUnion;
      function IsUint8Array(e) {
        return (
          IsKindOf(e, "Uint8Array") &&
          e.type === "Uint8Array" &&
          IsOptionalString(e.$id) &&
          IsOptionalNumber(e.minByteLength) &&
          IsOptionalNumber(e.maxByteLength)
        );
      }
      t.IsUint8Array = IsUint8Array;
      function IsUnknown(e) {
        return IsKindOf(e, "Unknown") && IsOptionalString(e.$id);
      }
      t.IsUnknown = IsUnknown;
      function IsUnsafe(e) {
        return IsKindOf(e, "Unsafe");
      }
      t.IsUnsafe = IsUnsafe;
      function IsVoid(e) {
        return IsKindOf(e, "Void") && e.type === "void" && IsOptionalString(e.$id);
      }
      t.IsVoid = IsVoid;
      function IsKind(e) {
        return s.IsObject(e) && n.Kind in e && s.IsString(e[n.Kind]) && !i.includes(e[n.Kind]);
      }
      t.IsKind = IsKind;
      function IsSchema(e) {
        return (
          s.IsObject(e) &&
          (IsAny(e) ||
            IsArray(e) ||
            IsBoolean(e) ||
            IsBigInt(e) ||
            IsAsyncIterator(e) ||
            IsConstructor(e) ||
            IsDate(e) ||
            IsFunction(e) ||
            IsInteger(e) ||
            IsIntersect(e) ||
            IsIterator(e) ||
            IsLiteral(e) ||
            IsMappedKey(e) ||
            IsMappedResult(e) ||
            IsNever(e) ||
            IsNot(e) ||
            IsNull(e) ||
            IsNumber(e) ||
            IsObject(e) ||
            IsPromise(e) ||
            IsRecord(e) ||
            IsRef(e) ||
            IsRegExp(e) ||
            IsString(e) ||
            IsSymbol(e) ||
            IsTemplateLiteral(e) ||
            IsThis(e) ||
            IsTuple(e) ||
            IsUndefined(e) ||
            IsUnion(e) ||
            IsUint8Array(e) ||
            IsUnknown(e) ||
            IsUnsafe(e) ||
            IsVoid(e) ||
            IsKind(e))
        );
      }
      t.IsSchema = IsSchema;
    },
    13415: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.IsUndefined =
        t.IsUint8Array =
        t.IsSymbol =
        t.IsString =
        t.IsRegExp =
        t.IsObject =
        t.IsNumber =
        t.IsNull =
        t.IsIterator =
        t.IsFunction =
        t.IsDate =
        t.IsBoolean =
        t.IsBigInt =
        t.IsArray =
        t.IsAsyncIterator =
          void 0;
      function IsAsyncIterator(e) {
        return IsObject(e) && !IsArray(e) && !IsUint8Array(e) && Symbol.asyncIterator in e;
      }
      t.IsAsyncIterator = IsAsyncIterator;
      function IsArray(e) {
        return Array.isArray(e);
      }
      t.IsArray = IsArray;
      function IsBigInt(e) {
        return typeof e === "bigint";
      }
      t.IsBigInt = IsBigInt;
      function IsBoolean(e) {
        return typeof e === "boolean";
      }
      t.IsBoolean = IsBoolean;
      function IsDate(e) {
        return e instanceof globalThis.Date;
      }
      t.IsDate = IsDate;
      function IsFunction(e) {
        return typeof e === "function";
      }
      t.IsFunction = IsFunction;
      function IsIterator(e) {
        return IsObject(e) && !IsArray(e) && !IsUint8Array(e) && Symbol.iterator in e;
      }
      t.IsIterator = IsIterator;
      function IsNull(e) {
        return e === null;
      }
      t.IsNull = IsNull;
      function IsNumber(e) {
        return typeof e === "number";
      }
      t.IsNumber = IsNumber;
      function IsObject(e) {
        return typeof e === "object" && e !== null;
      }
      t.IsObject = IsObject;
      function IsRegExp(e) {
        return e instanceof globalThis.RegExp;
      }
      t.IsRegExp = IsRegExp;
      function IsString(e) {
        return typeof e === "string";
      }
      t.IsString = IsString;
      function IsSymbol(e) {
        return typeof e === "symbol";
      }
      t.IsSymbol = IsSymbol;
      function IsUint8Array(e) {
        return e instanceof globalThis.Uint8Array;
      }
      t.IsUint8Array = IsUint8Array;
      function IsUndefined(e) {
        return e === undefined;
      }
      t.IsUndefined = IsUndefined;
    },
    87943: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Increment = void 0;
      function Increment(e) {
        return (parseInt(e) + 1).toString();
      }
      t.Increment = Increment;
    },
    57782: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(87943), t);
    },
    86918: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(66904), t);
      n(r(80494), t);
      n(r(65774), t);
      n(r(11795), t);
    },
    66904: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.IndexFromMappedKey = void 0;
      const s = r(11795);
      const n = r(41094);
      function MappedIndexPropertyKey(e, t, r) {
        return { [t]: (0, s.Index)(e, [t], r) };
      }
      function MappedIndexPropertyKeys(e, t, r) {
        return t.reduce((t, s) => ({ ...t, ...MappedIndexPropertyKey(e, s, r) }), {});
      }
      function MappedIndexProperties(e, t, r) {
        return MappedIndexPropertyKeys(e, t.keys, r);
      }
      function IndexFromMappedKey(e, t, r) {
        const s = MappedIndexProperties(e, t, r);
        return (0, n.MappedResult)(s);
      }
      t.IndexFromMappedKey = IndexFromMappedKey;
    },
    80494: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.IndexFromMappedResult = void 0;
      const s = r(41094);
      const n = r(65774);
      const o = r(86918);
      function FromProperties(e, t, r) {
        const s = {};
        for (const i of Object.getOwnPropertyNames(t)) {
          s[i] = (0, o.Index)(e, (0, n.IndexPropertyKeys)(t[i]), r);
        }
        return s;
      }
      function FromMappedResult(e, t, r) {
        return FromProperties(e, t.properties, r);
      }
      function IndexFromMappedResult(e, t, r) {
        const n = FromMappedResult(e, t, r);
        return (0, s.MappedResult)(n);
      }
      t.IndexFromMappedResult = IndexFromMappedResult;
    },
    65774: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.IndexPropertyKeys = void 0;
      const s = r(26609);
      const n = r(96994);
      function FromTemplateLiteral(e) {
        const t = (0, s.TemplateLiteralGenerate)(e);
        return t.map((e) => e.toString());
      }
      function FromUnion(e) {
        const t = [];
        for (const r of e) t.push(...IndexPropertyKeys(r));
        return t;
      }
      function FromLiteral(e) {
        return [e.toString()];
      }
      function IndexPropertyKeys(e) {
        return [
          ...new Set(
            (0, n.IsTemplateLiteral)(e)
              ? FromTemplateLiteral(e)
              : (0, n.IsUnion)(e)
                ? FromUnion(e.anyOf)
                : (0, n.IsLiteral)(e)
                  ? FromLiteral(e.const)
                  : (0, n.IsNumber)(e)
                    ? ["[number]"]
                    : (0, n.IsInteger)(e)
                      ? ["[number]"]
                      : []
          ),
        ];
      }
      t.IndexPropertyKeys = IndexPropertyKeys;
    },
    11795: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Index = t.IndexFromPropertyKeys = t.IndexFromPropertyKey = void 0;
      const s = r(54025);
      const n = r(62746);
      const o = r(69100);
      const i = r(38100);
      const a = r(65774);
      const A = r(66904);
      const l = r(80494);
      const c = r(96994);
      function FromRest(e, t) {
        return e.map((e) => IndexFromPropertyKey(e, t));
      }
      function FromIntersectRest(e) {
        return e.filter((e) => !(0, c.IsNever)(e));
      }
      function FromIntersect(e, t) {
        return (0, n.IntersectEvaluated)(FromIntersectRest(FromRest(e, t)));
      }
      function FromUnionRest(e) {
        return e.some((e) => (0, c.IsNever)(e)) ? [] : e;
      }
      function FromUnion(e, t) {
        return (0, o.UnionEvaluated)(FromUnionRest(FromRest(e, t)));
      }
      function FromTuple(e, t) {
        return t in e ? e[t] : t === "[number]" ? (0, o.UnionEvaluated)(e) : (0, s.Never)();
      }
      function FromArray(e, t) {
        return t === "[number]" ? e : (0, s.Never)();
      }
      function FromProperty(e, t) {
        return t in e ? e[t] : (0, s.Never)();
      }
      function IndexFromPropertyKey(e, t) {
        return (0, c.IsIntersect)(e)
          ? FromIntersect(e.allOf, t)
          : (0, c.IsUnion)(e)
            ? FromUnion(e.anyOf, t)
            : (0, c.IsTuple)(e)
              ? FromTuple(e.items ?? [], t)
              : (0, c.IsArray)(e)
                ? FromArray(e.items, t)
                : (0, c.IsObject)(e)
                  ? FromProperty(e.properties, t)
                  : (0, s.Never)();
      }
      t.IndexFromPropertyKey = IndexFromPropertyKey;
      function IndexFromPropertyKeys(e, t) {
        return t.map((t) => IndexFromPropertyKey(e, t));
      }
      t.IndexFromPropertyKeys = IndexFromPropertyKeys;
      function FromSchema(e, t) {
        return (0, o.UnionEvaluated)(IndexFromPropertyKeys(e, t));
      }
      function Index(e, t, r = {}) {
        return (0, c.IsMappedResult)(t)
          ? (0, i.CloneType)((0, l.IndexFromMappedResult)(e, t, r))
          : (0, c.IsMappedKey)(t)
            ? (0, i.CloneType)((0, A.IndexFromMappedKey)(e, t, r))
            : (0, c.IsSchema)(t)
              ? (0, i.CloneType)(FromSchema(e, (0, a.IndexPropertyKeys)(t)), r)
              : (0, i.CloneType)(FromSchema(e, t), r);
      }
      t.Index = Index;
    },
    26277: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(79659), t);
    },
    79659: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.InstanceType = void 0;
      const s = r(38100);
      function InstanceType(e, t = {}) {
        return (0, s.CloneType)(e.returns, t);
      }
      t.InstanceType = InstanceType;
    },
    4949: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(76295), t);
    },
    76295: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Integer = void 0;
      const s = r(97034);
      function Integer(e = {}) {
        return { ...e, [s.Kind]: "Integer", type: "integer" };
      }
      t.Integer = Integer;
    },
    62746: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(89995), t);
      n(r(35212), t);
      n(r(26015), t);
    },
    57604: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.IntersectCreate = void 0;
      const s = r(97034);
      const n = r(38100);
      const o = r(96994);
      function IntersectCreate(e, t) {
        const r = e.every((e) => (0, o.IsObject)(e));
        const i = (0, o.IsSchema)(t.unevaluatedProperties) ? { unevaluatedProperties: (0, n.CloneType)(t.unevaluatedProperties) } : {};
        return t.unevaluatedProperties === false || (0, o.IsSchema)(t.unevaluatedProperties) || r
          ? { ...t, ...i, [s.Kind]: "Intersect", type: "object", allOf: (0, n.CloneRest)(e) }
          : { ...t, ...i, [s.Kind]: "Intersect", allOf: (0, n.CloneRest)(e) };
      }
      t.IntersectCreate = IntersectCreate;
    },
    89995: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.IntersectEvaluated = void 0;
      const s = r(97034);
      const n = r(38100);
      const o = r(83889);
      const i = r(54025);
      const a = r(38425);
      const A = r(57604);
      const l = r(96994);
      function IsIntersectOptional(e) {
        return e.every((e) => (0, l.IsOptional)(e));
      }
      function RemoveOptionalFromType(e) {
        return (0, o.Discard)(e, [s.OptionalKind]);
      }
      function RemoveOptionalFromRest(e) {
        return e.map((e) => ((0, l.IsOptional)(e) ? RemoveOptionalFromType(e) : e));
      }
      function ResolveIntersect(e, t) {
        return IsIntersectOptional(e)
          ? (0, a.Optional)((0, A.IntersectCreate)(RemoveOptionalFromRest(e), t))
          : (0, A.IntersectCreate)(RemoveOptionalFromRest(e), t);
      }
      function IntersectEvaluated(e, t = {}) {
        if (e.length === 0) return (0, i.Never)(t);
        if (e.length === 1) return (0, n.CloneType)(e[0], t);
        if (e.some((e) => (0, l.IsTransform)(e))) throw new Error("Cannot intersect transform types");
        return ResolveIntersect(e, t);
      }
      t.IntersectEvaluated = IntersectEvaluated;
    },
    35212: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      const s = r(97034);
    },
    26015: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Intersect = void 0;
      const s = r(38100);
      const n = r(54025);
      const o = r(57604);
      const i = r(96994);
      function Intersect(e, t = {}) {
        if (e.length === 0) return (0, n.Never)(t);
        if (e.length === 1) return (0, s.CloneType)(e[0], t);
        if (e.some((e) => (0, i.IsTransform)(e))) throw new Error("Cannot intersect transform types");
        return (0, o.IntersectCreate)(e, t);
      }
      t.Intersect = Intersect;
    },
    15400: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Capitalize = void 0;
      const s = r(39015);
      function Capitalize(e, t = {}) {
        return (0, s.Intrinsic)(e, "Capitalize", t);
      }
      t.Capitalize = Capitalize;
    },
    30568: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(15400), t);
      n(r(71804), t);
      n(r(39015), t);
      n(r(13161), t);
      n(r(57019), t);
      n(r(80968), t);
    },
    71804: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.IntrinsicFromMappedKey = void 0;
      const s = r(41094);
      const n = r(39015);
      const o = r(98076);
      function MappedIntrinsicPropertyKey(e, t, r) {
        return { [e]: (0, n.Intrinsic)((0, o.Literal)(e), t, r) };
      }
      function MappedIntrinsicPropertyKeys(e, t, r) {
        return e.reduce((e, s) => ({ ...e, ...MappedIntrinsicPropertyKey(s, t, r) }), {});
      }
      function MappedIntrinsicProperties(e, t, r) {
        return MappedIntrinsicPropertyKeys(e["keys"], t, r);
      }
      function IntrinsicFromMappedKey(e, t, r) {
        const n = MappedIntrinsicProperties(e, t, r);
        return (0, s.MappedResult)(n);
      }
      t.IntrinsicFromMappedKey = IntrinsicFromMappedKey;
    },
    39015: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Intrinsic = void 0;
      const s = r(26609);
      const n = r(71804);
      const o = r(98076);
      const i = r(69100);
      const a = r(96994);
      function ApplyUncapitalize(e) {
        const [t, r] = [e.slice(0, 1), e.slice(1)];
        return [t.toLowerCase(), r].join("");
      }
      function ApplyCapitalize(e) {
        const [t, r] = [e.slice(0, 1), e.slice(1)];
        return [t.toUpperCase(), r].join("");
      }
      function ApplyUppercase(e) {
        return e.toUpperCase();
      }
      function ApplyLowercase(e) {
        return e.toLowerCase();
      }
      function FromTemplateLiteral(e, t, r) {
        const n = (0, s.TemplateLiteralParseExact)(e.pattern);
        const a = (0, s.IsTemplateLiteralExpressionFinite)(n);
        if (!a) return { ...e, pattern: FromLiteralValue(e.pattern, t) };
        const A = [...(0, s.TemplateLiteralExpressionGenerate)(n)];
        const l = A.map((e) => (0, o.Literal)(e));
        const c = FromRest(l, t);
        const d = (0, i.Union)(c);
        return (0, s.TemplateLiteral)([d], r);
      }
      function FromLiteralValue(e, t) {
        return typeof e === "string"
          ? t === "Uncapitalize"
            ? ApplyUncapitalize(e)
            : t === "Capitalize"
              ? ApplyCapitalize(e)
              : t === "Uppercase"
                ? ApplyUppercase(e)
                : t === "Lowercase"
                  ? ApplyLowercase(e)
                  : e
          : e.toString();
      }
      function FromRest(e, t) {
        return e.map((e) => Intrinsic(e, t));
      }
      function Intrinsic(e, t, r = {}) {
        return (0, a.IsMappedKey)(e)
          ? (0, n.IntrinsicFromMappedKey)(e, t, r)
          : (0, a.IsTemplateLiteral)(e)
            ? FromTemplateLiteral(e, t, e)
            : (0, a.IsUnion)(e)
              ? (0, i.Union)(FromRest(e.anyOf, t), r)
              : (0, a.IsLiteral)(e)
                ? (0, o.Literal)(FromLiteralValue(e.const, t), r)
                : e;
      }
      t.Intrinsic = Intrinsic;
    },
    13161: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Lowercase = void 0;
      const s = r(39015);
      function Lowercase(e, t = {}) {
        return (0, s.Intrinsic)(e, "Lowercase", t);
      }
      t.Lowercase = Lowercase;
    },
    57019: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Uncapitalize = void 0;
      const s = r(39015);
      function Uncapitalize(e, t = {}) {
        return (0, s.Intrinsic)(e, "Uncapitalize", t);
      }
      t.Uncapitalize = Uncapitalize;
    },
    80968: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Uppercase = void 0;
      const s = r(39015);
      function Uppercase(e, t = {}) {
        return (0, s.Intrinsic)(e, "Uppercase", t);
      }
      t.Uppercase = Uppercase;
    },
    35907: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(78493), t);
    },
    78493: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Iterator = void 0;
      const s = r(38100);
      const n = r(97034);
      function Iterator(e, t = {}) {
        return { ...t, [n.Kind]: "Iterator", type: "Iterator", items: (0, s.CloneType)(e) };
      }
      t.Iterator = Iterator;
    },
    73373: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(19642), t);
      n(r(740), t);
      n(r(33930), t);
      n(r(36895), t);
    },
    19642: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.KeyOfFromMappedResult = void 0;
      const s = r(41094);
      const n = r(36895);
      function FromProperties(e, t) {
        const r = {};
        for (const s of globalThis.Object.getOwnPropertyNames(e)) r[s] = (0, n.KeyOf)(e[s], t);
        return r;
      }
      function FromMappedResult(e, t) {
        return FromProperties(e.properties, t);
      }
      function KeyOfFromMappedResult(e, t) {
        const r = FromMappedResult(e, t);
        return (0, s.MappedResult)(r);
      }
      t.KeyOfFromMappedResult = KeyOfFromMappedResult;
    },
    740: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.KeyOfPropertyEntries = void 0;
      const s = r(11795);
      const n = r(33930);
      function KeyOfPropertyEntries(e) {
        const t = (0, n.KeyOfPropertyKeys)(e);
        const r = (0, s.IndexFromPropertyKeys)(e, t);
        return t.map((e, s) => [t[s], r[s]]);
      }
      t.KeyOfPropertyEntries = KeyOfPropertyEntries;
    },
    33930: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.KeyOfPattern = t.KeyOfPropertyKeys = void 0;
      const s = r(12760);
      const n = r(96994);
      function FromRest(e) {
        const t = [];
        for (const r of e) t.push(KeyOfPropertyKeys(r));
        return t;
      }
      function FromIntersect(e) {
        const t = FromRest(e);
        const r = (0, s.SetUnionMany)(t);
        return r;
      }
      function FromUnion(e) {
        const t = FromRest(e);
        const r = (0, s.SetIntersectMany)(t);
        return r;
      }
      function FromTuple(e) {
        return e.map((e, t) => t.toString());
      }
      function FromArray(e) {
        return ["[number]"];
      }
      function FromProperties(e) {
        return globalThis.Object.getOwnPropertyNames(e);
      }
      function FromPatternProperties(e) {
        if (!o) return [];
        const t = globalThis.Object.getOwnPropertyNames(e);
        return t.map((e) => (e[0] === "^" && e[e.length - 1] === "$" ? e.slice(1, e.length - 1) : e));
      }
      function KeyOfPropertyKeys(e) {
        return (0, n.IsIntersect)(e)
          ? FromIntersect(e.allOf)
          : (0, n.IsUnion)(e)
            ? FromUnion(e.anyOf)
            : (0, n.IsTuple)(e)
              ? FromTuple(e.items ?? [])
              : (0, n.IsArray)(e)
                ? FromArray(e.items)
                : (0, n.IsObject)(e)
                  ? FromProperties(e.properties)
                  : (0, n.IsRecord)(e)
                    ? FromPatternProperties(e.patternProperties)
                    : [];
      }
      t.KeyOfPropertyKeys = KeyOfPropertyKeys;
      let o = false;
      function KeyOfPattern(e) {
        o = true;
        const t = KeyOfPropertyKeys(e);
        o = false;
        const r = t.map((e) => `(${e})`);
        return `^(${r.join("|")})$`;
      }
      t.KeyOfPattern = KeyOfPattern;
    },
    36895: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.KeyOf = t.KeyOfPropertyKeysToRest = void 0;
      const s = r(98076);
      const n = r(85544);
      const o = r(33930);
      const i = r(69100);
      const a = r(38100);
      const A = r(19642);
      const l = r(96994);
      function KeyOfPropertyKeysToRest(e) {
        return e.map((e) => (e === "[number]" ? (0, n.Number)() : (0, s.Literal)(e)));
      }
      t.KeyOfPropertyKeysToRest = KeyOfPropertyKeysToRest;
      function KeyOf(e, t = {}) {
        if ((0, l.IsMappedResult)(e)) {
          return (0, A.KeyOfFromMappedResult)(e, t);
        } else {
          const r = (0, o.KeyOfPropertyKeys)(e);
          const s = KeyOfPropertyKeysToRest(r);
          const n = (0, i.UnionEvaluated)(s);
          return (0, a.CloneType)(n, t);
        }
      }
      t.KeyOf = KeyOf;
    },
    98076: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(31591), t);
    },
    31591: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Literal = void 0;
      const s = r(97034);
      function Literal(e, t = {}) {
        return { ...t, [s.Kind]: "Literal", const: e, type: typeof e };
      }
      t.Literal = Literal;
    },
    41094: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(35613), t);
      n(r(67517), t);
      n(r(90467), t);
    },
    35613: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.MappedKey = void 0;
      const s = r(97034);
      function MappedKey(e) {
        return { [s.Kind]: "MappedKey", keys: e };
      }
      t.MappedKey = MappedKey;
    },
    67517: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.MappedResult = void 0;
      const s = r(97034);
      function MappedResult(e) {
        return { [s.Kind]: "MappedResult", properties: e };
      }
      t.MappedResult = MappedResult;
    },
    90467: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Mapped = t.MappedFunctionReturnType = void 0;
      const s = r(97034);
      const n = r(38100);
      const o = r(83889);
      const i = r(17186);
      const a = r(68092);
      const A = r(16939);
      const l = r(29857);
      const c = r(86918);
      const d = r(62746);
      const p = r(35907);
      const u = r(98076);
      const g = r(62094);
      const m = r(38425);
      const h = r(70062);
      const E = r(40675);
      const I = r(7521);
      const C = r(69100);
      const y = r(12760);
      const B = r(67517);
      const Q = r(96994);
      function FromMappedResult(e, t) {
        return e in t ? FromSchemaType(e, t[e]) : (0, B.MappedResult)(t);
      }
      function MappedKeyToKnownMappedResultProperties(e) {
        return { [e]: (0, u.Literal)(e) };
      }
      function MappedKeyToUnknownMappedResultProperties(e) {
        const t = {};
        for (const r of e) t[r] = (0, u.Literal)(r);
        return t;
      }
      function MappedKeyToMappedResultProperties(e, t) {
        return (0, y.SetIncludes)(t, e) ? MappedKeyToKnownMappedResultProperties(e) : MappedKeyToUnknownMappedResultProperties(t);
      }
      function FromMappedKey(e, t) {
        const r = MappedKeyToMappedResultProperties(e, t);
        return FromMappedResult(e, r);
      }
      function FromRest(e, t) {
        return t.map((t) => FromSchemaType(e, t));
      }
      function FromProperties(e, t) {
        const r = {};
        for (const s of globalThis.Object.getOwnPropertyNames(t)) r[s] = FromSchemaType(e, t[s]);
        return r;
      }
      function FromSchemaType(e, t) {
        return (0, Q.IsOptional)(t)
          ? (0, m.Optional)(FromSchemaType(e, (0, o.Discard)(t, [s.OptionalKind])))
          : (0, Q.IsReadonly)(t)
            ? (0, E.Readonly)(FromSchemaType(e, (0, o.Discard)(t, [s.ReadonlyKind])))
            : (0, Q.IsMappedResult)(t)
              ? FromMappedResult(e, t.properties)
              : (0, Q.IsMappedKey)(t)
                ? FromMappedKey(e, t.keys)
                : (0, Q.IsConstructor)(t)
                  ? (0, A.Constructor)(FromRest(e, t.parameters), FromSchemaType(e, t.returns))
                  : (0, Q.IsFunction)(t)
                    ? (0, l.Function)(FromRest(e, t.parameters), FromSchemaType(e, t.returns))
                    : (0, Q.IsAsyncIterator)(t)
                      ? (0, a.AsyncIterator)(FromSchemaType(e, t.items))
                      : (0, Q.IsIterator)(t)
                        ? (0, p.Iterator)(FromSchemaType(e, t.items))
                        : (0, Q.IsIntersect)(t)
                          ? (0, d.Intersect)(FromRest(e, t.allOf))
                          : (0, Q.IsUnion)(t)
                            ? (0, C.Union)(FromRest(e, t.anyOf))
                            : (0, Q.IsTuple)(t)
                              ? (0, I.Tuple)(FromRest(e, t.items ?? []))
                              : (0, Q.IsObject)(t)
                                ? (0, g.Object)(FromProperties(e, t.properties))
                                : (0, Q.IsArray)(t)
                                  ? (0, i.Array)(FromSchemaType(e, t.items))
                                  : (0, Q.IsPromise)(t)
                                    ? (0, h.Promise)(FromSchemaType(e, t.item))
                                    : t;
      }
      function MappedFunctionReturnType(e, t) {
        const r = {};
        for (const s of e) r[s] = FromSchemaType(s, t);
        return r;
      }
      t.MappedFunctionReturnType = MappedFunctionReturnType;
      function Mapped(e, t, r = {}) {
        const o = (0, Q.IsSchema)(e) ? (0, c.IndexPropertyKeys)(e) : e;
        const i = t({ [s.Kind]: "MappedKey", keys: o });
        const a = MappedFunctionReturnType(o, i);
        return (0, n.CloneType)((0, g.Object)(a), r);
      }
      t.Mapped = Mapped;
    },
    54025: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(29867), t);
    },
    29867: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Never = void 0;
      const s = r(97034);
      function Never(e = {}) {
        return { ...e, [s.Kind]: "Never", not: {} };
      }
      t.Never = Never;
    },
    1078: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(8559), t);
    },
    8559: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Not = void 0;
      const s = r(38100);
      const n = r(97034);
      function Not(e, t) {
        return { ...t, [n.Kind]: "Not", not: (0, s.CloneType)(e) };
      }
      t.Not = Not;
    },
    50468: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(3007), t);
    },
    3007: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Null = void 0;
      const s = r(97034);
      function Null(e = {}) {
        return { ...e, [s.Kind]: "Null", type: "null" };
      }
      t.Null = Null;
    },
    85544: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(14151), t);
    },
    14151: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Number = void 0;
      const s = r(97034);
      function Number(e = {}) {
        return { ...e, [s.Kind]: "Number", type: "number" };
      }
      t.Number = Number;
    },
    62094: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(14211), t);
    },
    14211: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Object = void 0;
      const s = r(38100);
      const n = r(97034);
      const o = r(96994);
      function _Object(e, t = {}) {
        const r = globalThis.Object.getOwnPropertyNames(e);
        const i = r.filter((t) => (0, o.IsOptional)(e[t]));
        const a = r.filter((e) => !i.includes(e));
        const A = (0, o.IsSchema)(t.additionalProperties) ? { additionalProperties: (0, s.CloneType)(t.additionalProperties) } : {};
        const l = {};
        for (const t of r) l[t] = (0, s.CloneType)(e[t]);
        return a.length > 0
          ? { ...t, ...A, [n.Kind]: "Object", type: "object", properties: l, required: a }
          : { ...t, ...A, [n.Kind]: "Object", type: "object", properties: l };
      }
      t.Object = _Object;
    },
    88932: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(99308), t);
      n(r(39602), t);
      n(r(33143), t);
    },
    99308: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.OmitFromMappedKey = void 0;
      const s = r(41094);
      const n = r(33143);
      function FromPropertyKey(e, t, r) {
        return { [t]: (0, n.Omit)(e, [t], r) };
      }
      function FromPropertyKeys(e, t, r) {
        return t.reduce((t, s) => ({ ...t, ...FromPropertyKey(e, s, r) }), {});
      }
      function FromMappedKey(e, t, r) {
        return FromPropertyKeys(e, t.keys, r);
      }
      function OmitFromMappedKey(e, t, r) {
        const n = FromMappedKey(e, t, r);
        return (0, s.MappedResult)(n);
      }
      t.OmitFromMappedKey = OmitFromMappedKey;
    },
    39602: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.OmitFromMappedResult = void 0;
      const s = r(41094);
      const n = r(33143);
      function FromProperties(e, t, r) {
        const s = {};
        for (const o of globalThis.Object.getOwnPropertyNames(e)) s[o] = (0, n.Omit)(e[o], t, r);
        return s;
      }
      function FromMappedResult(e, t, r) {
        return FromProperties(e.properties, t, r);
      }
      function OmitFromMappedResult(e, t, r) {
        const n = FromMappedResult(e, t, r);
        return (0, s.MappedResult)(n);
      }
      t.OmitFromMappedResult = OmitFromMappedResult;
    },
    33143: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Omit = void 0;
      const s = r(62746);
      const n = r(69100);
      const o = r(62094);
      const i = r(86918);
      const a = r(83889);
      const A = r(97034);
      const l = r(38100);
      const c = r(99308);
      const d = r(39602);
      const p = r(96994);
      function FromIntersect(e, t) {
        return e.map((e) => OmitResolve(e, t));
      }
      function FromUnion(e, t) {
        return e.map((e) => OmitResolve(e, t));
      }
      function FromProperty(e, t) {
        const { [t]: r, ...s } = e;
        return s;
      }
      function FromProperties(e, t) {
        return t.reduce((e, t) => FromProperty(e, t), e);
      }
      function OmitResolve(e, t) {
        return (0, p.IsIntersect)(e)
          ? (0, s.Intersect)(FromIntersect(e.allOf, t))
          : (0, p.IsUnion)(e)
            ? (0, n.Union)(FromUnion(e.anyOf, t))
            : (0, p.IsObject)(e)
              ? (0, o.Object)(FromProperties(e.properties, t))
              : (0, o.Object)({});
      }
      function Omit(e, t, r = {}) {
        if ((0, p.IsMappedKey)(t)) return (0, c.OmitFromMappedKey)(e, t, r);
        if ((0, p.IsMappedResult)(e)) return (0, d.OmitFromMappedResult)(e, t, r);
        const s = (0, p.IsSchema)(t) ? (0, i.IndexPropertyKeys)(t) : t;
        const n = (0, a.Discard)(e, [A.TransformKind, "$id", "required"]);
        const o = (0, l.CloneType)(OmitResolve(e, s), r);
        return { ...n, ...o };
      }
      t.Omit = Omit;
    },
    38425: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(63984), t);
      n(r(15405), t);
    },
    63984: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.OptionalFromMappedResult = void 0;
      const s = r(41094);
      const n = r(15405);
      function FromProperties(e, t) {
        const r = {};
        for (const s of globalThis.Object.getOwnPropertyNames(e)) r[s] = (0, n.Optional)(e[s], t);
        return r;
      }
      function FromMappedResult(e, t) {
        return FromProperties(e.properties, t);
      }
      function OptionalFromMappedResult(e, t) {
        const r = FromMappedResult(e, t);
        return (0, s.MappedResult)(r);
      }
      t.OptionalFromMappedResult = OptionalFromMappedResult;
    },
    15405: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Optional = void 0;
      const s = r(97034);
      const n = r(38100);
      const o = r(83889);
      const i = r(63984);
      const a = r(96994);
      function RemoveOptional(e) {
        return (0, o.Discard)((0, n.CloneType)(e), [s.OptionalKind]);
      }
      function AddOptional(e) {
        return { ...(0, n.CloneType)(e), [s.OptionalKind]: "Optional" };
      }
      function OptionalWithFlag(e, t) {
        return t === false ? RemoveOptional(e) : AddOptional(e);
      }
      function Optional(e, t) {
        const r = t ?? true;
        return (0, a.IsMappedResult)(e) ? (0, i.OptionalFromMappedResult)(e, r) : OptionalWithFlag(e, r);
      }
      t.Optional = Optional;
    },
    30449: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(92853), t);
    },
    92853: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Parameters = void 0;
      const s = r(7521);
      const n = r(38100);
      function Parameters(e, t = {}) {
        return (0, s.Tuple)((0, n.CloneRest)(e.parameters), { ...t });
      }
      t.Parameters = Parameters;
    },
    53345: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(16438), t);
      n(r(34523), t);
    },
    16438: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.PartialFromMappedResult = void 0;
      const s = r(41094);
      const n = r(34523);
      function FromProperties(e, t) {
        const r = {};
        for (const s of globalThis.Object.getOwnPropertyNames(e)) r[s] = (0, n.Partial)(e[s], t);
        return r;
      }
      function FromMappedResult(e, t) {
        return FromProperties(e.properties, t);
      }
      function PartialFromMappedResult(e, t) {
        const r = FromMappedResult(e, t);
        return (0, s.MappedResult)(r);
      }
      t.PartialFromMappedResult = PartialFromMappedResult;
    },
    34523: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Partial = void 0;
      const s = r(38425);
      const n = r(62094);
      const o = r(62746);
      const i = r(69100);
      const a = r(83889);
      const A = r(97034);
      const l = r(38100);
      const c = r(16438);
      const d = r(96994);
      function FromRest(e) {
        return e.map((e) => PartialResolve(e));
      }
      function FromProperties(e) {
        const t = {};
        for (const r of globalThis.Object.getOwnPropertyNames(e)) t[r] = (0, s.Optional)(e[r]);
        return t;
      }
      function PartialResolve(e) {
        return (0, d.IsIntersect)(e)
          ? (0, o.Intersect)(FromRest(e.allOf))
          : (0, d.IsUnion)(e)
            ? (0, i.Union)(FromRest(e.anyOf))
            : (0, d.IsObject)(e)
              ? (0, n.Object)(FromProperties(e.properties))
              : (0, n.Object)({});
      }
      function Partial(e, t = {}) {
        if ((0, d.IsMappedResult)(e)) return (0, c.PartialFromMappedResult)(e, t);
        const r = (0, a.Discard)(e, [A.TransformKind, "$id", "required"]);
        const s = (0, l.CloneType)(PartialResolve(e), t);
        return { ...r, ...s };
      }
      t.Partial = Partial;
    },
    94354: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(74327), t);
    },
    74327: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.PatternStringExact = t.PatternNumberExact = t.PatternBooleanExact = t.PatternString = t.PatternNumber = t.PatternBoolean = void 0;
      t.PatternBoolean = "(true|false)";
      t.PatternNumber = "(0|[1-9][0-9]*)";
      t.PatternString = "(.*)";
      t.PatternBooleanExact = `^${t.PatternBoolean}$`;
      t.PatternNumberExact = `^${t.PatternNumber}$`;
      t.PatternStringExact = `^${t.PatternString}$`;
    },
    40640: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(72748), t);
      n(r(4882), t);
      n(r(65911), t);
    },
    72748: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.PickFromMappedKey = void 0;
      const s = r(41094);
      const n = r(65911);
      function FromPropertyKey(e, t, r) {
        return { [t]: (0, n.Pick)(e, [t], r) };
      }
      function FromPropertyKeys(e, t, r) {
        return t.reduce((t, s) => ({ ...t, ...FromPropertyKey(e, s, r) }), {});
      }
      function FromMappedKey(e, t, r) {
        return FromPropertyKeys(e, t.keys, r);
      }
      function PickFromMappedKey(e, t, r) {
        const n = FromMappedKey(e, t, r);
        return (0, s.MappedResult)(n);
      }
      t.PickFromMappedKey = PickFromMappedKey;
    },
    4882: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.PickFromMappedResult = void 0;
      const s = r(41094);
      const n = r(65911);
      function FromProperties(e, t, r) {
        const s = {};
        for (const o of globalThis.Object.getOwnPropertyNames(e)) s[o] = (0, n.Pick)(e[o], t, r);
        return s;
      }
      function FromMappedResult(e, t, r) {
        return FromProperties(e.properties, t, r);
      }
      function PickFromMappedResult(e, t, r) {
        const n = FromMappedResult(e, t, r);
        return (0, s.MappedResult)(n);
      }
      t.PickFromMappedResult = PickFromMappedResult;
    },
    65911: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Pick = void 0;
      const s = r(62746);
      const n = r(69100);
      const o = r(62094);
      const i = r(86918);
      const a = r(83889);
      const A = r(97034);
      const l = r(38100);
      const c = r(72748);
      const d = r(4882);
      const p = r(96994);
      function FromIntersect(e, t) {
        return e.map((e) => PickResolve(e, t));
      }
      function FromUnion(e, t) {
        return e.map((e) => PickResolve(e, t));
      }
      function FromProperties(e, t) {
        const r = {};
        for (const s of t) if (s in e) r[s] = e[s];
        return r;
      }
      function PickResolve(e, t) {
        return (0, p.IsIntersect)(e)
          ? (0, s.Intersect)(FromIntersect(e.allOf, t))
          : (0, p.IsUnion)(e)
            ? (0, n.Union)(FromUnion(e.anyOf, t))
            : (0, p.IsObject)(e)
              ? (0, o.Object)(FromProperties(e.properties, t))
              : (0, o.Object)({});
      }
      function Pick(e, t, r = {}) {
        if ((0, p.IsMappedKey)(t)) return (0, c.PickFromMappedKey)(e, t, r);
        if ((0, p.IsMappedResult)(e)) return (0, d.PickFromMappedResult)(e, t, r);
        const s = (0, p.IsSchema)(t) ? (0, i.IndexPropertyKeys)(t) : t;
        const n = (0, a.Discard)(e, [A.TransformKind, "$id", "required"]);
        const o = (0, l.CloneType)(PickResolve(e, s), r);
        return { ...n, ...o };
      }
      t.Pick = Pick;
    },
    70062: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(35675), t);
    },
    35675: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Promise = void 0;
      const s = r(38100);
      const n = r(97034);
      function Promise(e, t = {}) {
        return { ...t, [n.Kind]: "Promise", type: "Promise", item: (0, s.CloneType)(e) };
      }
      t.Promise = Promise;
    },
    78946: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(84127), t);
    },
    84127: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ReadonlyOptional = void 0;
      const s = r(40675);
      const n = r(38425);
      function ReadonlyOptional(e) {
        return (0, s.Readonly)((0, n.Optional)(e));
      }
      t.ReadonlyOptional = ReadonlyOptional;
    },
    40675: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(94180), t);
      n(r(90401), t);
    },
    94180: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ReadonlyFromMappedResult = void 0;
      const s = r(41094);
      const n = r(90401);
      function FromProperties(e, t) {
        const r = {};
        for (const s of globalThis.Object.getOwnPropertyNames(e)) r[s] = (0, n.Readonly)(e[s], t);
        return r;
      }
      function FromMappedResult(e, t) {
        return FromProperties(e.properties, t);
      }
      function ReadonlyFromMappedResult(e, t) {
        const r = FromMappedResult(e, t);
        return (0, s.MappedResult)(r);
      }
      t.ReadonlyFromMappedResult = ReadonlyFromMappedResult;
    },
    90401: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Readonly = void 0;
      const s = r(97034);
      const n = r(38100);
      const o = r(83889);
      const i = r(94180);
      const a = r(96994);
      function RemoveReadonly(e) {
        return (0, o.Discard)((0, n.CloneType)(e), [s.ReadonlyKind]);
      }
      function AddReadonly(e) {
        return { ...(0, n.CloneType)(e), [s.ReadonlyKind]: "Readonly" };
      }
      function ReadonlyWithFlag(e, t) {
        return t === false ? RemoveReadonly(e) : AddReadonly(e);
      }
      function Readonly(e, t) {
        const r = t ?? true;
        return (0, a.IsMappedResult)(e) ? (0, i.ReadonlyFromMappedResult)(e, r) : ReadonlyWithFlag(e, r);
      }
      t.Readonly = Readonly;
    },
    30420: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(98167), t);
    },
    98167: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Record = void 0;
      const s = r(62094);
      const n = r(54025);
      const o = r(69100);
      const i = r(26609);
      const a = r(94354);
      const A = r(86918);
      const l = r(97034);
      const c = r(38100);
      const d = r(13415);
      const p = r(96994);
      function RecordCreateFromPattern(e, t, r) {
        return { ...r, [l.Kind]: "Record", type: "object", patternProperties: { [e]: (0, c.CloneType)(t) } };
      }
      function RecordCreateFromKeys(e, t, r) {
        const n = {};
        for (const r of e) n[r] = (0, c.CloneType)(t);
        return (0, s.Object)(n, { ...r, [l.Hint]: "Record" });
      }
      function FromTemplateLiteralKey(e, t, r) {
        return (0, i.IsTemplateLiteralFinite)(e) ? RecordCreateFromKeys((0, A.IndexPropertyKeys)(e), t, r) : RecordCreateFromPattern(e.pattern, t, r);
      }
      function FromUnionKey(e, t, r) {
        return RecordCreateFromKeys((0, A.IndexPropertyKeys)((0, o.Union)(e)), t, r);
      }
      function FromLiteralKey(e, t, r) {
        return RecordCreateFromKeys([e.toString()], t, r);
      }
      function FromRegExpKey(e, t, r) {
        return RecordCreateFromPattern(e.source, t, r);
      }
      function FromStringKey(e, t, r) {
        const s = (0, d.IsUndefined)(e.pattern) ? a.PatternStringExact : e.pattern;
        return RecordCreateFromPattern(s, t, r);
      }
      function FromIntegerKey(e, t, r) {
        return RecordCreateFromPattern(a.PatternNumberExact, t, r);
      }
      function FromNumberKey(e, t, r) {
        return RecordCreateFromPattern(a.PatternNumberExact, t, r);
      }
      function Record(e, t, r = {}) {
        return (0, p.IsUnion)(e)
          ? FromUnionKey(e.anyOf, t, r)
          : (0, p.IsTemplateLiteral)(e)
            ? FromTemplateLiteralKey(e, t, r)
            : (0, p.IsLiteral)(e)
              ? FromLiteralKey(e.const, t, r)
              : (0, p.IsInteger)(e)
                ? FromIntegerKey(e, t, r)
                : (0, p.IsNumber)(e)
                  ? FromNumberKey(e, t, r)
                  : (0, p.IsRegExp)(e)
                    ? FromRegExpKey(e, t, r)
                    : (0, p.IsString)(e)
                      ? FromStringKey(e, t, r)
                      : (0, n.Never)(r);
      }
      t.Record = Record;
    },
    33107: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(13475), t);
    },
    13475: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Recursive = void 0;
      const s = r(38100);
      const n = r(13415);
      const o = r(97034);
      let i = 0;
      function Recursive(e, t = {}) {
        if ((0, n.IsUndefined)(t.$id)) t.$id = `T${i++}`;
        const r = e({ [o.Kind]: "This", $ref: `${t.$id}` });
        r.$id = t.$id;
        return (0, s.CloneType)({ ...t, [o.Hint]: "Recursive", ...r });
      }
      t.Recursive = Recursive;
    },
    80470: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(27735), t);
    },
    27735: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Ref = void 0;
      const s = r(97034);
      const n = r(13415);
      function Ref(e, t = {}) {
        if ((0, n.IsString)(e)) return { ...t, [s.Kind]: "Ref", $ref: e };
        if ((0, n.IsUndefined)(e.$id)) throw new Error("Reference target type must specify an $id");
        return { ...t, [s.Kind]: "Ref", $ref: e.$id };
      }
      t.Ref = Ref;
    },
    26936: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(99383), t);
    },
    99383: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.RegExp = void 0;
      const s = r(13415);
      const n = r(97034);
      function RegExp(e, t = {}) {
        const r = (0, s.IsString)(e) ? new globalThis.RegExp(e) : e;
        return { ...t, [n.Kind]: "RegExp", type: "RegExp", source: r.source, flags: r.flags };
      }
      t.RegExp = RegExp;
    },
    56315: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Get = t.Set = t.Has = t.Delete = t.Clear = t.Entries = void 0;
      const r = new Map();
      function Entries() {
        return new Map(r);
      }
      t.Entries = Entries;
      function Clear() {
        return r.clear();
      }
      t.Clear = Clear;
      function Delete(e) {
        return r.delete(e);
      }
      t.Delete = Delete;
      function Has(e) {
        return r.has(e);
      }
      t.Has = Has;
      function Set(e, t) {
        r.set(e, t);
      }
      t.Set = Set;
      function Get(e) {
        return r.get(e);
      }
      t.Get = Get;
    },
    51786: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TypeRegistry = t.FormatRegistry = void 0;
      t.FormatRegistry = r(56315);
      t.TypeRegistry = r(1912);
    },
    1912: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Get = t.Set = t.Has = t.Delete = t.Clear = t.Entries = void 0;
      const r = new Map();
      function Entries() {
        return new Map(r);
      }
      t.Entries = Entries;
      function Clear() {
        return r.clear();
      }
      t.Clear = Clear;
      function Delete(e) {
        return r.delete(e);
      }
      t.Delete = Delete;
      function Has(e) {
        return r.has(e);
      }
      t.Has = Has;
      function Set(e, t) {
        r.set(e, t);
      }
      t.Set = Set;
      function Get(e) {
        return r.get(e);
      }
      t.Get = Get;
    },
    42744: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(24722), t);
      n(r(78775), t);
    },
    24722: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.RequiredFromMappedResult = void 0;
      const s = r(41094);
      const n = r(78775);
      function FromProperties(e, t) {
        const r = {};
        for (const s of globalThis.Object.getOwnPropertyNames(e)) r[s] = (0, n.Required)(e[s], t);
        return r;
      }
      function FromMappedResult(e, t) {
        return FromProperties(e.properties, t);
      }
      function RequiredFromMappedResult(e, t) {
        const r = FromMappedResult(e, t);
        return (0, s.MappedResult)(r);
      }
      t.RequiredFromMappedResult = RequiredFromMappedResult;
    },
    78775: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Required = void 0;
      const s = r(62746);
      const n = r(69100);
      const o = r(62094);
      const i = r(97034);
      const a = r(38100);
      const A = r(83889);
      const l = r(24722);
      const c = r(96994);
      function FromRest(e) {
        return e.map((e) => RequiredResolve(e));
      }
      function FromProperties(e) {
        const t = {};
        for (const r of globalThis.Object.getOwnPropertyNames(e)) t[r] = (0, A.Discard)(e[r], [i.OptionalKind]);
        return t;
      }
      function RequiredResolve(e) {
        return (0, c.IsIntersect)(e)
          ? (0, s.Intersect)(FromRest(e.allOf))
          : (0, c.IsUnion)(e)
            ? (0, n.Union)(FromRest(e.anyOf))
            : (0, c.IsObject)(e)
              ? (0, o.Object)(FromProperties(e.properties))
              : (0, o.Object)({});
      }
      function Required(e, t = {}) {
        if ((0, c.IsMappedResult)(e)) {
          return (0, l.RequiredFromMappedResult)(e, t);
        } else {
          const r = (0, A.Discard)(e, [i.TransformKind, "$id", "required"]);
          const s = (0, a.CloneType)(RequiredResolve(e), t);
          return { ...r, ...s };
        }
      }
      t.Required = Required;
    },
    83003: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(48881), t);
    },
    48881: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Rest = void 0;
      const s = r(38100);
      const n = r(96994);
      function RestResolve(e) {
        return (0, n.IsIntersect)(e)
          ? (0, s.CloneRest)(e.allOf)
          : (0, n.IsUnion)(e)
            ? (0, s.CloneRest)(e.anyOf)
            : (0, n.IsTuple)(e)
              ? (0, s.CloneRest)(e.items ?? [])
              : [];
      }
      function Rest(e) {
        return (0, s.CloneRest)(RestResolve(e));
      }
      t.Rest = Rest;
    },
    32970: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(11243), t);
    },
    11243: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ReturnType = void 0;
      const s = r(38100);
      function ReturnType(e, t = {}) {
        return (0, s.CloneType)(e.returns, t);
      }
      t.ReturnType = ReturnType;
    },
    13523: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
    },
    68954: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(13523), t);
      n(r(53283), t);
    },
    53283: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      const s = r(97034);
    },
    12760: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(85944), t);
    },
    85944: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.SetUnionMany = t.SetIntersectMany = t.SetComplement = t.SetUnion = t.SetIntersect = t.SetDistinct = t.SetIsSubset = t.SetIncludes = void 0;
      function SetIncludes(e, t) {
        return e.includes(t);
      }
      t.SetIncludes = SetIncludes;
      function SetIsSubset(e, t) {
        return e.every((e) => SetIncludes(t, e));
      }
      t.SetIsSubset = SetIsSubset;
      function SetDistinct(e) {
        return [...new Set(e)];
      }
      t.SetDistinct = SetDistinct;
      function SetIntersect(e, t) {
        return e.filter((e) => t.includes(e));
      }
      t.SetIntersect = SetIntersect;
      function SetUnion(e, t) {
        return [...e, ...t];
      }
      t.SetUnion = SetUnion;
      function SetComplement(e, t) {
        return e.filter((e) => !t.includes(e));
      }
      t.SetComplement = SetComplement;
      function SetIntersectManyResolve(e, t) {
        return e.reduce((e, t) => SetIntersect(e, t), t);
      }
      function SetIntersectMany(e) {
        return e.length === 1 ? e[0] : e.length > 1 ? SetIntersectManyResolve(e.slice(1), e[0]) : [];
      }
      t.SetIntersectMany = SetIntersectMany;
      function SetUnionMany(e) {
        const t = [];
        for (const r of e) t.push(...r);
        return t;
      }
      t.SetUnionMany = SetUnionMany;
    },
    60343: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(917), t);
    },
    917: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
    },
    23556: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(69295), t);
    },
    69295: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Strict = void 0;
      function Strict(e) {
        return JSON.parse(JSON.stringify(e));
      }
      t.Strict = Strict;
    },
    81688: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(14695), t);
    },
    14695: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.String = void 0;
      const s = r(97034);
      function String(e = {}) {
        return { ...e, [s.Kind]: "String", type: "string" };
      }
      t.String = String;
    },
    2129: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(86445), t);
    },
    86445: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Symbol = void 0;
      const s = r(97034);
      function Symbol(e) {
        return { ...e, [s.Kind]: "Symbol", type: "symbol" };
      }
      t.Symbol = Symbol;
    },
    97034: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(22311), t);
    },
    22311: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Kind = t.Hint = t.OptionalKind = t.ReadonlyKind = t.TransformKind = void 0;
      t.TransformKind = Symbol.for("TypeBox.Transform");
      t.ReadonlyKind = Symbol.for("TypeBox.Readonly");
      t.OptionalKind = Symbol.for("TypeBox.Optional");
      t.Hint = Symbol.for("TypeBox.Hint");
      t.Kind = Symbol.for("TypeBox.Kind");
    },
    75930: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.IsTemplateLiteralFinite = t.IsTemplateLiteralExpressionFinite = t.TemplateLiteralFiniteError = void 0;
      const s = r(75430);
      const n = r(26113);
      class TemplateLiteralFiniteError extends n.TypeBoxError {}
      t.TemplateLiteralFiniteError = TemplateLiteralFiniteError;
      function IsNumberExpression(e) {
        return (
          e.type === "or" &&
          e.expr.length === 2 &&
          e.expr[0].type === "const" &&
          e.expr[0].const === "0" &&
          e.expr[1].type === "const" &&
          e.expr[1].const === "[1-9][0-9]*"
        );
      }
      function IsBooleanExpression(e) {
        return (
          e.type === "or" &&
          e.expr.length === 2 &&
          e.expr[0].type === "const" &&
          e.expr[0].const === "true" &&
          e.expr[1].type === "const" &&
          e.expr[1].const === "false"
        );
      }
      function IsStringExpression(e) {
        return e.type === "const" && e.const === ".*";
      }
      function IsTemplateLiteralExpressionFinite(e) {
        return IsNumberExpression(e) || IsStringExpression(e)
          ? false
          : IsBooleanExpression(e)
            ? true
            : e.type === "and"
              ? e.expr.every((e) => IsTemplateLiteralExpressionFinite(e))
              : e.type === "or"
                ? e.expr.every((e) => IsTemplateLiteralExpressionFinite(e))
                : e.type === "const"
                  ? true
                  : (() => {
                      throw new TemplateLiteralFiniteError(`Unknown expression type`);
                    })();
      }
      t.IsTemplateLiteralExpressionFinite = IsTemplateLiteralExpressionFinite;
      function IsTemplateLiteralFinite(e) {
        const t = (0, s.TemplateLiteralParseExact)(e.pattern);
        return IsTemplateLiteralExpressionFinite(t);
      }
      t.IsTemplateLiteralFinite = IsTemplateLiteralFinite;
    },
    85670: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TemplateLiteralGenerate = t.TemplateLiteralExpressionGenerate = t.TemplateLiteralGenerateError = void 0;
      const s = r(75930);
      const n = r(75430);
      const o = r(26113);
      class TemplateLiteralGenerateError extends o.TypeBoxError {}
      t.TemplateLiteralGenerateError = TemplateLiteralGenerateError;
      function* GenerateReduce(e) {
        if (e.length === 1) return yield* e[0];
        for (const t of e[0]) {
          for (const r of GenerateReduce(e.slice(1))) {
            yield `${t}${r}`;
          }
        }
      }
      function* GenerateAnd(e) {
        return yield* GenerateReduce(e.expr.map((e) => [...TemplateLiteralExpressionGenerate(e)]));
      }
      function* GenerateOr(e) {
        for (const t of e.expr) yield* TemplateLiteralExpressionGenerate(t);
      }
      function* GenerateConst(e) {
        return yield e.const;
      }
      function* TemplateLiteralExpressionGenerate(e) {
        return e.type === "and"
          ? yield* GenerateAnd(e)
          : e.type === "or"
            ? yield* GenerateOr(e)
            : e.type === "const"
              ? yield* GenerateConst(e)
              : (() => {
                  throw new TemplateLiteralGenerateError("Unknown expression");
                })();
      }
      t.TemplateLiteralExpressionGenerate = TemplateLiteralExpressionGenerate;
      function TemplateLiteralGenerate(e) {
        const t = (0, n.TemplateLiteralParseExact)(e.pattern);
        return (0, s.IsTemplateLiteralExpressionFinite)(t) ? [...TemplateLiteralExpressionGenerate(t)] : [];
      }
      t.TemplateLiteralGenerate = TemplateLiteralGenerate;
    },
    26609: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(75930), t);
      n(r(85670), t);
      n(r(98094), t);
      n(r(75430), t);
      n(r(85855), t);
      n(r(27522), t);
      n(r(4181), t);
    },
    75430: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TemplateLiteralParseExact = t.TemplateLiteralParse = t.TemplateLiteralParserError = void 0;
      const s = r(26113);
      class TemplateLiteralParserError extends s.TypeBoxError {}
      t.TemplateLiteralParserError = TemplateLiteralParserError;
      function Unescape(e) {
        return e.replace(/\\\$/g, "$").replace(/\\\*/g, "*").replace(/\\\^/g, "^").replace(/\\\|/g, "|").replace(/\\\(/g, "(").replace(/\\\)/g, ")");
      }
      function IsNonEscaped(e, t, r) {
        return e[t] === r && e.charCodeAt(t - 1) !== 92;
      }
      function IsOpenParen(e, t) {
        return IsNonEscaped(e, t, "(");
      }
      function IsCloseParen(e, t) {
        return IsNonEscaped(e, t, ")");
      }
      function IsSeparator(e, t) {
        return IsNonEscaped(e, t, "|");
      }
      function IsGroup(e) {
        if (!(IsOpenParen(e, 0) && IsCloseParen(e, e.length - 1))) return false;
        let t = 0;
        for (let r = 0; r < e.length; r++) {
          if (IsOpenParen(e, r)) t += 1;
          if (IsCloseParen(e, r)) t -= 1;
          if (t === 0 && r !== e.length - 1) return false;
        }
        return true;
      }
      function InGroup(e) {
        return e.slice(1, e.length - 1);
      }
      function IsPrecedenceOr(e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
          if (IsOpenParen(e, r)) t += 1;
          if (IsCloseParen(e, r)) t -= 1;
          if (IsSeparator(e, r) && t === 0) return true;
        }
        return false;
      }
      function IsPrecedenceAnd(e) {
        for (let t = 0; t < e.length; t++) {
          if (IsOpenParen(e, t)) return true;
        }
        return false;
      }
      function Or(e) {
        let [t, r] = [0, 0];
        const s = [];
        for (let n = 0; n < e.length; n++) {
          if (IsOpenParen(e, n)) t += 1;
          if (IsCloseParen(e, n)) t -= 1;
          if (IsSeparator(e, n) && t === 0) {
            const t = e.slice(r, n);
            if (t.length > 0) s.push(TemplateLiteralParse(t));
            r = n + 1;
          }
        }
        const n = e.slice(r);
        if (n.length > 0) s.push(TemplateLiteralParse(n));
        if (s.length === 0) return { type: "const", const: "" };
        if (s.length === 1) return s[0];
        return { type: "or", expr: s };
      }
      function And(e) {
        function Group(e, t) {
          if (!IsOpenParen(e, t)) throw new TemplateLiteralParserError(`TemplateLiteralParser: Index must point to open parens`);
          let r = 0;
          for (let s = t; s < e.length; s++) {
            if (IsOpenParen(e, s)) r += 1;
            if (IsCloseParen(e, s)) r -= 1;
            if (r === 0) return [t, s];
          }
          throw new TemplateLiteralParserError(`TemplateLiteralParser: Unclosed group parens in expression`);
        }
        function Range(e, t) {
          for (let r = t; r < e.length; r++) {
            if (IsOpenParen(e, r)) return [t, r];
          }
          return [t, e.length];
        }
        const t = [];
        for (let r = 0; r < e.length; r++) {
          if (IsOpenParen(e, r)) {
            const [s, n] = Group(e, r);
            const o = e.slice(s, n + 1);
            t.push(TemplateLiteralParse(o));
            r = n;
          } else {
            const [s, n] = Range(e, r);
            const o = e.slice(s, n);
            if (o.length > 0) t.push(TemplateLiteralParse(o));
            r = n - 1;
          }
        }
        return t.length === 0 ? { type: "const", const: "" } : t.length === 1 ? t[0] : { type: "and", expr: t };
      }
      function TemplateLiteralParse(e) {
        return IsGroup(e) ? TemplateLiteralParse(InGroup(e)) : IsPrecedenceOr(e) ? Or(e) : IsPrecedenceAnd(e) ? And(e) : { type: "const", const: Unescape(e) };
      }
      t.TemplateLiteralParse = TemplateLiteralParse;
      function TemplateLiteralParseExact(e) {
        return TemplateLiteralParse(e.slice(1, e.length - 1));
      }
      t.TemplateLiteralParseExact = TemplateLiteralParseExact;
    },
    85855: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TemplateLiteralPattern = t.TemplateLiteralPatternError = void 0;
      const s = r(94354);
      const n = r(97034);
      const o = r(26113);
      const i = r(96994);
      class TemplateLiteralPatternError extends o.TypeBoxError {}
      t.TemplateLiteralPatternError = TemplateLiteralPatternError;
      function Escape(e) {
        return e.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
      }
      function Visit(e, t) {
        return (0, i.IsTemplateLiteral)(e)
          ? e.pattern.slice(1, e.pattern.length - 1)
          : (0, i.IsUnion)(e)
            ? `(${e.anyOf.map((e) => Visit(e, t)).join("|")})`
            : (0, i.IsNumber)(e)
              ? `${t}${s.PatternNumber}`
              : (0, i.IsInteger)(e)
                ? `${t}${s.PatternNumber}`
                : (0, i.IsBigInt)(e)
                  ? `${t}${s.PatternNumber}`
                  : (0, i.IsString)(e)
                    ? `${t}${s.PatternString}`
                    : (0, i.IsLiteral)(e)
                      ? `${t}${Escape(e.const.toString())}`
                      : (0, i.IsBoolean)(e)
                        ? `${t}${s.PatternBoolean}`
                        : (() => {
                            throw new TemplateLiteralPatternError(`Unexpected Kind '${e[n.Kind]}'`);
                          })();
      }
      function TemplateLiteralPattern(e) {
        return `^${e.map((e) => Visit(e, "")).join("")}$`;
      }
      t.TemplateLiteralPattern = TemplateLiteralPattern;
    },
    98094: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TemplateLiteralSyntax = void 0;
      const s = r(98076);
      const n = r(64515);
      const o = r(13278);
      const i = r(85544);
      const a = r(81688);
      const A = r(69100);
      const l = r(54025);
      function* FromUnion(e) {
        const t = e.trim().replace(/"|'/g, "");
        return t === "boolean"
          ? yield (0, n.Boolean)()
          : t === "number"
            ? yield (0, i.Number)()
            : t === "bigint"
              ? yield (0, o.BigInt)()
              : t === "string"
                ? yield (0, a.String)()
                : yield (() => {
                    const e = t.split("|").map((e) => (0, s.Literal)(e.trim()));
                    return e.length === 0 ? (0, l.Never)() : e.length === 1 ? e[0] : (0, A.UnionEvaluated)(e);
                  })();
      }
      function* FromTerminal(e) {
        if (e[1] !== "{") {
          const t = (0, s.Literal)("$");
          const r = FromSyntax(e.slice(1));
          return yield* [t, ...r];
        }
        for (let t = 2; t < e.length; t++) {
          if (e[t] === "}") {
            const r = FromUnion(e.slice(2, t));
            const s = FromSyntax(e.slice(t + 1));
            return yield* [...r, ...s];
          }
        }
        yield (0, s.Literal)(e);
      }
      function* FromSyntax(e) {
        for (let t = 0; t < e.length; t++) {
          if (e[t] === "$") {
            const r = (0, s.Literal)(e.slice(0, t));
            const n = FromTerminal(e.slice(t));
            return yield* [r, ...n];
          }
        }
        yield (0, s.Literal)(e);
      }
      function TemplateLiteralSyntax(e) {
        return [...FromSyntax(e)];
      }
      t.TemplateLiteralSyntax = TemplateLiteralSyntax;
    },
    4181: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TemplateLiteral = void 0;
      const s = r(98094);
      const n = r(85855);
      const o = r(13415);
      const i = r(97034);
      function TemplateLiteral(e, t = {}) {
        const r = (0, o.IsString)(e) ? (0, n.TemplateLiteralPattern)((0, s.TemplateLiteralSyntax)(e)) : (0, n.TemplateLiteralPattern)(e);
        return { ...t, [i.Kind]: "TemplateLiteral", type: "string", pattern: r };
      }
      t.TemplateLiteral = TemplateLiteral;
    },
    27522: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TemplateLiteralToUnion = void 0;
      const s = r(69100);
      const n = r(98076);
      const o = r(85670);
      function TemplateLiteralToUnion(e) {
        const t = (0, o.TemplateLiteralGenerate)(e);
        const r = t.map((e) => (0, n.Literal)(e));
        return (0, s.UnionEvaluated)(r);
      }
      t.TemplateLiteralToUnion = TemplateLiteralToUnion;
    },
    67575: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(79399), t);
    },
    79399: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Transform = t.TransformEncodeBuilder = t.TransformDecodeBuilder = void 0;
      const s = r(97034);
      const n = r(38100);
      const o = r(96994);
      class TransformDecodeBuilder {
        constructor(e) {
          this.schema = e;
        }
        Decode(e) {
          return new TransformEncodeBuilder(this.schema, e);
        }
      }
      t.TransformDecodeBuilder = TransformDecodeBuilder;
      class TransformEncodeBuilder {
        constructor(e, t) {
          this.schema = e;
          this.decode = t;
        }
        EncodeTransform(e, t) {
          const Encode = (r) => t[s.TransformKind].Encode(e(r));
          const Decode = (e) => this.decode(t[s.TransformKind].Decode(e));
          const r = { Encode: Encode, Decode: Decode };
          return { ...t, [s.TransformKind]: r };
        }
        EncodeSchema(e, t) {
          const r = { Decode: this.decode, Encode: e };
          return { ...t, [s.TransformKind]: r };
        }
        Encode(e) {
          const t = (0, n.CloneType)(this.schema);
          return (0, o.IsTransform)(t) ? this.EncodeTransform(e, t) : this.EncodeSchema(e, t);
        }
      }
      t.TransformEncodeBuilder = TransformEncodeBuilder;
      function Transform(e) {
        return new TransformDecodeBuilder(e);
      }
      t.Transform = Transform;
    },
    7521: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(65667), t);
    },
    65667: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Tuple = void 0;
      const s = r(38100);
      const n = r(97034);
      function Tuple(e, t = {}) {
        const [r, o, i] = [false, e.length, e.length];
        return e.length > 0
          ? { ...t, [n.Kind]: "Tuple", type: "array", items: (0, s.CloneRest)(e), additionalItems: r, minItems: o, maxItems: i }
          : { ...t, [n.Kind]: "Tuple", type: "array", minItems: o, maxItems: i };
      }
      t.Tuple = Tuple;
    },
    68237: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Type = t.JavaScriptTypeBuilder = t.JsonTypeBuilder = void 0;
      var s = r(86959);
      Object.defineProperty(t, "JsonTypeBuilder", {
        enumerable: true,
        get: function () {
          return s.JsonTypeBuilder;
        },
      });
      const n = r(17505);
      const o = r(18158);
      Object.defineProperty(t, "JavaScriptTypeBuilder", {
        enumerable: true,
        get: function () {
          return o.JavaScriptTypeBuilder;
        },
      });
      const i = n;
      t.Type = i;
    },
    18158: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.JavaScriptTypeBuilder = void 0;
      const s = r(86959);
      const n = r(68092);
      const o = r(85164);
      const i = r(13278);
      const a = r(16939);
      const A = r(58562);
      const l = r(49305);
      const c = r(29857);
      const d = r(26277);
      const p = r(35907);
      const u = r(30449);
      const g = r(70062);
      const m = r(26936);
      const h = r(32970);
      const E = r(2129);
      const I = r(45760);
      const C = r(96231);
      const y = r(81947);
      class JavaScriptTypeBuilder extends s.JsonTypeBuilder {
        AsyncIterator(e, t = {}) {
          return (0, n.AsyncIterator)(e, t);
        }
        Awaited(e, t = {}) {
          return (0, o.Awaited)(e, t);
        }
        BigInt(e = {}) {
          return (0, i.BigInt)(e);
        }
        ConstructorParameters(e, t = {}) {
          return (0, A.ConstructorParameters)(e, t);
        }
        Constructor(e, t, r) {
          return (0, a.Constructor)(e, t, r);
        }
        Date(e = {}) {
          return (0, l.Date)(e);
        }
        Function(e, t, r) {
          return (0, c.Function)(e, t, r);
        }
        InstanceType(e, t = {}) {
          return (0, d.InstanceType)(e, t);
        }
        Iterator(e, t = {}) {
          return (0, p.Iterator)(e, t);
        }
        Parameters(e, t = {}) {
          return (0, u.Parameters)(e, t);
        }
        Promise(e, t = {}) {
          return (0, g.Promise)(e, t);
        }
        RegExp(e, t = {}) {
          return (0, m.RegExp)(e, t);
        }
        ReturnType(e, t = {}) {
          return (0, h.ReturnType)(e, t);
        }
        Symbol(e) {
          return (0, E.Symbol)(e);
        }
        Undefined(e = {}) {
          return (0, C.Undefined)(e);
        }
        Uint8Array(e = {}) {
          return (0, I.Uint8Array)(e);
        }
        Void(e = {}) {
          return (0, y.Void)(e);
        }
      }
      t.JavaScriptTypeBuilder = JavaScriptTypeBuilder;
    },
    86959: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.JsonTypeBuilder = void 0;
      const s = r(36813);
      const n = r(17186);
      const o = r(64515);
      const i = r(80788);
      const a = r(19236);
      const A = r(911);
      const l = r(98056);
      const c = r(41153);
      const d = r(94850);
      const p = r(69682);
      const u = r(86918);
      const g = r(4949);
      const m = r(62746);
      const h = r(30568);
      const E = r(73373);
      const I = r(98076);
      const C = r(41094);
      const y = r(54025);
      const B = r(1078);
      const Q = r(50468);
      const b = r(85544);
      const w = r(62094);
      const v = r(88932);
      const T = r(38425);
      const _ = r(53345);
      const S = r(40640);
      const R = r(40675);
      const D = r(78946);
      const k = r(30420);
      const F = r(33107);
      const O = r(80470);
      const N = r(42744);
      const P = r(83003);
      const U = r(23556);
      const L = r(81688);
      const M = r(26609);
      const G = r(67575);
      const x = r(7521);
      const V = r(69100);
      const j = r(51897);
      const H = r(23339);
      class JsonTypeBuilder {
        Strict(e) {
          return (0, U.Strict)(e);
        }
        ReadonlyOptional(e) {
          return (0, D.ReadonlyOptional)(e);
        }
        Readonly(e, t) {
          return (0, R.Readonly)(e, t ?? true);
        }
        Optional(e, t) {
          return (0, T.Optional)(e, t ?? true);
        }
        Any(e = {}) {
          return (0, s.Any)(e);
        }
        Array(e, t = {}) {
          return (0, n.Array)(e, t);
        }
        Boolean(e = {}) {
          return (0, o.Boolean)(e);
        }
        Capitalize(e, t = {}) {
          return (0, h.Capitalize)(e, t);
        }
        Composite(e, t) {
          return (0, i.Composite)(e, t);
        }
        Const(e, t = {}) {
          return (0, a.Const)(e, t);
        }
        Deref(e, t) {
          return (0, A.Deref)(e, t);
        }
        Enum(e, t = {}) {
          return (0, l.Enum)(e, t);
        }
        Exclude(e, t, r = {}) {
          return (0, c.Exclude)(e, t, r);
        }
        Extends(e, t, r, s, n = {}) {
          return (0, d.Extends)(e, t, r, s, n);
        }
        Extract(e, t, r = {}) {
          return (0, p.Extract)(e, t, r);
        }
        Index(e, t, r = {}) {
          return (0, u.Index)(e, t, r);
        }
        Integer(e = {}) {
          return (0, g.Integer)(e);
        }
        Intersect(e, t = {}) {
          return (0, m.Intersect)(e, t);
        }
        KeyOf(e, t = {}) {
          return (0, E.KeyOf)(e, t);
        }
        Literal(e, t = {}) {
          return (0, I.Literal)(e, t);
        }
        Lowercase(e, t = {}) {
          return (0, h.Lowercase)(e, t);
        }
        Mapped(e, t, r = {}) {
          return (0, C.Mapped)(e, t, r);
        }
        Never(e = {}) {
          return (0, y.Never)(e);
        }
        Not(e, t) {
          return (0, B.Not)(e, t);
        }
        Null(e = {}) {
          return (0, Q.Null)(e);
        }
        Number(e = {}) {
          return (0, b.Number)(e);
        }
        Object(e, t = {}) {
          return (0, w.Object)(e, t);
        }
        Omit(e, t, r = {}) {
          return (0, v.Omit)(e, t, r);
        }
        Partial(e, t = {}) {
          return (0, _.Partial)(e, t);
        }
        Pick(e, t, r = {}) {
          return (0, S.Pick)(e, t, r);
        }
        Record(e, t, r = {}) {
          return (0, k.Record)(e, t, r);
        }
        Recursive(e, t = {}) {
          return (0, F.Recursive)(e, t);
        }
        Ref(e, t = {}) {
          return (0, O.Ref)(e, t);
        }
        Required(e, t = {}) {
          return (0, N.Required)(e, t);
        }
        Rest(e) {
          return (0, P.Rest)(e);
        }
        String(e = {}) {
          return (0, L.String)(e);
        }
        TemplateLiteral(e, t = {}) {
          return (0, M.TemplateLiteral)(e, t);
        }
        Transform(e) {
          return (0, G.Transform)(e);
        }
        Tuple(e, t = {}) {
          return (0, x.Tuple)(e, t);
        }
        Uncapitalize(e, t = {}) {
          return (0, h.Uncapitalize)(e, t);
        }
        Union(e, t = {}) {
          return (0, V.Union)(e, t);
        }
        Unknown(e = {}) {
          return (0, j.Unknown)(e);
        }
        Unsafe(e = {}) {
          return (0, H.Unsafe)(e);
        }
        Uppercase(e, t = {}) {
          return (0, h.Uppercase)(e, t);
        }
      }
      t.JsonTypeBuilder = JsonTypeBuilder;
    },
    17505: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Strict =
        t.ReturnType =
        t.Rest =
        t.Required =
        t.RegExp =
        t.Ref =
        t.Recursive =
        t.Record =
        t.ReadonlyOptional =
        t.Readonly =
        t.Promise =
        t.Pick =
        t.Partial =
        t.Parameters =
        t.Optional =
        t.Omit =
        t.Object =
        t.Number =
        t.Null =
        t.Not =
        t.Never =
        t.Mapped =
        t.Literal =
        t.KeyOf =
        t.Iterator =
        t.Uppercase =
        t.Lowercase =
        t.Uncapitalize =
        t.Capitalize =
        t.Intersect =
        t.Integer =
        t.InstanceType =
        t.Index =
        t.Function =
        t.Extract =
        t.Extends =
        t.Exclude =
        t.Enum =
        t.Deref =
        t.Date =
        t.ConstructorParameters =
        t.Constructor =
        t.Const =
        t.Composite =
        t.Boolean =
        t.BigInt =
        t.Awaited =
        t.AsyncIterator =
        t.Array =
        t.Any =
          void 0;
      t.Void = t.Unsafe = t.Unknown = t.Union = t.Undefined = t.Uint8Array = t.Tuple = t.Transform = t.TemplateLiteral = t.Symbol = t.String = void 0;
      var s = r(36813);
      Object.defineProperty(t, "Any", {
        enumerable: true,
        get: function () {
          return s.Any;
        },
      });
      var n = r(17186);
      Object.defineProperty(t, "Array", {
        enumerable: true,
        get: function () {
          return n.Array;
        },
      });
      var o = r(68092);
      Object.defineProperty(t, "AsyncIterator", {
        enumerable: true,
        get: function () {
          return o.AsyncIterator;
        },
      });
      var i = r(85164);
      Object.defineProperty(t, "Awaited", {
        enumerable: true,
        get: function () {
          return i.Awaited;
        },
      });
      var a = r(13278);
      Object.defineProperty(t, "BigInt", {
        enumerable: true,
        get: function () {
          return a.BigInt;
        },
      });
      var A = r(64515);
      Object.defineProperty(t, "Boolean", {
        enumerable: true,
        get: function () {
          return A.Boolean;
        },
      });
      var l = r(80788);
      Object.defineProperty(t, "Composite", {
        enumerable: true,
        get: function () {
          return l.Composite;
        },
      });
      var c = r(19236);
      Object.defineProperty(t, "Const", {
        enumerable: true,
        get: function () {
          return c.Const;
        },
      });
      var d = r(16939);
      Object.defineProperty(t, "Constructor", {
        enumerable: true,
        get: function () {
          return d.Constructor;
        },
      });
      var p = r(58562);
      Object.defineProperty(t, "ConstructorParameters", {
        enumerable: true,
        get: function () {
          return p.ConstructorParameters;
        },
      });
      var u = r(49305);
      Object.defineProperty(t, "Date", {
        enumerable: true,
        get: function () {
          return u.Date;
        },
      });
      var g = r(911);
      Object.defineProperty(t, "Deref", {
        enumerable: true,
        get: function () {
          return g.Deref;
        },
      });
      var m = r(98056);
      Object.defineProperty(t, "Enum", {
        enumerable: true,
        get: function () {
          return m.Enum;
        },
      });
      var h = r(41153);
      Object.defineProperty(t, "Exclude", {
        enumerable: true,
        get: function () {
          return h.Exclude;
        },
      });
      var E = r(94850);
      Object.defineProperty(t, "Extends", {
        enumerable: true,
        get: function () {
          return E.Extends;
        },
      });
      var I = r(69682);
      Object.defineProperty(t, "Extract", {
        enumerable: true,
        get: function () {
          return I.Extract;
        },
      });
      var C = r(29857);
      Object.defineProperty(t, "Function", {
        enumerable: true,
        get: function () {
          return C.Function;
        },
      });
      var y = r(86918);
      Object.defineProperty(t, "Index", {
        enumerable: true,
        get: function () {
          return y.Index;
        },
      });
      var B = r(26277);
      Object.defineProperty(t, "InstanceType", {
        enumerable: true,
        get: function () {
          return B.InstanceType;
        },
      });
      var Q = r(4949);
      Object.defineProperty(t, "Integer", {
        enumerable: true,
        get: function () {
          return Q.Integer;
        },
      });
      var b = r(62746);
      Object.defineProperty(t, "Intersect", {
        enumerable: true,
        get: function () {
          return b.Intersect;
        },
      });
      var w = r(30568);
      Object.defineProperty(t, "Capitalize", {
        enumerable: true,
        get: function () {
          return w.Capitalize;
        },
      });
      Object.defineProperty(t, "Uncapitalize", {
        enumerable: true,
        get: function () {
          return w.Uncapitalize;
        },
      });
      Object.defineProperty(t, "Lowercase", {
        enumerable: true,
        get: function () {
          return w.Lowercase;
        },
      });
      Object.defineProperty(t, "Uppercase", {
        enumerable: true,
        get: function () {
          return w.Uppercase;
        },
      });
      var v = r(35907);
      Object.defineProperty(t, "Iterator", {
        enumerable: true,
        get: function () {
          return v.Iterator;
        },
      });
      var T = r(73373);
      Object.defineProperty(t, "KeyOf", {
        enumerable: true,
        get: function () {
          return T.KeyOf;
        },
      });
      var _ = r(98076);
      Object.defineProperty(t, "Literal", {
        enumerable: true,
        get: function () {
          return _.Literal;
        },
      });
      var S = r(41094);
      Object.defineProperty(t, "Mapped", {
        enumerable: true,
        get: function () {
          return S.Mapped;
        },
      });
      var R = r(54025);
      Object.defineProperty(t, "Never", {
        enumerable: true,
        get: function () {
          return R.Never;
        },
      });
      var D = r(1078);
      Object.defineProperty(t, "Not", {
        enumerable: true,
        get: function () {
          return D.Not;
        },
      });
      var k = r(50468);
      Object.defineProperty(t, "Null", {
        enumerable: true,
        get: function () {
          return k.Null;
        },
      });
      var F = r(85544);
      Object.defineProperty(t, "Number", {
        enumerable: true,
        get: function () {
          return F.Number;
        },
      });
      var O = r(62094);
      Object.defineProperty(t, "Object", {
        enumerable: true,
        get: function () {
          return O.Object;
        },
      });
      var N = r(88932);
      Object.defineProperty(t, "Omit", {
        enumerable: true,
        get: function () {
          return N.Omit;
        },
      });
      var P = r(38425);
      Object.defineProperty(t, "Optional", {
        enumerable: true,
        get: function () {
          return P.Optional;
        },
      });
      var U = r(30449);
      Object.defineProperty(t, "Parameters", {
        enumerable: true,
        get: function () {
          return U.Parameters;
        },
      });
      var L = r(53345);
      Object.defineProperty(t, "Partial", {
        enumerable: true,
        get: function () {
          return L.Partial;
        },
      });
      var M = r(40640);
      Object.defineProperty(t, "Pick", {
        enumerable: true,
        get: function () {
          return M.Pick;
        },
      });
      var G = r(70062);
      Object.defineProperty(t, "Promise", {
        enumerable: true,
        get: function () {
          return G.Promise;
        },
      });
      var x = r(40675);
      Object.defineProperty(t, "Readonly", {
        enumerable: true,
        get: function () {
          return x.Readonly;
        },
      });
      var V = r(78946);
      Object.defineProperty(t, "ReadonlyOptional", {
        enumerable: true,
        get: function () {
          return V.ReadonlyOptional;
        },
      });
      var j = r(30420);
      Object.defineProperty(t, "Record", {
        enumerable: true,
        get: function () {
          return j.Record;
        },
      });
      var H = r(33107);
      Object.defineProperty(t, "Recursive", {
        enumerable: true,
        get: function () {
          return H.Recursive;
        },
      });
      var Y = r(80470);
      Object.defineProperty(t, "Ref", {
        enumerable: true,
        get: function () {
          return Y.Ref;
        },
      });
      var J = r(26936);
      Object.defineProperty(t, "RegExp", {
        enumerable: true,
        get: function () {
          return J.RegExp;
        },
      });
      var q = r(42744);
      Object.defineProperty(t, "Required", {
        enumerable: true,
        get: function () {
          return q.Required;
        },
      });
      var W = r(83003);
      Object.defineProperty(t, "Rest", {
        enumerable: true,
        get: function () {
          return W.Rest;
        },
      });
      var K = r(32970);
      Object.defineProperty(t, "ReturnType", {
        enumerable: true,
        get: function () {
          return K.ReturnType;
        },
      });
      var $ = r(23556);
      Object.defineProperty(t, "Strict", {
        enumerable: true,
        get: function () {
          return $.Strict;
        },
      });
      var z = r(81688);
      Object.defineProperty(t, "String", {
        enumerable: true,
        get: function () {
          return z.String;
        },
      });
      var Z = r(2129);
      Object.defineProperty(t, "Symbol", {
        enumerable: true,
        get: function () {
          return Z.Symbol;
        },
      });
      var X = r(26609);
      Object.defineProperty(t, "TemplateLiteral", {
        enumerable: true,
        get: function () {
          return X.TemplateLiteral;
        },
      });
      var ee = r(67575);
      Object.defineProperty(t, "Transform", {
        enumerable: true,
        get: function () {
          return ee.Transform;
        },
      });
      var te = r(7521);
      Object.defineProperty(t, "Tuple", {
        enumerable: true,
        get: function () {
          return te.Tuple;
        },
      });
      var re = r(45760);
      Object.defineProperty(t, "Uint8Array", {
        enumerable: true,
        get: function () {
          return re.Uint8Array;
        },
      });
      var se = r(96231);
      Object.defineProperty(t, "Undefined", {
        enumerable: true,
        get: function () {
          return se.Undefined;
        },
      });
      var ne = r(69100);
      Object.defineProperty(t, "Union", {
        enumerable: true,
        get: function () {
          return ne.Union;
        },
      });
      var oe = r(51897);
      Object.defineProperty(t, "Unknown", {
        enumerable: true,
        get: function () {
          return oe.Unknown;
        },
      });
      var ie = r(23339);
      Object.defineProperty(t, "Unsafe", {
        enumerable: true,
        get: function () {
          return ie.Unsafe;
        },
      });
      var ae = r(81947);
      Object.defineProperty(t, "Void", {
        enumerable: true,
        get: function () {
          return ae.Void;
        },
      });
    },
    45760: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(2039), t);
    },
    2039: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Uint8Array = void 0;
      const s = r(97034);
      function Uint8Array(e = {}) {
        return { ...e, [s.Kind]: "Uint8Array", type: "Uint8Array" };
      }
      t.Uint8Array = Uint8Array;
    },
    96231: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(20479), t);
    },
    20479: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Undefined = void 0;
      const s = r(97034);
      function Undefined(e = {}) {
        return { ...e, [s.Kind]: "Undefined", type: "undefined" };
      }
      t.Undefined = Undefined;
    },
    69100: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(24083), t);
      n(r(75396), t);
      n(r(28519), t);
    },
    98252: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.UnionCreate = void 0;
      const s = r(38100);
      const n = r(97034);
      function UnionCreate(e, t) {
        return { ...t, [n.Kind]: "Union", anyOf: (0, s.CloneRest)(e) };
      }
      t.UnionCreate = UnionCreate;
    },
    24083: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.UnionEvaluated = void 0;
      const s = r(97034);
      const n = r(38100);
      const o = r(83889);
      const i = r(54025);
      const a = r(38425);
      const A = r(98252);
      const l = r(96994);
      function IsUnionOptional(e) {
        return e.some((e) => (0, l.IsOptional)(e));
      }
      function RemoveOptionalFromRest(e) {
        return e.map((e) => ((0, l.IsOptional)(e) ? RemoveOptionalFromType(e) : e));
      }
      function RemoveOptionalFromType(e) {
        return (0, o.Discard)(e, [s.OptionalKind]);
      }
      function ResolveUnion(e, t) {
        return IsUnionOptional(e) ? (0, a.Optional)((0, A.UnionCreate)(RemoveOptionalFromRest(e), t)) : (0, A.UnionCreate)(RemoveOptionalFromRest(e), t);
      }
      function UnionEvaluated(e, t = {}) {
        return e.length === 0 ? (0, i.Never)(t) : e.length === 1 ? (0, n.CloneType)(e[0], t) : ResolveUnion(e, t);
      }
      t.UnionEvaluated = UnionEvaluated;
    },
    75396: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      const s = r(97034);
    },
    28519: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Union = void 0;
      const s = r(54025);
      const n = r(38100);
      const o = r(98252);
      function Union(e, t = {}) {
        return e.length === 0 ? (0, s.Never)(t) : e.length === 1 ? (0, n.CloneType)(e[0], t) : (0, o.UnionCreate)(e, t);
      }
      t.Union = Union;
    },
    51897: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(66303), t);
    },
    66303: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Unknown = void 0;
      const s = r(97034);
      function Unknown(e = {}) {
        return { ...e, [s.Kind]: "Unknown" };
      }
      t.Unknown = Unknown;
    },
    23339: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(1361), t);
    },
    1361: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Unsafe = void 0;
      const s = r(97034);
      function Unsafe(e = {}) {
        return { ...e, [s.Kind]: e[s.Kind] ?? "Unsafe" };
      }
      t.Unsafe = Unsafe;
    },
    81947: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(14093), t);
    },
    14093: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Void = void 0;
      const s = r(97034);
      function Void(e = {}) {
        return { ...e, [s.Kind]: "Void", type: "void" };
      }
      t.Void = Void;
    },
    85874: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Cast = t.ValueCastError = void 0;
      const s = r(17479);
      const n = r(26113);
      const o = r(97034);
      const i = r(18050);
      const a = r(33742);
      const A = r(21683);
      const l = r(40886);
      class ValueCastError extends n.TypeBoxError {
        constructor(e, t) {
          super(t);
          this.schema = e;
        }
      }
      t.ValueCastError = ValueCastError;
      function ScoreUnion(e, t, r) {
        if (e[o.Kind] === "Object" && typeof r === "object" && !(0, s.IsNull)(r)) {
          const s = e;
          const n = Object.getOwnPropertyNames(r);
          const i = Object.entries(s.properties);
          const [A, l] = [1 / i.length, i.length];
          return i.reduce((e, [s, i]) => {
            const c = i[o.Kind] === "Literal" && i.const === r[s] ? l : 0;
            const d = (0, a.Check)(i, t, r[s]) ? A : 0;
            const p = n.includes(s) ? A : 0;
            return e + (c + d + p);
          }, 0);
        } else {
          return (0, a.Check)(e, t, r) ? 1 : 0;
        }
      }
      function SelectUnion(e, t, r) {
        let [s, n] = [e.anyOf[0], 0];
        for (const o of e.anyOf) {
          const e = ScoreUnion(o, t, r);
          if (e > n) {
            s = o;
            n = e;
          }
        }
        return s;
      }
      function CastUnion(e, t, r) {
        if ("default" in e) {
          return typeof r === "function" ? e.default : (0, A.Clone)(e.default);
        } else {
          const s = SelectUnion(e, t, r);
          return Cast(s, t, r);
        }
      }
      function DefaultClone(e, t, r) {
        return (0, a.Check)(e, t, r) ? (0, A.Clone)(r) : (0, i.Create)(e, t);
      }
      function Default(e, t, r) {
        return (0, a.Check)(e, t, r) ? r : (0, i.Create)(e, t);
      }
      function FromArray(e, t, r) {
        if ((0, a.Check)(e, t, r)) return (0, A.Clone)(r);
        const n = (0, s.IsArray)(r) ? (0, A.Clone)(r) : (0, i.Create)(e, t);
        const o = (0, s.IsNumber)(e.minItems) && n.length < e.minItems ? [...n, ...Array.from({ length: e.minItems - n.length }, () => null)] : n;
        const l = (0, s.IsNumber)(e.maxItems) && o.length > e.maxItems ? o.slice(0, e.maxItems) : o;
        const c = l.map((r) => Visit(e.items, t, r));
        if (e.uniqueItems !== true) return c;
        const d = [...new Set(c)];
        if (!(0, a.Check)(e, t, d)) throw new ValueCastError(e, "Array cast produced invalid data due to uniqueItems constraint");
        return d;
      }
      function FromConstructor(e, t, r) {
        if ((0, a.Check)(e, t, r)) return (0, i.Create)(e, t);
        const s = new Set(e.returns.required || []);
        const result = function () {};
        for (const [n, o] of Object.entries(e.returns.properties)) {
          if (!s.has(n) && r.prototype[n] === undefined) continue;
          result.prototype[n] = Visit(o, t, r.prototype[n]);
        }
        return result;
      }
      function FromIntersect(e, t, r) {
        const n = (0, i.Create)(e, t);
        const o = (0, s.IsStandardObject)(n) && (0, s.IsStandardObject)(r) ? { ...n, ...r } : r;
        return (0, a.Check)(e, t, o) ? o : (0, i.Create)(e, t);
      }
      function FromNever(e, t, r) {
        throw new ValueCastError(e, "Never types cannot be cast");
      }
      function FromObject(e, t, r) {
        if ((0, a.Check)(e, t, r)) return r;
        if (r === null || typeof r !== "object") return (0, i.Create)(e, t);
        const s = new Set(e.required || []);
        const n = {};
        for (const [o, i] of Object.entries(e.properties)) {
          if (!s.has(o) && r[o] === undefined) continue;
          n[o] = Visit(i, t, r[o]);
        }
        if (typeof e.additionalProperties === "object") {
          const s = Object.getOwnPropertyNames(e.properties);
          for (const o of Object.getOwnPropertyNames(r)) {
            if (s.includes(o)) continue;
            n[o] = Visit(e.additionalProperties, t, r[o]);
          }
        }
        return n;
      }
      function FromRecord(e, t, r) {
        if ((0, a.Check)(e, t, r)) return (0, A.Clone)(r);
        if (r === null || typeof r !== "object" || Array.isArray(r) || r instanceof Date) return (0, i.Create)(e, t);
        const s = Object.getOwnPropertyNames(e.patternProperties)[0];
        const n = e.patternProperties[s];
        const o = {};
        for (const [e, s] of Object.entries(r)) {
          o[e] = Visit(n, t, s);
        }
        return o;
      }
      function FromRef(e, t, r) {
        return Visit((0, l.Deref)(e, t), t, r);
      }
      function FromThis(e, t, r) {
        return Visit((0, l.Deref)(e, t), t, r);
      }
      function FromTuple(e, t, r) {
        if ((0, a.Check)(e, t, r)) return (0, A.Clone)(r);
        if (!(0, s.IsArray)(r)) return (0, i.Create)(e, t);
        if (e.items === undefined) return [];
        return e.items.map((e, s) => Visit(e, t, r[s]));
      }
      function FromUnion(e, t, r) {
        return (0, a.Check)(e, t, r) ? (0, A.Clone)(r) : CastUnion(e, t, r);
      }
      function Visit(e, t, r) {
        const n = (0, s.IsString)(e.$id) ? [...t, e] : t;
        const i = e;
        switch (e[o.Kind]) {
          case "Array":
            return FromArray(i, n, r);
          case "Constructor":
            return FromConstructor(i, n, r);
          case "Intersect":
            return FromIntersect(i, n, r);
          case "Never":
            return FromNever(i, n, r);
          case "Object":
            return FromObject(i, n, r);
          case "Record":
            return FromRecord(i, n, r);
          case "Ref":
            return FromRef(i, n, r);
          case "This":
            return FromThis(i, n, r);
          case "Tuple":
            return FromTuple(i, n, r);
          case "Union":
            return FromUnion(i, n, r);
          case "Date":
          case "Symbol":
          case "Uint8Array":
            return DefaultClone(e, t, r);
          default:
            return Default(i, n, r);
        }
      }
      function Cast(...e) {
        return e.length === 3 ? Visit(e[0], e[1], e[2]) : Visit(e[0], [], e[1]);
      }
      t.Cast = Cast;
    },
    46097: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(85874), t);
    },
    85410: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Check = t.ValueCheckUnknownTypeError = void 0;
      const s = r(82129);
      const n = r(40886);
      const o = r(7210);
      const i = r(97034);
      const a = r(73373);
      const A = r(94850);
      const l = r(51786);
      const c = r(26113);
      const d = r(54025);
      const p = r(17479);
      const u = r(70384);
      class ValueCheckUnknownTypeError extends c.TypeBoxError {
        constructor(e) {
          super(`Unknown type`);
          this.schema = e;
        }
      }
      t.ValueCheckUnknownTypeError = ValueCheckUnknownTypeError;
      function IsAnyOrUnknown(e) {
        return e[i.Kind] === "Any" || e[i.Kind] === "Unknown";
      }
      function IsDefined(e) {
        return e !== undefined;
      }
      function FromAny(e, t, r) {
        return true;
      }
      function FromArray(e, t, r) {
        if (!(0, p.IsArray)(r)) return false;
        if (IsDefined(e.minItems) && !(r.length >= e.minItems)) {
          return false;
        }
        if (IsDefined(e.maxItems) && !(r.length <= e.maxItems)) {
          return false;
        }
        if (!r.every((r) => Visit(e.items, t, r))) {
          return false;
        }
        if (
          e.uniqueItems === true &&
          !(function () {
            const e = new Set();
            for (const t of r) {
              const r = (0, o.Hash)(t);
              if (e.has(r)) {
                return false;
              } else {
                e.add(r);
              }
            }
            return true;
          })()
        ) {
          return false;
        }
        if (!(IsDefined(e.contains) || (0, p.IsNumber)(e.minContains) || (0, p.IsNumber)(e.maxContains))) {
          return true;
        }
        const s = IsDefined(e.contains) ? e.contains : (0, d.Never)();
        const n = r.reduce((e, r) => (Visit(s, t, r) ? e + 1 : e), 0);
        if (n === 0) {
          return false;
        }
        if ((0, p.IsNumber)(e.minContains) && n < e.minContains) {
          return false;
        }
        if ((0, p.IsNumber)(e.maxContains) && n > e.maxContains) {
          return false;
        }
        return true;
      }
      function FromAsyncIterator(e, t, r) {
        return (0, p.IsAsyncIterator)(r);
      }
      function FromBigInt(e, t, r) {
        if (!(0, p.IsBigInt)(r)) return false;
        if (IsDefined(e.exclusiveMaximum) && !(r < e.exclusiveMaximum)) {
          return false;
        }
        if (IsDefined(e.exclusiveMinimum) && !(r > e.exclusiveMinimum)) {
          return false;
        }
        if (IsDefined(e.maximum) && !(r <= e.maximum)) {
          return false;
        }
        if (IsDefined(e.minimum) && !(r >= e.minimum)) {
          return false;
        }
        if (IsDefined(e.multipleOf) && !(r % e.multipleOf === BigInt(0))) {
          return false;
        }
        return true;
      }
      function FromBoolean(e, t, r) {
        return (0, p.IsBoolean)(r);
      }
      function FromConstructor(e, t, r) {
        return Visit(e.returns, t, r.prototype);
      }
      function FromDate(e, t, r) {
        if (!(0, p.IsDate)(r)) return false;
        if (IsDefined(e.exclusiveMaximumTimestamp) && !(r.getTime() < e.exclusiveMaximumTimestamp)) {
          return false;
        }
        if (IsDefined(e.exclusiveMinimumTimestamp) && !(r.getTime() > e.exclusiveMinimumTimestamp)) {
          return false;
        }
        if (IsDefined(e.maximumTimestamp) && !(r.getTime() <= e.maximumTimestamp)) {
          return false;
        }
        if (IsDefined(e.minimumTimestamp) && !(r.getTime() >= e.minimumTimestamp)) {
          return false;
        }
        if (IsDefined(e.multipleOfTimestamp) && !(r.getTime() % e.multipleOfTimestamp === 0)) {
          return false;
        }
        return true;
      }
      function FromFunction(e, t, r) {
        return (0, p.IsFunction)(r);
      }
      function FromInteger(e, t, r) {
        if (!(0, p.IsInteger)(r)) {
          return false;
        }
        if (IsDefined(e.exclusiveMaximum) && !(r < e.exclusiveMaximum)) {
          return false;
        }
        if (IsDefined(e.exclusiveMinimum) && !(r > e.exclusiveMinimum)) {
          return false;
        }
        if (IsDefined(e.maximum) && !(r <= e.maximum)) {
          return false;
        }
        if (IsDefined(e.minimum) && !(r >= e.minimum)) {
          return false;
        }
        if (IsDefined(e.multipleOf) && !(r % e.multipleOf === 0)) {
          return false;
        }
        return true;
      }
      function FromIntersect(e, t, r) {
        const s = e.allOf.every((e) => Visit(e, t, r));
        if (e.unevaluatedProperties === false) {
          const t = new RegExp((0, a.KeyOfPattern)(e));
          const n = Object.getOwnPropertyNames(r).every((e) => t.test(e));
          return s && n;
        } else if ((0, u.IsSchema)(e.unevaluatedProperties)) {
          const n = new RegExp((0, a.KeyOfPattern)(e));
          const o = Object.getOwnPropertyNames(r).every((s) => n.test(s) || Visit(e.unevaluatedProperties, t, r[s]));
          return s && o;
        } else {
          return s;
        }
      }
      function FromIterator(e, t, r) {
        return (0, p.IsIterator)(r);
      }
      function FromLiteral(e, t, r) {
        return r === e.const;
      }
      function FromNever(e, t, r) {
        return false;
      }
      function FromNot(e, t, r) {
        return !Visit(e.not, t, r);
      }
      function FromNull(e, t, r) {
        return (0, p.IsNull)(r);
      }
      function FromNumber(e, t, r) {
        if (!s.TypeSystemPolicy.IsNumberLike(r)) return false;
        if (IsDefined(e.exclusiveMaximum) && !(r < e.exclusiveMaximum)) {
          return false;
        }
        if (IsDefined(e.exclusiveMinimum) && !(r > e.exclusiveMinimum)) {
          return false;
        }
        if (IsDefined(e.minimum) && !(r >= e.minimum)) {
          return false;
        }
        if (IsDefined(e.maximum) && !(r <= e.maximum)) {
          return false;
        }
        if (IsDefined(e.multipleOf) && !(r % e.multipleOf === 0)) {
          return false;
        }
        return true;
      }
      function FromObject(e, t, r) {
        if (!s.TypeSystemPolicy.IsObjectLike(r)) return false;
        if (IsDefined(e.minProperties) && !(Object.getOwnPropertyNames(r).length >= e.minProperties)) {
          return false;
        }
        if (IsDefined(e.maxProperties) && !(Object.getOwnPropertyNames(r).length <= e.maxProperties)) {
          return false;
        }
        const n = Object.getOwnPropertyNames(e.properties);
        for (const o of n) {
          const n = e.properties[o];
          if (e.required && e.required.includes(o)) {
            if (!Visit(n, t, r[o])) {
              return false;
            }
            if (((0, A.ExtendsUndefinedCheck)(n) || IsAnyOrUnknown(n)) && !(o in r)) {
              return false;
            }
          } else {
            if (s.TypeSystemPolicy.IsExactOptionalProperty(r, o) && !Visit(n, t, r[o])) {
              return false;
            }
          }
        }
        if (e.additionalProperties === false) {
          const t = Object.getOwnPropertyNames(r);
          if (e.required && e.required.length === n.length && t.length === n.length) {
            return true;
          } else {
            return t.every((e) => n.includes(e));
          }
        } else if (typeof e.additionalProperties === "object") {
          const s = Object.getOwnPropertyNames(r);
          return s.every((s) => n.includes(s) || Visit(e.additionalProperties, t, r[s]));
        } else {
          return true;
        }
      }
      function FromPromise(e, t, r) {
        return (0, p.IsPromise)(r);
      }
      function FromRecord(e, t, r) {
        if (!s.TypeSystemPolicy.IsRecordLike(r)) {
          return false;
        }
        if (IsDefined(e.minProperties) && !(Object.getOwnPropertyNames(r).length >= e.minProperties)) {
          return false;
        }
        if (IsDefined(e.maxProperties) && !(Object.getOwnPropertyNames(r).length <= e.maxProperties)) {
          return false;
        }
        const [n, o] = Object.entries(e.patternProperties)[0];
        const i = new RegExp(n);
        const a = Object.entries(r).every(([e, r]) => (i.test(e) ? Visit(o, t, r) : true));
        const A =
          typeof e.additionalProperties === "object" ? Object.entries(r).every(([r, s]) => (!i.test(r) ? Visit(e.additionalProperties, t, s) : true)) : true;
        const l = e.additionalProperties === false ? Object.getOwnPropertyNames(r).every((e) => i.test(e)) : true;
        return a && A && l;
      }
      function FromRef(e, t, r) {
        return Visit((0, n.Deref)(e, t), t, r);
      }
      function FromRegExp(e, t, r) {
        const s = new RegExp(e.source, e.flags);
        if (IsDefined(e.minLength)) {
          if (!(r.length >= e.minLength)) return false;
        }
        if (IsDefined(e.maxLength)) {
          if (!(r.length <= e.maxLength)) return false;
        }
        return s.test(r);
      }
      function FromString(e, t, r) {
        if (!(0, p.IsString)(r)) {
          return false;
        }
        if (IsDefined(e.minLength)) {
          if (!(r.length >= e.minLength)) return false;
        }
        if (IsDefined(e.maxLength)) {
          if (!(r.length <= e.maxLength)) return false;
        }
        if (IsDefined(e.pattern)) {
          const t = new RegExp(e.pattern);
          if (!t.test(r)) return false;
        }
        if (IsDefined(e.format)) {
          if (!l.FormatRegistry.Has(e.format)) return false;
          const t = l.FormatRegistry.Get(e.format);
          return t(r);
        }
        return true;
      }
      function FromSymbol(e, t, r) {
        return (0, p.IsSymbol)(r);
      }
      function FromTemplateLiteral(e, t, r) {
        return (0, p.IsString)(r) && new RegExp(e.pattern).test(r);
      }
      function FromThis(e, t, r) {
        return Visit((0, n.Deref)(e, t), t, r);
      }
      function FromTuple(e, t, r) {
        if (!(0, p.IsArray)(r)) {
          return false;
        }
        if (e.items === undefined && !(r.length === 0)) {
          return false;
        }
        if (!(r.length === e.maxItems)) {
          return false;
        }
        if (!e.items) {
          return true;
        }
        for (let s = 0; s < e.items.length; s++) {
          if (!Visit(e.items[s], t, r[s])) return false;
        }
        return true;
      }
      function FromUndefined(e, t, r) {
        return (0, p.IsUndefined)(r);
      }
      function FromUnion(e, t, r) {
        return e.anyOf.some((e) => Visit(e, t, r));
      }
      function FromUint8Array(e, t, r) {
        if (!(0, p.IsUint8Array)(r)) {
          return false;
        }
        if (IsDefined(e.maxByteLength) && !(r.length <= e.maxByteLength)) {
          return false;
        }
        if (IsDefined(e.minByteLength) && !(r.length >= e.minByteLength)) {
          return false;
        }
        return true;
      }
      function FromUnknown(e, t, r) {
        return true;
      }
      function FromVoid(e, t, r) {
        return s.TypeSystemPolicy.IsVoidLike(r);
      }
      function FromKind(e, t, r) {
        if (!l.TypeRegistry.Has(e[i.Kind])) return false;
        const s = l.TypeRegistry.Get(e[i.Kind]);
        return s(e, r);
      }
      function Visit(e, t, r) {
        const s = IsDefined(e.$id) ? [...t, e] : t;
        const n = e;
        switch (n[i.Kind]) {
          case "Any":
            return FromAny(n, s, r);
          case "Array":
            return FromArray(n, s, r);
          case "AsyncIterator":
            return FromAsyncIterator(n, s, r);
          case "BigInt":
            return FromBigInt(n, s, r);
          case "Boolean":
            return FromBoolean(n, s, r);
          case "Constructor":
            return FromConstructor(n, s, r);
          case "Date":
            return FromDate(n, s, r);
          case "Function":
            return FromFunction(n, s, r);
          case "Integer":
            return FromInteger(n, s, r);
          case "Intersect":
            return FromIntersect(n, s, r);
          case "Iterator":
            return FromIterator(n, s, r);
          case "Literal":
            return FromLiteral(n, s, r);
          case "Never":
            return FromNever(n, s, r);
          case "Not":
            return FromNot(n, s, r);
          case "Null":
            return FromNull(n, s, r);
          case "Number":
            return FromNumber(n, s, r);
          case "Object":
            return FromObject(n, s, r);
          case "Promise":
            return FromPromise(n, s, r);
          case "Record":
            return FromRecord(n, s, r);
          case "Ref":
            return FromRef(n, s, r);
          case "RegExp":
            return FromRegExp(n, s, r);
          case "String":
            return FromString(n, s, r);
          case "Symbol":
            return FromSymbol(n, s, r);
          case "TemplateLiteral":
            return FromTemplateLiteral(n, s, r);
          case "This":
            return FromThis(n, s, r);
          case "Tuple":
            return FromTuple(n, s, r);
          case "Undefined":
            return FromUndefined(n, s, r);
          case "Union":
            return FromUnion(n, s, r);
          case "Uint8Array":
            return FromUint8Array(n, s, r);
          case "Unknown":
            return FromUnknown(n, s, r);
          case "Void":
            return FromVoid(n, s, r);
          default:
            if (!l.TypeRegistry.Has(n[i.Kind])) throw new ValueCheckUnknownTypeError(n);
            return FromKind(n, s, r);
        }
      }
      function Check(...e) {
        return e.length === 3 ? Visit(e[0], e[1], e[2]) : Visit(e[0], [], e[1]);
      }
      t.Check = Check;
    },
    33742: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(85410), t);
    },
    40338: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Clean = void 0;
      const s = r(73373);
      const n = r(33742);
      const o = r(21683);
      const i = r(40886);
      const a = r(97034);
      const A = r(17479);
      const l = r(70384);
      function IsCheckable(e) {
        return (0, l.IsSchema)(e) && e[a.Kind] !== "Unsafe";
      }
      function FromArray(e, t, r) {
        if (!(0, A.IsArray)(r)) return r;
        return r.map((r) => Visit(e.items, t, r));
      }
      function FromIntersect(e, t, r) {
        const i = e.unevaluatedProperties;
        const a = e.allOf.map((e) => Visit(e, t, (0, o.Clone)(r)));
        const c = a.reduce((e, t) => ((0, A.IsObject)(t) ? { ...e, ...t } : t), {});
        if (!(0, A.IsObject)(r) || !(0, A.IsObject)(c) || !(0, l.IsSchema)(i)) return c;
        const d = (0, s.KeyOfPropertyKeys)(e);
        for (const e of Object.getOwnPropertyNames(r)) {
          if (d.includes(e)) continue;
          if ((0, n.Check)(i, t, r[e])) {
            c[e] = Visit(i, t, r[e]);
          }
        }
        return c;
      }
      function FromObject(e, t, r) {
        if (!(0, A.IsObject)(r) || (0, A.IsArray)(r)) return r;
        const s = e.additionalProperties;
        for (const o of Object.getOwnPropertyNames(r)) {
          if (o in e.properties) {
            r[o] = Visit(e.properties[o], t, r[o]);
            continue;
          }
          if ((0, l.IsSchema)(s) && (0, n.Check)(s, t, r[o])) {
            r[o] = Visit(s, t, r[o]);
            continue;
          }
          delete r[o];
        }
        return r;
      }
      function FromRecord(e, t, r) {
        if (!(0, A.IsObject)(r)) return r;
        const s = e.additionalProperties;
        const o = Object.getOwnPropertyNames(r);
        const [i, a] = Object.entries(e.patternProperties)[0];
        const c = new RegExp(i);
        for (const e of o) {
          if (c.test(e)) {
            r[e] = Visit(a, t, r[e]);
            continue;
          }
          if ((0, l.IsSchema)(s) && (0, n.Check)(s, t, r[e])) {
            r[e] = Visit(s, t, r[e]);
            continue;
          }
          delete r[e];
        }
        return r;
      }
      function FromRef(e, t, r) {
        return Visit((0, i.Deref)(e, t), t, r);
      }
      function FromThis(e, t, r) {
        return Visit((0, i.Deref)(e, t), t, r);
      }
      function FromTuple(e, t, r) {
        if (!(0, A.IsArray)(r)) return r;
        if ((0, A.IsUndefined)(e.items)) return [];
        const s = Math.min(r.length, e.items.length);
        for (let n = 0; n < s; n++) {
          r[n] = Visit(e.items[n], t, r[n]);
        }
        return r.length > s ? r.slice(0, s) : r;
      }
      function FromUnion(e, t, r) {
        for (const s of e.anyOf) {
          if (IsCheckable(s) && (0, n.Check)(s, t, r)) {
            return Visit(s, t, r);
          }
        }
        return r;
      }
      function Visit(e, t, r) {
        const s = (0, A.IsString)(e.$id) ? [...t, e] : t;
        const n = e;
        switch (n[a.Kind]) {
          case "Array":
            return FromArray(n, s, r);
          case "Intersect":
            return FromIntersect(n, s, r);
          case "Object":
            return FromObject(n, s, r);
          case "Record":
            return FromRecord(n, s, r);
          case "Ref":
            return FromRef(n, s, r);
          case "This":
            return FromThis(n, s, r);
          case "Tuple":
            return FromTuple(n, s, r);
          case "Union":
            return FromUnion(n, s, r);
          default:
            return r;
        }
      }
      function Clean(...e) {
        return e.length === 3 ? Visit(e[0], e[1], e[2]) : Visit(e[0], [], e[1]);
      }
      t.Clean = Clean;
    },
    6115: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(40338), t);
    },
    13366: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Clone = void 0;
      const s = r(17479);
      function ObjectType(e) {
        const t = {};
        for (const r of Object.getOwnPropertyNames(e)) {
          t[r] = Clone(e[r]);
        }
        for (const r of Object.getOwnPropertySymbols(e)) {
          t[r] = Clone(e[r]);
        }
        return t;
      }
      function ArrayType(e) {
        return e.map((e) => Clone(e));
      }
      function TypedArrayType(e) {
        return e.slice();
      }
      function DateType(e) {
        return new Date(e.toISOString());
      }
      function ValueType(e) {
        return e;
      }
      function Clone(e) {
        if ((0, s.IsArray)(e)) return ArrayType(e);
        if ((0, s.IsDate)(e)) return DateType(e);
        if ((0, s.IsStandardObject)(e)) return ObjectType(e);
        if ((0, s.IsTypedArray)(e)) return TypedArrayType(e);
        if ((0, s.IsValueType)(e)) return ValueType(e);
        throw new Error("ValueClone: Unable to clone value");
      }
      t.Clone = Clone;
    },
    21683: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(13366), t);
    },
    68594: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Convert = void 0;
      const s = r(21683);
      const n = r(33742);
      const o = r(40886);
      const i = r(97034);
      const a = r(17479);
      function IsStringNumeric(e) {
        return (0, a.IsString)(e) && !isNaN(e) && !isNaN(parseFloat(e));
      }
      function IsValueToString(e) {
        return (0, a.IsBigInt)(e) || (0, a.IsBoolean)(e) || (0, a.IsNumber)(e);
      }
      function IsValueTrue(e) {
        return (
          e === true ||
          ((0, a.IsNumber)(e) && e === 1) ||
          ((0, a.IsBigInt)(e) && e === BigInt("1")) ||
          ((0, a.IsString)(e) && (e.toLowerCase() === "true" || e === "1"))
        );
      }
      function IsValueFalse(e) {
        return (
          e === false ||
          ((0, a.IsNumber)(e) && (e === 0 || Object.is(e, -0))) ||
          ((0, a.IsBigInt)(e) && e === BigInt("0")) ||
          ((0, a.IsString)(e) && (e.toLowerCase() === "false" || e === "0" || e === "-0"))
        );
      }
      function IsTimeStringWithTimeZone(e) {
        return (0, a.IsString)(e) && /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i.test(e);
      }
      function IsTimeStringWithoutTimeZone(e) {
        return (0, a.IsString)(e) && /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)?$/i.test(e);
      }
      function IsDateTimeStringWithTimeZone(e) {
        return (0, a.IsString)(e) && /^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i.test(e);
      }
      function IsDateTimeStringWithoutTimeZone(e) {
        return (0, a.IsString)(e) && /^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)?$/i.test(e);
      }
      function IsDateString(e) {
        return (0, a.IsString)(e) && /^\d\d\d\d-[0-1]\d-[0-3]\d$/i.test(e);
      }
      function TryConvertLiteralString(e, t) {
        const r = TryConvertString(e);
        return r === t ? r : e;
      }
      function TryConvertLiteralNumber(e, t) {
        const r = TryConvertNumber(e);
        return r === t ? r : e;
      }
      function TryConvertLiteralBoolean(e, t) {
        const r = TryConvertBoolean(e);
        return r === t ? r : e;
      }
      function TryConvertLiteral(e, t) {
        return (0, a.IsString)(e.const)
          ? TryConvertLiteralString(t, e.const)
          : (0, a.IsNumber)(e.const)
            ? TryConvertLiteralNumber(t, e.const)
            : (0, a.IsBoolean)(e.const)
              ? TryConvertLiteralBoolean(t, e.const)
              : (0, s.Clone)(t);
      }
      function TryConvertBoolean(e) {
        return IsValueTrue(e) ? true : IsValueFalse(e) ? false : e;
      }
      function TryConvertBigInt(e) {
        return IsStringNumeric(e) ? BigInt(parseInt(e)) : (0, a.IsNumber)(e) ? BigInt(e | 0) : IsValueFalse(e) ? BigInt(0) : IsValueTrue(e) ? BigInt(1) : e;
      }
      function TryConvertString(e) {
        return IsValueToString(e) ? e.toString() : (0, a.IsSymbol)(e) && e.description !== undefined ? e.description.toString() : e;
      }
      function TryConvertNumber(e) {
        return IsStringNumeric(e) ? parseFloat(e) : IsValueTrue(e) ? 1 : IsValueFalse(e) ? 0 : e;
      }
      function TryConvertInteger(e) {
        return IsStringNumeric(e) ? parseInt(e) : (0, a.IsNumber)(e) ? e | 0 : IsValueTrue(e) ? 1 : IsValueFalse(e) ? 0 : e;
      }
      function TryConvertNull(e) {
        return (0, a.IsString)(e) && e.toLowerCase() === "null" ? null : e;
      }
      function TryConvertUndefined(e) {
        return (0, a.IsString)(e) && e === "undefined" ? undefined : e;
      }
      function TryConvertDate(e) {
        return (0, a.IsDate)(e)
          ? e
          : (0, a.IsNumber)(e)
            ? new Date(e)
            : IsValueTrue(e)
              ? new Date(1)
              : IsValueFalse(e)
                ? new Date(0)
                : IsStringNumeric(e)
                  ? new Date(parseInt(e))
                  : IsTimeStringWithoutTimeZone(e)
                    ? new Date(`1970-01-01T${e}.000Z`)
                    : IsTimeStringWithTimeZone(e)
                      ? new Date(`1970-01-01T${e}`)
                      : IsDateTimeStringWithoutTimeZone(e)
                        ? new Date(`${e}.000Z`)
                        : IsDateTimeStringWithTimeZone(e)
                          ? new Date(e)
                          : IsDateString(e)
                            ? new Date(`${e}T00:00:00.000Z`)
                            : e;
      }
      function Default(e) {
        return e;
      }
      function FromArray(e, t, r) {
        const s = (0, a.IsArray)(r) ? r : [r];
        return s.map((r) => Visit(e.items, t, r));
      }
      function FromBigInt(e, t, r) {
        return TryConvertBigInt(r);
      }
      function FromBoolean(e, t, r) {
        return TryConvertBoolean(r);
      }
      function FromDate(e, t, r) {
        return TryConvertDate(r);
      }
      function FromInteger(e, t, r) {
        return TryConvertInteger(r);
      }
      function FromIntersect(e, t, r) {
        return e.allOf.reduce((e, r) => Visit(r, t, e), r);
      }
      function FromLiteral(e, t, r) {
        return TryConvertLiteral(e, r);
      }
      function FromNull(e, t, r) {
        return TryConvertNull(r);
      }
      function FromNumber(e, t, r) {
        return TryConvertNumber(r);
      }
      function FromObject(e, t, r) {
        const s = (0, a.IsObject)(r);
        if (!s) return r;
        const n = {};
        for (const s of Object.keys(r)) {
          n[s] = (0, a.HasPropertyKey)(e.properties, s) ? Visit(e.properties[s], t, r[s]) : r[s];
        }
        return n;
      }
      function FromRecord(e, t, r) {
        const s = Object.getOwnPropertyNames(e.patternProperties)[0];
        const n = e.patternProperties[s];
        const o = {};
        for (const [e, s] of Object.entries(r)) {
          o[e] = Visit(n, t, s);
        }
        return o;
      }
      function FromRef(e, t, r) {
        return Visit((0, o.Deref)(e, t), t, r);
      }
      function FromString(e, t, r) {
        return TryConvertString(r);
      }
      function FromSymbol(e, t, r) {
        return (0, a.IsString)(r) || (0, a.IsNumber)(r) ? Symbol(r) : r;
      }
      function FromThis(e, t, r) {
        return Visit((0, o.Deref)(e, t), t, r);
      }
      function FromTuple(e, t, r) {
        const s = (0, a.IsArray)(r) && !(0, a.IsUndefined)(e.items);
        if (!s) return r;
        return r.map((r, s) => (s < e.items.length ? Visit(e.items[s], t, r) : r));
      }
      function FromUndefined(e, t, r) {
        return TryConvertUndefined(r);
      }
      function FromUnion(e, t, r) {
        for (const s of e.anyOf) {
          const e = Visit(s, t, r);
          if (!(0, n.Check)(s, t, e)) continue;
          return e;
        }
        return r;
      }
      function Visit(e, t, r) {
        const s = (0, a.IsString)(e.$id) ? [...t, e] : t;
        const n = e;
        switch (e[i.Kind]) {
          case "Array":
            return FromArray(n, s, r);
          case "BigInt":
            return FromBigInt(n, s, r);
          case "Boolean":
            return FromBoolean(n, s, r);
          case "Date":
            return FromDate(n, s, r);
          case "Integer":
            return FromInteger(n, s, r);
          case "Intersect":
            return FromIntersect(n, s, r);
          case "Literal":
            return FromLiteral(n, s, r);
          case "Null":
            return FromNull(n, s, r);
          case "Number":
            return FromNumber(n, s, r);
          case "Object":
            return FromObject(n, s, r);
          case "Record":
            return FromRecord(n, s, r);
          case "Ref":
            return FromRef(n, s, r);
          case "String":
            return FromString(n, s, r);
          case "Symbol":
            return FromSymbol(n, s, r);
          case "This":
            return FromThis(n, s, r);
          case "Tuple":
            return FromTuple(n, s, r);
          case "Undefined":
            return FromUndefined(n, s, r);
          case "Union":
            return FromUnion(n, s, r);
          default:
            return Default(r);
        }
      }
      function Convert(...e) {
        return e.length === 3 ? Visit(e[0], e[1], e[2]) : Visit(e[0], [], e[1]);
      }
      t.Convert = Convert;
    },
    41241: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(68594), t);
    },
    51744: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Create = t.ValueCreateError = void 0;
      const s = r(17479);
      const n = r(33742);
      const o = r(21683);
      const i = r(40886);
      const a = r(26609);
      const A = r(94354);
      const l = r(51786);
      const c = r(97034);
      const d = r(26113);
      class ValueCreateError extends d.TypeBoxError {
        constructor(e, t) {
          super(t);
          this.schema = e;
        }
      }
      t.ValueCreateError = ValueCreateError;
      function FromDefault(e) {
        return typeof e === "function" ? e : (0, o.Clone)(e);
      }
      function FromAny(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return {};
        }
      }
      function FromArray(e, t) {
        if (e.uniqueItems === true && !(0, s.HasPropertyKey)(e, "default")) {
          throw new ValueCreateError(e, "Array with the uniqueItems constraint requires a default value");
        } else if ("contains" in e && !(0, s.HasPropertyKey)(e, "default")) {
          throw new ValueCreateError(e, "Array with the contains constraint requires a default value");
        } else if ("default" in e) {
          return FromDefault(e.default);
        } else if (e.minItems !== undefined) {
          return Array.from({ length: e.minItems }).map((r) => Visit(e.items, t));
        } else {
          return [];
        }
      }
      function FromAsyncIterator(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return (async function* () {})();
        }
      }
      function FromBigInt(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return BigInt(0);
        }
      }
      function FromBoolean(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return false;
        }
      }
      function FromConstructor(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          const r = Visit(e.returns, t);
          if (typeof r === "object" && !Array.isArray(r)) {
            return class {
              constructor() {
                for (const [e, t] of Object.entries(r)) {
                  const r = this;
                  r[e] = t;
                }
              }
            };
          } else {
            return class {};
          }
        }
      }
      function FromDate(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else if (e.minimumTimestamp !== undefined) {
          return new Date(e.minimumTimestamp);
        } else {
          return new Date();
        }
      }
      function FromFunction(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return () => Visit(e.returns, t);
        }
      }
      function FromInteger(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else if (e.minimum !== undefined) {
          return e.minimum;
        } else {
          return 0;
        }
      }
      function FromIntersect(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          const r = e.allOf.reduce((e, r) => {
            const s = Visit(r, t);
            return typeof s === "object" ? { ...e, ...s } : s;
          }, {});
          if (!(0, n.Check)(e, t, r)) throw new ValueCreateError(e, "Intersect produced invalid value. Consider using a default value.");
          return r;
        }
      }
      function FromIterator(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return (function* () {})();
        }
      }
      function FromLiteral(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return e.const;
        }
      }
      function FromNever(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          throw new ValueCreateError(e, "Never types cannot be created. Consider using a default value.");
        }
      }
      function FromNot(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          throw new ValueCreateError(e, "Not types must have a default value");
        }
      }
      function FromNull(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return null;
        }
      }
      function FromNumber(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else if (e.minimum !== undefined) {
          return e.minimum;
        } else {
          return 0;
        }
      }
      function FromObject(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          const r = new Set(e.required);
          const s = {};
          for (const [n, o] of Object.entries(e.properties)) {
            if (!r.has(n)) continue;
            s[n] = Visit(o, t);
          }
          return s;
        }
      }
      function FromPromise(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return Promise.resolve(Visit(e.item, t));
        }
      }
      function FromRecord(e, t) {
        const [r, n] = Object.entries(e.patternProperties)[0];
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else if (!(r === A.PatternStringExact || r === A.PatternNumberExact)) {
          const e = r.slice(1, r.length - 1).split("|");
          const s = {};
          for (const r of e) s[r] = Visit(n, t);
          return s;
        } else {
          return {};
        }
      }
      function FromRef(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return Visit((0, i.Deref)(e, t), t);
        }
      }
      function FromRegExp(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          throw new ValueCreateError(e, "RegExp types cannot be created. Consider using a default value.");
        }
      }
      function FromString(e, t) {
        if (e.pattern !== undefined) {
          if (!(0, s.HasPropertyKey)(e, "default")) {
            throw new ValueCreateError(e, "String types with patterns must specify a default value");
          } else {
            return FromDefault(e.default);
          }
        } else if (e.format !== undefined) {
          if (!(0, s.HasPropertyKey)(e, "default")) {
            throw new ValueCreateError(e, "String types with formats must specify a default value");
          } else {
            return FromDefault(e.default);
          }
        } else {
          if ((0, s.HasPropertyKey)(e, "default")) {
            return FromDefault(e.default);
          } else if (e.minLength !== undefined) {
            return Array.from({ length: e.minLength })
              .map(() => " ")
              .join("");
          } else {
            return "";
          }
        }
      }
      function FromSymbol(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else if ("value" in e) {
          return Symbol.for(e.value);
        } else {
          return Symbol();
        }
      }
      function FromTemplateLiteral(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        }
        if (!(0, a.IsTemplateLiteralFinite)(e))
          throw new ValueCreateError(e, "Can only create template literals that produce a finite variants. Consider using a default value.");
        const r = (0, a.TemplateLiteralGenerate)(e);
        return r[0];
      }
      function FromThis(e, t) {
        if (u++ > p) throw new ValueCreateError(e, "Cannot create recursive type as it appears possibly infinite. Consider using a default.");
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return Visit((0, i.Deref)(e, t), t);
        }
      }
      function FromTuple(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        }
        if (e.items === undefined) {
          return [];
        } else {
          return Array.from({ length: e.minItems }).map((r, s) => Visit(e.items[s], t));
        }
      }
      function FromUndefined(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return undefined;
        }
      }
      function FromUnion(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else if (e.anyOf.length === 0) {
          throw new Error("ValueCreate.Union: Cannot create Union with zero variants");
        } else {
          return Visit(e.anyOf[0], t);
        }
      }
      function FromUint8Array(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else if (e.minByteLength !== undefined) {
          return new Uint8Array(e.minByteLength);
        } else {
          return new Uint8Array(0);
        }
      }
      function FromUnknown(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return {};
        }
      }
      function FromVoid(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          return void 0;
        }
      }
      function FromKind(e, t) {
        if ((0, s.HasPropertyKey)(e, "default")) {
          return FromDefault(e.default);
        } else {
          throw new Error("User defined types must specify a default value");
        }
      }
      function Visit(e, t) {
        const r = (0, s.IsString)(e.$id) ? [...t, e] : t;
        const n = e;
        switch (n[c.Kind]) {
          case "Any":
            return FromAny(n, r);
          case "Array":
            return FromArray(n, r);
          case "AsyncIterator":
            return FromAsyncIterator(n, r);
          case "BigInt":
            return FromBigInt(n, r);
          case "Boolean":
            return FromBoolean(n, r);
          case "Constructor":
            return FromConstructor(n, r);
          case "Date":
            return FromDate(n, r);
          case "Function":
            return FromFunction(n, r);
          case "Integer":
            return FromInteger(n, r);
          case "Intersect":
            return FromIntersect(n, r);
          case "Iterator":
            return FromIterator(n, r);
          case "Literal":
            return FromLiteral(n, r);
          case "Never":
            return FromNever(n, r);
          case "Not":
            return FromNot(n, r);
          case "Null":
            return FromNull(n, r);
          case "Number":
            return FromNumber(n, r);
          case "Object":
            return FromObject(n, r);
          case "Promise":
            return FromPromise(n, r);
          case "Record":
            return FromRecord(n, r);
          case "Ref":
            return FromRef(n, r);
          case "RegExp":
            return FromRegExp(n, r);
          case "String":
            return FromString(n, r);
          case "Symbol":
            return FromSymbol(n, r);
          case "TemplateLiteral":
            return FromTemplateLiteral(n, r);
          case "This":
            return FromThis(n, r);
          case "Tuple":
            return FromTuple(n, r);
          case "Undefined":
            return FromUndefined(n, r);
          case "Union":
            return FromUnion(n, r);
          case "Uint8Array":
            return FromUint8Array(n, r);
          case "Unknown":
            return FromUnknown(n, r);
          case "Void":
            return FromVoid(n, r);
          default:
            if (!l.TypeRegistry.Has(n[c.Kind])) throw new ValueCreateError(n, "Unknown type");
            return FromKind(n, r);
        }
      }
      const p = 512;
      let u = 0;
      function Create(...e) {
        u = 0;
        return e.length === 2 ? Visit(e[0], e[1]) : Visit(e[0], []);
      }
      t.Create = Create;
    },
    18050: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(51744), t);
    },
    28766: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Default = void 0;
      const s = r(33742);
      const n = r(21683);
      const o = r(40886);
      const i = r(97034);
      const a = r(17479);
      const A = r(70384);
      function ValueOrDefault(e, t) {
        return t === undefined && "default" in e ? (0, n.Clone)(e.default) : t;
      }
      function IsCheckable(e) {
        return (0, A.IsSchema)(e) && e[i.Kind] !== "Unsafe";
      }
      function IsDefaultSchema(e) {
        return (0, A.IsSchema)(e) && "default" in e;
      }
      function FromArray(e, t, r) {
        const s = ValueOrDefault(e, r);
        if (!(0, a.IsArray)(s)) return s;
        for (let r = 0; r < s.length; r++) {
          s[r] = Visit(e.items, t, s[r]);
        }
        return s;
      }
      function FromIntersect(e, t, r) {
        const s = ValueOrDefault(e, r);
        return e.allOf.reduce((e, r) => {
          const n = Visit(r, t, s);
          return (0, a.IsObject)(n) ? { ...e, ...n } : n;
        }, {});
      }
      function FromObject(e, t, r) {
        const s = ValueOrDefault(e, r);
        if (!(0, a.IsObject)(s)) return s;
        const n = e.additionalProperties;
        const o = Object.getOwnPropertyNames(e.properties);
        for (const r of o) {
          if (!IsDefaultSchema(e.properties[r])) continue;
          s[r] = Visit(e.properties[r], t, s[r]);
        }
        if (!IsDefaultSchema(n)) return s;
        for (const e of Object.getOwnPropertyNames(s)) {
          if (o.includes(e)) continue;
          s[e] = Visit(n, t, s[e]);
        }
        return s;
      }
      function FromRecord(e, t, r) {
        const s = ValueOrDefault(e, r);
        if (!(0, a.IsObject)(s)) return s;
        const n = e.additionalProperties;
        const [o, i] = Object.entries(e.patternProperties)[0];
        const A = new RegExp(o);
        for (const e of Object.getOwnPropertyNames(s)) {
          if (!(A.test(e) && IsDefaultSchema(i))) continue;
          s[e] = Visit(i, t, s[e]);
        }
        if (!IsDefaultSchema(n)) return s;
        for (const e of Object.getOwnPropertyNames(s)) {
          if (A.test(e)) continue;
          s[e] = Visit(n, t, s[e]);
        }
        return s;
      }
      function FromRef(e, t, r) {
        return Visit((0, o.Deref)(e, t), t, ValueOrDefault(e, r));
      }
      function FromThis(e, t, r) {
        return Visit((0, o.Deref)(e, t), t, r);
      }
      function FromTuple(e, t, r) {
        const s = ValueOrDefault(e, r);
        if (!(0, a.IsArray)(s) || (0, a.IsUndefined)(e.items)) return s;
        const [n, o] = [e.items, Math.max(e.items.length, s.length)];
        for (let e = 0; e < o; e++) {
          if (e < n.length) s[e] = Visit(n[e], t, s[e]);
        }
        return s;
      }
      function FromUnion(e, t, r) {
        const n = ValueOrDefault(e, r);
        for (const r of e.anyOf) {
          const e = Visit(r, t, n);
          if (IsCheckable(r) && (0, s.Check)(r, e)) {
            return e;
          }
        }
        return n;
      }
      function Visit(e, t, r) {
        const s = (0, a.IsString)(e.$id) ? [...t, e] : t;
        const n = e;
        switch (n[i.Kind]) {
          case "Array":
            return FromArray(n, s, r);
          case "Intersect":
            return FromIntersect(n, s, r);
          case "Object":
            return FromObject(n, s, r);
          case "Record":
            return FromRecord(n, s, r);
          case "Ref":
            return FromRef(n, s, r);
          case "This":
            return FromThis(n, s, r);
          case "Tuple":
            return FromTuple(n, s, r);
          case "Union":
            return FromUnion(n, s, r);
          default:
            return ValueOrDefault(n, r);
        }
      }
      function Default(...e) {
        return e.length === 3 ? Visit(e[0], e[1], e[2]) : Visit(e[0], [], e[1]);
      }
      t.Default = Default;
    },
    97659: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(28766), t);
    },
    67126: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Patch = t.Diff = t.ValueDeltaSymbolError = t.ValueDeltaError = t.Edit = t.Delete = t.Update = t.Insert = void 0;
      const s = r(17479);
      const n = r(23079);
      const o = r(21683);
      const i = r(26113);
      const a = r(98076);
      const A = r(62094);
      const l = r(81688);
      const c = r(51897);
      const d = r(69100);
      t.Insert = (0, A.Object)({ type: (0, a.Literal)("insert"), path: (0, l.String)(), value: (0, c.Unknown)() });
      t.Update = (0, A.Object)({ type: (0, a.Literal)("update"), path: (0, l.String)(), value: (0, c.Unknown)() });
      t.Delete = (0, A.Object)({ type: (0, a.Literal)("delete"), path: (0, l.String)() });
      t.Edit = (0, d.Union)([t.Insert, t.Update, t.Delete]);
      class ValueDeltaError extends i.TypeBoxError {
        constructor(e, t) {
          super(t);
          this.value = e;
        }
      }
      t.ValueDeltaError = ValueDeltaError;
      class ValueDeltaSymbolError extends ValueDeltaError {
        constructor(e) {
          super(e, "Cannot diff objects with symbol keys");
          this.value = e;
        }
      }
      t.ValueDeltaSymbolError = ValueDeltaSymbolError;
      function CreateUpdate(e, t) {
        return { type: "update", path: e, value: t };
      }
      function CreateInsert(e, t) {
        return { type: "insert", path: e, value: t };
      }
      function CreateDelete(e) {
        return { type: "delete", path: e };
      }
      function* ObjectType(e, t, r) {
        if (!(0, s.IsStandardObject)(r)) return yield CreateUpdate(e, r);
        const n = [...globalThis.Object.keys(t), ...globalThis.Object.getOwnPropertySymbols(t)];
        const o = [...globalThis.Object.keys(r), ...globalThis.Object.getOwnPropertySymbols(r)];
        for (const t of n) {
          if ((0, s.IsSymbol)(t)) throw new ValueDeltaSymbolError(t);
          if ((0, s.IsUndefined)(r[t]) && o.includes(t)) yield CreateUpdate(`${e}/${globalThis.String(t)}`, undefined);
        }
        for (const n of o) {
          if ((0, s.IsUndefined)(t[n]) || (0, s.IsUndefined)(r[n])) continue;
          if ((0, s.IsSymbol)(n)) throw new ValueDeltaSymbolError(n);
          yield* Visit(`${e}/${globalThis.String(n)}`, t[n], r[n]);
        }
        for (const n of o) {
          if ((0, s.IsSymbol)(n)) throw new ValueDeltaSymbolError(n);
          if ((0, s.IsUndefined)(t[n])) yield CreateInsert(`${e}/${globalThis.String(n)}`, r[n]);
        }
        for (const t of n.reverse()) {
          if ((0, s.IsSymbol)(t)) throw new ValueDeltaSymbolError(t);
          if ((0, s.IsUndefined)(r[t]) && !o.includes(t)) yield CreateDelete(`${e}/${globalThis.String(t)}`);
        }
      }
      function* ArrayType(e, t, r) {
        if (!(0, s.IsArray)(r)) return yield CreateUpdate(e, r);
        for (let s = 0; s < Math.min(t.length, r.length); s++) {
          yield* Visit(`${e}/${s}`, t[s], r[s]);
        }
        for (let s = 0; s < r.length; s++) {
          if (s < t.length) continue;
          yield CreateInsert(`${e}/${s}`, r[s]);
        }
        for (let s = t.length - 1; s >= 0; s--) {
          if (s < r.length) continue;
          yield CreateDelete(`${e}/${s}`);
        }
      }
      function* TypedArrayType(e, t, r) {
        if (
          !(0, s.IsTypedArray)(r) ||
          t.length !== r.length ||
          globalThis.Object.getPrototypeOf(t).constructor.name !== globalThis.Object.getPrototypeOf(r).constructor.name
        )
          return yield CreateUpdate(e, r);
        for (let s = 0; s < Math.min(t.length, r.length); s++) {
          yield* Visit(`${e}/${s}`, t[s], r[s]);
        }
      }
      function* ValueType(e, t, r) {
        if (t === r) return;
        yield CreateUpdate(e, r);
      }
      function* Visit(e, t, r) {
        if ((0, s.IsStandardObject)(t)) return yield* ObjectType(e, t, r);
        if ((0, s.IsArray)(t)) return yield* ArrayType(e, t, r);
        if ((0, s.IsTypedArray)(t)) return yield* TypedArrayType(e, t, r);
        if ((0, s.IsValueType)(t)) return yield* ValueType(e, t, r);
        throw new ValueDeltaError(t, "Unable to create diff edits for unknown value");
      }
      function Diff(e, t) {
        return [...Visit("", e, t)];
      }
      t.Diff = Diff;
      function IsRootUpdate(e) {
        return e.length > 0 && e[0].path === "" && e[0].type === "update";
      }
      function IsIdentity(e) {
        return e.length === 0;
      }
      function Patch(e, t) {
        if (IsRootUpdate(t)) {
          return (0, o.Clone)(t[0].value);
        }
        if (IsIdentity(t)) {
          return (0, o.Clone)(e);
        }
        const r = (0, o.Clone)(e);
        for (const e of t) {
          switch (e.type) {
            case "insert": {
              n.ValuePointer.Set(r, e.path, e.value);
              break;
            }
            case "update": {
              n.ValuePointer.Set(r, e.path, e.value);
              break;
            }
            case "delete": {
              n.ValuePointer.Delete(r, e.path);
              break;
            }
          }
        }
        return r;
      }
      t.Patch = Patch;
    },
    8124: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(67126), t);
    },
    85298: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Deref = t.TypeDereferenceError = void 0;
      const s = r(26113);
      class TypeDereferenceError extends s.TypeBoxError {
        constructor(e) {
          super(`Unable to dereference schema with $id '${e.$id}'`);
          this.schema = e;
        }
      }
      t.TypeDereferenceError = TypeDereferenceError;
      function Deref(e, t) {
        const r = t.findIndex((t) => t.$id === e.$ref);
        if (r === -1) throw new TypeDereferenceError(e);
        return t[r];
      }
      t.Deref = Deref;
    },
    40886: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(85298), t);
    },
    60586: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Equal = void 0;
      const s = r(17479);
      function ObjectType(e, t) {
        if (!(0, s.IsStandardObject)(t)) return false;
        const r = [...Object.keys(e), ...Object.getOwnPropertySymbols(e)];
        const n = [...Object.keys(t), ...Object.getOwnPropertySymbols(t)];
        if (r.length !== n.length) return false;
        return r.every((r) => Equal(e[r], t[r]));
      }
      function DateType(e, t) {
        return (0, s.IsDate)(t) && e.getTime() === t.getTime();
      }
      function ArrayType(e, t) {
        if (!(0, s.IsArray)(t) || e.length !== t.length) return false;
        return e.every((e, r) => Equal(e, t[r]));
      }
      function TypedArrayType(e, t) {
        if (!(0, s.IsTypedArray)(t) || e.length !== t.length || Object.getPrototypeOf(e).constructor.name !== Object.getPrototypeOf(t).constructor.name)
          return false;
        return e.every((e, r) => Equal(e, t[r]));
      }
      function ValueType(e, t) {
        return e === t;
      }
      function Equal(e, t) {
        if ((0, s.IsStandardObject)(e)) return ObjectType(e, t);
        if ((0, s.IsDate)(e)) return DateType(e, t);
        if ((0, s.IsTypedArray)(e)) return TypedArrayType(e, t);
        if ((0, s.IsArray)(e)) return ArrayType(e, t);
        if ((0, s.IsValueType)(e)) return ValueType(e, t);
        throw new Error("ValueEquals: Unable to compare value");
      }
      t.Equal = Equal;
    },
    46186: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(60586), t);
    },
    1850: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.IsValueType =
        t.IsSymbol =
        t.IsFunction =
        t.IsString =
        t.IsBigInt =
        t.IsInteger =
        t.IsNumber =
        t.IsBoolean =
        t.IsNull =
        t.IsUndefined =
        t.IsArray =
        t.IsObject =
        t.HasPropertyKey =
        t.IsBigUint64Array =
        t.IsBigInt64Array =
        t.IsFloat64Array =
        t.IsFloat32Array =
        t.IsUint32Array =
        t.IsInt32Array =
        t.IsUint16Array =
        t.IsInt16Array =
        t.IsUint8ClampedArray =
        t.IsUint8Array =
        t.IsInt8Array =
        t.IsTypedArray =
        t.IsRegExp =
        t.IsSet =
        t.IsMap =
        t.IsDate =
        t.IsPromise =
        t.IsInstanceObject =
        t.IsStandardObject =
        t.IsIterator =
        t.IsAsyncIterator =
          void 0;
      function IsAsyncIterator(e) {
        return IsObject(e) && Symbol.asyncIterator in e;
      }
      t.IsAsyncIterator = IsAsyncIterator;
      function IsIterator(e) {
        return IsObject(e) && Symbol.iterator in e;
      }
      t.IsIterator = IsIterator;
      function IsStandardObject(e) {
        return IsObject(e) && !IsArray(e) && IsFunction(e.constructor) && e.constructor.name === "Object";
      }
      t.IsStandardObject = IsStandardObject;
      function IsInstanceObject(e) {
        return IsObject(e) && !IsArray(e) && IsFunction(e.constructor) && e.constructor.name !== "Object";
      }
      t.IsInstanceObject = IsInstanceObject;
      function IsPromise(e) {
        return e instanceof Promise;
      }
      t.IsPromise = IsPromise;
      function IsDate(e) {
        return e instanceof Date && Number.isFinite(e.getTime());
      }
      t.IsDate = IsDate;
      function IsMap(e) {
        return e instanceof globalThis.Map;
      }
      t.IsMap = IsMap;
      function IsSet(e) {
        return e instanceof globalThis.Set;
      }
      t.IsSet = IsSet;
      function IsRegExp(e) {
        return e instanceof globalThis.RegExp;
      }
      t.IsRegExp = IsRegExp;
      function IsTypedArray(e) {
        return ArrayBuffer.isView(e);
      }
      t.IsTypedArray = IsTypedArray;
      function IsInt8Array(e) {
        return e instanceof globalThis.Int8Array;
      }
      t.IsInt8Array = IsInt8Array;
      function IsUint8Array(e) {
        return e instanceof globalThis.Uint8Array;
      }
      t.IsUint8Array = IsUint8Array;
      function IsUint8ClampedArray(e) {
        return e instanceof globalThis.Uint8ClampedArray;
      }
      t.IsUint8ClampedArray = IsUint8ClampedArray;
      function IsInt16Array(e) {
        return e instanceof globalThis.Int16Array;
      }
      t.IsInt16Array = IsInt16Array;
      function IsUint16Array(e) {
        return e instanceof globalThis.Uint16Array;
      }
      t.IsUint16Array = IsUint16Array;
      function IsInt32Array(e) {
        return e instanceof globalThis.Int32Array;
      }
      t.IsInt32Array = IsInt32Array;
      function IsUint32Array(e) {
        return e instanceof globalThis.Uint32Array;
      }
      t.IsUint32Array = IsUint32Array;
      function IsFloat32Array(e) {
        return e instanceof globalThis.Float32Array;
      }
      t.IsFloat32Array = IsFloat32Array;
      function IsFloat64Array(e) {
        return e instanceof globalThis.Float64Array;
      }
      t.IsFloat64Array = IsFloat64Array;
      function IsBigInt64Array(e) {
        return e instanceof globalThis.BigInt64Array;
      }
      t.IsBigInt64Array = IsBigInt64Array;
      function IsBigUint64Array(e) {
        return e instanceof globalThis.BigUint64Array;
      }
      t.IsBigUint64Array = IsBigUint64Array;
      function HasPropertyKey(e, t) {
        return t in e;
      }
      t.HasPropertyKey = HasPropertyKey;
      function IsObject(e) {
        return e !== null && typeof e === "object";
      }
      t.IsObject = IsObject;
      function IsArray(e) {
        return Array.isArray(e) && !ArrayBuffer.isView(e);
      }
      t.IsArray = IsArray;
      function IsUndefined(e) {
        return e === undefined;
      }
      t.IsUndefined = IsUndefined;
      function IsNull(e) {
        return e === null;
      }
      t.IsNull = IsNull;
      function IsBoolean(e) {
        return typeof e === "boolean";
      }
      t.IsBoolean = IsBoolean;
      function IsNumber(e) {
        return typeof e === "number";
      }
      t.IsNumber = IsNumber;
      function IsInteger(e) {
        return Number.isInteger(e);
      }
      t.IsInteger = IsInteger;
      function IsBigInt(e) {
        return typeof e === "bigint";
      }
      t.IsBigInt = IsBigInt;
      function IsString(e) {
        return typeof e === "string";
      }
      t.IsString = IsString;
      function IsFunction(e) {
        return typeof e === "function";
      }
      t.IsFunction = IsFunction;
      function IsSymbol(e) {
        return typeof e === "symbol";
      }
      t.IsSymbol = IsSymbol;
      function IsValueType(e) {
        return IsBigInt(e) || IsBoolean(e) || IsNull(e) || IsNumber(e) || IsString(e) || IsSymbol(e) || IsUndefined(e);
      }
      t.IsValueType = IsValueType;
    },
    17479: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(1850), t);
    },
    83760: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Hash = t.ValueHashError = void 0;
      const s = r(17479);
      const n = r(26113);
      class ValueHashError extends n.TypeBoxError {
        constructor(e) {
          super(`Unable to hash value`);
          this.value = e;
        }
      }
      t.ValueHashError = ValueHashError;
      var o;
      (function (e) {
        e[(e["Undefined"] = 0)] = "Undefined";
        e[(e["Null"] = 1)] = "Null";
        e[(e["Boolean"] = 2)] = "Boolean";
        e[(e["Number"] = 3)] = "Number";
        e[(e["String"] = 4)] = "String";
        e[(e["Object"] = 5)] = "Object";
        e[(e["Array"] = 6)] = "Array";
        e[(e["Date"] = 7)] = "Date";
        e[(e["Uint8Array"] = 8)] = "Uint8Array";
        e[(e["Symbol"] = 9)] = "Symbol";
        e[(e["BigInt"] = 10)] = "BigInt";
      })(o || (o = {}));
      let i = BigInt("14695981039346656037");
      const [a, A] = [BigInt("1099511628211"), BigInt("2") ** BigInt("64")];
      const l = Array.from({ length: 256 }).map((e, t) => BigInt(t));
      const c = new Float64Array(1);
      const d = new DataView(c.buffer);
      const p = new Uint8Array(c.buffer);
      function* NumberToBytes(e) {
        const t = e === 0 ? 1 : Math.ceil(Math.floor(Math.log2(e) + 1) / 8);
        for (let r = 0; r < t; r++) {
          yield (e >> (8 * (t - 1 - r))) & 255;
        }
      }
      function ArrayType(e) {
        FNV1A64(o.Array);
        for (const t of e) {
          Visit(t);
        }
      }
      function BooleanType(e) {
        FNV1A64(o.Boolean);
        FNV1A64(e ? 1 : 0);
      }
      function BigIntType(e) {
        FNV1A64(o.BigInt);
        d.setBigInt64(0, e);
        for (const e of p) {
          FNV1A64(e);
        }
      }
      function DateType(e) {
        FNV1A64(o.Date);
        Visit(e.getTime());
      }
      function NullType(e) {
        FNV1A64(o.Null);
      }
      function NumberType(e) {
        FNV1A64(o.Number);
        d.setFloat64(0, e);
        for (const e of p) {
          FNV1A64(e);
        }
      }
      function ObjectType(e) {
        FNV1A64(o.Object);
        for (const t of globalThis.Object.getOwnPropertyNames(e).sort()) {
          Visit(t);
          Visit(e[t]);
        }
      }
      function StringType(e) {
        FNV1A64(o.String);
        for (let t = 0; t < e.length; t++) {
          for (const r of NumberToBytes(e.charCodeAt(t))) {
            FNV1A64(r);
          }
        }
      }
      function SymbolType(e) {
        FNV1A64(o.Symbol);
        Visit(e.description);
      }
      function Uint8ArrayType(e) {
        FNV1A64(o.Uint8Array);
        for (let t = 0; t < e.length; t++) {
          FNV1A64(e[t]);
        }
      }
      function UndefinedType(e) {
        return FNV1A64(o.Undefined);
      }
      function Visit(e) {
        if ((0, s.IsArray)(e)) return ArrayType(e);
        if ((0, s.IsBoolean)(e)) return BooleanType(e);
        if ((0, s.IsBigInt)(e)) return BigIntType(e);
        if ((0, s.IsDate)(e)) return DateType(e);
        if ((0, s.IsNull)(e)) return NullType(e);
        if ((0, s.IsNumber)(e)) return NumberType(e);
        if ((0, s.IsStandardObject)(e)) return ObjectType(e);
        if ((0, s.IsString)(e)) return StringType(e);
        if ((0, s.IsSymbol)(e)) return SymbolType(e);
        if ((0, s.IsUint8Array)(e)) return Uint8ArrayType(e);
        if ((0, s.IsUndefined)(e)) return UndefinedType(e);
        throw new ValueHashError(e);
      }
      function FNV1A64(e) {
        i = i ^ l[e];
        i = (i * a) % A;
      }
      function Hash(e) {
        i = BigInt("14695981039346656037");
        Visit(e);
        return i;
      }
      t.Hash = Hash;
    },
    7210: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(83760), t);
    },
    45105: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.Value = t.ValueErrorIterator = t.ValueErrorType = void 0;
      var o = r(65507);
      Object.defineProperty(t, "ValueErrorType", {
        enumerable: true,
        get: function () {
          return o.ValueErrorType;
        },
      });
      Object.defineProperty(t, "ValueErrorIterator", {
        enumerable: true,
        get: function () {
          return o.ValueErrorIterator;
        },
      });
      n(r(17479), t);
      n(r(46097), t);
      n(r(33742), t);
      n(r(6115), t);
      n(r(21683), t);
      n(r(41241), t);
      n(r(18050), t);
      n(r(97659), t);
      n(r(8124), t);
      n(r(46186), t);
      n(r(7210), t);
      n(r(36068), t);
      n(r(23079), t);
      n(r(50038), t);
      var i = r(22079);
      Object.defineProperty(t, "Value", {
        enumerable: true,
        get: function () {
          return i.Value;
        },
      });
    },
    36068: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(51212), t);
    },
    51212: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Mutate = t.ValueMutateError = void 0;
      const s = r(17479);
      const n = r(23079);
      const o = r(21683);
      const i = r(26113);
      class ValueMutateError extends i.TypeBoxError {
        constructor(e) {
          super(e);
        }
      }
      t.ValueMutateError = ValueMutateError;
      function ObjectType(e, t, r, i) {
        if (!(0, s.IsStandardObject)(r)) {
          n.ValuePointer.Set(e, t, (0, o.Clone)(i));
        } else {
          const s = Object.getOwnPropertyNames(r);
          const n = Object.getOwnPropertyNames(i);
          for (const e of s) {
            if (!n.includes(e)) {
              delete r[e];
            }
          }
          for (const e of n) {
            if (!s.includes(e)) {
              r[e] = null;
            }
          }
          for (const s of n) {
            Visit(e, `${t}/${s}`, r[s], i[s]);
          }
        }
      }
      function ArrayType(e, t, r, i) {
        if (!(0, s.IsArray)(r)) {
          n.ValuePointer.Set(e, t, (0, o.Clone)(i));
        } else {
          for (let s = 0; s < i.length; s++) {
            Visit(e, `${t}/${s}`, r[s], i[s]);
          }
          r.splice(i.length);
        }
      }
      function TypedArrayType(e, t, r, i) {
        if ((0, s.IsTypedArray)(r) && r.length === i.length) {
          for (let e = 0; e < r.length; e++) {
            r[e] = i[e];
          }
        } else {
          n.ValuePointer.Set(e, t, (0, o.Clone)(i));
        }
      }
      function ValueType(e, t, r, s) {
        if (r === s) return;
        n.ValuePointer.Set(e, t, s);
      }
      function Visit(e, t, r, n) {
        if ((0, s.IsArray)(n)) return ArrayType(e, t, r, n);
        if ((0, s.IsTypedArray)(n)) return TypedArrayType(e, t, r, n);
        if ((0, s.IsStandardObject)(n)) return ObjectType(e, t, r, n);
        if ((0, s.IsValueType)(n)) return ValueType(e, t, r, n);
      }
      function IsNonMutableValue(e) {
        return (0, s.IsTypedArray)(e) || (0, s.IsValueType)(e);
      }
      function IsMismatchedValue(e, t) {
        return ((0, s.IsStandardObject)(e) && (0, s.IsArray)(t)) || ((0, s.IsArray)(e) && (0, s.IsStandardObject)(t));
      }
      function Mutate(e, t) {
        if (IsNonMutableValue(e) || IsNonMutableValue(t)) throw new ValueMutateError("Only object and array types can be mutated at the root level");
        if (IsMismatchedValue(e, t)) throw new ValueMutateError("Cannot assign due type mismatch of assignable values");
        Visit(e, "", e, t);
      }
      t.Mutate = Mutate;
    },
    23079: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ValuePointer = void 0;
      t.ValuePointer = r(65630);
    },
    65630: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Get = t.Has = t.Delete = t.Set = t.Format = t.ValuePointerRootDeleteError = t.ValuePointerRootSetError = void 0;
      const s = r(26113);
      class ValuePointerRootSetError extends s.TypeBoxError {
        constructor(e, t, r) {
          super("Cannot set root value");
          this.value = e;
          this.path = t;
          this.update = r;
        }
      }
      t.ValuePointerRootSetError = ValuePointerRootSetError;
      class ValuePointerRootDeleteError extends s.TypeBoxError {
        constructor(e, t) {
          super("Cannot delete root value");
          this.value = e;
          this.path = t;
        }
      }
      t.ValuePointerRootDeleteError = ValuePointerRootDeleteError;
      function Escape(e) {
        return e.indexOf("~") === -1 ? e : e.replace(/~1/g, "/").replace(/~0/g, "~");
      }
      function* Format(e) {
        if (e === "") return;
        let [t, r] = [0, 0];
        for (let s = 0; s < e.length; s++) {
          const n = e.charAt(s);
          if (n === "/") {
            if (s === 0) {
              t = s + 1;
            } else {
              r = s;
              yield Escape(e.slice(t, r));
              t = s + 1;
            }
          } else {
            r = s;
          }
        }
        yield Escape(e.slice(t));
      }
      t.Format = Format;
      function Set(e, t, r) {
        if (t === "") throw new ValuePointerRootSetError(e, t, r);
        let [s, n, o] = [null, e, ""];
        for (const e of Format(t)) {
          if (n[e] === undefined) n[e] = {};
          s = n;
          n = n[e];
          o = e;
        }
        s[o] = r;
      }
      t.Set = Set;
      function Delete(e, t) {
        if (t === "") throw new ValuePointerRootDeleteError(e, t);
        let [r, s, n] = [null, e, ""];
        for (const e of Format(t)) {
          if (s[e] === undefined || s[e] === null) return;
          r = s;
          s = s[e];
          n = e;
        }
        if (Array.isArray(r)) {
          const e = parseInt(n);
          r.splice(e, 1);
        } else {
          delete r[n];
        }
      }
      t.Delete = Delete;
      function Has(e, t) {
        if (t === "") return true;
        let [r, s, n] = [null, e, ""];
        for (const e of Format(t)) {
          if (s[e] === undefined) return false;
          r = s;
          s = s[e];
          n = e;
        }
        return Object.getOwnPropertyNames(r).includes(n);
      }
      t.Has = Has;
      function Get(e, t) {
        if (t === "") return e;
        let r = e;
        for (const e of Format(t)) {
          if (r[e] === undefined) return undefined;
          r = r[e];
        }
        return r;
      }
      t.Get = Get;
    },
    37354: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TransformDecode = t.TransformDecodeError = t.TransformDecodeCheckError = void 0;
      const s = r(97034);
      const n = r(26113);
      const o = r(73373);
      const i = r(40886);
      const a = r(33742);
      const A = r(17479);
      const l = r(70384);
      class TransformDecodeCheckError extends n.TypeBoxError {
        constructor(e, t, r) {
          super(`Unable to decode value as it does not match the expected schema`);
          this.schema = e;
          this.value = t;
          this.error = r;
        }
      }
      t.TransformDecodeCheckError = TransformDecodeCheckError;
      class TransformDecodeError extends n.TypeBoxError {
        constructor(e, t, r, s) {
          super(s instanceof Error ? s.message : "Unknown error");
          this.schema = e;
          this.path = t;
          this.value = r;
          this.error = s;
        }
      }
      t.TransformDecodeError = TransformDecodeError;
      function Default(e, t, r) {
        try {
          return (0, l.IsTransform)(e) ? e[s.TransformKind].Decode(r) : r;
        } catch (s) {
          throw new TransformDecodeError(e, t, r, s);
        }
      }
      function FromArray(e, t, r, s) {
        return (0, A.IsArray)(s)
          ? Default(
              e,
              r,
              s.map((s, n) => Visit(e.items, t, `${r}/${n}`, s))
            )
          : Default(e, r, s);
      }
      function FromIntersect(e, t, r, s) {
        if (!(0, A.IsStandardObject)(s) || (0, A.IsValueType)(s)) return Default(e, r, s);
        const n = (0, o.KeyOfPropertyEntries)(e);
        const i = n.map((e) => e[0]);
        const a = { ...s };
        for (const [e, s] of n)
          if (e in a) {
            a[e] = Visit(s, t, `${r}/${e}`, a[e]);
          }
        if (!(0, l.IsTransform)(e.unevaluatedProperties)) {
          return Default(e, r, a);
        }
        const c = Object.getOwnPropertyNames(a);
        const d = e.unevaluatedProperties;
        const p = { ...a };
        for (const e of c)
          if (!i.includes(e)) {
            p[e] = Default(d, `${r}/${e}`, p[e]);
          }
        return Default(e, r, p);
      }
      function FromNot(e, t, r, s) {
        return Default(e, r, Visit(e.not, t, r, s));
      }
      function FromObject(e, t, r, s) {
        if (!(0, A.IsStandardObject)(s)) return Default(e, r, s);
        const n = (0, o.KeyOfPropertyKeys)(e);
        const i = { ...s };
        for (const s of n)
          if (s in i) {
            i[s] = Visit(e.properties[s], t, `${r}/${s}`, i[s]);
          }
        if (!(0, l.IsSchema)(e.additionalProperties)) {
          return Default(e, r, i);
        }
        const a = Object.getOwnPropertyNames(i);
        const c = e.additionalProperties;
        const d = { ...i };
        for (const e of a)
          if (!n.includes(e)) {
            d[e] = Default(c, `${r}/${e}`, d[e]);
          }
        return Default(e, r, d);
      }
      function FromRecord(e, t, r, s) {
        if (!(0, A.IsStandardObject)(s)) return Default(e, r, s);
        const n = Object.getOwnPropertyNames(e.patternProperties)[0];
        const o = new RegExp(n);
        const i = { ...s };
        for (const a of Object.getOwnPropertyNames(s))
          if (o.test(a)) {
            i[a] = Visit(e.patternProperties[n], t, `${r}/${a}`, i[a]);
          }
        if (!(0, l.IsSchema)(e.additionalProperties)) {
          return Default(e, r, i);
        }
        const a = Object.getOwnPropertyNames(i);
        const c = e.additionalProperties;
        const d = { ...i };
        for (const e of a)
          if (!o.test(e)) {
            d[e] = Default(c, `${r}/${e}`, d[e]);
          }
        return Default(e, r, d);
      }
      function FromRef(e, t, r, s) {
        const n = (0, i.Deref)(e, t);
        return Default(e, r, Visit(n, t, r, s));
      }
      function FromThis(e, t, r, s) {
        const n = (0, i.Deref)(e, t);
        return Default(e, r, Visit(n, t, r, s));
      }
      function FromTuple(e, t, r, s) {
        return (0, A.IsArray)(s) && (0, A.IsArray)(e.items)
          ? Default(
              e,
              r,
              e.items.map((e, n) => Visit(e, t, `${r}/${n}`, s[n]))
            )
          : Default(e, r, s);
      }
      function FromUnion(e, t, r, s) {
        for (const n of e.anyOf) {
          if (!(0, a.Check)(n, t, s)) continue;
          const o = Visit(n, t, r, s);
          return Default(e, r, o);
        }
        return Default(e, r, s);
      }
      function Visit(e, t, r, n) {
        const o = typeof e.$id === "string" ? [...t, e] : t;
        const i = e;
        switch (e[s.Kind]) {
          case "Array":
            return FromArray(i, o, r, n);
          case "Intersect":
            return FromIntersect(i, o, r, n);
          case "Not":
            return FromNot(i, o, r, n);
          case "Object":
            return FromObject(i, o, r, n);
          case "Record":
            return FromRecord(i, o, r, n);
          case "Ref":
            return FromRef(i, o, r, n);
          case "Symbol":
            return Default(i, r, n);
          case "This":
            return FromThis(i, o, r, n);
          case "Tuple":
            return FromTuple(i, o, r, n);
          case "Union":
            return FromUnion(i, o, r, n);
          default:
            return Default(i, r, n);
        }
      }
      function TransformDecode(e, t, r) {
        return Visit(e, t, "", r);
      }
      t.TransformDecode = TransformDecode;
    },
    33598: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TransformEncode = t.TransformEncodeError = t.TransformEncodeCheckError = void 0;
      const s = r(97034);
      const n = r(26113);
      const o = r(73373);
      const i = r(40886);
      const a = r(33742);
      const A = r(17479);
      const l = r(70384);
      class TransformEncodeCheckError extends n.TypeBoxError {
        constructor(e, t, r) {
          super(`The encoded value does not match the expected schema`);
          this.schema = e;
          this.value = t;
          this.error = r;
        }
      }
      t.TransformEncodeCheckError = TransformEncodeCheckError;
      class TransformEncodeError extends n.TypeBoxError {
        constructor(e, t, r, s) {
          super(`${s instanceof Error ? s.message : "Unknown error"}`);
          this.schema = e;
          this.path = t;
          this.value = r;
          this.error = s;
        }
      }
      t.TransformEncodeError = TransformEncodeError;
      function Default(e, t, r) {
        try {
          return (0, l.IsTransform)(e) ? e[s.TransformKind].Encode(r) : r;
        } catch (s) {
          throw new TransformEncodeError(e, t, r, s);
        }
      }
      function FromArray(e, t, r, s) {
        const n = Default(e, r, s);
        return (0, A.IsArray)(n) ? n.map((s, n) => Visit(e.items, t, `${r}/${n}`, s)) : n;
      }
      function FromIntersect(e, t, r, s) {
        const n = Default(e, r, s);
        if (!(0, A.IsStandardObject)(s) || (0, A.IsValueType)(s)) return n;
        const i = (0, o.KeyOfPropertyEntries)(e);
        const a = i.map((e) => e[0]);
        const c = { ...n };
        for (const [e, s] of i)
          if (e in c) {
            c[e] = Visit(s, t, `${r}/${e}`, c[e]);
          }
        if (!(0, l.IsTransform)(e.unevaluatedProperties)) {
          return Default(e, r, c);
        }
        const d = Object.getOwnPropertyNames(c);
        const p = e.unevaluatedProperties;
        const u = { ...c };
        for (const e of d)
          if (!a.includes(e)) {
            u[e] = Default(p, `${r}/${e}`, u[e]);
          }
        return u;
      }
      function FromNot(e, t, r, s) {
        return Default(e.not, r, Default(e, r, s));
      }
      function FromObject(e, t, r, s) {
        const n = Default(e, r, s);
        if (!(0, A.IsStandardObject)(n)) return n;
        const i = (0, o.KeyOfPropertyKeys)(e);
        const a = { ...n };
        for (const s of i)
          if (s in a) {
            a[s] = Visit(e.properties[s], t, `${r}/${s}`, a[s]);
          }
        if (!(0, l.IsSchema)(e.additionalProperties)) {
          return a;
        }
        const c = Object.getOwnPropertyNames(a);
        const d = e.additionalProperties;
        const p = { ...a };
        for (const e of c)
          if (!i.includes(e)) {
            p[e] = Default(d, `${r}/${e}`, p[e]);
          }
        return p;
      }
      function FromRecord(e, t, r, s) {
        const n = Default(e, r, s);
        if (!(0, A.IsStandardObject)(s)) return n;
        const o = Object.getOwnPropertyNames(e.patternProperties)[0];
        const i = new RegExp(o);
        const a = { ...n };
        for (const n of Object.getOwnPropertyNames(s))
          if (i.test(n)) {
            a[n] = Visit(e.patternProperties[o], t, `${r}/${n}`, a[n]);
          }
        if (!(0, l.IsSchema)(e.additionalProperties)) {
          return Default(e, r, a);
        }
        const c = Object.getOwnPropertyNames(a);
        const d = e.additionalProperties;
        const p = { ...a };
        for (const e of c)
          if (!i.test(e)) {
            p[e] = Default(d, `${r}/${e}`, p[e]);
          }
        return p;
      }
      function FromRef(e, t, r, s) {
        const n = (0, i.Deref)(e, t);
        const o = Visit(n, t, r, s);
        return Default(e, r, o);
      }
      function FromThis(e, t, r, s) {
        const n = (0, i.Deref)(e, t);
        const o = Visit(n, t, r, s);
        return Default(e, r, o);
      }
      function FromTuple(e, t, r, s) {
        const n = Default(e, r, s);
        return (0, A.IsArray)(e.items) ? e.items.map((e, s) => Visit(e, t, `${r}/${s}`, n[s])) : [];
      }
      function FromUnion(e, t, r, s) {
        for (const n of e.anyOf) {
          if (!(0, a.Check)(n, t, s)) continue;
          const o = Visit(n, t, r, s);
          return Default(e, r, o);
        }
        for (const n of e.anyOf) {
          const o = Visit(n, t, r, s);
          if (!(0, a.Check)(e, t, o)) continue;
          return Default(e, r, o);
        }
        return Default(e, r, s);
      }
      function Visit(e, t, r, n) {
        const o = typeof e.$id === "string" ? [...t, e] : t;
        const i = e;
        switch (e[s.Kind]) {
          case "Array":
            return FromArray(i, o, r, n);
          case "Intersect":
            return FromIntersect(i, o, r, n);
          case "Not":
            return FromNot(i, o, r, n);
          case "Object":
            return FromObject(i, o, r, n);
          case "Record":
            return FromRecord(i, o, r, n);
          case "Ref":
            return FromRef(i, o, r, n);
          case "This":
            return FromThis(i, o, r, n);
          case "Tuple":
            return FromTuple(i, o, r, n);
          case "Union":
            return FromUnion(i, o, r, n);
          default:
            return Default(i, r, n);
        }
      }
      function TransformEncode(e, t, r) {
        return Visit(e, t, "", r);
      }
      t.TransformEncode = TransformEncode;
    },
    51542: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.HasTransform = void 0;
      const s = r(40886);
      const n = r(97034);
      const o = r(70384);
      const i = r(17479);
      function FromArray(e, t) {
        return (0, o.IsTransform)(e) || Visit(e.items, t);
      }
      function FromAsyncIterator(e, t) {
        return (0, o.IsTransform)(e) || Visit(e.items, t);
      }
      function FromConstructor(e, t) {
        return (0, o.IsTransform)(e) || Visit(e.returns, t) || e.parameters.some((e) => Visit(e, t));
      }
      function FromFunction(e, t) {
        return (0, o.IsTransform)(e) || Visit(e.returns, t) || e.parameters.some((e) => Visit(e, t));
      }
      function FromIntersect(e, t) {
        return (0, o.IsTransform)(e) || (0, o.IsTransform)(e.unevaluatedProperties) || e.allOf.some((e) => Visit(e, t));
      }
      function FromIterator(e, t) {
        return (0, o.IsTransform)(e) || Visit(e.items, t);
      }
      function FromNot(e, t) {
        return (0, o.IsTransform)(e) || Visit(e.not, t);
      }
      function FromObject(e, t) {
        return (
          (0, o.IsTransform)(e) ||
          Object.values(e.properties).some((e) => Visit(e, t)) ||
          ((0, o.IsSchema)(e.additionalProperties) && Visit(e.additionalProperties, t))
        );
      }
      function FromPromise(e, t) {
        return (0, o.IsTransform)(e) || Visit(e.item, t);
      }
      function FromRecord(e, t) {
        const r = Object.getOwnPropertyNames(e.patternProperties)[0];
        const s = e.patternProperties[r];
        return (0, o.IsTransform)(e) || Visit(s, t) || ((0, o.IsSchema)(e.additionalProperties) && (0, o.IsTransform)(e.additionalProperties));
      }
      function FromRef(e, t) {
        if ((0, o.IsTransform)(e)) return true;
        return Visit((0, s.Deref)(e, t), t);
      }
      function FromThis(e, t) {
        if ((0, o.IsTransform)(e)) return true;
        return Visit((0, s.Deref)(e, t), t);
      }
      function FromTuple(e, t) {
        return (0, o.IsTransform)(e) || (!(0, i.IsUndefined)(e.items) && e.items.some((e) => Visit(e, t)));
      }
      function FromUnion(e, t) {
        return (0, o.IsTransform)(e) || e.anyOf.some((e) => Visit(e, t));
      }
      function Visit(e, t) {
        const r = (0, i.IsString)(e.$id) ? [...t, e] : t;
        const s = e;
        if (e.$id && a.has(e.$id)) return false;
        if (e.$id) a.add(e.$id);
        switch (e[n.Kind]) {
          case "Array":
            return FromArray(s, r);
          case "AsyncIterator":
            return FromAsyncIterator(s, r);
          case "Constructor":
            return FromConstructor(s, r);
          case "Function":
            return FromFunction(s, r);
          case "Intersect":
            return FromIntersect(s, r);
          case "Iterator":
            return FromIterator(s, r);
          case "Not":
            return FromNot(s, r);
          case "Object":
            return FromObject(s, r);
          case "Promise":
            return FromPromise(s, r);
          case "Record":
            return FromRecord(s, r);
          case "Ref":
            return FromRef(s, r);
          case "This":
            return FromThis(s, r);
          case "Tuple":
            return FromTuple(s, r);
          case "Union":
            return FromUnion(s, r);
          default:
            return (0, o.IsTransform)(e);
        }
      }
      const a = new Set();
      function HasTransform(e, t) {
        a.clear();
        return Visit(e, t);
      }
      t.HasTransform = HasTransform;
    },
    50038: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(37354), t);
      n(r(33598), t);
      n(r(51542), t);
    },
    22079: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Value = void 0;
      t.Value = r(50854);
    },
    50854: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Mutate =
        t.Patch =
        t.Hash =
        t.Diff =
        t.Equal =
        t.Errors =
        t.Encode =
        t.Default =
        t.Decode =
        t.Clone =
        t.Convert =
        t.Clean =
        t.Check =
        t.Create =
        t.Cast =
          void 0;
      const s = r(50038);
      const n = r(36068);
      const o = r(7210);
      const i = r(46186);
      const a = r(46097);
      const A = r(21683);
      const l = r(41241);
      const c = r(18050);
      const d = r(6115);
      const p = r(33742);
      const u = r(97659);
      const g = r(8124);
      const m = r(65507);
      function Cast(...e) {
        return a.Cast.apply(a.Cast, e);
      }
      t.Cast = Cast;
      function Create(...e) {
        return c.Create.apply(c.Create, e);
      }
      t.Create = Create;
      function Check(...e) {
        return p.Check.apply(p.Check, e);
      }
      t.Check = Check;
      function Clean(...e) {
        return d.Clean.apply(d.Clean, e);
      }
      t.Clean = Clean;
      function Convert(...e) {
        return l.Convert.apply(l.Convert, e);
      }
      t.Convert = Convert;
      function Clone(e) {
        return (0, A.Clone)(e);
      }
      t.Clone = Clone;
      function Decode(...e) {
        const [t, r, n] = e.length === 3 ? [e[0], e[1], e[2]] : [e[0], [], e[1]];
        if (!Check(t, r, n)) throw new s.TransformDecodeCheckError(t, n, Errors(t, r, n).First());
        return (0, s.HasTransform)(t, r) ? (0, s.TransformDecode)(t, r, n) : n;
      }
      t.Decode = Decode;
      function Default(...e) {
        return u.Default.apply(u.Default, e);
      }
      t.Default = Default;
      function Encode(...e) {
        const [t, r, n] = e.length === 3 ? [e[0], e[1], e[2]] : [e[0], [], e[1]];
        const o = (0, s.HasTransform)(t, r) ? (0, s.TransformEncode)(t, r, n) : n;
        if (!Check(t, r, o)) throw new s.TransformEncodeCheckError(t, o, Errors(t, r, o).First());
        return o;
      }
      t.Encode = Encode;
      function Errors(...e) {
        return m.Errors.apply(m.Errors, e);
      }
      t.Errors = Errors;
      function Equal(e, t) {
        return (0, i.Equal)(e, t);
      }
      t.Equal = Equal;
      function Diff(e, t) {
        return (0, g.Diff)(e, t);
      }
      t.Diff = Diff;
      function Hash(e) {
        return (0, o.Hash)(e);
      }
      t.Hash = Hash;
      function Patch(e, t) {
        return (0, g.Patch)(e, t);
      }
      t.Patch = Patch;
      function Mutate(e, t) {
        (0, n.Mutate)(e, t);
      }
      t.Mutate = Mutate;
    },
    68789: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const n = s(r(52165));
      const o = n.default;
      t["default"] = o;
    },
    62495: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const n = s(r(16623));
      const o = n.default;
      t["default"] = o;
    },
    52165: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__rest) ||
        function (e, t) {
          var r = {};
          for (var s in e) if (Object.prototype.hasOwnProperty.call(e, s) && t.indexOf(s) < 0) r[s] = e[s];
          if (e != null && typeof Object.getOwnPropertySymbols === "function")
            for (var n = 0, s = Object.getOwnPropertySymbols(e); n < s.length; n++) {
              if (t.indexOf(s[n]) < 0 && Object.prototype.propertyIsEnumerable.call(e, s[n])) r[s[n]] = e[s[n]];
            }
          return r;
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const n = r(92356);
      const o = r(30601);
      const i = r(73981);
      class GoTrueAdminApi {
        constructor({ url: e = "", headers: t = {}, fetch: r }) {
          this.url = e;
          this.headers = t;
          this.fetch = (0, o.resolveFetch)(r);
          this.mfa = { listFactors: this._listFactors.bind(this), deleteFactor: this._deleteFactor.bind(this) };
        }
        async signOut(e, t = "global") {
          try {
            await (0, n._request)(this.fetch, "POST", `${this.url}/logout?scope=${t}`, { headers: this.headers, jwt: e, noResolveJson: true });
            return { data: null, error: null };
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: null, error: e };
            }
            throw e;
          }
        }
        async inviteUserByEmail(e, t = {}) {
          try {
            return await (0, n._request)(this.fetch, "POST", `${this.url}/invite`, {
              body: { email: e, data: t.data },
              headers: this.headers,
              redirectTo: t.redirectTo,
              xform: n._userResponse,
            });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null }, error: e };
            }
            throw e;
          }
        }
        async generateLink(e) {
          try {
            const { options: t } = e,
              r = s(e, ["options"]);
            const o = Object.assign(Object.assign({}, r), t);
            if ("newEmail" in r) {
              o.new_email = r === null || r === void 0 ? void 0 : r.newEmail;
              delete o["newEmail"];
            }
            return await (0, n._request)(this.fetch, "POST", `${this.url}/admin/generate_link`, {
              body: o,
              headers: this.headers,
              xform: n._generateLinkResponse,
              redirectTo: t === null || t === void 0 ? void 0 : t.redirectTo,
            });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { properties: null, user: null }, error: e };
            }
            throw e;
          }
        }
        async createUser(e) {
          try {
            return await (0, n._request)(this.fetch, "POST", `${this.url}/admin/users`, { body: e, headers: this.headers, xform: n._userResponse });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null }, error: e };
            }
            throw e;
          }
        }
        async listUsers(e) {
          var t, r, s, o, a, A, l;
          try {
            const i = { nextPage: null, lastPage: 0, total: 0 };
            const c = await (0, n._request)(this.fetch, "GET", `${this.url}/admin/users`, {
              headers: this.headers,
              noResolveJson: true,
              query: {
                page:
                  (r = (t = e === null || e === void 0 ? void 0 : e.page) === null || t === void 0 ? void 0 : t.toString()) !== null && r !== void 0 ? r : "",
                per_page:
                  (o = (s = e === null || e === void 0 ? void 0 : e.perPage) === null || s === void 0 ? void 0 : s.toString()) !== null && o !== void 0
                    ? o
                    : "",
              },
              xform: n._noResolveJsonResponse,
            });
            if (c.error) throw c.error;
            const d = await c.json();
            const p = (a = c.headers.get("x-total-count")) !== null && a !== void 0 ? a : 0;
            const u = (l = (A = c.headers.get("link")) === null || A === void 0 ? void 0 : A.split(",")) !== null && l !== void 0 ? l : [];
            if (u.length > 0) {
              u.forEach((e) => {
                const t = parseInt(e.split(";")[0].split("=")[1].substring(0, 1));
                const r = JSON.parse(e.split(";")[1].split("=")[1]);
                i[`${r}Page`] = t;
              });
              i.total = parseInt(p);
            }
            return { data: Object.assign(Object.assign({}, d), i), error: null };
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { users: [] }, error: e };
            }
            throw e;
          }
        }
        async getUserById(e) {
          try {
            return await (0, n._request)(this.fetch, "GET", `${this.url}/admin/users/${e}`, { headers: this.headers, xform: n._userResponse });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null }, error: e };
            }
            throw e;
          }
        }
        async updateUserById(e, t) {
          try {
            return await (0, n._request)(this.fetch, "PUT", `${this.url}/admin/users/${e}`, { body: t, headers: this.headers, xform: n._userResponse });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null }, error: e };
            }
            throw e;
          }
        }
        async deleteUser(e, t = false) {
          try {
            return await (0, n._request)(this.fetch, "DELETE", `${this.url}/admin/users/${e}`, {
              headers: this.headers,
              body: { should_soft_delete: t },
              xform: n._userResponse,
            });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null }, error: e };
            }
            throw e;
          }
        }
        async _listFactors(e) {
          try {
            const { data: t, error: r } = await (0, n._request)(this.fetch, "GET", `${this.url}/admin/users/${e.userId}/factors`, {
              headers: this.headers,
              xform: (e) => ({ data: { factors: e }, error: null }),
            });
            return { data: t, error: r };
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: null, error: e };
            }
            throw e;
          }
        }
        async _deleteFactor(e) {
          try {
            const t = await (0, n._request)(this.fetch, "DELETE", `${this.url}/admin/users/${e.userId}/factors/${e.id}`, { headers: this.headers });
            return { data: t, error: null };
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: null, error: e };
            }
            throw e;
          }
        }
      }
      t["default"] = GoTrueAdminApi;
    },
    16623: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const n = s(r(52165));
      const o = r(26705);
      const i = r(73981);
      const a = r(92356);
      const A = r(30601);
      const l = r(21735);
      const c = r(80512);
      const d = r(41920);
      const p = r(28932);
      (0, c.polyfillGlobalThis)();
      const u = {
        url: o.GOTRUE_URL,
        storageKey: o.STORAGE_KEY,
        autoRefreshToken: true,
        persistSession: true,
        detectSessionInUrl: true,
        headers: o.DEFAULT_HEADERS,
        flowType: "implicit",
        debug: false,
        hasCustomAuthorizationHeader: false,
      };
      const g = 30 * 1e3;
      const m = 3;
      async function lockNoOp(e, t, r) {
        return await r();
      }
      class GoTrueClient {
        constructor(e) {
          var t, r;
          this.memoryStorage = null;
          this.stateChangeEmitters = new Map();
          this.autoRefreshTicker = null;
          this.visibilityChangedCallback = null;
          this.refreshingDeferred = null;
          this.initializePromise = null;
          this.detectSessionInUrl = true;
          this.hasCustomAuthorizationHeader = false;
          this.suppressGetSessionWarning = false;
          this.lockAcquired = false;
          this.pendingInLock = [];
          this.broadcastChannel = null;
          this.logger = console.log;
          this.instanceID = GoTrueClient.nextInstanceID;
          GoTrueClient.nextInstanceID += 1;
          if (this.instanceID > 0 && (0, A.isBrowser)()) {
            console.warn(
              "Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key."
            );
          }
          const s = Object.assign(Object.assign({}, u), e);
          this.logDebugMessages = !!s.debug;
          if (typeof s.debug === "function") {
            this.logger = s.debug;
          }
          this.persistSession = s.persistSession;
          this.storageKey = s.storageKey;
          this.autoRefreshToken = s.autoRefreshToken;
          this.admin = new n.default({ url: s.url, headers: s.headers, fetch: s.fetch });
          this.url = s.url;
          this.headers = s.headers;
          this.fetch = (0, A.resolveFetch)(s.fetch);
          this.lock = s.lock || lockNoOp;
          this.detectSessionInUrl = s.detectSessionInUrl;
          this.flowType = s.flowType;
          this.hasCustomAuthorizationHeader = s.hasCustomAuthorizationHeader;
          if (s.lock) {
            this.lock = s.lock;
          } else if (
            (0, A.isBrowser)() &&
            ((t = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || t === void 0 ? void 0 : t.locks)
          ) {
            this.lock = p.navigatorLock;
          } else {
            this.lock = lockNoOp;
          }
          this.mfa = {
            verify: this._verify.bind(this),
            enroll: this._enroll.bind(this),
            unenroll: this._unenroll.bind(this),
            challenge: this._challenge.bind(this),
            listFactors: this._listFactors.bind(this),
            challengeAndVerify: this._challengeAndVerify.bind(this),
            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),
          };
          if (this.persistSession) {
            if (s.storage) {
              this.storage = s.storage;
            } else {
              if ((0, A.supportsLocalStorage)()) {
                this.storage = l.localStorageAdapter;
              } else {
                this.memoryStorage = {};
                this.storage = (0, l.memoryLocalStorageAdapter)(this.memoryStorage);
              }
            }
          } else {
            this.memoryStorage = {};
            this.storage = (0, l.memoryLocalStorageAdapter)(this.memoryStorage);
          }
          if ((0, A.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {
            try {
              this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);
            } catch (e) {
              console.error("Failed to create a new BroadcastChannel, multi-tab state changes will not be available", e);
            }
            (r = this.broadcastChannel) === null || r === void 0
              ? void 0
              : r.addEventListener("message", async (e) => {
                  this._debug("received broadcast notification from other tab or client", e);
                  await this._notifyAllSubscribers(e.data.event, e.data.session, false);
                });
          }
          this.initialize();
        }
        _debug(...e) {
          if (this.logDebugMessages) {
            this.logger(`GoTrueClient@${this.instanceID} (${d.version}) ${new Date().toISOString()}`, ...e);
          }
          return this;
        }
        async initialize() {
          if (this.initializePromise) {
            return await this.initializePromise;
          }
          this.initializePromise = (async () => await this._acquireLock(-1, async () => await this._initialize()))();
          return await this.initializePromise;
        }
        async _initialize() {
          try {
            const e = (0, A.isBrowser)() ? await this._isPKCEFlow() : false;
            this._debug("#_initialize()", "begin", "is PKCE flow", e);
            if (e || (this.detectSessionInUrl && this._isImplicitGrantFlow())) {
              const { data: t, error: r } = await this._getSessionFromURL(e);
              if (r) {
                this._debug("#_initialize()", "error detecting session from URL", r);
                if (
                  (r === null || r === void 0 ? void 0 : r.message) === "Identity is already linked" ||
                  (r === null || r === void 0 ? void 0 : r.message) === "Identity is already linked to another user"
                ) {
                  return { error: r };
                }
                await this._removeSession();
                return { error: r };
              }
              const { session: s, redirectType: n } = t;
              this._debug("#_initialize()", "detected session in URL", s, "redirect type", n);
              await this._saveSession(s);
              setTimeout(async () => {
                if (n === "recovery") {
                  await this._notifyAllSubscribers("PASSWORD_RECOVERY", s);
                } else {
                  await this._notifyAllSubscribers("SIGNED_IN", s);
                }
              }, 0);
              return { error: null };
            }
            await this._recoverAndRefresh();
            return { error: null };
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { error: e };
            }
            return { error: new i.AuthUnknownError("Unexpected error during initialization", e) };
          } finally {
            await this._handleVisibilityChange();
            this._debug("#_initialize()", "end");
          }
        }
        async signInAnonymously(e) {
          var t, r, s;
          try {
            await this._removeSession();
            const n = await (0, a._request)(this.fetch, "POST", `${this.url}/signup`, {
              headers: this.headers,
              body: {
                data: (r = (t = e === null || e === void 0 ? void 0 : e.options) === null || t === void 0 ? void 0 : t.data) !== null && r !== void 0 ? r : {},
                gotrue_meta_security: {
                  captcha_token: (s = e === null || e === void 0 ? void 0 : e.options) === null || s === void 0 ? void 0 : s.captchaToken,
                },
              },
              xform: a._sessionResponse,
            });
            const { data: o, error: i } = n;
            if (i || !o) {
              return { data: { user: null, session: null }, error: i };
            }
            const A = o.session;
            const l = o.user;
            if (o.session) {
              await this._saveSession(o.session);
              await this._notifyAllSubscribers("SIGNED_IN", A);
            }
            return { data: { user: l, session: A }, error: null };
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null, session: null }, error: e };
            }
            throw e;
          }
        }
        async signUp(e) {
          var t, r, s;
          try {
            await this._removeSession();
            let n;
            if ("email" in e) {
              const { email: r, password: s, options: o } = e;
              let i = null;
              let l = null;
              if (this.flowType === "pkce") {
                [i, l] = await (0, A.getCodeChallengeAndMethod)(this.storage, this.storageKey);
              }
              n = await (0, a._request)(this.fetch, "POST", `${this.url}/signup`, {
                headers: this.headers,
                redirectTo: o === null || o === void 0 ? void 0 : o.emailRedirectTo,
                body: {
                  email: r,
                  password: s,
                  data: (t = o === null || o === void 0 ? void 0 : o.data) !== null && t !== void 0 ? t : {},
                  gotrue_meta_security: { captcha_token: o === null || o === void 0 ? void 0 : o.captchaToken },
                  code_challenge: i,
                  code_challenge_method: l,
                },
                xform: a._sessionResponse,
              });
            } else if ("phone" in e) {
              const { phone: t, password: o, options: i } = e;
              n = await (0, a._request)(this.fetch, "POST", `${this.url}/signup`, {
                headers: this.headers,
                body: {
                  phone: t,
                  password: o,
                  data: (r = i === null || i === void 0 ? void 0 : i.data) !== null && r !== void 0 ? r : {},
                  channel: (s = i === null || i === void 0 ? void 0 : i.channel) !== null && s !== void 0 ? s : "sms",
                  gotrue_meta_security: { captcha_token: i === null || i === void 0 ? void 0 : i.captchaToken },
                },
                xform: a._sessionResponse,
              });
            } else {
              throw new i.AuthInvalidCredentialsError("You must provide either an email or phone number and a password");
            }
            const { data: o, error: l } = n;
            if (l || !o) {
              return { data: { user: null, session: null }, error: l };
            }
            const c = o.session;
            const d = o.user;
            if (o.session) {
              await this._saveSession(o.session);
              await this._notifyAllSubscribers("SIGNED_IN", c);
            }
            return { data: { user: d, session: c }, error: null };
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null, session: null }, error: e };
            }
            throw e;
          }
        }
        async signInWithPassword(e) {
          try {
            await this._removeSession();
            let t;
            if ("email" in e) {
              const { email: r, password: s, options: n } = e;
              t = await (0, a._request)(this.fetch, "POST", `${this.url}/token?grant_type=password`, {
                headers: this.headers,
                body: { email: r, password: s, gotrue_meta_security: { captcha_token: n === null || n === void 0 ? void 0 : n.captchaToken } },
                xform: a._sessionResponsePassword,
              });
            } else if ("phone" in e) {
              const { phone: r, password: s, options: n } = e;
              t = await (0, a._request)(this.fetch, "POST", `${this.url}/token?grant_type=password`, {
                headers: this.headers,
                body: { phone: r, password: s, gotrue_meta_security: { captcha_token: n === null || n === void 0 ? void 0 : n.captchaToken } },
                xform: a._sessionResponsePassword,
              });
            } else {
              throw new i.AuthInvalidCredentialsError("You must provide either an email or phone number and a password");
            }
            const { data: r, error: s } = t;
            if (s) {
              return { data: { user: null, session: null }, error: s };
            } else if (!r || !r.session || !r.user) {
              return { data: { user: null, session: null }, error: new i.AuthInvalidTokenResponseError() };
            }
            if (r.session) {
              await this._saveSession(r.session);
              await this._notifyAllSubscribers("SIGNED_IN", r.session);
            }
            return { data: Object.assign({ user: r.user, session: r.session }, r.weak_password ? { weakPassword: r.weak_password } : null), error: s };
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null, session: null }, error: e };
            }
            throw e;
          }
        }
        async signInWithOAuth(e) {
          var t, r, s, n;
          await this._removeSession();
          return await this._handleProviderSignIn(e.provider, {
            redirectTo: (t = e.options) === null || t === void 0 ? void 0 : t.redirectTo,
            scopes: (r = e.options) === null || r === void 0 ? void 0 : r.scopes,
            queryParams: (s = e.options) === null || s === void 0 ? void 0 : s.queryParams,
            skipBrowserRedirect: (n = e.options) === null || n === void 0 ? void 0 : n.skipBrowserRedirect,
          });
        }
        async exchangeCodeForSession(e) {
          await this.initializePromise;
          return this._acquireLock(-1, async () => this._exchangeCodeForSession(e));
        }
        async _exchangeCodeForSession(e) {
          const t = await (0, A.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);
          const [r, s] = (t !== null && t !== void 0 ? t : "").split("/");
          const { data: n, error: o } = await (0, a._request)(this.fetch, "POST", `${this.url}/token?grant_type=pkce`, {
            headers: this.headers,
            body: { auth_code: e, code_verifier: r },
            xform: a._sessionResponse,
          });
          await (0, A.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);
          if (o) {
            return { data: { user: null, session: null, redirectType: null }, error: o };
          } else if (!n || !n.session || !n.user) {
            return { data: { user: null, session: null, redirectType: null }, error: new i.AuthInvalidTokenResponseError() };
          }
          if (n.session) {
            await this._saveSession(n.session);
            await this._notifyAllSubscribers("SIGNED_IN", n.session);
          }
          return { data: Object.assign(Object.assign({}, n), { redirectType: s !== null && s !== void 0 ? s : null }), error: o };
        }
        async signInWithIdToken(e) {
          await this._removeSession();
          try {
            const { options: t, provider: r, token: s, access_token: n, nonce: o } = e;
            const A = await (0, a._request)(this.fetch, "POST", `${this.url}/token?grant_type=id_token`, {
              headers: this.headers,
              body: {
                provider: r,
                id_token: s,
                access_token: n,
                nonce: o,
                gotrue_meta_security: { captcha_token: t === null || t === void 0 ? void 0 : t.captchaToken },
              },
              xform: a._sessionResponse,
            });
            const { data: l, error: c } = A;
            if (c) {
              return { data: { user: null, session: null }, error: c };
            } else if (!l || !l.session || !l.user) {
              return { data: { user: null, session: null }, error: new i.AuthInvalidTokenResponseError() };
            }
            if (l.session) {
              await this._saveSession(l.session);
              await this._notifyAllSubscribers("SIGNED_IN", l.session);
            }
            return { data: l, error: c };
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null, session: null }, error: e };
            }
            throw e;
          }
        }
        async signInWithOtp(e) {
          var t, r, s, n, o;
          try {
            await this._removeSession();
            if ("email" in e) {
              const { email: s, options: n } = e;
              let o = null;
              let i = null;
              if (this.flowType === "pkce") {
                [o, i] = await (0, A.getCodeChallengeAndMethod)(this.storage, this.storageKey);
              }
              const { error: l } = await (0, a._request)(this.fetch, "POST", `${this.url}/otp`, {
                headers: this.headers,
                body: {
                  email: s,
                  data: (t = n === null || n === void 0 ? void 0 : n.data) !== null && t !== void 0 ? t : {},
                  create_user: (r = n === null || n === void 0 ? void 0 : n.shouldCreateUser) !== null && r !== void 0 ? r : true,
                  gotrue_meta_security: { captcha_token: n === null || n === void 0 ? void 0 : n.captchaToken },
                  code_challenge: o,
                  code_challenge_method: i,
                },
                redirectTo: n === null || n === void 0 ? void 0 : n.emailRedirectTo,
              });
              return { data: { user: null, session: null }, error: l };
            }
            if ("phone" in e) {
              const { phone: t, options: r } = e;
              const { data: i, error: A } = await (0, a._request)(this.fetch, "POST", `${this.url}/otp`, {
                headers: this.headers,
                body: {
                  phone: t,
                  data: (s = r === null || r === void 0 ? void 0 : r.data) !== null && s !== void 0 ? s : {},
                  create_user: (n = r === null || r === void 0 ? void 0 : r.shouldCreateUser) !== null && n !== void 0 ? n : true,
                  gotrue_meta_security: { captcha_token: r === null || r === void 0 ? void 0 : r.captchaToken },
                  channel: (o = r === null || r === void 0 ? void 0 : r.channel) !== null && o !== void 0 ? o : "sms",
                },
              });
              return { data: { user: null, session: null, messageId: i === null || i === void 0 ? void 0 : i.message_id }, error: A };
            }
            throw new i.AuthInvalidCredentialsError("You must provide either an email or phone number.");
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null, session: null }, error: e };
            }
            throw e;
          }
        }
        async verifyOtp(e) {
          var t, r;
          try {
            if (e.type !== "email_change" && e.type !== "phone_change") {
              await this._removeSession();
            }
            let s = undefined;
            let n = undefined;
            if ("options" in e) {
              s = (t = e.options) === null || t === void 0 ? void 0 : t.redirectTo;
              n = (r = e.options) === null || r === void 0 ? void 0 : r.captchaToken;
            }
            const { data: o, error: i } = await (0, a._request)(this.fetch, "POST", `${this.url}/verify`, {
              headers: this.headers,
              body: Object.assign(Object.assign({}, e), { gotrue_meta_security: { captcha_token: n } }),
              redirectTo: s,
              xform: a._sessionResponse,
            });
            if (i) {
              throw i;
            }
            if (!o) {
              throw new Error("An error occurred on token verification.");
            }
            const A = o.session;
            const l = o.user;
            if (A === null || A === void 0 ? void 0 : A.access_token) {
              await this._saveSession(A);
              await this._notifyAllSubscribers(e.type == "recovery" ? "PASSWORD_RECOVERY" : "SIGNED_IN", A);
            }
            return { data: { user: l, session: A }, error: null };
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null, session: null }, error: e };
            }
            throw e;
          }
        }
        async signInWithSSO(e) {
          var t, r, s;
          try {
            await this._removeSession();
            let n = null;
            let o = null;
            if (this.flowType === "pkce") {
              [n, o] = await (0, A.getCodeChallengeAndMethod)(this.storage, this.storageKey);
            }
            return await (0, a._request)(this.fetch, "POST", `${this.url}/sso`, {
              body: Object.assign(
                Object.assign(
                  Object.assign(
                    Object.assign(Object.assign({}, "providerId" in e ? { provider_id: e.providerId } : null), "domain" in e ? { domain: e.domain } : null),
                    { redirect_to: (r = (t = e.options) === null || t === void 0 ? void 0 : t.redirectTo) !== null && r !== void 0 ? r : undefined }
                  ),
                  ((s = e === null || e === void 0 ? void 0 : e.options) === null || s === void 0 ? void 0 : s.captchaToken)
                    ? { gotrue_meta_security: { captcha_token: e.options.captchaToken } }
                    : null
                ),
                { skip_http_redirect: true, code_challenge: n, code_challenge_method: o }
              ),
              headers: this.headers,
              xform: a._ssoResponse,
            });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: null, error: e };
            }
            throw e;
          }
        }
        async reauthenticate() {
          await this.initializePromise;
          return await this._acquireLock(-1, async () => await this._reauthenticate());
        }
        async _reauthenticate() {
          try {
            return await this._useSession(async (e) => {
              const {
                data: { session: t },
                error: r,
              } = e;
              if (r) throw r;
              if (!t) throw new i.AuthSessionMissingError();
              const { error: s } = await (0, a._request)(this.fetch, "GET", `${this.url}/reauthenticate`, { headers: this.headers, jwt: t.access_token });
              return { data: { user: null, session: null }, error: s };
            });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null, session: null }, error: e };
            }
            throw e;
          }
        }
        async resend(e) {
          try {
            if (e.type != "email_change" && e.type != "phone_change") {
              await this._removeSession();
            }
            const t = `${this.url}/resend`;
            if ("email" in e) {
              const { email: r, type: s, options: n } = e;
              const { error: o } = await (0, a._request)(this.fetch, "POST", t, {
                headers: this.headers,
                body: { email: r, type: s, gotrue_meta_security: { captcha_token: n === null || n === void 0 ? void 0 : n.captchaToken } },
                redirectTo: n === null || n === void 0 ? void 0 : n.emailRedirectTo,
              });
              return { data: { user: null, session: null }, error: o };
            } else if ("phone" in e) {
              const { phone: r, type: s, options: n } = e;
              const { data: o, error: i } = await (0, a._request)(this.fetch, "POST", t, {
                headers: this.headers,
                body: { phone: r, type: s, gotrue_meta_security: { captcha_token: n === null || n === void 0 ? void 0 : n.captchaToken } },
              });
              return { data: { user: null, session: null, messageId: o === null || o === void 0 ? void 0 : o.message_id }, error: i };
            }
            throw new i.AuthInvalidCredentialsError("You must provide either an email or phone number and a type");
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null, session: null }, error: e };
            }
            throw e;
          }
        }
        async getSession() {
          await this.initializePromise;
          const e = await this._acquireLock(-1, async () => this._useSession(async (e) => e));
          return e;
        }
        async _acquireLock(e, t) {
          this._debug("#_acquireLock", "begin", e);
          try {
            if (this.lockAcquired) {
              const e = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();
              const r = (async () => {
                await e;
                return await t();
              })();
              this.pendingInLock.push(
                (async () => {
                  try {
                    await r;
                  } catch (e) {}
                })()
              );
              return r;
            }
            return await this.lock(`lock:${this.storageKey}`, e, async () => {
              this._debug("#_acquireLock", "lock acquired for storage key", this.storageKey);
              try {
                this.lockAcquired = true;
                const e = t();
                this.pendingInLock.push(
                  (async () => {
                    try {
                      await e;
                    } catch (e) {}
                  })()
                );
                await e;
                while (this.pendingInLock.length) {
                  const e = [...this.pendingInLock];
                  await Promise.all(e);
                  this.pendingInLock.splice(0, e.length);
                }
                return await e;
              } finally {
                this._debug("#_acquireLock", "lock released for storage key", this.storageKey);
                this.lockAcquired = false;
              }
            });
          } finally {
            this._debug("#_acquireLock", "end");
          }
        }
        async _useSession(e) {
          this._debug("#_useSession", "begin");
          try {
            const t = await this.__loadSession();
            return await e(t);
          } finally {
            this._debug("#_useSession", "end");
          }
        }
        async __loadSession() {
          this._debug("#__loadSession()", "begin");
          if (!this.lockAcquired) {
            this._debug("#__loadSession()", "used outside of an acquired lock!", new Error().stack);
          }
          try {
            let e = null;
            const t = await (0, A.getItemAsync)(this.storage, this.storageKey);
            this._debug("#getSession()", "session from storage", t);
            if (t !== null) {
              if (this._isValidSession(t)) {
                e = t;
              } else {
                this._debug("#getSession()", "session from storage is not valid");
                await this._removeSession();
              }
            }
            if (!e) {
              return { data: { session: null }, error: null };
            }
            const r = e.expires_at ? e.expires_at <= Date.now() / 1e3 : false;
            this._debug("#__loadSession()", `session has${r ? "" : " not"} expired`, "expires_at", e.expires_at);
            if (!r) {
              if (this.storage.isServer) {
                const t = this.suppressGetSessionWarning;
                const r = new Proxy(e, {
                  get(e, r, s) {
                    if (!t && r === "user") {
                      console.warn(
                        "Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and many not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server."
                      );
                    }
                    return Reflect.get(e, r, s);
                  },
                });
                e = r;
              }
              return { data: { session: e }, error: null };
            }
            const { session: s, error: n } = await this._callRefreshToken(e.refresh_token);
            if (n) {
              return { data: { session: null }, error: n };
            }
            return { data: { session: s }, error: null };
          } finally {
            this._debug("#__loadSession()", "end");
          }
        }
        async getUser(e) {
          if (e) {
            return await this._getUser(e);
          }
          await this.initializePromise;
          const t = await this._acquireLock(-1, async () => await this._getUser());
          return t;
        }
        async _getUser(e) {
          try {
            if (e) {
              return await (0, a._request)(this.fetch, "GET", `${this.url}/user`, { headers: this.headers, jwt: e, xform: a._userResponse });
            }
            return await this._useSession(async (e) => {
              var t, r, s;
              const { data: n, error: o } = e;
              if (o) {
                throw o;
              }
              if (!((t = n.session) === null || t === void 0 ? void 0 : t.access_token) && !this.hasCustomAuthorizationHeader) {
                return { data: { user: null }, error: new i.AuthSessionMissingError() };
              }
              return await (0, a._request)(this.fetch, "GET", `${this.url}/user`, {
                headers: this.headers,
                jwt: (s = (r = n.session) === null || r === void 0 ? void 0 : r.access_token) !== null && s !== void 0 ? s : undefined,
                xform: a._userResponse,
              });
            });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null }, error: e };
            }
            throw e;
          }
        }
        async updateUser(e, t = {}) {
          await this.initializePromise;
          return await this._acquireLock(-1, async () => await this._updateUser(e, t));
        }
        async _updateUser(e, t = {}) {
          try {
            return await this._useSession(async (r) => {
              const { data: s, error: n } = r;
              if (n) {
                throw n;
              }
              if (!s.session) {
                throw new i.AuthSessionMissingError();
              }
              const o = s.session;
              let l = null;
              let c = null;
              if (this.flowType === "pkce" && e.email != null) {
                [l, c] = await (0, A.getCodeChallengeAndMethod)(this.storage, this.storageKey);
              }
              const { data: d, error: p } = await (0, a._request)(this.fetch, "PUT", `${this.url}/user`, {
                headers: this.headers,
                redirectTo: t === null || t === void 0 ? void 0 : t.emailRedirectTo,
                body: Object.assign(Object.assign({}, e), { code_challenge: l, code_challenge_method: c }),
                jwt: o.access_token,
                xform: a._userResponse,
              });
              if (p) throw p;
              o.user = d.user;
              await this._saveSession(o);
              await this._notifyAllSubscribers("USER_UPDATED", o);
              return { data: { user: o.user }, error: null };
            });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null }, error: e };
            }
            throw e;
          }
        }
        _decodeJWT(e) {
          return (0, A.decodeJWTPayload)(e);
        }
        async setSession(e) {
          await this.initializePromise;
          return await this._acquireLock(-1, async () => await this._setSession(e));
        }
        async _setSession(e) {
          try {
            if (!e.access_token || !e.refresh_token) {
              throw new i.AuthSessionMissingError();
            }
            const t = Date.now() / 1e3;
            let r = t;
            let s = true;
            let n = null;
            const o = (0, A.decodeJWTPayload)(e.access_token);
            if (o.exp) {
              r = o.exp;
              s = r <= t;
            }
            if (s) {
              const { session: t, error: r } = await this._callRefreshToken(e.refresh_token);
              if (r) {
                return { data: { user: null, session: null }, error: r };
              }
              if (!t) {
                return { data: { user: null, session: null }, error: null };
              }
              n = t;
            } else {
              const { data: s, error: o } = await this._getUser(e.access_token);
              if (o) {
                throw o;
              }
              n = { access_token: e.access_token, refresh_token: e.refresh_token, user: s.user, token_type: "bearer", expires_in: r - t, expires_at: r };
              await this._saveSession(n);
              await this._notifyAllSubscribers("SIGNED_IN", n);
            }
            return { data: { user: n.user, session: n }, error: null };
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { session: null, user: null }, error: e };
            }
            throw e;
          }
        }
        async refreshSession(e) {
          await this.initializePromise;
          return await this._acquireLock(-1, async () => await this._refreshSession(e));
        }
        async _refreshSession(e) {
          try {
            return await this._useSession(async (t) => {
              var r;
              if (!e) {
                const { data: s, error: n } = t;
                if (n) {
                  throw n;
                }
                e = (r = s.session) !== null && r !== void 0 ? r : undefined;
              }
              if (!(e === null || e === void 0 ? void 0 : e.refresh_token)) {
                throw new i.AuthSessionMissingError();
              }
              const { session: s, error: n } = await this._callRefreshToken(e.refresh_token);
              if (n) {
                return { data: { user: null, session: null }, error: n };
              }
              if (!s) {
                return { data: { user: null, session: null }, error: null };
              }
              return { data: { user: s.user, session: s }, error: null };
            });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { user: null, session: null }, error: e };
            }
            throw e;
          }
        }
        async _getSessionFromURL(e) {
          try {
            if (!(0, A.isBrowser)()) throw new i.AuthImplicitGrantRedirectError("No browser detected.");
            if (this.flowType === "implicit" && !this._isImplicitGrantFlow()) {
              throw new i.AuthImplicitGrantRedirectError("Not a valid implicit grant flow url.");
            } else if (this.flowType == "pkce" && !e) {
              throw new i.AuthPKCEGrantCodeExchangeError("Not a valid PKCE flow url.");
            }
            const t = (0, A.parseParametersFromURL)(window.location.href);
            if (e) {
              if (!t.code) throw new i.AuthPKCEGrantCodeExchangeError("No code detected.");
              const { data: e, error: r } = await this._exchangeCodeForSession(t.code);
              if (r) throw r;
              const s = new URL(window.location.href);
              s.searchParams.delete("code");
              window.history.replaceState(window.history.state, "", s.toString());
              return { data: { session: e.session, redirectType: null }, error: null };
            }
            if (t.error || t.error_description || t.error_code) {
              throw new i.AuthImplicitGrantRedirectError(t.error_description || "Error in URL with unspecified error_description", {
                error: t.error || "unspecified_error",
                code: t.error_code || "unspecified_code",
              });
            }
            const { provider_token: r, provider_refresh_token: s, access_token: n, refresh_token: o, expires_in: a, expires_at: l, token_type: c } = t;
            if (!n || !a || !o || !c) {
              throw new i.AuthImplicitGrantRedirectError("No session defined in URL");
            }
            const d = Math.round(Date.now() / 1e3);
            const p = parseInt(a);
            let u = d + p;
            if (l) {
              u = parseInt(l);
            }
            const m = u - d;
            if (m * 1e3 <= g) {
              console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${m}s, should have been closer to ${p}s`);
            }
            const h = u - p;
            if (d - h >= 120) {
              console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale", h, u, d);
            } else if (d - h < 0) {
              console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clok for skew", h, u, d);
            }
            const { data: E, error: I } = await this._getUser(n);
            if (I) throw I;
            const C = {
              provider_token: r,
              provider_refresh_token: s,
              access_token: n,
              expires_in: p,
              expires_at: u,
              refresh_token: o,
              token_type: c,
              user: E.user,
            };
            window.location.hash = "";
            this._debug("#_getSessionFromURL()", "clearing window.location.hash");
            return { data: { session: C, redirectType: t.type }, error: null };
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: { session: null, redirectType: null }, error: e };
            }
            throw e;
          }
        }
        _isImplicitGrantFlow() {
          const e = (0, A.parseParametersFromURL)(window.location.href);
          return !!((0, A.isBrowser)() && (e.access_token || e.error_description));
        }
        async _isPKCEFlow() {
          const e = (0, A.parseParametersFromURL)(window.location.href);
          const t = await (0, A.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);
          return !!(e.code && t);
        }
        async signOut(e = { scope: "global" }) {
          await this.initializePromise;
          return await this._acquireLock(-1, async () => await this._signOut(e));
        }
        async _signOut({ scope: e } = { scope: "global" }) {
          return await this._useSession(async (t) => {
            var r;
            const { data: s, error: n } = t;
            if (n) {
              return { error: n };
            }
            const o = (r = s.session) === null || r === void 0 ? void 0 : r.access_token;
            if (o) {
              const { error: t } = await this.admin.signOut(o, e);
              if (t) {
                if (!((0, i.isAuthApiError)(t) && (t.status === 404 || t.status === 401 || t.status === 403))) {
                  return { error: t };
                }
              }
            }
            if (e !== "others") {
              await this._removeSession();
              await (0, A.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);
              await this._notifyAllSubscribers("SIGNED_OUT", null);
            }
            return { error: null };
          });
        }
        onAuthStateChange(e) {
          const t = (0, A.uuid)();
          const r = {
            id: t,
            callback: e,
            unsubscribe: () => {
              this._debug("#unsubscribe()", "state change callback with id removed", t);
              this.stateChangeEmitters.delete(t);
            },
          };
          this._debug("#onAuthStateChange()", "registered callback with id", t);
          this.stateChangeEmitters.set(t, r);
          (async () => {
            await this.initializePromise;
            await this._acquireLock(-1, async () => {
              this._emitInitialSession(t);
            });
          })();
          return { data: { subscription: r } };
        }
        async _emitInitialSession(e) {
          return await this._useSession(async (t) => {
            var r, s;
            try {
              const {
                data: { session: s },
                error: n,
              } = t;
              if (n) throw n;
              await ((r = this.stateChangeEmitters.get(e)) === null || r === void 0 ? void 0 : r.callback("INITIAL_SESSION", s));
              this._debug("INITIAL_SESSION", "callback id", e, "session", s);
            } catch (t) {
              await ((s = this.stateChangeEmitters.get(e)) === null || s === void 0 ? void 0 : s.callback("INITIAL_SESSION", null));
              this._debug("INITIAL_SESSION", "callback id", e, "error", t);
              console.error(t);
            }
          });
        }
        async resetPasswordForEmail(e, t = {}) {
          let r = null;
          let s = null;
          if (this.flowType === "pkce") {
            [r, s] = await (0, A.getCodeChallengeAndMethod)(this.storage, this.storageKey, true);
          }
          try {
            return await (0, a._request)(this.fetch, "POST", `${this.url}/recover`, {
              body: { email: e, code_challenge: r, code_challenge_method: s, gotrue_meta_security: { captcha_token: t.captchaToken } },
              headers: this.headers,
              redirectTo: t.redirectTo,
            });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: null, error: e };
            }
            throw e;
          }
        }
        async getUserIdentities() {
          var e;
          try {
            const { data: t, error: r } = await this.getUser();
            if (r) throw r;
            return { data: { identities: (e = t.user.identities) !== null && e !== void 0 ? e : [] }, error: null };
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: null, error: e };
            }
            throw e;
          }
        }
        async linkIdentity(e) {
          var t;
          try {
            const { data: r, error: s } = await this._useSession(async (t) => {
              var r, s, n, o, i;
              const { data: A, error: l } = t;
              if (l) throw l;
              const c = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, e.provider, {
                redirectTo: (r = e.options) === null || r === void 0 ? void 0 : r.redirectTo,
                scopes: (s = e.options) === null || s === void 0 ? void 0 : s.scopes,
                queryParams: (n = e.options) === null || n === void 0 ? void 0 : n.queryParams,
                skipBrowserRedirect: true,
              });
              return await (0, a._request)(this.fetch, "GET", c, {
                headers: this.headers,
                jwt: (i = (o = A.session) === null || o === void 0 ? void 0 : o.access_token) !== null && i !== void 0 ? i : undefined,
              });
            });
            if (s) throw s;
            if ((0, A.isBrowser)() && !((t = e.options) === null || t === void 0 ? void 0 : t.skipBrowserRedirect)) {
              window.location.assign(r === null || r === void 0 ? void 0 : r.url);
            }
            return { data: { provider: e.provider, url: r === null || r === void 0 ? void 0 : r.url }, error: null };
          } catch (t) {
            if ((0, i.isAuthError)(t)) {
              return { data: { provider: e.provider, url: null }, error: t };
            }
            throw t;
          }
        }
        async unlinkIdentity(e) {
          try {
            return await this._useSession(async (t) => {
              var r, s;
              const { data: n, error: o } = t;
              if (o) {
                throw o;
              }
              return await (0, a._request)(this.fetch, "DELETE", `${this.url}/user/identities/${e.identity_id}`, {
                headers: this.headers,
                jwt: (s = (r = n.session) === null || r === void 0 ? void 0 : r.access_token) !== null && s !== void 0 ? s : undefined,
              });
            });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: null, error: e };
            }
            throw e;
          }
        }
        async _refreshAccessToken(e) {
          const t = `#_refreshAccessToken(${e.substring(0, 5)}...)`;
          this._debug(t, "begin");
          try {
            const r = Date.now();
            return await (0, A.retryable)(
              async (r) => {
                if (r > 0) {
                  await (0, A.sleep)(200 * Math.pow(2, r - 1));
                }
                this._debug(t, "refreshing attempt", r);
                return await (0, a._request)(this.fetch, "POST", `${this.url}/token?grant_type=refresh_token`, {
                  body: { refresh_token: e },
                  headers: this.headers,
                  xform: a._sessionResponse,
                });
              },
              (e, t) => {
                const s = 200 * Math.pow(2, e);
                return t && (0, i.isAuthRetryableFetchError)(t) && Date.now() + s - r < g;
              }
            );
          } catch (e) {
            this._debug(t, "error", e);
            if ((0, i.isAuthError)(e)) {
              return { data: { session: null, user: null }, error: e };
            }
            throw e;
          } finally {
            this._debug(t, "end");
          }
        }
        _isValidSession(e) {
          const t = typeof e === "object" && e !== null && "access_token" in e && "refresh_token" in e && "expires_at" in e;
          return t;
        }
        async _handleProviderSignIn(e, t) {
          const r = await this._getUrlForProvider(`${this.url}/authorize`, e, { redirectTo: t.redirectTo, scopes: t.scopes, queryParams: t.queryParams });
          this._debug("#_handleProviderSignIn()", "provider", e, "options", t, "url", r);
          if ((0, A.isBrowser)() && !t.skipBrowserRedirect) {
            window.location.assign(r);
          }
          return { data: { provider: e, url: r }, error: null };
        }
        async _recoverAndRefresh() {
          var e;
          const t = "#_recoverAndRefresh()";
          this._debug(t, "begin");
          try {
            const r = await (0, A.getItemAsync)(this.storage, this.storageKey);
            this._debug(t, "session from storage", r);
            if (!this._isValidSession(r)) {
              this._debug(t, "session is not valid");
              if (r !== null) {
                await this._removeSession();
              }
              return;
            }
            const s = Math.round(Date.now() / 1e3);
            const n = ((e = r.expires_at) !== null && e !== void 0 ? e : Infinity) < s + o.EXPIRY_MARGIN;
            this._debug(t, `session has${n ? "" : " not"} expired with margin of ${o.EXPIRY_MARGIN}s`);
            if (n) {
              if (this.autoRefreshToken && r.refresh_token) {
                const { error: e } = await this._callRefreshToken(r.refresh_token);
                if (e) {
                  console.error(e);
                  if (!(0, i.isAuthRetryableFetchError)(e)) {
                    this._debug(t, "refresh failed with a non-retryable error, removing the session", e);
                    await this._removeSession();
                  }
                }
              }
            } else {
              await this._notifyAllSubscribers("SIGNED_IN", r);
            }
          } catch (e) {
            this._debug(t, "error", e);
            console.error(e);
            return;
          } finally {
            this._debug(t, "end");
          }
        }
        async _callRefreshToken(e) {
          var t, r;
          if (!e) {
            throw new i.AuthSessionMissingError();
          }
          if (this.refreshingDeferred) {
            return this.refreshingDeferred.promise;
          }
          const s = `#_callRefreshToken(${e.substring(0, 5)}...)`;
          this._debug(s, "begin");
          try {
            this.refreshingDeferred = new A.Deferred();
            const { data: t, error: r } = await this._refreshAccessToken(e);
            if (r) throw r;
            if (!t.session) throw new i.AuthSessionMissingError();
            await this._saveSession(t.session);
            await this._notifyAllSubscribers("TOKEN_REFRESHED", t.session);
            const s = { session: t.session, error: null };
            this.refreshingDeferred.resolve(s);
            return s;
          } catch (e) {
            this._debug(s, "error", e);
            if ((0, i.isAuthError)(e)) {
              const r = { session: null, error: e };
              if (!(0, i.isAuthRetryableFetchError)(e)) {
                await this._removeSession();
                await this._notifyAllSubscribers("SIGNED_OUT", null);
              }
              (t = this.refreshingDeferred) === null || t === void 0 ? void 0 : t.resolve(r);
              return r;
            }
            (r = this.refreshingDeferred) === null || r === void 0 ? void 0 : r.reject(e);
            throw e;
          } finally {
            this.refreshingDeferred = null;
            this._debug(s, "end");
          }
        }
        async _notifyAllSubscribers(e, t, r = true) {
          const s = `#_notifyAllSubscribers(${e})`;
          this._debug(s, "begin", t, `broadcast = ${r}`);
          try {
            if (this.broadcastChannel && r) {
              this.broadcastChannel.postMessage({ event: e, session: t });
            }
            const s = [];
            const n = Array.from(this.stateChangeEmitters.values()).map(async (r) => {
              try {
                await r.callback(e, t);
              } catch (e) {
                s.push(e);
              }
            });
            await Promise.all(n);
            if (s.length > 0) {
              for (let e = 0; e < s.length; e += 1) {
                console.error(s[e]);
              }
              throw s[0];
            }
          } finally {
            this._debug(s, "end");
          }
        }
        async _saveSession(e) {
          this._debug("#_saveSession()", e);
          this.suppressGetSessionWarning = true;
          await (0, A.setItemAsync)(this.storage, this.storageKey, e);
        }
        async _removeSession() {
          this._debug("#_removeSession()");
          await (0, A.removeItemAsync)(this.storage, this.storageKey);
        }
        _removeVisibilityChangedCallback() {
          this._debug("#_removeVisibilityChangedCallback()");
          const e = this.visibilityChangedCallback;
          this.visibilityChangedCallback = null;
          try {
            if (e && (0, A.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {
              window.removeEventListener("visibilitychange", e);
            }
          } catch (e) {
            console.error("removing visibilitychange callback failed", e);
          }
        }
        async _startAutoRefresh() {
          await this._stopAutoRefresh();
          this._debug("#_startAutoRefresh()");
          const e = setInterval(() => this._autoRefreshTokenTick(), g);
          this.autoRefreshTicker = e;
          if (e && typeof e === "object" && typeof e.unref === "function") {
            e.unref();
          } else if (typeof Deno !== "undefined" && typeof Deno.unrefTimer === "function") {
            Deno.unrefTimer(e);
          }
          setTimeout(async () => {
            await this.initializePromise;
            await this._autoRefreshTokenTick();
          }, 0);
        }
        async _stopAutoRefresh() {
          this._debug("#_stopAutoRefresh()");
          const e = this.autoRefreshTicker;
          this.autoRefreshTicker = null;
          if (e) {
            clearInterval(e);
          }
        }
        async startAutoRefresh() {
          this._removeVisibilityChangedCallback();
          await this._startAutoRefresh();
        }
        async stopAutoRefresh() {
          this._removeVisibilityChangedCallback();
          await this._stopAutoRefresh();
        }
        async _autoRefreshTokenTick() {
          this._debug("#_autoRefreshTokenTick()", "begin");
          try {
            await this._acquireLock(0, async () => {
              try {
                const e = Date.now();
                try {
                  return await this._useSession(async (t) => {
                    const {
                      data: { session: r },
                    } = t;
                    if (!r || !r.refresh_token || !r.expires_at) {
                      this._debug("#_autoRefreshTokenTick()", "no session");
                      return;
                    }
                    const s = Math.floor((r.expires_at * 1e3 - e) / g);
                    this._debug("#_autoRefreshTokenTick()", `access token expires in ${s} ticks, a tick lasts ${g}ms, refresh threshold is ${m} ticks`);
                    if (s <= m) {
                      await this._callRefreshToken(r.refresh_token);
                    }
                  });
                } catch (e) {
                  console.error("Auto refresh tick failed with error. This is likely a transient error.", e);
                }
              } finally {
                this._debug("#_autoRefreshTokenTick()", "end");
              }
            });
          } catch (e) {
            if (e.isAcquireTimeout || e instanceof p.LockAcquireTimeoutError) {
              this._debug("auto refresh token tick lock not available");
            } else {
              throw e;
            }
          }
        }
        async _handleVisibilityChange() {
          this._debug("#_handleVisibilityChange()");
          if (!(0, A.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {
            if (this.autoRefreshToken) {
              this.startAutoRefresh();
            }
            return false;
          }
          try {
            this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false);
            window === null || window === void 0 ? void 0 : window.addEventListener("visibilitychange", this.visibilityChangedCallback);
            await this._onVisibilityChanged(true);
          } catch (e) {
            console.error("_handleVisibilityChange", e);
          }
        }
        async _onVisibilityChanged(e) {
          const t = `#_onVisibilityChanged(${e})`;
          this._debug(t, "visibilityState", document.visibilityState);
          if (document.visibilityState === "visible") {
            if (this.autoRefreshToken) {
              this._startAutoRefresh();
            }
            if (!e) {
              await this.initializePromise;
              await this._acquireLock(-1, async () => {
                if (document.visibilityState !== "visible") {
                  this._debug(t, "acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting");
                  return;
                }
                await this._recoverAndRefresh();
              });
            }
          } else if (document.visibilityState === "hidden") {
            if (this.autoRefreshToken) {
              this._stopAutoRefresh();
            }
          }
        }
        async _getUrlForProvider(e, t, r) {
          const s = [`provider=${encodeURIComponent(t)}`];
          if (r === null || r === void 0 ? void 0 : r.redirectTo) {
            s.push(`redirect_to=${encodeURIComponent(r.redirectTo)}`);
          }
          if (r === null || r === void 0 ? void 0 : r.scopes) {
            s.push(`scopes=${encodeURIComponent(r.scopes)}`);
          }
          if (this.flowType === "pkce") {
            const [e, t] = await (0, A.getCodeChallengeAndMethod)(this.storage, this.storageKey);
            const r = new URLSearchParams({ code_challenge: `${encodeURIComponent(e)}`, code_challenge_method: `${encodeURIComponent(t)}` });
            s.push(r.toString());
          }
          if (r === null || r === void 0 ? void 0 : r.queryParams) {
            const e = new URLSearchParams(r.queryParams);
            s.push(e.toString());
          }
          if (r === null || r === void 0 ? void 0 : r.skipBrowserRedirect) {
            s.push(`skip_http_redirect=${r.skipBrowserRedirect}`);
          }
          return `${e}?${s.join("&")}`;
        }
        async _unenroll(e) {
          try {
            return await this._useSession(async (t) => {
              var r;
              const { data: s, error: n } = t;
              if (n) {
                return { data: null, error: n };
              }
              return await (0, a._request)(this.fetch, "DELETE", `${this.url}/factors/${e.factorId}`, {
                headers: this.headers,
                jwt: (r = s === null || s === void 0 ? void 0 : s.session) === null || r === void 0 ? void 0 : r.access_token,
              });
            });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: null, error: e };
            }
            throw e;
          }
        }
        async _enroll(e) {
          try {
            return await this._useSession(async (t) => {
              var r, s;
              const { data: n, error: o } = t;
              if (o) {
                return { data: null, error: o };
              }
              const { data: i, error: A } = await (0, a._request)(this.fetch, "POST", `${this.url}/factors`, {
                body: { friendly_name: e.friendlyName, factor_type: e.factorType, issuer: e.issuer },
                headers: this.headers,
                jwt: (r = n === null || n === void 0 ? void 0 : n.session) === null || r === void 0 ? void 0 : r.access_token,
              });
              if (A) {
                return { data: null, error: A };
              }
              if ((s = i === null || i === void 0 ? void 0 : i.totp) === null || s === void 0 ? void 0 : s.qr_code) {
                i.totp.qr_code = `data:image/svg+xml;utf-8,${i.totp.qr_code}`;
              }
              return { data: i, error: null };
            });
          } catch (e) {
            if ((0, i.isAuthError)(e)) {
              return { data: null, error: e };
            }
            throw e;
          }
        }
        async _verify(e) {
          return this._acquireLock(-1, async () => {
            try {
              return await this._useSession(async (t) => {
                var r;
                const { data: s, error: n } = t;
                if (n) {
                  return { data: null, error: n };
                }
                const { data: o, error: i } = await (0, a._request)(this.fetch, "POST", `${this.url}/factors/${e.factorId}/verify`, {
                  body: { code: e.code, challenge_id: e.challengeId },
                  headers: this.headers,
                  jwt: (r = s === null || s === void 0 ? void 0 : s.session) === null || r === void 0 ? void 0 : r.access_token,
                });
                if (i) {
                  return { data: null, error: i };
                }
                await this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1e3) + o.expires_in }, o));
                await this._notifyAllSubscribers("MFA_CHALLENGE_VERIFIED", o);
                return { data: o, error: i };
              });
            } catch (e) {
              if ((0, i.isAuthError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        async _challenge(e) {
          return this._acquireLock(-1, async () => {
            try {
              return await this._useSession(async (t) => {
                var r;
                const { data: s, error: n } = t;
                if (n) {
                  return { data: null, error: n };
                }
                return await (0, a._request)(this.fetch, "POST", `${this.url}/factors/${e.factorId}/challenge`, {
                  headers: this.headers,
                  jwt: (r = s === null || s === void 0 ? void 0 : s.session) === null || r === void 0 ? void 0 : r.access_token,
                });
              });
            } catch (e) {
              if ((0, i.isAuthError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        async _challengeAndVerify(e) {
          const { data: t, error: r } = await this._challenge({ factorId: e.factorId });
          if (r) {
            return { data: null, error: r };
          }
          return await this._verify({ factorId: e.factorId, challengeId: t.id, code: e.code });
        }
        async _listFactors() {
          const {
            data: { user: e },
            error: t,
          } = await this.getUser();
          if (t) {
            return { data: null, error: t };
          }
          const r = (e === null || e === void 0 ? void 0 : e.factors) || [];
          const s = r.filter((e) => e.factor_type === "totp" && e.status === "verified");
          return { data: { all: r, totp: s }, error: null };
        }
        async _getAuthenticatorAssuranceLevel() {
          return this._acquireLock(
            -1,
            async () =>
              await this._useSession(async (e) => {
                var t, r;
                const {
                  data: { session: s },
                  error: n,
                } = e;
                if (n) {
                  return { data: null, error: n };
                }
                if (!s) {
                  return { data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] }, error: null };
                }
                const o = this._decodeJWT(s.access_token);
                let i = null;
                if (o.aal) {
                  i = o.aal;
                }
                let a = i;
                const A =
                  (r = (t = s.user.factors) === null || t === void 0 ? void 0 : t.filter((e) => e.status === "verified")) !== null && r !== void 0 ? r : [];
                if (A.length > 0) {
                  a = "aal2";
                }
                const l = o.amr || [];
                return { data: { currentLevel: i, nextLevel: a, currentAuthenticationMethods: l }, error: null };
              })
          );
        }
      }
      t["default"] = GoTrueClient;
      GoTrueClient.nextInstanceID = 0;
    },
    31904: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      var o =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.lockInternals = t.NavigatorLockAcquireTimeoutError = t.navigatorLock = t.AuthClient = t.AuthAdminApi = t.GoTrueClient = t.GoTrueAdminApi = void 0;
      const i = o(r(52165));
      t.GoTrueAdminApi = i.default;
      const a = o(r(16623));
      t.GoTrueClient = a.default;
      const A = o(r(68789));
      t.AuthAdminApi = A.default;
      const l = o(r(62495));
      t.AuthClient = l.default;
      n(r(53737), t);
      n(r(73981), t);
      var c = r(28932);
      Object.defineProperty(t, "navigatorLock", {
        enumerable: true,
        get: function () {
          return c.navigatorLock;
        },
      });
      Object.defineProperty(t, "NavigatorLockAcquireTimeoutError", {
        enumerable: true,
        get: function () {
          return c.NavigatorLockAcquireTimeoutError;
        },
      });
      Object.defineProperty(t, "lockInternals", {
        enumerable: true,
        get: function () {
          return c.internals;
        },
      });
    },
    26705: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.API_VERSIONS = t.API_VERSION_HEADER_NAME = t.NETWORK_FAILURE = t.EXPIRY_MARGIN = t.DEFAULT_HEADERS = t.AUDIENCE = t.STORAGE_KEY = t.GOTRUE_URL = void 0;
      const s = r(41920);
      t.GOTRUE_URL = "http://localhost:9999";
      t.STORAGE_KEY = "supabase.auth.token";
      t.AUDIENCE = "";
      t.DEFAULT_HEADERS = { "X-Client-Info": `gotrue-js/${s.version}` };
      t.EXPIRY_MARGIN = 10;
      t.NETWORK_FAILURE = { MAX_RETRIES: 10, RETRY_INTERVAL: 2 };
      t.API_VERSION_HEADER_NAME = "X-Supabase-Api-Version";
      t.API_VERSIONS = { "2024-01-01": { timestamp: Date.parse("2024-01-01T00:00:00.0Z"), name: "2024-01-01" } };
    },
    73981: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.isAuthWeakPasswordError =
        t.AuthWeakPasswordError =
        t.isAuthRetryableFetchError =
        t.AuthRetryableFetchError =
        t.AuthPKCEGrantCodeExchangeError =
        t.AuthImplicitGrantRedirectError =
        t.AuthInvalidCredentialsError =
        t.AuthInvalidTokenResponseError =
        t.AuthSessionMissingError =
        t.CustomAuthError =
        t.AuthUnknownError =
        t.isAuthApiError =
        t.AuthApiError =
        t.isAuthError =
        t.AuthError =
          void 0;
      class AuthError extends Error {
        constructor(e, t, r) {
          super(e);
          this.__isAuthError = true;
          this.name = "AuthError";
          this.status = t;
          this.code = r;
        }
      }
      t.AuthError = AuthError;
      function isAuthError(e) {
        return typeof e === "object" && e !== null && "__isAuthError" in e;
      }
      t.isAuthError = isAuthError;
      class AuthApiError extends AuthError {
        constructor(e, t, r) {
          super(e, t, r);
          this.name = "AuthApiError";
          this.status = t;
          this.code = r;
        }
      }
      t.AuthApiError = AuthApiError;
      function isAuthApiError(e) {
        return isAuthError(e) && e.name === "AuthApiError";
      }
      t.isAuthApiError = isAuthApiError;
      class AuthUnknownError extends AuthError {
        constructor(e, t) {
          super(e);
          this.name = "AuthUnknownError";
          this.originalError = t;
        }
      }
      t.AuthUnknownError = AuthUnknownError;
      class CustomAuthError extends AuthError {
        constructor(e, t, r, s) {
          super(e, r, s);
          this.name = t;
          this.status = r;
        }
      }
      t.CustomAuthError = CustomAuthError;
      class AuthSessionMissingError extends CustomAuthError {
        constructor() {
          super("Auth session missing!", "AuthSessionMissingError", 400, undefined);
        }
      }
      t.AuthSessionMissingError = AuthSessionMissingError;
      class AuthInvalidTokenResponseError extends CustomAuthError {
        constructor() {
          super("Auth session or user missing", "AuthInvalidTokenResponseError", 500, undefined);
        }
      }
      t.AuthInvalidTokenResponseError = AuthInvalidTokenResponseError;
      class AuthInvalidCredentialsError extends CustomAuthError {
        constructor(e) {
          super(e, "AuthInvalidCredentialsError", 400, undefined);
        }
      }
      t.AuthInvalidCredentialsError = AuthInvalidCredentialsError;
      class AuthImplicitGrantRedirectError extends CustomAuthError {
        constructor(e, t = null) {
          super(e, "AuthImplicitGrantRedirectError", 500, undefined);
          this.details = null;
          this.details = t;
        }
        toJSON() {
          return { name: this.name, message: this.message, status: this.status, details: this.details };
        }
      }
      t.AuthImplicitGrantRedirectError = AuthImplicitGrantRedirectError;
      class AuthPKCEGrantCodeExchangeError extends CustomAuthError {
        constructor(e, t = null) {
          super(e, "AuthPKCEGrantCodeExchangeError", 500, undefined);
          this.details = null;
          this.details = t;
        }
        toJSON() {
          return { name: this.name, message: this.message, status: this.status, details: this.details };
        }
      }
      t.AuthPKCEGrantCodeExchangeError = AuthPKCEGrantCodeExchangeError;
      class AuthRetryableFetchError extends CustomAuthError {
        constructor(e, t) {
          super(e, "AuthRetryableFetchError", t, undefined);
        }
      }
      t.AuthRetryableFetchError = AuthRetryableFetchError;
      function isAuthRetryableFetchError(e) {
        return isAuthError(e) && e.name === "AuthRetryableFetchError";
      }
      t.isAuthRetryableFetchError = isAuthRetryableFetchError;
      class AuthWeakPasswordError extends CustomAuthError {
        constructor(e, t, r) {
          super(e, "AuthWeakPasswordError", t, "weak_password");
          this.reasons = r;
        }
      }
      t.AuthWeakPasswordError = AuthWeakPasswordError;
      function isAuthWeakPasswordError(e) {
        return isAuthError(e) && e.name === "AuthWeakPasswordError";
      }
      t.isAuthWeakPasswordError = isAuthWeakPasswordError;
    },
    92356: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__rest) ||
        function (e, t) {
          var r = {};
          for (var s in e) if (Object.prototype.hasOwnProperty.call(e, s) && t.indexOf(s) < 0) r[s] = e[s];
          if (e != null && typeof Object.getOwnPropertySymbols === "function")
            for (var n = 0, s = Object.getOwnPropertySymbols(e); n < s.length; n++) {
              if (t.indexOf(s[n]) < 0 && Object.prototype.propertyIsEnumerable.call(e, s[n])) r[s[n]] = e[s[n]];
            }
          return r;
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t._noResolveJsonResponse =
        t._generateLinkResponse =
        t._ssoResponse =
        t._userResponse =
        t._sessionResponsePassword =
        t._sessionResponse =
        t._request =
        t.handleError =
          void 0;
      const n = r(26705);
      const o = r(30601);
      const i = r(73981);
      const _getErrorMessage = (e) => e.msg || e.message || e.error_description || e.error || JSON.stringify(e);
      const a = [502, 503, 504];
      async function handleError(e) {
        var t;
        if (!(0, o.looksLikeFetchResponse)(e)) {
          throw new i.AuthRetryableFetchError(_getErrorMessage(e), 0);
        }
        if (a.includes(e.status)) {
          throw new i.AuthRetryableFetchError(_getErrorMessage(e), e.status);
        }
        let r;
        try {
          r = await e.json();
        } catch (e) {
          throw new i.AuthUnknownError(_getErrorMessage(e), e);
        }
        let s = undefined;
        const A = (0, o.parseResponseAPIVersion)(e);
        if (A && A.getTime() >= n.API_VERSIONS["2024-01-01"].timestamp && typeof r === "object" && r && typeof r.code === "string") {
          s = r.code;
        } else if (typeof r === "object" && r && typeof r.error_code === "string") {
          s = r.error_code;
        }
        if (!s) {
          if (
            typeof r === "object" &&
            r &&
            typeof r.weak_password === "object" &&
            r.weak_password &&
            Array.isArray(r.weak_password.reasons) &&
            r.weak_password.reasons.length &&
            r.weak_password.reasons.reduce((e, t) => e && typeof t === "string", true)
          ) {
            throw new i.AuthWeakPasswordError(_getErrorMessage(r), e.status, r.weak_password.reasons);
          }
        } else if (s === "weak_password") {
          throw new i.AuthWeakPasswordError(_getErrorMessage(r), e.status, ((t = r.weak_password) === null || t === void 0 ? void 0 : t.reasons) || []);
        }
        throw new i.AuthApiError(_getErrorMessage(r), e.status || 500, s);
      }
      t.handleError = handleError;
      const _getRequestParams = (e, t, r, s) => {
        const n = { method: e, headers: (t === null || t === void 0 ? void 0 : t.headers) || {} };
        if (e === "GET") {
          return n;
        }
        n.headers = Object.assign({ "Content-Type": "application/json;charset=UTF-8" }, t === null || t === void 0 ? void 0 : t.headers);
        n.body = JSON.stringify(s);
        return Object.assign(Object.assign({}, n), r);
      };
      async function _request(e, t, r, s) {
        var o;
        const i = Object.assign({}, s === null || s === void 0 ? void 0 : s.headers);
        if (!i[n.API_VERSION_HEADER_NAME]) {
          i[n.API_VERSION_HEADER_NAME] = n.API_VERSIONS["2024-01-01"].name;
        }
        if (s === null || s === void 0 ? void 0 : s.jwt) {
          i["Authorization"] = `Bearer ${s.jwt}`;
        }
        const a = (o = s === null || s === void 0 ? void 0 : s.query) !== null && o !== void 0 ? o : {};
        if (s === null || s === void 0 ? void 0 : s.redirectTo) {
          a["redirect_to"] = s.redirectTo;
        }
        const A = Object.keys(a).length ? "?" + new URLSearchParams(a).toString() : "";
        const l = await _handleRequest(
          e,
          t,
          r + A,
          { headers: i, noResolveJson: s === null || s === void 0 ? void 0 : s.noResolveJson },
          {},
          s === null || s === void 0 ? void 0 : s.body
        );
        return (s === null || s === void 0 ? void 0 : s.xform)
          ? s === null || s === void 0
            ? void 0
            : s.xform(l)
          : { data: Object.assign({}, l), error: null };
      }
      t._request = _request;
      async function _handleRequest(e, t, r, s, n, o) {
        const a = _getRequestParams(t, s, n, o);
        let A;
        try {
          A = await e(r, Object.assign({}, a));
        } catch (e) {
          console.error(e);
          throw new i.AuthRetryableFetchError(_getErrorMessage(e), 0);
        }
        if (!A.ok) {
          await handleError(A);
        }
        if (s === null || s === void 0 ? void 0 : s.noResolveJson) {
          return A;
        }
        try {
          return await A.json();
        } catch (e) {
          await handleError(e);
        }
      }
      function _sessionResponse(e) {
        var t;
        let r = null;
        if (hasSession(e)) {
          r = Object.assign({}, e);
          if (!e.expires_at) {
            r.expires_at = (0, o.expiresAt)(e.expires_in);
          }
        }
        const s = (t = e.user) !== null && t !== void 0 ? t : e;
        return { data: { session: r, user: s }, error: null };
      }
      t._sessionResponse = _sessionResponse;
      function _sessionResponsePassword(e) {
        const t = _sessionResponse(e);
        if (
          !t.error &&
          e.weak_password &&
          typeof e.weak_password === "object" &&
          Array.isArray(e.weak_password.reasons) &&
          e.weak_password.reasons.length &&
          e.weak_password.message &&
          typeof e.weak_password.message === "string" &&
          e.weak_password.reasons.reduce((e, t) => e && typeof t === "string", true)
        ) {
          t.data.weak_password = e.weak_password;
        }
        return t;
      }
      t._sessionResponsePassword = _sessionResponsePassword;
      function _userResponse(e) {
        var t;
        const r = (t = e.user) !== null && t !== void 0 ? t : e;
        return { data: { user: r }, error: null };
      }
      t._userResponse = _userResponse;
      function _ssoResponse(e) {
        return { data: e, error: null };
      }
      t._ssoResponse = _ssoResponse;
      function _generateLinkResponse(e) {
        const { action_link: t, email_otp: r, hashed_token: n, redirect_to: o, verification_type: i } = e,
          a = s(e, ["action_link", "email_otp", "hashed_token", "redirect_to", "verification_type"]);
        const A = { action_link: t, email_otp: r, hashed_token: n, redirect_to: o, verification_type: i };
        const l = Object.assign({}, a);
        return { data: { properties: A, user: l }, error: null };
      }
      t._generateLinkResponse = _generateLinkResponse;
      function _noResolveJsonResponse(e) {
        return e;
      }
      t._noResolveJsonResponse = _noResolveJsonResponse;
      function hasSession(e) {
        return e.access_token && e.refresh_token && e.expires_in;
      }
    },
    30601: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.prototype.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.parseResponseAPIVersion =
        t.getCodeChallengeAndMethod =
        t.generatePKCEChallenge =
        t.generatePKCEVerifier =
        t.retryable =
        t.sleep =
        t.decodeJWTPayload =
        t.Deferred =
        t.decodeBase64URL =
        t.removeItemAsync =
        t.getItemAsync =
        t.setItemAsync =
        t.looksLikeFetchResponse =
        t.resolveFetch =
        t.parseParametersFromURL =
        t.supportsLocalStorage =
        t.isBrowser =
        t.uuid =
        t.expiresAt =
          void 0;
      const i = r(26705);
      function expiresAt(e) {
        const t = Math.round(Date.now() / 1e3);
        return t + e;
      }
      t.expiresAt = expiresAt;
      function uuid() {
        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (e) {
          const t = (Math.random() * 16) | 0,
            r = e == "x" ? t : (t & 3) | 8;
          return r.toString(16);
        });
      }
      t.uuid = uuid;
      const isBrowser = () => typeof document !== "undefined";
      t.isBrowser = isBrowser;
      const a = { tested: false, writable: false };
      const supportsLocalStorage = () => {
        if (!(0, t.isBrowser)()) {
          return false;
        }
        try {
          if (typeof globalThis.localStorage !== "object") {
            return false;
          }
        } catch (e) {
          return false;
        }
        if (a.tested) {
          return a.writable;
        }
        const e = `lswt-${Math.random()}${Math.random()}`;
        try {
          globalThis.localStorage.setItem(e, e);
          globalThis.localStorage.removeItem(e);
          a.tested = true;
          a.writable = true;
        } catch (e) {
          a.tested = true;
          a.writable = false;
        }
        return a.writable;
      };
      t.supportsLocalStorage = supportsLocalStorage;
      function parseParametersFromURL(e) {
        const t = {};
        const r = new URL(e);
        if (r.hash && r.hash[0] === "#") {
          try {
            const e = new URLSearchParams(r.hash.substring(1));
            e.forEach((e, r) => {
              t[r] = e;
            });
          } catch (e) {}
        }
        r.searchParams.forEach((e, r) => {
          t[r] = e;
        });
        return t;
      }
      t.parseParametersFromURL = parseParametersFromURL;
      const resolveFetch = (e) => {
        let t;
        if (e) {
          t = e;
        } else if (typeof fetch === "undefined") {
          t = (...e) =>
            Promise.resolve()
              .then(() => o(r(83318)))
              .then(({ default: t }) => t(...e));
        } else {
          t = fetch;
        }
        return (...e) => t(...e);
      };
      t.resolveFetch = resolveFetch;
      const looksLikeFetchResponse = (e) => typeof e === "object" && e !== null && "status" in e && "ok" in e && "json" in e && typeof e.json === "function";
      t.looksLikeFetchResponse = looksLikeFetchResponse;
      const setItemAsync = async (e, t, r) => {
        await e.setItem(t, JSON.stringify(r));
      };
      t.setItemAsync = setItemAsync;
      const getItemAsync = async (e, t) => {
        const r = await e.getItem(t);
        if (!r) {
          return null;
        }
        try {
          return JSON.parse(r);
        } catch (e) {
          return r;
        }
      };
      t.getItemAsync = getItemAsync;
      const removeItemAsync = async (e, t) => {
        await e.removeItem(t);
      };
      t.removeItemAsync = removeItemAsync;
      function decodeBase64URL(e) {
        const t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        let r = "";
        let s, n, o;
        let i, a, A, l;
        let c = 0;
        e = e.replace("-", "+").replace("_", "/");
        while (c < e.length) {
          i = t.indexOf(e.charAt(c++));
          a = t.indexOf(e.charAt(c++));
          A = t.indexOf(e.charAt(c++));
          l = t.indexOf(e.charAt(c++));
          s = (i << 2) | (a >> 4);
          n = ((a & 15) << 4) | (A >> 2);
          o = ((A & 3) << 6) | l;
          r = r + String.fromCharCode(s);
          if (A != 64 && n != 0) {
            r = r + String.fromCharCode(n);
          }
          if (l != 64 && o != 0) {
            r = r + String.fromCharCode(o);
          }
        }
        return r;
      }
      t.decodeBase64URL = decodeBase64URL;
      class Deferred {
        constructor() {
          this.promise = new Deferred.promiseConstructor((e, t) => {
            this.resolve = e;
            this.reject = t;
          });
        }
      }
      t.Deferred = Deferred;
      Deferred.promiseConstructor = Promise;
      function decodeJWTPayload(e) {
        const t = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i;
        const r = e.split(".");
        if (r.length !== 3) {
          throw new Error("JWT is not valid: not a JWT structure");
        }
        if (!t.test(r[1])) {
          throw new Error("JWT is not valid: payload is not in base64url format");
        }
        const s = r[1];
        return JSON.parse(decodeBase64URL(s));
      }
      t.decodeJWTPayload = decodeJWTPayload;
      async function sleep(e) {
        return await new Promise((t) => {
          setTimeout(() => t(null), e);
        });
      }
      t.sleep = sleep;
      function retryable(e, t) {
        const r = new Promise((r, s) => {
          (async () => {
            for (let n = 0; n < Infinity; n++) {
              try {
                const s = await e(n);
                if (!t(n, null, s)) {
                  r(s);
                  return;
                }
              } catch (e) {
                if (!t(n, e)) {
                  s(e);
                  return;
                }
              }
            }
          })();
        });
        return r;
      }
      t.retryable = retryable;
      function dec2hex(e) {
        return ("0" + e.toString(16)).substr(-2);
      }
      function generatePKCEVerifier() {
        const e = 56;
        const t = new Uint32Array(e);
        if (typeof crypto === "undefined") {
          const t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~";
          const r = t.length;
          let s = "";
          for (let n = 0; n < e; n++) {
            s += t.charAt(Math.floor(Math.random() * r));
          }
          return s;
        }
        crypto.getRandomValues(t);
        return Array.from(t, dec2hex).join("");
      }
      t.generatePKCEVerifier = generatePKCEVerifier;
      async function sha256(e) {
        const t = new TextEncoder();
        const r = t.encode(e);
        const s = await crypto.subtle.digest("SHA-256", r);
        const n = new Uint8Array(s);
        return Array.from(n)
          .map((e) => String.fromCharCode(e))
          .join("");
      }
      function base64urlencode(e) {
        return btoa(e).replace(/\+/g, "-").replace(/\//g, "_").replace(/=+$/, "");
      }
      async function generatePKCEChallenge(e) {
        const t = typeof crypto !== "undefined" && typeof crypto.subtle !== "undefined" && typeof TextEncoder !== "undefined";
        if (!t) {
          console.warn("WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.");
          return e;
        }
        const r = await sha256(e);
        return base64urlencode(r);
      }
      t.generatePKCEChallenge = generatePKCEChallenge;
      async function getCodeChallengeAndMethod(e, r, s = false) {
        const n = generatePKCEVerifier();
        let o = n;
        if (s) {
          o += "/PASSWORD_RECOVERY";
        }
        await (0, t.setItemAsync)(e, `${r}-code-verifier`, o);
        const i = await generatePKCEChallenge(n);
        const a = n === i ? "plain" : "s256";
        return [i, a];
      }
      t.getCodeChallengeAndMethod = getCodeChallengeAndMethod;
      const A = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;
      function parseResponseAPIVersion(e) {
        const t = e.headers.get(i.API_VERSION_HEADER_NAME);
        if (!t) {
          return null;
        }
        if (!t.match(A)) {
          return null;
        }
        try {
          const e = new Date(`${t}T00:00:00.0Z`);
          return e;
        } catch (e) {
          return null;
        }
      }
      t.parseResponseAPIVersion = parseResponseAPIVersion;
    },
    21735: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.memoryLocalStorageAdapter = t.localStorageAdapter = void 0;
      const s = r(30601);
      t.localStorageAdapter = {
        getItem: (e) => {
          if (!(0, s.supportsLocalStorage)()) {
            return null;
          }
          return globalThis.localStorage.getItem(e);
        },
        setItem: (e, t) => {
          if (!(0, s.supportsLocalStorage)()) {
            return;
          }
          globalThis.localStorage.setItem(e, t);
        },
        removeItem: (e) => {
          if (!(0, s.supportsLocalStorage)()) {
            return;
          }
          globalThis.localStorage.removeItem(e);
        },
      };
      function memoryLocalStorageAdapter(e = {}) {
        return {
          getItem: (t) => e[t] || null,
          setItem: (t, r) => {
            e[t] = r;
          },
          removeItem: (t) => {
            delete e[t];
          },
        };
      }
      t.memoryLocalStorageAdapter = memoryLocalStorageAdapter;
    },
    28932: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.navigatorLock = t.NavigatorLockAcquireTimeoutError = t.LockAcquireTimeoutError = t.internals = void 0;
      const s = r(30601);
      t.internals = {
        debug: !!(
          globalThis &&
          (0, s.supportsLocalStorage)() &&
          globalThis.localStorage &&
          globalThis.localStorage.getItem("supabase.gotrue-js.locks.debug") === "true"
        ),
      };
      class LockAcquireTimeoutError extends Error {
        constructor(e) {
          super(e);
          this.isAcquireTimeout = true;
        }
      }
      t.LockAcquireTimeoutError = LockAcquireTimeoutError;
      class NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {}
      t.NavigatorLockAcquireTimeoutError = NavigatorLockAcquireTimeoutError;
      async function navigatorLock(e, r, s) {
        if (t.internals.debug) {
          console.log("@supabase/gotrue-js: navigatorLock: acquire lock", e, r);
        }
        const n = new globalThis.AbortController();
        if (r > 0) {
          setTimeout(() => {
            n.abort();
            if (t.internals.debug) {
              console.log("@supabase/gotrue-js: navigatorLock acquire timed out", e);
            }
          }, r);
        }
        return await globalThis.navigator.locks.request(
          e,
          r === 0 ? { mode: "exclusive", ifAvailable: true } : { mode: "exclusive", signal: n.signal },
          async (n) => {
            if (n) {
              if (t.internals.debug) {
                console.log("@supabase/gotrue-js: navigatorLock: acquired", e, n.name);
              }
              try {
                return await s();
              } finally {
                if (t.internals.debug) {
                  console.log("@supabase/gotrue-js: navigatorLock: released", e, n.name);
                }
              }
            } else {
              if (r === 0) {
                if (t.internals.debug) {
                  console.log("@supabase/gotrue-js: navigatorLock: not immediately available", e);
                }
                throw new NavigatorLockAcquireTimeoutError(`Acquiring an exclusive Navigator LockManager lock "${e}" immediately failed`);
              } else {
                if (t.internals.debug) {
                  try {
                    const e = await globalThis.navigator.locks.query();
                    console.log("@supabase/gotrue-js: Navigator LockManager state", JSON.stringify(e, null, "  "));
                  } catch (e) {
                    console.warn("@supabase/gotrue-js: Error when querying Navigator LockManager state", e);
                  }
                }
                console.warn(
                  "@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request"
                );
                return await s();
              }
            }
          }
        );
      }
      t.navigatorLock = navigatorLock;
    },
    80512: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.polyfillGlobalThis = void 0;
      function polyfillGlobalThis() {
        if (typeof globalThis === "object") return;
        try {
          Object.defineProperty(Object.prototype, "__magic__", {
            get: function () {
              return this;
            },
            configurable: true,
          });
          __magic__.globalThis = __magic__;
          delete Object.prototype.__magic__;
        } catch (e) {
          if (typeof self !== "undefined") {
            self.globalThis = self;
          }
        }
      }
      t.polyfillGlobalThis = polyfillGlobalThis;
    },
    53737: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
    },
    41920: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.version = void 0;
      t.version = "2.64.2";
    },
    39149: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.FunctionsClient = void 0;
      const n = r(44495);
      const o = r(70842);
      class FunctionsClient {
        constructor(e, { headers: t = {}, customFetch: r, region: s = o.FunctionRegion.Any } = {}) {
          this.url = e;
          this.headers = t;
          this.region = s;
          this.fetch = (0, n.resolveFetch)(r);
        }
        setAuth(e) {
          this.headers.Authorization = `Bearer ${e}`;
        }
        invoke(e, t = {}) {
          var r;
          return s(this, void 0, void 0, function* () {
            try {
              const { headers: s, method: n, body: i } = t;
              let a = {};
              let { region: A } = t;
              if (!A) {
                A = this.region;
              }
              if (A && A !== "any") {
                a["x-region"] = A;
              }
              let l;
              if (i && ((s && !Object.prototype.hasOwnProperty.call(s, "Content-Type")) || !s)) {
                if ((typeof Blob !== "undefined" && i instanceof Blob) || i instanceof ArrayBuffer) {
                  a["Content-Type"] = "application/octet-stream";
                  l = i;
                } else if (typeof i === "string") {
                  a["Content-Type"] = "text/plain";
                  l = i;
                } else if (typeof FormData !== "undefined" && i instanceof FormData) {
                  l = i;
                } else {
                  a["Content-Type"] = "application/json";
                  l = JSON.stringify(i);
                }
              }
              const c = yield this.fetch(`${this.url}/${e}`, {
                method: n || "POST",
                headers: Object.assign(Object.assign(Object.assign({}, a), this.headers), s),
                body: l,
              }).catch((e) => {
                throw new o.FunctionsFetchError(e);
              });
              const d = c.headers.get("x-relay-error");
              if (d && d === "true") {
                throw new o.FunctionsRelayError(c);
              }
              if (!c.ok) {
                throw new o.FunctionsHttpError(c);
              }
              let p = ((r = c.headers.get("Content-Type")) !== null && r !== void 0 ? r : "text/plain").split(";")[0].trim();
              let u;
              if (p === "application/json") {
                u = yield c.json();
              } else if (p === "application/octet-stream") {
                u = yield c.blob();
              } else if (p === "text/event-stream") {
                u = c;
              } else if (p === "multipart/form-data") {
                u = yield c.formData();
              } else {
                u = yield c.text();
              }
              return { data: u, error: null };
            } catch (e) {
              return { data: null, error: e };
            }
          });
        }
      }
      t.FunctionsClient = FunctionsClient;
    },
    44495: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.prototype.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.resolveFetch = void 0;
      const resolveFetch = (e) => {
        let t;
        if (e) {
          t = e;
        } else if (typeof fetch === "undefined") {
          t = (...e) =>
            Promise.resolve()
              .then(() => o(r(83318)))
              .then(({ default: t }) => t(...e));
        } else {
          t = fetch;
        }
        return (...e) => t(...e);
      };
      t.resolveFetch = resolveFetch;
    },
    70459: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.FunctionRegion = t.FunctionsRelayError = t.FunctionsHttpError = t.FunctionsFetchError = t.FunctionsError = t.FunctionsClient = void 0;
      var s = r(39149);
      Object.defineProperty(t, "FunctionsClient", {
        enumerable: true,
        get: function () {
          return s.FunctionsClient;
        },
      });
      var n = r(70842);
      Object.defineProperty(t, "FunctionsError", {
        enumerable: true,
        get: function () {
          return n.FunctionsError;
        },
      });
      Object.defineProperty(t, "FunctionsFetchError", {
        enumerable: true,
        get: function () {
          return n.FunctionsFetchError;
        },
      });
      Object.defineProperty(t, "FunctionsHttpError", {
        enumerable: true,
        get: function () {
          return n.FunctionsHttpError;
        },
      });
      Object.defineProperty(t, "FunctionsRelayError", {
        enumerable: true,
        get: function () {
          return n.FunctionsRelayError;
        },
      });
      Object.defineProperty(t, "FunctionRegion", {
        enumerable: true,
        get: function () {
          return n.FunctionRegion;
        },
      });
    },
    70842: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.FunctionRegion = t.FunctionsHttpError = t.FunctionsRelayError = t.FunctionsFetchError = t.FunctionsError = void 0;
      class FunctionsError extends Error {
        constructor(e, t = "FunctionsError", r) {
          super(e);
          this.name = t;
          this.context = r;
        }
      }
      t.FunctionsError = FunctionsError;
      class FunctionsFetchError extends FunctionsError {
        constructor(e) {
          super("Failed to send a request to the Edge Function", "FunctionsFetchError", e);
        }
      }
      t.FunctionsFetchError = FunctionsFetchError;
      class FunctionsRelayError extends FunctionsError {
        constructor(e) {
          super("Relay Error invoking the Edge Function", "FunctionsRelayError", e);
        }
      }
      t.FunctionsRelayError = FunctionsRelayError;
      class FunctionsHttpError extends FunctionsError {
        constructor(e) {
          super("Edge Function returned a non-2xx status code", "FunctionsHttpError", e);
        }
      }
      t.FunctionsHttpError = FunctionsHttpError;
      var r;
      (function (e) {
        e["Any"] = "any";
        e["ApNortheast1"] = "ap-northeast-1";
        e["ApNortheast2"] = "ap-northeast-2";
        e["ApSouth1"] = "ap-south-1";
        e["ApSoutheast1"] = "ap-southeast-1";
        e["ApSoutheast2"] = "ap-southeast-2";
        e["CaCentral1"] = "ca-central-1";
        e["EuCentral1"] = "eu-central-1";
        e["EuWest1"] = "eu-west-1";
        e["EuWest2"] = "eu-west-2";
        e["EuWest3"] = "eu-west-3";
        e["SaEast1"] = "sa-east-1";
        e["UsEast1"] = "us-east-1";
        e["UsWest1"] = "us-west-1";
        e["UsWest2"] = "us-west-2";
      })((r = t.FunctionRegion || (t.FunctionRegion = {})));
    },
    83318: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      function _interopDefault(e) {
        return e && typeof e === "object" && "default" in e ? e["default"] : e;
      }
      var s = _interopDefault(r(2203));
      var n = _interopDefault(r(58611));
      var o = _interopDefault(r(87016));
      var i = _interopDefault(r(62686));
      var a = _interopDefault(r(65692));
      var A = _interopDefault(r(43106));
      const l = s.Readable;
      const c = Symbol("buffer");
      const d = Symbol("type");
      class Blob {
        constructor() {
          this[d] = "";
          const e = arguments[0];
          const t = arguments[1];
          const r = [];
          let s = 0;
          if (e) {
            const t = e;
            const n = Number(t.length);
            for (let e = 0; e < n; e++) {
              const n = t[e];
              let o;
              if (n instanceof Buffer) {
                o = n;
              } else if (ArrayBuffer.isView(n)) {
                o = Buffer.from(n.buffer, n.byteOffset, n.byteLength);
              } else if (n instanceof ArrayBuffer) {
                o = Buffer.from(n);
              } else if (n instanceof Blob) {
                o = n[c];
              } else {
                o = Buffer.from(typeof n === "string" ? n : String(n));
              }
              s += o.length;
              r.push(o);
            }
          }
          this[c] = Buffer.concat(r);
          let n = t && t.type !== undefined && String(t.type).toLowerCase();
          if (n && !/[^\u0020-\u007E]/.test(n)) {
            this[d] = n;
          }
        }
        get size() {
          return this[c].length;
        }
        get type() {
          return this[d];
        }
        text() {
          return Promise.resolve(this[c].toString());
        }
        arrayBuffer() {
          const e = this[c];
          const t = e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength);
          return Promise.resolve(t);
        }
        stream() {
          const e = new l();
          e._read = function () {};
          e.push(this[c]);
          e.push(null);
          return e;
        }
        toString() {
          return "[object Blob]";
        }
        slice() {
          const e = this.size;
          const t = arguments[0];
          const r = arguments[1];
          let s, n;
          if (t === undefined) {
            s = 0;
          } else if (t < 0) {
            s = Math.max(e + t, 0);
          } else {
            s = Math.min(t, e);
          }
          if (r === undefined) {
            n = e;
          } else if (r < 0) {
            n = Math.max(e + r, 0);
          } else {
            n = Math.min(r, e);
          }
          const o = Math.max(n - s, 0);
          const i = this[c];
          const a = i.slice(s, s + o);
          const A = new Blob([], { type: arguments[2] });
          A[c] = a;
          return A;
        }
      }
      Object.defineProperties(Blob.prototype, { size: { enumerable: true }, type: { enumerable: true }, slice: { enumerable: true } });
      Object.defineProperty(Blob.prototype, Symbol.toStringTag, { value: "Blob", writable: false, enumerable: false, configurable: true });
      function FetchError(e, t, r) {
        Error.call(this, e);
        this.message = e;
        this.type = t;
        if (r) {
          this.code = this.errno = r.code;
        }
        Error.captureStackTrace(this, this.constructor);
      }
      FetchError.prototype = Object.create(Error.prototype);
      FetchError.prototype.constructor = FetchError;
      FetchError.prototype.name = "FetchError";
      let p;
      const u = Symbol("Body internals");
      const g = s.PassThrough;
      function Body(e) {
        var t = this;
        var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          n = r.size;
        let o = n === undefined ? 0 : n;
        var i = r.timeout;
        let a = i === undefined ? 0 : i;
        if (e == null) {
          e = null;
        } else if (isURLSearchParams(e)) {
          e = Buffer.from(e.toString());
        } else if (isBlob(e));
        else if (Buffer.isBuffer(e));
        else if (Object.prototype.toString.call(e) === "[object ArrayBuffer]") {
          e = Buffer.from(e);
        } else if (ArrayBuffer.isView(e)) {
          e = Buffer.from(e.buffer, e.byteOffset, e.byteLength);
        } else if (e instanceof s);
        else {
          e = Buffer.from(String(e));
        }
        this[u] = { body: e, disturbed: false, error: null };
        this.size = o;
        this.timeout = a;
        if (e instanceof s) {
          e.on("error", function (e) {
            const r = e.name === "AbortError" ? e : new FetchError(`Invalid response body while trying to fetch ${t.url}: ${e.message}`, "system", e);
            t[u].error = r;
          });
        }
      }
      Body.prototype = {
        get body() {
          return this[u].body;
        },
        get bodyUsed() {
          return this[u].disturbed;
        },
        arrayBuffer() {
          return consumeBody.call(this).then(function (e) {
            return e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength);
          });
        },
        blob() {
          let e = (this.headers && this.headers.get("content-type")) || "";
          return consumeBody.call(this).then(function (t) {
            return Object.assign(new Blob([], { type: e.toLowerCase() }), { [c]: t });
          });
        },
        json() {
          var e = this;
          return consumeBody.call(this).then(function (t) {
            try {
              return JSON.parse(t.toString());
            } catch (t) {
              return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${t.message}`, "invalid-json"));
            }
          });
        },
        text() {
          return consumeBody.call(this).then(function (e) {
            return e.toString();
          });
        },
        buffer() {
          return consumeBody.call(this);
        },
        textConverted() {
          var e = this;
          return consumeBody.call(this).then(function (t) {
            return convertBody(t, e.headers);
          });
        },
      };
      Object.defineProperties(Body.prototype, {
        body: { enumerable: true },
        bodyUsed: { enumerable: true },
        arrayBuffer: { enumerable: true },
        blob: { enumerable: true },
        json: { enumerable: true },
        text: { enumerable: true },
      });
      Body.mixIn = function (e) {
        for (const t of Object.getOwnPropertyNames(Body.prototype)) {
          if (!(t in e)) {
            const r = Object.getOwnPropertyDescriptor(Body.prototype, t);
            Object.defineProperty(e, t, r);
          }
        }
      };
      function consumeBody() {
        var e = this;
        if (this[u].disturbed) {
          return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
        }
        this[u].disturbed = true;
        if (this[u].error) {
          return Body.Promise.reject(this[u].error);
        }
        let t = this.body;
        if (t === null) {
          return Body.Promise.resolve(Buffer.alloc(0));
        }
        if (isBlob(t)) {
          t = t.stream();
        }
        if (Buffer.isBuffer(t)) {
          return Body.Promise.resolve(t);
        }
        if (!(t instanceof s)) {
          return Body.Promise.resolve(Buffer.alloc(0));
        }
        let r = [];
        let n = 0;
        let o = false;
        return new Body.Promise(function (s, i) {
          let a;
          if (e.timeout) {
            a = setTimeout(function () {
              o = true;
              i(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`, "body-timeout"));
            }, e.timeout);
          }
          t.on("error", function (t) {
            if (t.name === "AbortError") {
              o = true;
              i(t);
            } else {
              i(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${t.message}`, "system", t));
            }
          });
          t.on("data", function (t) {
            if (o || t === null) {
              return;
            }
            if (e.size && n + t.length > e.size) {
              o = true;
              i(new FetchError(`content size at ${e.url} over limit: ${e.size}`, "max-size"));
              return;
            }
            n += t.length;
            r.push(t);
          });
          t.on("end", function () {
            if (o) {
              return;
            }
            clearTimeout(a);
            try {
              s(Buffer.concat(r, n));
            } catch (t) {
              i(new FetchError(`Could not create Buffer from response body for ${e.url}: ${t.message}`, "system", t));
            }
          });
        });
      }
      function convertBody(e, t) {
        {
          throw new Error("The package `encoding` must be installed to use the textConverted() function");
        }
        const r = t.get("content-type");
        let s = "utf-8";
        let n, o;
        if (r) {
          n = /charset=([^;]*)/i.exec(r);
        }
        o = e.slice(0, 1024).toString();
        if (!n && o) {
          n = /<meta.+?charset=(['"])(.+?)\1/i.exec(o);
        }
        if (!n && o) {
          n = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(o);
          if (!n) {
            n = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(o);
            if (n) {
              n.pop();
            }
          }
          if (n) {
            n = /charset=(.*)/i.exec(n.pop());
          }
        }
        if (!n && o) {
          n = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(o);
        }
        if (n) {
          s = n.pop();
          if (s === "gb2312" || s === "gbk") {
            s = "gb18030";
          }
        }
        return p(e, "UTF-8", s).toString();
      }
      function isURLSearchParams(e) {
        if (
          typeof e !== "object" ||
          typeof e.append !== "function" ||
          typeof e.delete !== "function" ||
          typeof e.get !== "function" ||
          typeof e.getAll !== "function" ||
          typeof e.has !== "function" ||
          typeof e.set !== "function"
        ) {
          return false;
        }
        return e.constructor.name === "URLSearchParams" || Object.prototype.toString.call(e) === "[object URLSearchParams]" || typeof e.sort === "function";
      }
      function isBlob(e) {
        return (
          typeof e === "object" &&
          typeof e.arrayBuffer === "function" &&
          typeof e.type === "string" &&
          typeof e.stream === "function" &&
          typeof e.constructor === "function" &&
          typeof e.constructor.name === "string" &&
          /^(Blob|File)$/.test(e.constructor.name) &&
          /^(Blob|File)$/.test(e[Symbol.toStringTag])
        );
      }
      function clone(e) {
        let t, r;
        let n = e.body;
        if (e.bodyUsed) {
          throw new Error("cannot clone body after it is used");
        }
        if (n instanceof s && typeof n.getBoundary !== "function") {
          t = new g();
          r = new g();
          n.pipe(t);
          n.pipe(r);
          e[u].body = t;
          n = r;
        }
        return n;
      }
      function extractContentType(e) {
        if (e === null) {
          return null;
        } else if (typeof e === "string") {
          return "text/plain;charset=UTF-8";
        } else if (isURLSearchParams(e)) {
          return "application/x-www-form-urlencoded;charset=UTF-8";
        } else if (isBlob(e)) {
          return e.type || null;
        } else if (Buffer.isBuffer(e)) {
          return null;
        } else if (Object.prototype.toString.call(e) === "[object ArrayBuffer]") {
          return null;
        } else if (ArrayBuffer.isView(e)) {
          return null;
        } else if (typeof e.getBoundary === "function") {
          return `multipart/form-data;boundary=${e.getBoundary()}`;
        } else if (e instanceof s) {
          return null;
        } else {
          return "text/plain;charset=UTF-8";
        }
      }
      function getTotalBytes(e) {
        const t = e.body;
        if (t === null) {
          return 0;
        } else if (isBlob(t)) {
          return t.size;
        } else if (Buffer.isBuffer(t)) {
          return t.length;
        } else if (t && typeof t.getLengthSync === "function") {
          if ((t._lengthRetrievers && t._lengthRetrievers.length == 0) || (t.hasKnownLength && t.hasKnownLength())) {
            return t.getLengthSync();
          }
          return null;
        } else {
          return null;
        }
      }
      function writeToStream(e, t) {
        const r = t.body;
        if (r === null) {
          e.end();
        } else if (isBlob(r)) {
          r.stream().pipe(e);
        } else if (Buffer.isBuffer(r)) {
          e.write(r);
          e.end();
        } else {
          r.pipe(e);
        }
      }
      Body.Promise = global.Promise;
      const m = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
      const h = /[^\t\x20-\x7e\x80-\xff]/;
      function validateName(e) {
        e = `${e}`;
        if (m.test(e) || e === "") {
          throw new TypeError(`${e} is not a legal HTTP header name`);
        }
      }
      function validateValue(e) {
        e = `${e}`;
        if (h.test(e)) {
          throw new TypeError(`${e} is not a legal HTTP header value`);
        }
      }
      function find(e, t) {
        t = t.toLowerCase();
        for (const r in e) {
          if (r.toLowerCase() === t) {
            return r;
          }
        }
        return undefined;
      }
      const E = Symbol("map");
      class Headers {
        constructor() {
          let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
          this[E] = Object.create(null);
          if (e instanceof Headers) {
            const t = e.raw();
            const r = Object.keys(t);
            for (const e of r) {
              for (const r of t[e]) {
                this.append(e, r);
              }
            }
            return;
          }
          if (e == null);
          else if (typeof e === "object") {
            const t = e[Symbol.iterator];
            if (t != null) {
              if (typeof t !== "function") {
                throw new TypeError("Header pairs must be iterable");
              }
              const r = [];
              for (const t of e) {
                if (typeof t !== "object" || typeof t[Symbol.iterator] !== "function") {
                  throw new TypeError("Each header pair must be iterable");
                }
                r.push(Array.from(t));
              }
              for (const e of r) {
                if (e.length !== 2) {
                  throw new TypeError("Each header pair must be a name/value tuple");
                }
                this.append(e[0], e[1]);
              }
            } else {
              for (const t of Object.keys(e)) {
                const r = e[t];
                this.append(t, r);
              }
            }
          } else {
            throw new TypeError("Provided initializer must be an object");
          }
        }
        get(e) {
          e = `${e}`;
          validateName(e);
          const t = find(this[E], e);
          if (t === undefined) {
            return null;
          }
          return this[E][t].join(", ");
        }
        forEach(e) {
          let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
          let r = getHeaders(this);
          let s = 0;
          while (s < r.length) {
            var n = r[s];
            const o = n[0],
              i = n[1];
            e.call(t, i, o, this);
            r = getHeaders(this);
            s++;
          }
        }
        set(e, t) {
          e = `${e}`;
          t = `${t}`;
          validateName(e);
          validateValue(t);
          const r = find(this[E], e);
          this[E][r !== undefined ? r : e] = [t];
        }
        append(e, t) {
          e = `${e}`;
          t = `${t}`;
          validateName(e);
          validateValue(t);
          const r = find(this[E], e);
          if (r !== undefined) {
            this[E][r].push(t);
          } else {
            this[E][e] = [t];
          }
        }
        has(e) {
          e = `${e}`;
          validateName(e);
          return find(this[E], e) !== undefined;
        }
        delete(e) {
          e = `${e}`;
          validateName(e);
          const t = find(this[E], e);
          if (t !== undefined) {
            delete this[E][t];
          }
        }
        raw() {
          return this[E];
        }
        keys() {
          return createHeadersIterator(this, "key");
        }
        values() {
          return createHeadersIterator(this, "value");
        }
        [Symbol.iterator]() {
          return createHeadersIterator(this, "key+value");
        }
      }
      Headers.prototype.entries = Headers.prototype[Symbol.iterator];
      Object.defineProperty(Headers.prototype, Symbol.toStringTag, { value: "Headers", writable: false, enumerable: false, configurable: true });
      Object.defineProperties(Headers.prototype, {
        get: { enumerable: true },
        forEach: { enumerable: true },
        set: { enumerable: true },
        append: { enumerable: true },
        has: { enumerable: true },
        delete: { enumerable: true },
        keys: { enumerable: true },
        values: { enumerable: true },
        entries: { enumerable: true },
      });
      function getHeaders(e) {
        let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "key+value";
        const r = Object.keys(e[E]).sort();
        return r.map(
          t === "key"
            ? function (e) {
                return e.toLowerCase();
              }
            : t === "value"
              ? function (t) {
                  return e[E][t].join(", ");
                }
              : function (t) {
                  return [t.toLowerCase(), e[E][t].join(", ")];
                }
        );
      }
      const I = Symbol("internal");
      function createHeadersIterator(e, t) {
        const r = Object.create(C);
        r[I] = { target: e, kind: t, index: 0 };
        return r;
      }
      const C = Object.setPrototypeOf(
        {
          next() {
            if (!this || Object.getPrototypeOf(this) !== C) {
              throw new TypeError("Value of `this` is not a HeadersIterator");
            }
            var e = this[I];
            const t = e.target,
              r = e.kind,
              s = e.index;
            const n = getHeaders(t, r);
            const o = n.length;
            if (s >= o) {
              return { value: undefined, done: true };
            }
            this[I].index = s + 1;
            return { value: n[s], done: false };
          },
        },
        Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()))
      );
      Object.defineProperty(C, Symbol.toStringTag, { value: "HeadersIterator", writable: false, enumerable: false, configurable: true });
      function exportNodeCompatibleHeaders(e) {
        const t = Object.assign({ __proto__: null }, e[E]);
        const r = find(e[E], "Host");
        if (r !== undefined) {
          t[r] = t[r][0];
        }
        return t;
      }
      function createHeadersLenient(e) {
        const t = new Headers();
        for (const r of Object.keys(e)) {
          if (m.test(r)) {
            continue;
          }
          if (Array.isArray(e[r])) {
            for (const s of e[r]) {
              if (h.test(s)) {
                continue;
              }
              if (t[E][r] === undefined) {
                t[E][r] = [s];
              } else {
                t[E][r].push(s);
              }
            }
          } else if (!h.test(e[r])) {
            t[E][r] = [e[r]];
          }
        }
        return t;
      }
      const y = Symbol("Response internals");
      const B = n.STATUS_CODES;
      class Response {
        constructor() {
          let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
          let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          Body.call(this, e, t);
          const r = t.status || 200;
          const s = new Headers(t.headers);
          if (e != null && !s.has("Content-Type")) {
            const t = extractContentType(e);
            if (t) {
              s.append("Content-Type", t);
            }
          }
          this[y] = { url: t.url, status: r, statusText: t.statusText || B[r], headers: s, counter: t.counter };
        }
        get url() {
          return this[y].url || "";
        }
        get status() {
          return this[y].status;
        }
        get ok() {
          return this[y].status >= 200 && this[y].status < 300;
        }
        get redirected() {
          return this[y].counter > 0;
        }
        get statusText() {
          return this[y].statusText;
        }
        get headers() {
          return this[y].headers;
        }
        clone() {
          return new Response(clone(this), {
            url: this.url,
            status: this.status,
            statusText: this.statusText,
            headers: this.headers,
            ok: this.ok,
            redirected: this.redirected,
          });
        }
      }
      Body.mixIn(Response.prototype);
      Object.defineProperties(Response.prototype, {
        url: { enumerable: true },
        status: { enumerable: true },
        ok: { enumerable: true },
        redirected: { enumerable: true },
        statusText: { enumerable: true },
        headers: { enumerable: true },
        clone: { enumerable: true },
      });
      Object.defineProperty(Response.prototype, Symbol.toStringTag, { value: "Response", writable: false, enumerable: false, configurable: true });
      const Q = Symbol("Request internals");
      const b = o.URL || i.URL;
      const w = o.parse;
      const v = o.format;
      function parseURL(e) {
        if (/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)) {
          e = new b(e).toString();
        }
        return w(e);
      }
      const T = "destroy" in s.Readable.prototype;
      function isRequest(e) {
        return typeof e === "object" && typeof e[Q] === "object";
      }
      function isAbortSignal(e) {
        const t = e && typeof e === "object" && Object.getPrototypeOf(e);
        return !!(t && t.constructor.name === "AbortSignal");
      }
      class Request {
        constructor(e) {
          let t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
          let r;
          if (!isRequest(e)) {
            if (e && e.href) {
              r = parseURL(e.href);
            } else {
              r = parseURL(`${e}`);
            }
            e = {};
          } else {
            r = parseURL(e.url);
          }
          let s = t.method || e.method || "GET";
          s = s.toUpperCase();
          if ((t.body != null || (isRequest(e) && e.body !== null)) && (s === "GET" || s === "HEAD")) {
            throw new TypeError("Request with GET/HEAD method cannot have body");
          }
          let n = t.body != null ? t.body : isRequest(e) && e.body !== null ? clone(e) : null;
          Body.call(this, n, { timeout: t.timeout || e.timeout || 0, size: t.size || e.size || 0 });
          const o = new Headers(t.headers || e.headers || {});
          if (n != null && !o.has("Content-Type")) {
            const e = extractContentType(n);
            if (e) {
              o.append("Content-Type", e);
            }
          }
          let i = isRequest(e) ? e.signal : null;
          if ("signal" in t) i = t.signal;
          if (i != null && !isAbortSignal(i)) {
            throw new TypeError("Expected signal to be an instanceof AbortSignal");
          }
          this[Q] = { method: s, redirect: t.redirect || e.redirect || "follow", headers: o, parsedURL: r, signal: i };
          this.follow = t.follow !== undefined ? t.follow : e.follow !== undefined ? e.follow : 20;
          this.compress = t.compress !== undefined ? t.compress : e.compress !== undefined ? e.compress : true;
          this.counter = t.counter || e.counter || 0;
          this.agent = t.agent || e.agent;
        }
        get method() {
          return this[Q].method;
        }
        get url() {
          return v(this[Q].parsedURL);
        }
        get headers() {
          return this[Q].headers;
        }
        get redirect() {
          return this[Q].redirect;
        }
        get signal() {
          return this[Q].signal;
        }
        clone() {
          return new Request(this);
        }
      }
      Body.mixIn(Request.prototype);
      Object.defineProperty(Request.prototype, Symbol.toStringTag, { value: "Request", writable: false, enumerable: false, configurable: true });
      Object.defineProperties(Request.prototype, {
        method: { enumerable: true },
        url: { enumerable: true },
        headers: { enumerable: true },
        redirect: { enumerable: true },
        clone: { enumerable: true },
        signal: { enumerable: true },
      });
      function getNodeRequestOptions(e) {
        const t = e[Q].parsedURL;
        const r = new Headers(e[Q].headers);
        if (!r.has("Accept")) {
          r.set("Accept", "*/*");
        }
        if (!t.protocol || !t.hostname) {
          throw new TypeError("Only absolute URLs are supported");
        }
        if (!/^https?:$/.test(t.protocol)) {
          throw new TypeError("Only HTTP(S) protocols are supported");
        }
        if (e.signal && e.body instanceof s.Readable && !T) {
          throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");
        }
        let n = null;
        if (e.body == null && /^(POST|PUT)$/i.test(e.method)) {
          n = "0";
        }
        if (e.body != null) {
          const t = getTotalBytes(e);
          if (typeof t === "number") {
            n = String(t);
          }
        }
        if (n) {
          r.set("Content-Length", n);
        }
        if (!r.has("User-Agent")) {
          r.set("User-Agent", "node-fetch/1.0 (+https://github.com/bitinn/node-fetch)");
        }
        if (e.compress && !r.has("Accept-Encoding")) {
          r.set("Accept-Encoding", "gzip,deflate");
        }
        let o = e.agent;
        if (typeof o === "function") {
          o = o(t);
        }
        if (!r.has("Connection") && !o) {
          r.set("Connection", "close");
        }
        return Object.assign({}, t, { method: e.method, headers: exportNodeCompatibleHeaders(r), agent: o });
      }
      function AbortError(e) {
        Error.call(this, e);
        this.type = "aborted";
        this.message = e;
        Error.captureStackTrace(this, this.constructor);
      }
      AbortError.prototype = Object.create(Error.prototype);
      AbortError.prototype.constructor = AbortError;
      AbortError.prototype.name = "AbortError";
      const _ = o.URL || i.URL;
      const S = s.PassThrough;
      const R = function isDomainOrSubdomain(e, t) {
        const r = new _(t).hostname;
        const s = new _(e).hostname;
        return r === s || (r[r.length - s.length - 1] === "." && r.endsWith(s));
      };
      const D = function isSameProtocol(e, t) {
        const r = new _(t).protocol;
        const s = new _(e).protocol;
        return r === s;
      };
      function fetch(e, t) {
        if (!fetch.Promise) {
          throw new Error("native promise missing, set fetch.Promise to your favorite alternative");
        }
        Body.Promise = fetch.Promise;
        return new fetch.Promise(function (r, o) {
          const i = new Request(e, t);
          const l = getNodeRequestOptions(i);
          const c = (l.protocol === "https:" ? a : n).request;
          const d = i.signal;
          let p = null;
          const u = function abort() {
            let e = new AbortError("The user aborted a request.");
            o(e);
            if (i.body && i.body instanceof s.Readable) {
              destroyStream(i.body, e);
            }
            if (!p || !p.body) return;
            p.body.emit("error", e);
          };
          if (d && d.aborted) {
            u();
            return;
          }
          const g = function abortAndFinalize() {
            u();
            finalize();
          };
          const m = c(l);
          let h;
          if (d) {
            d.addEventListener("abort", g);
          }
          function finalize() {
            m.abort();
            if (d) d.removeEventListener("abort", g);
            clearTimeout(h);
          }
          if (i.timeout) {
            m.once("socket", function (e) {
              h = setTimeout(function () {
                o(new FetchError(`network timeout at: ${i.url}`, "request-timeout"));
                finalize();
              }, i.timeout);
            });
          }
          m.on("error", function (e) {
            o(new FetchError(`request to ${i.url} failed, reason: ${e.message}`, "system", e));
            if (p && p.body) {
              destroyStream(p.body, e);
            }
            finalize();
          });
          fixResponseChunkedTransferBadEnding(m, function (e) {
            if (d && d.aborted) {
              return;
            }
            if (p && p.body) {
              destroyStream(p.body, e);
            }
          });
          if (parseInt(process.version.substring(1)) < 14) {
            m.on("socket", function (e) {
              e.addListener("close", function (t) {
                const r = e.listenerCount("data") > 0;
                if (p && r && !t && !(d && d.aborted)) {
                  const e = new Error("Premature close");
                  e.code = "ERR_STREAM_PREMATURE_CLOSE";
                  p.body.emit("error", e);
                }
              });
            });
          }
          m.on("response", function (e) {
            clearTimeout(h);
            const t = createHeadersLenient(e.headers);
            if (fetch.isRedirect(e.statusCode)) {
              const s = t.get("Location");
              let n = null;
              try {
                n = s === null ? null : new _(s, i.url).toString();
              } catch (e) {
                if (i.redirect !== "manual") {
                  o(new FetchError(`uri requested responds with an invalid redirect URL: ${s}`, "invalid-redirect"));
                  finalize();
                  return;
                }
              }
              switch (i.redirect) {
                case "error":
                  o(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${i.url}`, "no-redirect"));
                  finalize();
                  return;
                case "manual":
                  if (n !== null) {
                    try {
                      t.set("Location", n);
                    } catch (e) {
                      o(e);
                    }
                  }
                  break;
                case "follow":
                  if (n === null) {
                    break;
                  }
                  if (i.counter >= i.follow) {
                    o(new FetchError(`maximum redirect reached at: ${i.url}`, "max-redirect"));
                    finalize();
                    return;
                  }
                  const s = {
                    headers: new Headers(i.headers),
                    follow: i.follow,
                    counter: i.counter + 1,
                    agent: i.agent,
                    compress: i.compress,
                    method: i.method,
                    body: i.body,
                    signal: i.signal,
                    timeout: i.timeout,
                    size: i.size,
                  };
                  if (!R(i.url, n) || !D(i.url, n)) {
                    for (const e of ["authorization", "www-authenticate", "cookie", "cookie2"]) {
                      s.headers.delete(e);
                    }
                  }
                  if (e.statusCode !== 303 && i.body && getTotalBytes(i) === null) {
                    o(new FetchError("Cannot follow redirect with body being a readable stream", "unsupported-redirect"));
                    finalize();
                    return;
                  }
                  if (e.statusCode === 303 || ((e.statusCode === 301 || e.statusCode === 302) && i.method === "POST")) {
                    s.method = "GET";
                    s.body = undefined;
                    s.headers.delete("content-length");
                  }
                  r(fetch(new Request(n, s)));
                  finalize();
                  return;
              }
            }
            e.once("end", function () {
              if (d) d.removeEventListener("abort", g);
            });
            let s = e.pipe(new S());
            const n = { url: i.url, status: e.statusCode, statusText: e.statusMessage, headers: t, size: i.size, timeout: i.timeout, counter: i.counter };
            const a = t.get("Content-Encoding");
            if (!i.compress || i.method === "HEAD" || a === null || e.statusCode === 204 || e.statusCode === 304) {
              p = new Response(s, n);
              r(p);
              return;
            }
            const l = { flush: A.Z_SYNC_FLUSH, finishFlush: A.Z_SYNC_FLUSH };
            if (a == "gzip" || a == "x-gzip") {
              s = s.pipe(A.createGunzip(l));
              p = new Response(s, n);
              r(p);
              return;
            }
            if (a == "deflate" || a == "x-deflate") {
              const t = e.pipe(new S());
              t.once("data", function (e) {
                if ((e[0] & 15) === 8) {
                  s = s.pipe(A.createInflate());
                } else {
                  s = s.pipe(A.createInflateRaw());
                }
                p = new Response(s, n);
                r(p);
              });
              t.on("end", function () {
                if (!p) {
                  p = new Response(s, n);
                  r(p);
                }
              });
              return;
            }
            if (a == "br" && typeof A.createBrotliDecompress === "function") {
              s = s.pipe(A.createBrotliDecompress());
              p = new Response(s, n);
              r(p);
              return;
            }
            p = new Response(s, n);
            r(p);
          });
          writeToStream(m, i);
        });
      }
      function fixResponseChunkedTransferBadEnding(e, t) {
        let r;
        e.on("socket", function (e) {
          r = e;
        });
        e.on("response", function (e) {
          const s = e.headers;
          if (s["transfer-encoding"] === "chunked" && !s["content-length"]) {
            e.once("close", function (e) {
              const s = r && r.listenerCount("data") > 0;
              if (s && !e) {
                const e = new Error("Premature close");
                e.code = "ERR_STREAM_PREMATURE_CLOSE";
                t(e);
              }
            });
          }
        });
      }
      function destroyStream(e, t) {
        if (e.destroy) {
          e.destroy(t);
        } else {
          e.emit("error", t);
          e.end();
        }
      }
      fetch.isRedirect = function (e) {
        return e === 301 || e === 302 || e === 303 || e === 307 || e === 308;
      };
      fetch.Promise = global.Promise;
      e.exports = t = fetch;
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = t;
      t.Headers = Headers;
      t.Request = Request;
      t.Response = Response;
      t.FetchError = FetchError;
    },
    41455: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const n = s(r(83318));
      const o = s(r(58154));
      class PostgrestBuilder {
        constructor(e) {
          this.shouldThrowOnError = false;
          this.method = e.method;
          this.url = e.url;
          this.headers = e.headers;
          this.schema = e.schema;
          this.body = e.body;
          this.shouldThrowOnError = e.shouldThrowOnError;
          this.signal = e.signal;
          this.isMaybeSingle = e.isMaybeSingle;
          if (e.fetch) {
            this.fetch = e.fetch;
          } else if (typeof fetch === "undefined") {
            this.fetch = n.default;
          } else {
            this.fetch = fetch;
          }
        }
        throwOnError() {
          this.shouldThrowOnError = true;
          return this;
        }
        then(e, t) {
          if (this.schema === undefined) {
          } else if (["GET", "HEAD"].includes(this.method)) {
            this.headers["Accept-Profile"] = this.schema;
          } else {
            this.headers["Content-Profile"] = this.schema;
          }
          if (this.method !== "GET" && this.method !== "HEAD") {
            this.headers["Content-Type"] = "application/json";
          }
          const r = this.fetch;
          let s = r(this.url.toString(), { method: this.method, headers: this.headers, body: JSON.stringify(this.body), signal: this.signal }).then(
            async (e) => {
              var t, r, s;
              let n = null;
              let i = null;
              let a = null;
              let A = e.status;
              let l = e.statusText;
              if (e.ok) {
                if (this.method !== "HEAD") {
                  const t = await e.text();
                  if (t === "") {
                  } else if (this.headers["Accept"] === "text/csv") {
                    i = t;
                  } else if (this.headers["Accept"] && this.headers["Accept"].includes("application/vnd.pgrst.plan+text")) {
                    i = t;
                  } else {
                    i = JSON.parse(t);
                  }
                }
                const s = (t = this.headers["Prefer"]) === null || t === void 0 ? void 0 : t.match(/count=(exact|planned|estimated)/);
                const o = (r = e.headers.get("content-range")) === null || r === void 0 ? void 0 : r.split("/");
                if (s && o && o.length > 1) {
                  a = parseInt(o[1]);
                }
                if (this.isMaybeSingle && this.method === "GET" && Array.isArray(i)) {
                  if (i.length > 1) {
                    n = {
                      code: "PGRST116",
                      details: `Results contain ${i.length} rows, application/vnd.pgrst.object+json requires 1 row`,
                      hint: null,
                      message: "JSON object requested, multiple (or no) rows returned",
                    };
                    i = null;
                    a = null;
                    A = 406;
                    l = "Not Acceptable";
                  } else if (i.length === 1) {
                    i = i[0];
                  } else {
                    i = null;
                  }
                }
              } else {
                const t = await e.text();
                try {
                  n = JSON.parse(t);
                  if (Array.isArray(n) && e.status === 404) {
                    i = [];
                    n = null;
                    A = 200;
                    l = "OK";
                  }
                } catch (r) {
                  if (e.status === 404 && t === "") {
                    A = 204;
                    l = "No Content";
                  } else {
                    n = { message: t };
                  }
                }
                if (
                  n &&
                  this.isMaybeSingle &&
                  ((s = n === null || n === void 0 ? void 0 : n.details) === null || s === void 0 ? void 0 : s.includes("0 rows"))
                ) {
                  n = null;
                  A = 200;
                  l = "OK";
                }
                if (n && this.shouldThrowOnError) {
                  throw new o.default(n);
                }
              }
              const c = { error: n, data: i, count: a, status: A, statusText: l };
              return c;
            }
          );
          if (!this.shouldThrowOnError) {
            s = s.catch((e) => {
              var t, r, s;
              return {
                error: {
                  message: `${(t = e === null || e === void 0 ? void 0 : e.name) !== null && t !== void 0 ? t : "FetchError"}: ${e === null || e === void 0 ? void 0 : e.message}`,
                  details: `${(r = e === null || e === void 0 ? void 0 : e.stack) !== null && r !== void 0 ? r : ""}`,
                  hint: "",
                  code: `${(s = e === null || e === void 0 ? void 0 : e.code) !== null && s !== void 0 ? s : ""}`,
                },
                data: null,
                count: null,
                status: 0,
                statusText: "",
              };
            });
          }
          return s.then(e, t);
        }
      }
      t["default"] = PostgrestBuilder;
    },
    16193: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const n = s(r(14253));
      const o = s(r(6377));
      const i = r(88258);
      class PostgrestClient {
        constructor(e, { headers: t = {}, schema: r, fetch: s } = {}) {
          this.url = e;
          this.headers = Object.assign(Object.assign({}, i.DEFAULT_HEADERS), t);
          this.schemaName = r;
          this.fetch = s;
        }
        from(e) {
          const t = new URL(`${this.url}/${e}`);
          return new n.default(t, { headers: Object.assign({}, this.headers), schema: this.schemaName, fetch: this.fetch });
        }
        schema(e) {
          return new PostgrestClient(this.url, { headers: this.headers, schema: e, fetch: this.fetch });
        }
        rpc(e, t = {}, { head: r = false, get: s = false, count: n } = {}) {
          let i;
          const a = new URL(`${this.url}/rpc/${e}`);
          let A;
          if (r || s) {
            i = r ? "HEAD" : "GET";
            Object.entries(t)
              .filter(([e, t]) => t !== undefined)
              .map(([e, t]) => [e, Array.isArray(t) ? `{${t.join(",")}}` : `${t}`])
              .forEach(([e, t]) => {
                a.searchParams.append(e, t);
              });
          } else {
            i = "POST";
            A = t;
          }
          const l = Object.assign({}, this.headers);
          if (n) {
            l["Prefer"] = `count=${n}`;
          }
          return new o.default({ method: i, url: a, headers: l, schema: this.schemaName, body: A, fetch: this.fetch, allowEmpty: false });
        }
      }
      t["default"] = PostgrestClient;
    },
    58154: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      class PostgrestError extends Error {
        constructor(e) {
          super(e.message);
          this.name = "PostgrestError";
          this.details = e.details;
          this.hint = e.hint;
          this.code = e.code;
        }
      }
      t["default"] = PostgrestError;
    },
    6377: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const n = s(r(77725));
      class PostgrestFilterBuilder extends n.default {
        eq(e, t) {
          this.url.searchParams.append(e, `eq.${t}`);
          return this;
        }
        neq(e, t) {
          this.url.searchParams.append(e, `neq.${t}`);
          return this;
        }
        gt(e, t) {
          this.url.searchParams.append(e, `gt.${t}`);
          return this;
        }
        gte(e, t) {
          this.url.searchParams.append(e, `gte.${t}`);
          return this;
        }
        lt(e, t) {
          this.url.searchParams.append(e, `lt.${t}`);
          return this;
        }
        lte(e, t) {
          this.url.searchParams.append(e, `lte.${t}`);
          return this;
        }
        like(e, t) {
          this.url.searchParams.append(e, `like.${t}`);
          return this;
        }
        likeAllOf(e, t) {
          this.url.searchParams.append(e, `like(all).{${t.join(",")}}`);
          return this;
        }
        likeAnyOf(e, t) {
          this.url.searchParams.append(e, `like(any).{${t.join(",")}}`);
          return this;
        }
        ilike(e, t) {
          this.url.searchParams.append(e, `ilike.${t}`);
          return this;
        }
        ilikeAllOf(e, t) {
          this.url.searchParams.append(e, `ilike(all).{${t.join(",")}}`);
          return this;
        }
        ilikeAnyOf(e, t) {
          this.url.searchParams.append(e, `ilike(any).{${t.join(",")}}`);
          return this;
        }
        is(e, t) {
          this.url.searchParams.append(e, `is.${t}`);
          return this;
        }
        in(e, t) {
          const r = Array.from(new Set(t))
            .map((e) => {
              if (typeof e === "string" && new RegExp("[,()]").test(e)) return `"${e}"`;
              else return `${e}`;
            })
            .join(",");
          this.url.searchParams.append(e, `in.(${r})`);
          return this;
        }
        contains(e, t) {
          if (typeof t === "string") {
            this.url.searchParams.append(e, `cs.${t}`);
          } else if (Array.isArray(t)) {
            this.url.searchParams.append(e, `cs.{${t.join(",")}}`);
          } else {
            this.url.searchParams.append(e, `cs.${JSON.stringify(t)}`);
          }
          return this;
        }
        containedBy(e, t) {
          if (typeof t === "string") {
            this.url.searchParams.append(e, `cd.${t}`);
          } else if (Array.isArray(t)) {
            this.url.searchParams.append(e, `cd.{${t.join(",")}}`);
          } else {
            this.url.searchParams.append(e, `cd.${JSON.stringify(t)}`);
          }
          return this;
        }
        rangeGt(e, t) {
          this.url.searchParams.append(e, `sr.${t}`);
          return this;
        }
        rangeGte(e, t) {
          this.url.searchParams.append(e, `nxl.${t}`);
          return this;
        }
        rangeLt(e, t) {
          this.url.searchParams.append(e, `sl.${t}`);
          return this;
        }
        rangeLte(e, t) {
          this.url.searchParams.append(e, `nxr.${t}`);
          return this;
        }
        rangeAdjacent(e, t) {
          this.url.searchParams.append(e, `adj.${t}`);
          return this;
        }
        overlaps(e, t) {
          if (typeof t === "string") {
            this.url.searchParams.append(e, `ov.${t}`);
          } else {
            this.url.searchParams.append(e, `ov.{${t.join(",")}}`);
          }
          return this;
        }
        textSearch(e, t, { config: r, type: s } = {}) {
          let n = "";
          if (s === "plain") {
            n = "pl";
          } else if (s === "phrase") {
            n = "ph";
          } else if (s === "websearch") {
            n = "w";
          }
          const o = r === undefined ? "" : `(${r})`;
          this.url.searchParams.append(e, `${n}fts${o}.${t}`);
          return this;
        }
        match(e) {
          Object.entries(e).forEach(([e, t]) => {
            this.url.searchParams.append(e, `eq.${t}`);
          });
          return this;
        }
        not(e, t, r) {
          this.url.searchParams.append(e, `not.${t}.${r}`);
          return this;
        }
        or(e, { foreignTable: t, referencedTable: r = t } = {}) {
          const s = r ? `${r}.or` : "or";
          this.url.searchParams.append(s, `(${e})`);
          return this;
        }
        filter(e, t, r) {
          this.url.searchParams.append(e, `${t}.${r}`);
          return this;
        }
      }
      t["default"] = PostgrestFilterBuilder;
    },
    14253: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const n = s(r(6377));
      class PostgrestQueryBuilder {
        constructor(e, { headers: t = {}, schema: r, fetch: s }) {
          this.url = e;
          this.headers = t;
          this.schema = r;
          this.fetch = s;
        }
        select(e, { head: t = false, count: r } = {}) {
          const s = t ? "HEAD" : "GET";
          let o = false;
          const i = (e !== null && e !== void 0 ? e : "*")
            .split("")
            .map((e) => {
              if (/\s/.test(e) && !o) {
                return "";
              }
              if (e === '"') {
                o = !o;
              }
              return e;
            })
            .join("");
          this.url.searchParams.set("select", i);
          if (r) {
            this.headers["Prefer"] = `count=${r}`;
          }
          return new n.default({ method: s, url: this.url, headers: this.headers, schema: this.schema, fetch: this.fetch, allowEmpty: false });
        }
        insert(e, { count: t, defaultToNull: r = true } = {}) {
          const s = "POST";
          const o = [];
          if (this.headers["Prefer"]) {
            o.push(this.headers["Prefer"]);
          }
          if (t) {
            o.push(`count=${t}`);
          }
          if (!r) {
            o.push("missing=default");
          }
          this.headers["Prefer"] = o.join(",");
          if (Array.isArray(e)) {
            const t = e.reduce((e, t) => e.concat(Object.keys(t)), []);
            if (t.length > 0) {
              const e = [...new Set(t)].map((e) => `"${e}"`);
              this.url.searchParams.set("columns", e.join(","));
            }
          }
          return new n.default({ method: s, url: this.url, headers: this.headers, schema: this.schema, body: e, fetch: this.fetch, allowEmpty: false });
        }
        upsert(e, { onConflict: t, ignoreDuplicates: r = false, count: s, defaultToNull: o = true } = {}) {
          const i = "POST";
          const a = [`resolution=${r ? "ignore" : "merge"}-duplicates`];
          if (t !== undefined) this.url.searchParams.set("on_conflict", t);
          if (this.headers["Prefer"]) {
            a.push(this.headers["Prefer"]);
          }
          if (s) {
            a.push(`count=${s}`);
          }
          if (!o) {
            a.push("missing=default");
          }
          this.headers["Prefer"] = a.join(",");
          if (Array.isArray(e)) {
            const t = e.reduce((e, t) => e.concat(Object.keys(t)), []);
            if (t.length > 0) {
              const e = [...new Set(t)].map((e) => `"${e}"`);
              this.url.searchParams.set("columns", e.join(","));
            }
          }
          return new n.default({ method: i, url: this.url, headers: this.headers, schema: this.schema, body: e, fetch: this.fetch, allowEmpty: false });
        }
        update(e, { count: t } = {}) {
          const r = "PATCH";
          const s = [];
          if (this.headers["Prefer"]) {
            s.push(this.headers["Prefer"]);
          }
          if (t) {
            s.push(`count=${t}`);
          }
          this.headers["Prefer"] = s.join(",");
          return new n.default({ method: r, url: this.url, headers: this.headers, schema: this.schema, body: e, fetch: this.fetch, allowEmpty: false });
        }
        delete({ count: e } = {}) {
          const t = "DELETE";
          const r = [];
          if (e) {
            r.push(`count=${e}`);
          }
          if (this.headers["Prefer"]) {
            r.unshift(this.headers["Prefer"]);
          }
          this.headers["Prefer"] = r.join(",");
          return new n.default({ method: t, url: this.url, headers: this.headers, schema: this.schema, fetch: this.fetch, allowEmpty: false });
        }
      }
      t["default"] = PostgrestQueryBuilder;
    },
    77725: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const n = s(r(41455));
      class PostgrestTransformBuilder extends n.default {
        select(e) {
          let t = false;
          const r = (e !== null && e !== void 0 ? e : "*")
            .split("")
            .map((e) => {
              if (/\s/.test(e) && !t) {
                return "";
              }
              if (e === '"') {
                t = !t;
              }
              return e;
            })
            .join("");
          this.url.searchParams.set("select", r);
          if (this.headers["Prefer"]) {
            this.headers["Prefer"] += ",";
          }
          this.headers["Prefer"] += "return=representation";
          return this;
        }
        order(e, { ascending: t = true, nullsFirst: r, foreignTable: s, referencedTable: n = s } = {}) {
          const o = n ? `${n}.order` : "order";
          const i = this.url.searchParams.get(o);
          this.url.searchParams.set(o, `${i ? `${i},` : ""}${e}.${t ? "asc" : "desc"}${r === undefined ? "" : r ? ".nullsfirst" : ".nullslast"}`);
          return this;
        }
        limit(e, { foreignTable: t, referencedTable: r = t } = {}) {
          const s = typeof r === "undefined" ? "limit" : `${r}.limit`;
          this.url.searchParams.set(s, `${e}`);
          return this;
        }
        range(e, t, { foreignTable: r, referencedTable: s = r } = {}) {
          const n = typeof s === "undefined" ? "offset" : `${s}.offset`;
          const o = typeof s === "undefined" ? "limit" : `${s}.limit`;
          this.url.searchParams.set(n, `${e}`);
          this.url.searchParams.set(o, `${t - e + 1}`);
          return this;
        }
        abortSignal(e) {
          this.signal = e;
          return this;
        }
        single() {
          this.headers["Accept"] = "application/vnd.pgrst.object+json";
          return this;
        }
        maybeSingle() {
          if (this.method === "GET") {
            this.headers["Accept"] = "application/json";
          } else {
            this.headers["Accept"] = "application/vnd.pgrst.object+json";
          }
          this.isMaybeSingle = true;
          return this;
        }
        csv() {
          this.headers["Accept"] = "text/csv";
          return this;
        }
        geojson() {
          this.headers["Accept"] = "application/geo+json";
          return this;
        }
        explain({ analyze: e = false, verbose: t = false, settings: r = false, buffers: s = false, wal: n = false, format: o = "text" } = {}) {
          var i;
          const a = [e ? "analyze" : null, t ? "verbose" : null, r ? "settings" : null, s ? "buffers" : null, n ? "wal" : null].filter(Boolean).join("|");
          const A = (i = this.headers["Accept"]) !== null && i !== void 0 ? i : "application/json";
          this.headers["Accept"] = `application/vnd.pgrst.plan+${o}; for="${A}"; options=${a};`;
          if (o === "json") return this;
          else return this;
        }
        rollback() {
          var e;
          if (((e = this.headers["Prefer"]) !== null && e !== void 0 ? e : "").trim().length > 0) {
            this.headers["Prefer"] += ",tx=rollback";
          } else {
            this.headers["Prefer"] = "tx=rollback";
          }
          return this;
        }
        returns() {
          return this;
        }
      }
      t["default"] = PostgrestTransformBuilder;
    },
    88258: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.DEFAULT_HEADERS = void 0;
      const s = r(42799);
      t.DEFAULT_HEADERS = { "X-Client-Info": `postgrest-js/${s.version}` };
    },
    60927: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.PostgrestBuilder = t.PostgrestTransformBuilder = t.PostgrestFilterBuilder = t.PostgrestQueryBuilder = t.PostgrestClient = void 0;
      var n = r(16193);
      Object.defineProperty(t, "PostgrestClient", {
        enumerable: true,
        get: function () {
          return s(n).default;
        },
      });
      var o = r(14253);
      Object.defineProperty(t, "PostgrestQueryBuilder", {
        enumerable: true,
        get: function () {
          return s(o).default;
        },
      });
      var i = r(6377);
      Object.defineProperty(t, "PostgrestFilterBuilder", {
        enumerable: true,
        get: function () {
          return s(i).default;
        },
      });
      var a = r(77725);
      Object.defineProperty(t, "PostgrestTransformBuilder", {
        enumerable: true,
        get: function () {
          return s(a).default;
        },
      });
      var A = r(41455);
      Object.defineProperty(t, "PostgrestBuilder", {
        enumerable: true,
        get: function () {
          return s(A).default;
        },
      });
    },
    42799: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.version = void 0;
      t.version = "1.15.2";
    },
    38093: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.prototype.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      var i =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.REALTIME_CHANNEL_STATES = t.REALTIME_SUBSCRIBE_STATES = t.REALTIME_LISTEN_TYPES = t.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = void 0;
      const a = r(29680);
      const A = i(r(49333));
      const l = i(r(99920));
      const c = i(r(98493));
      const d = o(r(93429));
      var p;
      (function (e) {
        e["ALL"] = "*";
        e["INSERT"] = "INSERT";
        e["UPDATE"] = "UPDATE";
        e["DELETE"] = "DELETE";
      })((p = t.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (t.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {})));
      var u;
      (function (e) {
        e["BROADCAST"] = "broadcast";
        e["PRESENCE"] = "presence";
        e["POSTGRES_CHANGES"] = "postgres_changes";
      })((u = t.REALTIME_LISTEN_TYPES || (t.REALTIME_LISTEN_TYPES = {})));
      var g;
      (function (e) {
        e["SUBSCRIBED"] = "SUBSCRIBED";
        e["TIMED_OUT"] = "TIMED_OUT";
        e["CLOSED"] = "CLOSED";
        e["CHANNEL_ERROR"] = "CHANNEL_ERROR";
      })((g = t.REALTIME_SUBSCRIBE_STATES || (t.REALTIME_SUBSCRIBE_STATES = {})));
      t.REALTIME_CHANNEL_STATES = a.CHANNEL_STATES;
      class RealtimeChannel {
        constructor(e, t = { config: {} }, r) {
          this.topic = e;
          this.params = t;
          this.socket = r;
          this.bindings = {};
          this.state = a.CHANNEL_STATES.closed;
          this.joinedOnce = false;
          this.pushBuffer = [];
          this.subTopic = e.replace(/^realtime:/i, "");
          this.params.config = Object.assign({ broadcast: { ack: false, self: false }, presence: { key: "" } }, t.config);
          this.timeout = this.socket.timeout;
          this.joinPush = new A.default(this, a.CHANNEL_EVENTS.join, this.params, this.timeout);
          this.rejoinTimer = new l.default(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);
          this.joinPush.receive("ok", () => {
            this.state = a.CHANNEL_STATES.joined;
            this.rejoinTimer.reset();
            this.pushBuffer.forEach((e) => e.send());
            this.pushBuffer = [];
          });
          this._onClose(() => {
            this.rejoinTimer.reset();
            this.socket.log("channel", `close ${this.topic} ${this._joinRef()}`);
            this.state = a.CHANNEL_STATES.closed;
            this.socket._remove(this);
          });
          this._onError((e) => {
            if (this._isLeaving() || this._isClosed()) {
              return;
            }
            this.socket.log("channel", `error ${this.topic}`, e);
            this.state = a.CHANNEL_STATES.errored;
            this.rejoinTimer.scheduleTimeout();
          });
          this.joinPush.receive("timeout", () => {
            if (!this._isJoining()) {
              return;
            }
            this.socket.log("channel", `timeout ${this.topic}`, this.joinPush.timeout);
            this.state = a.CHANNEL_STATES.errored;
            this.rejoinTimer.scheduleTimeout();
          });
          this._on(a.CHANNEL_EVENTS.reply, {}, (e, t) => {
            this._trigger(this._replyEventName(t), e);
          });
          this.presence = new c.default(this);
          this.broadcastEndpointURL = this._broadcastEndpointURL();
        }
        subscribe(e, t = this.timeout) {
          var r, s;
          if (!this.socket.isConnected()) {
            this.socket.connect();
          }
          if (this.joinedOnce) {
            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;
          } else {
            const {
              config: { broadcast: n, presence: o },
            } = this.params;
            this._onError((t) => e && e("CHANNEL_ERROR", t));
            this._onClose(() => e && e("CLOSED"));
            const i = {};
            const a = {
              broadcast: n,
              presence: o,
              postgres_changes:
                (s = (r = this.bindings.postgres_changes) === null || r === void 0 ? void 0 : r.map((e) => e.filter)) !== null && s !== void 0 ? s : [],
            };
            if (this.socket.accessToken) {
              i.access_token = this.socket.accessToken;
            }
            this.updateJoinPayload(Object.assign({ config: a }, i));
            this.joinedOnce = true;
            this._rejoin(t);
            this.joinPush
              .receive("ok", ({ postgres_changes: t }) => {
                var r;
                this.socket.accessToken && this.socket.setAuth(this.socket.accessToken);
                if (t === undefined) {
                  e && e("SUBSCRIBED");
                  return;
                } else {
                  const s = this.bindings.postgres_changes;
                  const n = (r = s === null || s === void 0 ? void 0 : s.length) !== null && r !== void 0 ? r : 0;
                  const o = [];
                  for (let r = 0; r < n; r++) {
                    const n = s[r];
                    const {
                      filter: { event: i, schema: a, table: A, filter: l },
                    } = n;
                    const c = t && t[r];
                    if (c && c.event === i && c.schema === a && c.table === A && c.filter === l) {
                      o.push(Object.assign(Object.assign({}, n), { id: c.id }));
                    } else {
                      this.unsubscribe();
                      e && e("CHANNEL_ERROR", new Error("mismatch between server and client bindings for postgres changes"));
                      return;
                    }
                  }
                  this.bindings.postgres_changes = o;
                  e && e("SUBSCRIBED");
                  return;
                }
              })
              .receive("error", (t) => {
                e && e("CHANNEL_ERROR", new Error(JSON.stringify(Object.values(t).join(", ") || "error")));
                return;
              })
              .receive("timeout", () => {
                e && e("TIMED_OUT");
                return;
              });
          }
          return this;
        }
        presenceState() {
          return this.presence.state;
        }
        async track(e, t = {}) {
          return await this.send({ type: "presence", event: "track", payload: e }, t.timeout || this.timeout);
        }
        async untrack(e = {}) {
          return await this.send({ type: "presence", event: "untrack" }, e);
        }
        on(e, t, r) {
          return this._on(e, t, r);
        }
        async send(e, t = {}) {
          var r, s;
          if (!this._canPush() && e.type === "broadcast") {
            const { event: n, payload: o } = e;
            const i = {
              method: "POST",
              headers: { apikey: (r = this.socket.apiKey) !== null && r !== void 0 ? r : "", "Content-Type": "application/json" },
              body: JSON.stringify({ messages: [{ topic: this.subTopic, event: n, payload: o }] }),
            };
            try {
              const e = await this._fetchWithTimeout(this.broadcastEndpointURL, i, (s = t.timeout) !== null && s !== void 0 ? s : this.timeout);
              if (e.ok) {
                return "ok";
              } else {
                return "error";
              }
            } catch (e) {
              if (e.name === "AbortError") {
                return "timed out";
              } else {
                return "error";
              }
            }
          } else {
            return new Promise((r) => {
              var s, n, o;
              const i = this._push(e.type, e, t.timeout || this.timeout);
              if (
                e.type === "broadcast" &&
                !((o = (n = (s = this.params) === null || s === void 0 ? void 0 : s.config) === null || n === void 0 ? void 0 : n.broadcast) === null ||
                o === void 0
                  ? void 0
                  : o.ack)
              ) {
                r("ok");
              }
              i.receive("ok", () => r("ok"));
              i.receive("error", () => r("error"));
              i.receive("timeout", () => r("timed out"));
            });
          }
        }
        updateJoinPayload(e) {
          this.joinPush.updatePayload(e);
        }
        unsubscribe(e = this.timeout) {
          this.state = a.CHANNEL_STATES.leaving;
          const onClose = () => {
            this.socket.log("channel", `leave ${this.topic}`);
            this._trigger(a.CHANNEL_EVENTS.close, "leave", this._joinRef());
          };
          this.rejoinTimer.reset();
          this.joinPush.destroy();
          return new Promise((t) => {
            const r = new A.default(this, a.CHANNEL_EVENTS.leave, {}, e);
            r.receive("ok", () => {
              onClose();
              t("ok");
            })
              .receive("timeout", () => {
                onClose();
                t("timed out");
              })
              .receive("error", () => {
                t("error");
              });
            r.send();
            if (!this._canPush()) {
              r.trigger("ok", {});
            }
          });
        }
        _broadcastEndpointURL() {
          let e = this.socket.endPoint;
          e = e.replace(/^ws/i, "http");
          e = e.replace(/(\/socket\/websocket|\/socket|\/websocket)\/?$/i, "");
          return e.replace(/\/+$/, "") + "/api/broadcast";
        }
        async _fetchWithTimeout(e, t, r) {
          const s = new AbortController();
          const n = setTimeout(() => s.abort(), r);
          const o = await this.socket.fetch(e, Object.assign(Object.assign({}, t), { signal: s.signal }));
          clearTimeout(n);
          return o;
        }
        _push(e, t, r = this.timeout) {
          if (!this.joinedOnce) {
            throw `tried to push '${e}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;
          }
          let s = new A.default(this, e, t, r);
          if (this._canPush()) {
            s.send();
          } else {
            s.startTimeout();
            this.pushBuffer.push(s);
          }
          return s;
        }
        _onMessage(e, t, r) {
          return t;
        }
        _isMember(e) {
          return this.topic === e;
        }
        _joinRef() {
          return this.joinPush.ref;
        }
        _trigger(e, t, r) {
          var s, n;
          const o = e.toLocaleLowerCase();
          const { close: i, error: A, leave: l, join: c } = a.CHANNEL_EVENTS;
          const d = [i, A, l, c];
          if (r && d.indexOf(o) >= 0 && r !== this._joinRef()) {
            return;
          }
          let p = this._onMessage(o, t, r);
          if (t && !p) {
            throw "channel onMessage callbacks must return the payload, modified or unmodified";
          }
          if (["insert", "update", "delete"].includes(o)) {
            (s = this.bindings.postgres_changes) === null || s === void 0
              ? void 0
              : s
                  .filter((e) => {
                    var t, r, s;
                    return (
                      ((t = e.filter) === null || t === void 0 ? void 0 : t.event) === "*" ||
                      ((s = (r = e.filter) === null || r === void 0 ? void 0 : r.event) === null || s === void 0 ? void 0 : s.toLocaleLowerCase()) === o
                    );
                  })
                  .map((e) => e.callback(p, r));
          } else {
            (n = this.bindings[o]) === null || n === void 0
              ? void 0
              : n
                  .filter((e) => {
                    var r, s, n, i, a, A;
                    if (["broadcast", "presence", "postgres_changes"].includes(o)) {
                      if ("id" in e) {
                        const o = e.id;
                        const i = (r = e.filter) === null || r === void 0 ? void 0 : r.event;
                        return (
                          o &&
                          ((s = t.ids) === null || s === void 0 ? void 0 : s.includes(o)) &&
                          (i === "*" ||
                            (i === null || i === void 0 ? void 0 : i.toLocaleLowerCase()) ===
                              ((n = t.data) === null || n === void 0 ? void 0 : n.type.toLocaleLowerCase()))
                        );
                      } else {
                        const r =
                          (a = (i = e === null || e === void 0 ? void 0 : e.filter) === null || i === void 0 ? void 0 : i.event) === null || a === void 0
                            ? void 0
                            : a.toLocaleLowerCase();
                        return (
                          r === "*" || r === ((A = t === null || t === void 0 ? void 0 : t.event) === null || A === void 0 ? void 0 : A.toLocaleLowerCase())
                        );
                      }
                    } else {
                      return e.type.toLocaleLowerCase() === o;
                    }
                  })
                  .map((e) => {
                    if (typeof p === "object" && "ids" in p) {
                      const e = p.data;
                      const { schema: t, table: r, commit_timestamp: s, type: n, errors: o } = e;
                      const i = { schema: t, table: r, commit_timestamp: s, eventType: n, new: {}, old: {}, errors: o };
                      p = Object.assign(Object.assign({}, i), this._getPayloadRecords(e));
                    }
                    e.callback(p, r);
                  });
          }
        }
        _isClosed() {
          return this.state === a.CHANNEL_STATES.closed;
        }
        _isJoined() {
          return this.state === a.CHANNEL_STATES.joined;
        }
        _isJoining() {
          return this.state === a.CHANNEL_STATES.joining;
        }
        _isLeaving() {
          return this.state === a.CHANNEL_STATES.leaving;
        }
        _replyEventName(e) {
          return `chan_reply_${e}`;
        }
        _on(e, t, r) {
          const s = e.toLocaleLowerCase();
          const n = { type: s, filter: t, callback: r };
          if (this.bindings[s]) {
            this.bindings[s].push(n);
          } else {
            this.bindings[s] = [n];
          }
          return this;
        }
        _off(e, t) {
          const r = e.toLocaleLowerCase();
          this.bindings[r] = this.bindings[r].filter((e) => {
            var s;
            return !(((s = e.type) === null || s === void 0 ? void 0 : s.toLocaleLowerCase()) === r && RealtimeChannel.isEqual(e.filter, t));
          });
          return this;
        }
        static isEqual(e, t) {
          if (Object.keys(e).length !== Object.keys(t).length) {
            return false;
          }
          for (const r in e) {
            if (e[r] !== t[r]) {
              return false;
            }
          }
          return true;
        }
        _rejoinUntilConnected() {
          this.rejoinTimer.scheduleTimeout();
          if (this.socket.isConnected()) {
            this._rejoin();
          }
        }
        _onClose(e) {
          this._on(a.CHANNEL_EVENTS.close, {}, e);
        }
        _onError(e) {
          this._on(a.CHANNEL_EVENTS.error, {}, (t) => e(t));
        }
        _canPush() {
          return this.socket.isConnected() && this._isJoined();
        }
        _rejoin(e = this.timeout) {
          if (this._isLeaving()) {
            return;
          }
          this.socket._leaveOpenTopic(this.topic);
          this.state = a.CHANNEL_STATES.joining;
          this.joinPush.resend(e);
        }
        _getPayloadRecords(e) {
          const t = { new: {}, old: {} };
          if (e.type === "INSERT" || e.type === "UPDATE") {
            t.new = d.convertChangeData(e.columns, e.record);
          }
          if (e.type === "UPDATE" || e.type === "DELETE") {
            t.old = d.convertChangeData(e.columns, e.old_record);
          }
          return t;
        }
      }
      t["default"] = RealtimeChannel;
    },
    73955: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.prototype.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      var i =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const a = r(29680);
      const A = i(r(99920));
      const l = i(r(72049));
      const c = i(r(38093));
      const noop = () => {};
      const d = typeof WebSocket !== "undefined";
      class RealtimeClient {
        constructor(e, t) {
          var s;
          this.accessToken = null;
          this.apiKey = null;
          this.channels = [];
          this.endPoint = "";
          this.headers = a.DEFAULT_HEADERS;
          this.params = {};
          this.timeout = a.DEFAULT_TIMEOUT;
          this.heartbeatIntervalMs = 3e4;
          this.heartbeatTimer = undefined;
          this.pendingHeartbeatRef = null;
          this.ref = 0;
          this.logger = noop;
          this.conn = null;
          this.sendBuffer = [];
          this.serializer = new l.default();
          this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] };
          this._resolveFetch = (e) => {
            let t;
            if (e) {
              t = e;
            } else if (typeof fetch === "undefined") {
              t = (...e) =>
                Promise.resolve()
                  .then(() => o(r(83318)))
                  .then(({ default: t }) => t(...e));
            } else {
              t = fetch;
            }
            return (...e) => t(...e);
          };
          this.endPoint = `${e}/${a.TRANSPORTS.websocket}`;
          if (t === null || t === void 0 ? void 0 : t.transport) {
            this.transport = t.transport;
          } else {
            this.transport = null;
          }
          if (t === null || t === void 0 ? void 0 : t.params) this.params = t.params;
          if (t === null || t === void 0 ? void 0 : t.headers) this.headers = Object.assign(Object.assign({}, this.headers), t.headers);
          if (t === null || t === void 0 ? void 0 : t.timeout) this.timeout = t.timeout;
          if (t === null || t === void 0 ? void 0 : t.logger) this.logger = t.logger;
          if (t === null || t === void 0 ? void 0 : t.heartbeatIntervalMs) this.heartbeatIntervalMs = t.heartbeatIntervalMs;
          const n = (s = t === null || t === void 0 ? void 0 : t.params) === null || s === void 0 ? void 0 : s.apikey;
          if (n) {
            this.accessToken = n;
            this.apiKey = n;
          }
          this.reconnectAfterMs = (t === null || t === void 0 ? void 0 : t.reconnectAfterMs) ? t.reconnectAfterMs : (e) => [1e3, 2e3, 5e3, 1e4][e - 1] || 1e4;
          this.encode = (t === null || t === void 0 ? void 0 : t.encode) ? t.encode : (e, t) => t(JSON.stringify(e));
          this.decode = (t === null || t === void 0 ? void 0 : t.decode) ? t.decode : this.serializer.decode.bind(this.serializer);
          this.reconnectTimer = new A.default(async () => {
            this.disconnect();
            this.connect();
          }, this.reconnectAfterMs);
          this.fetch = this._resolveFetch(t === null || t === void 0 ? void 0 : t.fetch);
        }
        connect() {
          if (this.conn) {
            return;
          }
          if (this.transport) {
            this.conn = new this.transport(this._endPointURL(), undefined, { headers: this.headers });
            return;
          }
          if (d) {
            this.conn = new WebSocket(this._endPointURL());
            this.setupConnection();
            return;
          }
          this.conn = new WSWebSocketDummy(this._endPointURL(), undefined, {
            close: () => {
              this.conn = null;
            },
          });
          Promise.resolve()
            .then(() => o(r(11354)))
            .then(({ default: e }) => {
              this.conn = new e(this._endPointURL(), undefined, { headers: this.headers });
              this.setupConnection();
            });
        }
        disconnect(e, t) {
          if (this.conn) {
            this.conn.onclose = function () {};
            if (e) {
              this.conn.close(e, t !== null && t !== void 0 ? t : "");
            } else {
              this.conn.close();
            }
            this.conn = null;
            this.heartbeatTimer && clearInterval(this.heartbeatTimer);
            this.reconnectTimer.reset();
          }
        }
        getChannels() {
          return this.channels;
        }
        async removeChannel(e) {
          const t = await e.unsubscribe();
          if (this.channels.length === 0) {
            this.disconnect();
          }
          return t;
        }
        async removeAllChannels() {
          const e = await Promise.all(this.channels.map((e) => e.unsubscribe()));
          this.disconnect();
          return e;
        }
        log(e, t, r) {
          this.logger(e, t, r);
        }
        connectionState() {
          switch (this.conn && this.conn.readyState) {
            case a.SOCKET_STATES.connecting:
              return a.CONNECTION_STATE.Connecting;
            case a.SOCKET_STATES.open:
              return a.CONNECTION_STATE.Open;
            case a.SOCKET_STATES.closing:
              return a.CONNECTION_STATE.Closing;
            default:
              return a.CONNECTION_STATE.Closed;
          }
        }
        isConnected() {
          return this.connectionState() === a.CONNECTION_STATE.Open;
        }
        channel(e, t = { config: {} }) {
          const r = new c.default(`realtime:${e}`, t, this);
          this.channels.push(r);
          return r;
        }
        push(e) {
          const { topic: t, event: r, payload: s, ref: n } = e;
          const callback = () => {
            this.encode(e, (e) => {
              var t;
              (t = this.conn) === null || t === void 0 ? void 0 : t.send(e);
            });
          };
          this.log("push", `${t} ${r} (${n})`, s);
          if (this.isConnected()) {
            callback();
          } else {
            this.sendBuffer.push(callback);
          }
        }
        setAuth(e) {
          this.accessToken = e;
          this.channels.forEach((t) => {
            e && t.updateJoinPayload({ access_token: e });
            if (t.joinedOnce && t._isJoined()) {
              t._push(a.CHANNEL_EVENTS.access_token, { access_token: e });
            }
          });
        }
        _makeRef() {
          let e = this.ref + 1;
          if (e === this.ref) {
            this.ref = 0;
          } else {
            this.ref = e;
          }
          return this.ref.toString();
        }
        _leaveOpenTopic(e) {
          let t = this.channels.find((t) => t.topic === e && (t._isJoined() || t._isJoining()));
          if (t) {
            this.log("transport", `leaving duplicate topic "${e}"`);
            t.unsubscribe();
          }
        }
        _remove(e) {
          this.channels = this.channels.filter((t) => t._joinRef() !== e._joinRef());
        }
        setupConnection() {
          if (this.conn) {
            this.conn.binaryType = "arraybuffer";
            this.conn.onopen = () => this._onConnOpen();
            this.conn.onerror = (e) => this._onConnError(e);
            this.conn.onmessage = (e) => this._onConnMessage(e);
            this.conn.onclose = (e) => this._onConnClose(e);
          }
        }
        _endPointURL() {
          return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: a.VSN }));
        }
        _onConnMessage(e) {
          this.decode(e.data, (e) => {
            let { topic: t, event: r, payload: s, ref: n } = e;
            if ((n && n === this.pendingHeartbeatRef) || r === (s === null || s === void 0 ? void 0 : s.type)) {
              this.pendingHeartbeatRef = null;
            }
            this.log("receive", `${s.status || ""} ${t} ${r} ${(n && "(" + n + ")") || ""}`, s);
            this.channels.filter((e) => e._isMember(t)).forEach((e) => e._trigger(r, s, n));
            this.stateChangeCallbacks.message.forEach((t) => t(e));
          });
        }
        _onConnOpen() {
          this.log("transport", `connected to ${this._endPointURL()}`);
          this._flushSendBuffer();
          this.reconnectTimer.reset();
          this.heartbeatTimer && clearInterval(this.heartbeatTimer);
          this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);
          this.stateChangeCallbacks.open.forEach((e) => e());
        }
        _onConnClose(e) {
          this.log("transport", "close", e);
          this._triggerChanError();
          this.heartbeatTimer && clearInterval(this.heartbeatTimer);
          this.reconnectTimer.scheduleTimeout();
          this.stateChangeCallbacks.close.forEach((t) => t(e));
        }
        _onConnError(e) {
          this.log("transport", e.message);
          this._triggerChanError();
          this.stateChangeCallbacks.error.forEach((t) => t(e));
        }
        _triggerChanError() {
          this.channels.forEach((e) => e._trigger(a.CHANNEL_EVENTS.error));
        }
        _appendParams(e, t) {
          if (Object.keys(t).length === 0) {
            return e;
          }
          const r = e.match(/\?/) ? "&" : "?";
          const s = new URLSearchParams(t);
          return `${e}${r}${s}`;
        }
        _flushSendBuffer() {
          if (this.isConnected() && this.sendBuffer.length > 0) {
            this.sendBuffer.forEach((e) => e());
            this.sendBuffer = [];
          }
        }
        _sendHeartbeat() {
          var e;
          if (!this.isConnected()) {
            return;
          }
          if (this.pendingHeartbeatRef) {
            this.pendingHeartbeatRef = null;
            this.log("transport", "heartbeat timeout. Attempting to re-establish connection");
            (e = this.conn) === null || e === void 0 ? void 0 : e.close(a.WS_CLOSE_NORMAL, "hearbeat timeout");
            return;
          }
          this.pendingHeartbeatRef = this._makeRef();
          this.push({ topic: "phoenix", event: "heartbeat", payload: {}, ref: this.pendingHeartbeatRef });
          this.setAuth(this.accessToken);
        }
      }
      t["default"] = RealtimeClient;
      class WSWebSocketDummy {
        constructor(e, t, r) {
          this.binaryType = "arraybuffer";
          this.onclose = () => {};
          this.onerror = () => {};
          this.onmessage = () => {};
          this.onopen = () => {};
          this.readyState = a.SOCKET_STATES.connecting;
          this.send = () => {};
          this.url = null;
          this.url = e;
          this.close = r.close;
        }
      }
    },
    98493: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.REALTIME_PRESENCE_LISTEN_EVENTS = void 0;
      var r;
      (function (e) {
        e["SYNC"] = "sync";
        e["JOIN"] = "join";
        e["LEAVE"] = "leave";
      })((r = t.REALTIME_PRESENCE_LISTEN_EVENTS || (t.REALTIME_PRESENCE_LISTEN_EVENTS = {})));
      class RealtimePresence {
        constructor(e, t) {
          this.channel = e;
          this.state = {};
          this.pendingDiffs = [];
          this.joinRef = null;
          this.caller = { onJoin: () => {}, onLeave: () => {}, onSync: () => {} };
          const r = (t === null || t === void 0 ? void 0 : t.events) || { state: "presence_state", diff: "presence_diff" };
          this.channel._on(r.state, {}, (e) => {
            const { onJoin: t, onLeave: r, onSync: s } = this.caller;
            this.joinRef = this.channel._joinRef();
            this.state = RealtimePresence.syncState(this.state, e, t, r);
            this.pendingDiffs.forEach((e) => {
              this.state = RealtimePresence.syncDiff(this.state, e, t, r);
            });
            this.pendingDiffs = [];
            s();
          });
          this.channel._on(r.diff, {}, (e) => {
            const { onJoin: t, onLeave: r, onSync: s } = this.caller;
            if (this.inPendingSyncState()) {
              this.pendingDiffs.push(e);
            } else {
              this.state = RealtimePresence.syncDiff(this.state, e, t, r);
              s();
            }
          });
          this.onJoin((e, t, r) => {
            this.channel._trigger("presence", { event: "join", key: e, currentPresences: t, newPresences: r });
          });
          this.onLeave((e, t, r) => {
            this.channel._trigger("presence", { event: "leave", key: e, currentPresences: t, leftPresences: r });
          });
          this.onSync(() => {
            this.channel._trigger("presence", { event: "sync" });
          });
        }
        static syncState(e, t, r, s) {
          const n = this.cloneDeep(e);
          const o = this.transformState(t);
          const i = {};
          const a = {};
          this.map(n, (e, t) => {
            if (!o[e]) {
              a[e] = t;
            }
          });
          this.map(o, (e, t) => {
            const r = n[e];
            if (r) {
              const s = t.map((e) => e.presence_ref);
              const n = r.map((e) => e.presence_ref);
              const o = t.filter((e) => n.indexOf(e.presence_ref) < 0);
              const A = r.filter((e) => s.indexOf(e.presence_ref) < 0);
              if (o.length > 0) {
                i[e] = o;
              }
              if (A.length > 0) {
                a[e] = A;
              }
            } else {
              i[e] = t;
            }
          });
          return this.syncDiff(n, { joins: i, leaves: a }, r, s);
        }
        static syncDiff(e, t, r, s) {
          const { joins: n, leaves: o } = { joins: this.transformState(t.joins), leaves: this.transformState(t.leaves) };
          if (!r) {
            r = () => {};
          }
          if (!s) {
            s = () => {};
          }
          this.map(n, (t, s) => {
            var n;
            const o = (n = e[t]) !== null && n !== void 0 ? n : [];
            e[t] = this.cloneDeep(s);
            if (o.length > 0) {
              const r = e[t].map((e) => e.presence_ref);
              const s = o.filter((e) => r.indexOf(e.presence_ref) < 0);
              e[t].unshift(...s);
            }
            r(t, o, s);
          });
          this.map(o, (t, r) => {
            let n = e[t];
            if (!n) return;
            const o = r.map((e) => e.presence_ref);
            n = n.filter((e) => o.indexOf(e.presence_ref) < 0);
            e[t] = n;
            s(t, n, r);
            if (n.length === 0) delete e[t];
          });
          return e;
        }
        static map(e, t) {
          return Object.getOwnPropertyNames(e).map((r) => t(r, e[r]));
        }
        static transformState(e) {
          e = this.cloneDeep(e);
          return Object.getOwnPropertyNames(e).reduce((t, r) => {
            const s = e[r];
            if ("metas" in s) {
              t[r] = s.metas.map((e) => {
                e["presence_ref"] = e["phx_ref"];
                delete e["phx_ref"];
                delete e["phx_ref_prev"];
                return e;
              });
            } else {
              t[r] = s;
            }
            return t;
          }, {});
        }
        static cloneDeep(e) {
          return JSON.parse(JSON.stringify(e));
        }
        onJoin(e) {
          this.caller.onJoin = e;
        }
        onLeave(e) {
          this.caller.onLeave = e;
        }
        onSync(e) {
          this.caller.onSync = e;
        }
        inPendingSyncState() {
          return !this.joinRef || this.joinRef !== this.channel._joinRef();
        }
      }
      t["default"] = RealtimePresence;
    },
    36209: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.prototype.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      var i =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.REALTIME_CHANNEL_STATES =
        t.REALTIME_SUBSCRIBE_STATES =
        t.REALTIME_PRESENCE_LISTEN_EVENTS =
        t.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT =
        t.REALTIME_LISTEN_TYPES =
        t.RealtimeClient =
        t.RealtimeChannel =
        t.RealtimePresence =
          void 0;
      const a = i(r(73955));
      t.RealtimeClient = a.default;
      const A = o(r(38093));
      t.RealtimeChannel = A.default;
      Object.defineProperty(t, "REALTIME_LISTEN_TYPES", {
        enumerable: true,
        get: function () {
          return A.REALTIME_LISTEN_TYPES;
        },
      });
      Object.defineProperty(t, "REALTIME_POSTGRES_CHANGES_LISTEN_EVENT", {
        enumerable: true,
        get: function () {
          return A.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;
        },
      });
      Object.defineProperty(t, "REALTIME_SUBSCRIBE_STATES", {
        enumerable: true,
        get: function () {
          return A.REALTIME_SUBSCRIBE_STATES;
        },
      });
      Object.defineProperty(t, "REALTIME_CHANNEL_STATES", {
        enumerable: true,
        get: function () {
          return A.REALTIME_CHANNEL_STATES;
        },
      });
      const l = o(r(98493));
      t.RealtimePresence = l.default;
      Object.defineProperty(t, "REALTIME_PRESENCE_LISTEN_EVENTS", {
        enumerable: true,
        get: function () {
          return l.REALTIME_PRESENCE_LISTEN_EVENTS;
        },
      });
    },
    29680: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.CONNECTION_STATE =
        t.TRANSPORTS =
        t.CHANNEL_EVENTS =
        t.CHANNEL_STATES =
        t.SOCKET_STATES =
        t.WS_CLOSE_NORMAL =
        t.DEFAULT_TIMEOUT =
        t.VSN =
        t.DEFAULT_HEADERS =
          void 0;
      const s = r(38889);
      t.DEFAULT_HEADERS = { "X-Client-Info": `realtime-js/${s.version}` };
      t.VSN = "1.0.0";
      t.DEFAULT_TIMEOUT = 1e4;
      t.WS_CLOSE_NORMAL = 1e3;
      var n;
      (function (e) {
        e[(e["connecting"] = 0)] = "connecting";
        e[(e["open"] = 1)] = "open";
        e[(e["closing"] = 2)] = "closing";
        e[(e["closed"] = 3)] = "closed";
      })((n = t.SOCKET_STATES || (t.SOCKET_STATES = {})));
      var o;
      (function (e) {
        e["closed"] = "closed";
        e["errored"] = "errored";
        e["joined"] = "joined";
        e["joining"] = "joining";
        e["leaving"] = "leaving";
      })((o = t.CHANNEL_STATES || (t.CHANNEL_STATES = {})));
      var i;
      (function (e) {
        e["close"] = "phx_close";
        e["error"] = "phx_error";
        e["join"] = "phx_join";
        e["reply"] = "phx_reply";
        e["leave"] = "phx_leave";
        e["access_token"] = "access_token";
      })((i = t.CHANNEL_EVENTS || (t.CHANNEL_EVENTS = {})));
      var a;
      (function (e) {
        e["websocket"] = "websocket";
      })((a = t.TRANSPORTS || (t.TRANSPORTS = {})));
      var A;
      (function (e) {
        e["Connecting"] = "connecting";
        e["Open"] = "open";
        e["Closing"] = "closing";
        e["Closed"] = "closed";
      })((A = t.CONNECTION_STATE || (t.CONNECTION_STATE = {})));
    },
    49333: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      const s = r(29680);
      class Push {
        constructor(e, t, r = {}, n = s.DEFAULT_TIMEOUT) {
          this.channel = e;
          this.event = t;
          this.payload = r;
          this.timeout = n;
          this.sent = false;
          this.timeoutTimer = undefined;
          this.ref = "";
          this.receivedResp = null;
          this.recHooks = [];
          this.refEvent = null;
        }
        resend(e) {
          this.timeout = e;
          this._cancelRefEvent();
          this.ref = "";
          this.refEvent = null;
          this.receivedResp = null;
          this.sent = false;
          this.send();
        }
        send() {
          if (this._hasReceived("timeout")) {
            return;
          }
          this.startTimeout();
          this.sent = true;
          this.channel.socket.push({ topic: this.channel.topic, event: this.event, payload: this.payload, ref: this.ref, join_ref: this.channel._joinRef() });
        }
        updatePayload(e) {
          this.payload = Object.assign(Object.assign({}, this.payload), e);
        }
        receive(e, t) {
          var r;
          if (this._hasReceived(e)) {
            t((r = this.receivedResp) === null || r === void 0 ? void 0 : r.response);
          }
          this.recHooks.push({ status: e, callback: t });
          return this;
        }
        startTimeout() {
          if (this.timeoutTimer) {
            return;
          }
          this.ref = this.channel.socket._makeRef();
          this.refEvent = this.channel._replyEventName(this.ref);
          const callback = (e) => {
            this._cancelRefEvent();
            this._cancelTimeout();
            this.receivedResp = e;
            this._matchReceive(e);
          };
          this.channel._on(this.refEvent, {}, callback);
          this.timeoutTimer = setTimeout(() => {
            this.trigger("timeout", {});
          }, this.timeout);
        }
        trigger(e, t) {
          if (this.refEvent) this.channel._trigger(this.refEvent, { status: e, response: t });
        }
        destroy() {
          this._cancelRefEvent();
          this._cancelTimeout();
        }
        _cancelRefEvent() {
          if (!this.refEvent) {
            return;
          }
          this.channel._off(this.refEvent, {});
        }
        _cancelTimeout() {
          clearTimeout(this.timeoutTimer);
          this.timeoutTimer = undefined;
        }
        _matchReceive({ status: e, response: t }) {
          this.recHooks.filter((t) => t.status === e).forEach((e) => e.callback(t));
        }
        _hasReceived(e) {
          return this.receivedResp && this.receivedResp.status === e;
        }
      }
      t["default"] = Push;
    },
    72049: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      class Serializer {
        constructor() {
          this.HEADER_LENGTH = 1;
        }
        decode(e, t) {
          if (e.constructor === ArrayBuffer) {
            return t(this._binaryDecode(e));
          }
          if (typeof e === "string") {
            return t(JSON.parse(e));
          }
          return t({});
        }
        _binaryDecode(e) {
          const t = new DataView(e);
          const r = new TextDecoder();
          return this._decodeBroadcast(e, t, r);
        }
        _decodeBroadcast(e, t, r) {
          const s = t.getUint8(1);
          const n = t.getUint8(2);
          let o = this.HEADER_LENGTH + 2;
          const i = r.decode(e.slice(o, o + s));
          o = o + s;
          const a = r.decode(e.slice(o, o + n));
          o = o + n;
          const A = JSON.parse(r.decode(e.slice(o, e.byteLength)));
          return { ref: null, topic: i, event: a, payload: A };
        }
      }
      t["default"] = Serializer;
    },
    99920: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      class Timer {
        constructor(e, t) {
          this.callback = e;
          this.timerCalc = t;
          this.timer = undefined;
          this.tries = 0;
          this.callback = e;
          this.timerCalc = t;
        }
        reset() {
          this.tries = 0;
          clearTimeout(this.timer);
        }
        scheduleTimeout() {
          clearTimeout(this.timer);
          this.timer = setTimeout(
            () => {
              this.tries = this.tries + 1;
              this.callback();
            },
            this.timerCalc(this.tries + 1)
          );
        }
      }
      t["default"] = Timer;
    },
    93429: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.toTimestampString = t.toArray = t.toJson = t.toNumber = t.toBoolean = t.convertCell = t.convertColumn = t.convertChangeData = t.PostgresTypes = void 0;
      var r;
      (function (e) {
        e["abstime"] = "abstime";
        e["bool"] = "bool";
        e["date"] = "date";
        e["daterange"] = "daterange";
        e["float4"] = "float4";
        e["float8"] = "float8";
        e["int2"] = "int2";
        e["int4"] = "int4";
        e["int4range"] = "int4range";
        e["int8"] = "int8";
        e["int8range"] = "int8range";
        e["json"] = "json";
        e["jsonb"] = "jsonb";
        e["money"] = "money";
        e["numeric"] = "numeric";
        e["oid"] = "oid";
        e["reltime"] = "reltime";
        e["text"] = "text";
        e["time"] = "time";
        e["timestamp"] = "timestamp";
        e["timestamptz"] = "timestamptz";
        e["timetz"] = "timetz";
        e["tsrange"] = "tsrange";
        e["tstzrange"] = "tstzrange";
      })((r = t.PostgresTypes || (t.PostgresTypes = {})));
      const convertChangeData = (e, r, s = {}) => {
        var n;
        const o = (n = s.skipTypes) !== null && n !== void 0 ? n : [];
        return Object.keys(r).reduce((s, n) => {
          s[n] = (0, t.convertColumn)(n, e, r, o);
          return s;
        }, {});
      };
      t.convertChangeData = convertChangeData;
      const convertColumn = (e, r, s, n) => {
        const o = r.find((t) => t.name === e);
        const i = o === null || o === void 0 ? void 0 : o.type;
        const a = s[e];
        if (i && !n.includes(i)) {
          return (0, t.convertCell)(i, a);
        }
        return noop(a);
      };
      t.convertColumn = convertColumn;
      const convertCell = (e, s) => {
        if (e.charAt(0) === "_") {
          const r = e.slice(1, e.length);
          return (0, t.toArray)(s, r);
        }
        switch (e) {
          case r.bool:
            return (0, t.toBoolean)(s);
          case r.float4:
          case r.float8:
          case r.int2:
          case r.int4:
          case r.int8:
          case r.numeric:
          case r.oid:
            return (0, t.toNumber)(s);
          case r.json:
          case r.jsonb:
            return (0, t.toJson)(s);
          case r.timestamp:
            return (0, t.toTimestampString)(s);
          case r.abstime:
          case r.date:
          case r.daterange:
          case r.int4range:
          case r.int8range:
          case r.money:
          case r.reltime:
          case r.text:
          case r.time:
          case r.timestamptz:
          case r.timetz:
          case r.tsrange:
          case r.tstzrange:
            return noop(s);
          default:
            return noop(s);
        }
      };
      t.convertCell = convertCell;
      const noop = (e) => e;
      const toBoolean = (e) => {
        switch (e) {
          case "t":
            return true;
          case "f":
            return false;
          default:
            return e;
        }
      };
      t.toBoolean = toBoolean;
      const toNumber = (e) => {
        if (typeof e === "string") {
          const t = parseFloat(e);
          if (!Number.isNaN(t)) {
            return t;
          }
        }
        return e;
      };
      t.toNumber = toNumber;
      const toJson = (e) => {
        if (typeof e === "string") {
          try {
            return JSON.parse(e);
          } catch (t) {
            console.log(`JSON parse error: ${t}`);
            return e;
          }
        }
        return e;
      };
      t.toJson = toJson;
      const toArray = (e, r) => {
        if (typeof e !== "string") {
          return e;
        }
        const s = e.length - 1;
        const n = e[s];
        const o = e[0];
        if (o === "{" && n === "}") {
          let n;
          const o = e.slice(1, s);
          try {
            n = JSON.parse("[" + o + "]");
          } catch (e) {
            n = o ? o.split(",") : [];
          }
          return n.map((e) => (0, t.convertCell)(r, e));
        }
        return e;
      };
      t.toArray = toArray;
      const toTimestampString = (e) => {
        if (typeof e === "string") {
          return e.replace(" ", "T");
        }
        return e;
      };
      t.toTimestampString = toTimestampString;
    },
    38889: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.version = void 0;
      t.version = "2.9.5";
    },
    31373: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.StorageClient = void 0;
      const n = s(r(15384));
      const o = s(r(64788));
      class StorageClient extends o.default {
        constructor(e, t = {}, r) {
          super(e, t, r);
        }
        from(e) {
          return new n.default(this.url, this.headers, e, this.fetch);
        }
      }
      t.StorageClient = StorageClient;
    },
    71595: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.StorageClient = void 0;
      var o = r(31373);
      Object.defineProperty(t, "StorageClient", {
        enumerable: true,
        get: function () {
          return o.StorageClient;
        },
      });
      n(r(58362), t);
      n(r(9012), t);
    },
    28990: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.DEFAULT_HEADERS = void 0;
      const s = r(7827);
      t.DEFAULT_HEADERS = { "X-Client-Info": `storage-js/${s.version}` };
    },
    9012: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.StorageUnknownError = t.StorageApiError = t.isStorageError = t.StorageError = void 0;
      class StorageError extends Error {
        constructor(e) {
          super(e);
          this.__isStorageError = true;
          this.name = "StorageError";
        }
      }
      t.StorageError = StorageError;
      function isStorageError(e) {
        return typeof e === "object" && e !== null && "__isStorageError" in e;
      }
      t.isStorageError = isStorageError;
      class StorageApiError extends StorageError {
        constructor(e, t) {
          super(e);
          this.name = "StorageApiError";
          this.status = t;
        }
        toJSON() {
          return { name: this.name, message: this.message, status: this.status };
        }
      }
      t.StorageApiError = StorageApiError;
      class StorageUnknownError extends StorageError {
        constructor(e, t) {
          super(e);
          this.name = "StorageUnknownError";
          this.originalError = t;
        }
      }
      t.StorageUnknownError = StorageUnknownError;
    },
    43183: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.remove = t.put = t.post = t.get = void 0;
      const n = r(9012);
      const o = r(58954);
      const _getErrorMessage = (e) => e.msg || e.message || e.error_description || e.error || JSON.stringify(e);
      const handleError = (e, t) =>
        s(void 0, void 0, void 0, function* () {
          const r = yield (0, o.resolveResponse)();
          if (e instanceof r) {
            e.json()
              .then((r) => {
                t(new n.StorageApiError(_getErrorMessage(r), e.status || 500));
              })
              .catch((e) => {
                t(new n.StorageUnknownError(_getErrorMessage(e), e));
              });
          } else {
            t(new n.StorageUnknownError(_getErrorMessage(e), e));
          }
        });
      const _getRequestParams = (e, t, r, s) => {
        const n = { method: e, headers: (t === null || t === void 0 ? void 0 : t.headers) || {} };
        if (e === "GET") {
          return n;
        }
        n.headers = Object.assign({ "Content-Type": "application/json" }, t === null || t === void 0 ? void 0 : t.headers);
        n.body = JSON.stringify(s);
        return Object.assign(Object.assign({}, n), r);
      };
      function _handleRequest(e, t, r, n, o, i) {
        return s(this, void 0, void 0, function* () {
          return new Promise((s, a) => {
            e(r, _getRequestParams(t, n, o, i))
              .then((e) => {
                if (!e.ok) throw e;
                if (n === null || n === void 0 ? void 0 : n.noResolveJson) return e;
                return e.json();
              })
              .then((e) => s(e))
              .catch((e) => handleError(e, a));
          });
        });
      }
      function get(e, t, r, n) {
        return s(this, void 0, void 0, function* () {
          return _handleRequest(e, "GET", t, r, n);
        });
      }
      t.get = get;
      function post(e, t, r, n, o) {
        return s(this, void 0, void 0, function* () {
          return _handleRequest(e, "POST", t, n, o, r);
        });
      }
      t.post = post;
      function put(e, t, r, n, o) {
        return s(this, void 0, void 0, function* () {
          return _handleRequest(e, "PUT", t, n, o, r);
        });
      }
      t.put = put;
      function remove(e, t, r, n, o) {
        return s(this, void 0, void 0, function* () {
          return _handleRequest(e, "DELETE", t, n, o, r);
        });
      }
      t.remove = remove;
    },
    58954: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.prototype.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      var i =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.resolveResponse = t.resolveFetch = void 0;
      const resolveFetch = (e) => {
        let t;
        if (e) {
          t = e;
        } else if (typeof fetch === "undefined") {
          t = (...e) =>
            Promise.resolve()
              .then(() => o(r(83318)))
              .then(({ default: t }) => t(...e));
        } else {
          t = fetch;
        }
        return (...e) => t(...e);
      };
      t.resolveFetch = resolveFetch;
      const resolveResponse = () =>
        i(void 0, void 0, void 0, function* () {
          if (typeof Response === "undefined") {
            return (yield Promise.resolve().then(() => o(r(83318)))).Response;
          }
          return Response;
        });
      t.resolveResponse = resolveResponse;
    },
    58362: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
    },
    7827: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.version = void 0;
      t.version = "2.5.5";
    },
    64788: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const n = r(28990);
      const o = r(9012);
      const i = r(43183);
      const a = r(58954);
      class StorageBucketApi {
        constructor(e, t = {}, r) {
          this.url = e;
          this.headers = Object.assign(Object.assign({}, n.DEFAULT_HEADERS), t);
          this.fetch = (0, a.resolveFetch)(r);
        }
        listBuckets() {
          return s(this, void 0, void 0, function* () {
            try {
              const e = yield (0, i.get)(this.fetch, `${this.url}/bucket`, { headers: this.headers });
              return { data: e, error: null };
            } catch (e) {
              if ((0, o.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        getBucket(e) {
          return s(this, void 0, void 0, function* () {
            try {
              const t = yield (0, i.get)(this.fetch, `${this.url}/bucket/${e}`, { headers: this.headers });
              return { data: t, error: null };
            } catch (e) {
              if ((0, o.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        createBucket(e, t = { public: false }) {
          return s(this, void 0, void 0, function* () {
            try {
              const r = yield (0, i.post)(
                this.fetch,
                `${this.url}/bucket`,
                { id: e, name: e, public: t.public, file_size_limit: t.fileSizeLimit, allowed_mime_types: t.allowedMimeTypes },
                { headers: this.headers }
              );
              return { data: r, error: null };
            } catch (e) {
              if ((0, o.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        updateBucket(e, t) {
          return s(this, void 0, void 0, function* () {
            try {
              const r = yield (0, i.put)(
                this.fetch,
                `${this.url}/bucket/${e}`,
                { id: e, name: e, public: t.public, file_size_limit: t.fileSizeLimit, allowed_mime_types: t.allowedMimeTypes },
                { headers: this.headers }
              );
              return { data: r, error: null };
            } catch (e) {
              if ((0, o.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        emptyBucket(e) {
          return s(this, void 0, void 0, function* () {
            try {
              const t = yield (0, i.post)(this.fetch, `${this.url}/bucket/${e}/empty`, {}, { headers: this.headers });
              return { data: t, error: null };
            } catch (e) {
              if ((0, o.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        deleteBucket(e) {
          return s(this, void 0, void 0, function* () {
            try {
              const t = yield (0, i.remove)(this.fetch, `${this.url}/bucket/${e}`, {}, { headers: this.headers });
              return { data: t, error: null };
            } catch (e) {
              if ((0, o.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
      }
      t["default"] = StorageBucketApi;
    },
    15384: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const n = r(9012);
      const o = r(43183);
      const i = r(58954);
      const a = { limit: 100, offset: 0, sortBy: { column: "name", order: "asc" } };
      const A = { cacheControl: "3600", contentType: "text/plain;charset=UTF-8", upsert: false };
      class StorageFileApi {
        constructor(e, t = {}, r, s) {
          this.url = e;
          this.headers = t;
          this.bucketId = r;
          this.fetch = (0, i.resolveFetch)(s);
        }
        uploadOrUpdate(e, t, r, o) {
          return s(this, void 0, void 0, function* () {
            try {
              let s;
              const n = Object.assign(Object.assign({}, A), o);
              const i = Object.assign(Object.assign({}, this.headers), e === "POST" && { "x-upsert": String(n.upsert) });
              if (typeof Blob !== "undefined" && r instanceof Blob) {
                s = new FormData();
                s.append("cacheControl", n.cacheControl);
                s.append("", r);
              } else if (typeof FormData !== "undefined" && r instanceof FormData) {
                s = r;
                s.append("cacheControl", n.cacheControl);
              } else {
                s = r;
                i["cache-control"] = `max-age=${n.cacheControl}`;
                i["content-type"] = n.contentType;
              }
              const a = this._removeEmptyFolders(t);
              const l = this._getFinalPath(a);
              const c = yield this.fetch(
                `${this.url}/object/${l}`,
                Object.assign({ method: e, body: s, headers: i }, (n === null || n === void 0 ? void 0 : n.duplex) ? { duplex: n.duplex } : {})
              );
              const d = yield c.json();
              if (c.ok) {
                return { data: { path: a, id: d.Id, fullPath: d.Key }, error: null };
              } else {
                const e = d;
                return { data: null, error: e };
              }
            } catch (e) {
              if ((0, n.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        upload(e, t, r) {
          return s(this, void 0, void 0, function* () {
            return this.uploadOrUpdate("POST", e, t, r);
          });
        }
        uploadToSignedUrl(e, t, r, o) {
          return s(this, void 0, void 0, function* () {
            const s = this._removeEmptyFolders(e);
            const i = this._getFinalPath(s);
            const a = new URL(this.url + `/object/upload/sign/${i}`);
            a.searchParams.set("token", t);
            try {
              let e;
              const t = Object.assign({ upsert: A.upsert }, o);
              const n = Object.assign(Object.assign({}, this.headers), { "x-upsert": String(t.upsert) });
              if (typeof Blob !== "undefined" && r instanceof Blob) {
                e = new FormData();
                e.append("cacheControl", t.cacheControl);
                e.append("", r);
              } else if (typeof FormData !== "undefined" && r instanceof FormData) {
                e = r;
                e.append("cacheControl", t.cacheControl);
              } else {
                e = r;
                n["cache-control"] = `max-age=${t.cacheControl}`;
                n["content-type"] = t.contentType;
              }
              const i = yield this.fetch(a.toString(), { method: "PUT", body: e, headers: n });
              const l = yield i.json();
              if (i.ok) {
                return { data: { path: s, fullPath: l.Key }, error: null };
              } else {
                const e = l;
                return { data: null, error: e };
              }
            } catch (e) {
              if ((0, n.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        createSignedUploadUrl(e) {
          return s(this, void 0, void 0, function* () {
            try {
              let t = this._getFinalPath(e);
              const r = yield (0, o.post)(this.fetch, `${this.url}/object/upload/sign/${t}`, {}, { headers: this.headers });
              const s = new URL(this.url + r.url);
              const i = s.searchParams.get("token");
              if (!i) {
                throw new n.StorageError("No token returned by API");
              }
              return { data: { signedUrl: s.toString(), path: e, token: i }, error: null };
            } catch (e) {
              if ((0, n.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        update(e, t, r) {
          return s(this, void 0, void 0, function* () {
            return this.uploadOrUpdate("PUT", e, t, r);
          });
        }
        move(e, t) {
          return s(this, void 0, void 0, function* () {
            try {
              const r = yield (0, o.post)(
                this.fetch,
                `${this.url}/object/move`,
                { bucketId: this.bucketId, sourceKey: e, destinationKey: t },
                { headers: this.headers }
              );
              return { data: r, error: null };
            } catch (e) {
              if ((0, n.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        copy(e, t) {
          return s(this, void 0, void 0, function* () {
            try {
              const r = yield (0, o.post)(
                this.fetch,
                `${this.url}/object/copy`,
                { bucketId: this.bucketId, sourceKey: e, destinationKey: t },
                { headers: this.headers }
              );
              return { data: { path: r.Key }, error: null };
            } catch (e) {
              if ((0, n.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        createSignedUrl(e, t, r) {
          return s(this, void 0, void 0, function* () {
            try {
              let s = this._getFinalPath(e);
              let n = yield (0, o.post)(
                this.fetch,
                `${this.url}/object/sign/${s}`,
                Object.assign({ expiresIn: t }, (r === null || r === void 0 ? void 0 : r.transform) ? { transform: r.transform } : {}),
                { headers: this.headers }
              );
              const i = (r === null || r === void 0 ? void 0 : r.download) ? `&download=${r.download === true ? "" : r.download}` : "";
              const a = encodeURI(`${this.url}${n.signedURL}${i}`);
              n = { signedUrl: a };
              return { data: n, error: null };
            } catch (e) {
              if ((0, n.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        createSignedUrls(e, t, r) {
          return s(this, void 0, void 0, function* () {
            try {
              const s = yield (0, o.post)(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn: t, paths: e }, { headers: this.headers });
              const n = (r === null || r === void 0 ? void 0 : r.download) ? `&download=${r.download === true ? "" : r.download}` : "";
              return {
                data: s.map((e) => Object.assign(Object.assign({}, e), { signedUrl: e.signedURL ? encodeURI(`${this.url}${e.signedURL}${n}`) : null })),
                error: null,
              };
            } catch (e) {
              if ((0, n.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        download(e, t) {
          return s(this, void 0, void 0, function* () {
            const r = typeof (t === null || t === void 0 ? void 0 : t.transform) !== "undefined";
            const s = r ? "render/image/authenticated" : "object";
            const i = this.transformOptsToQueryString((t === null || t === void 0 ? void 0 : t.transform) || {});
            const a = i ? `?${i}` : "";
            try {
              const t = this._getFinalPath(e);
              const r = yield (0, o.get)(this.fetch, `${this.url}/${s}/${t}${a}`, { headers: this.headers, noResolveJson: true });
              const n = yield r.blob();
              return { data: n, error: null };
            } catch (e) {
              if ((0, n.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        getPublicUrl(e, t) {
          const r = this._getFinalPath(e);
          const s = [];
          const n = (t === null || t === void 0 ? void 0 : t.download) ? `download=${t.download === true ? "" : t.download}` : "";
          if (n !== "") {
            s.push(n);
          }
          const o = typeof (t === null || t === void 0 ? void 0 : t.transform) !== "undefined";
          const i = o ? "render/image" : "object";
          const a = this.transformOptsToQueryString((t === null || t === void 0 ? void 0 : t.transform) || {});
          if (a !== "") {
            s.push(a);
          }
          let A = s.join("&");
          if (A !== "") {
            A = `?${A}`;
          }
          return { data: { publicUrl: encodeURI(`${this.url}/${i}/public/${r}${A}`) } };
        }
        remove(e) {
          return s(this, void 0, void 0, function* () {
            try {
              const t = yield (0, o.remove)(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: e }, { headers: this.headers });
              return { data: t, error: null };
            } catch (e) {
              if ((0, n.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        list(e, t, r) {
          return s(this, void 0, void 0, function* () {
            try {
              const s = Object.assign(Object.assign(Object.assign({}, a), t), { prefix: e || "" });
              const n = yield (0, o.post)(this.fetch, `${this.url}/object/list/${this.bucketId}`, s, { headers: this.headers }, r);
              return { data: n, error: null };
            } catch (e) {
              if ((0, n.isStorageError)(e)) {
                return { data: null, error: e };
              }
              throw e;
            }
          });
        }
        _getFinalPath(e) {
          return `${this.bucketId}/${e}`;
        }
        _removeEmptyFolders(e) {
          return e.replace(/^\/|\/$/g, "").replace(/\/+/g, "/");
        }
        transformOptsToQueryString(e) {
          const t = [];
          if (e.width) {
            t.push(`width=${e.width}`);
          }
          if (e.height) {
            t.push(`height=${e.height}`);
          }
          if (e.resize) {
            t.push(`resize=${e.resize}`);
          }
          if (e.format) {
            t.push(`format=${e.format}`);
          }
          if (e.quality) {
            t.push(`quality=${e.quality}`);
          }
          return t.join("&");
        }
      }
      t["default"] = StorageFileApi;
    },
    61619: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const n = r(70459);
      const o = r(60927);
      const i = r(36209);
      const a = r(71595);
      const A = r(23597);
      const l = r(73248);
      const c = r(87301);
      const d = r(15253);
      class SupabaseClient {
        constructor(e, t, r) {
          var s, n, i, a, d, p, u, g;
          this.supabaseUrl = e;
          this.supabaseKey = t;
          if (!e) throw new Error("supabaseUrl is required.");
          if (!t) throw new Error("supabaseKey is required.");
          const m = (0, c.stripTrailingSlash)(e);
          this.realtimeUrl = `${m}/realtime/v1`.replace(/^http/i, "ws");
          this.authUrl = `${m}/auth/v1`;
          this.storageUrl = `${m}/storage/v1`;
          this.functionsUrl = `${m}/functions/v1`;
          const h = `sb-${new URL(this.authUrl).hostname.split(".")[0]}-auth-token`;
          const E = {
            db: A.DEFAULT_DB_OPTIONS,
            realtime: A.DEFAULT_REALTIME_OPTIONS,
            auth: Object.assign(Object.assign({}, A.DEFAULT_AUTH_OPTIONS), { storageKey: h }),
            global: A.DEFAULT_GLOBAL_OPTIONS,
          };
          const I = (0, c.applySettingDefaults)(r !== null && r !== void 0 ? r : {}, E);
          this.storageKey = (n = (s = I.auth) === null || s === void 0 ? void 0 : s.storageKey) !== null && n !== void 0 ? n : "";
          this.headers = (a = (i = I.global) === null || i === void 0 ? void 0 : i.headers) !== null && a !== void 0 ? a : {};
          this.auth = this._initSupabaseAuthClient(
            (d = I.auth) !== null && d !== void 0 ? d : {},
            this.headers,
            (p = I.global) === null || p === void 0 ? void 0 : p.fetch
          );
          this.fetch = (0, l.fetchWithAuth)(t, this._getAccessToken.bind(this), (u = I.global) === null || u === void 0 ? void 0 : u.fetch);
          this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, I.realtime));
          this.rest = new o.PostgrestClient(`${m}/rest/v1`, {
            headers: this.headers,
            schema: (g = I.db) === null || g === void 0 ? void 0 : g.schema,
            fetch: this.fetch,
          });
          this._listenForAuthEvents();
        }
        get functions() {
          return new n.FunctionsClient(this.functionsUrl, { headers: this.headers, customFetch: this.fetch });
        }
        get storage() {
          return new a.StorageClient(this.storageUrl, this.headers, this.fetch);
        }
        from(e) {
          return this.rest.from(e);
        }
        schema(e) {
          return this.rest.schema(e);
        }
        rpc(e, t = {}, r = {}) {
          return this.rest.rpc(e, t, r);
        }
        channel(e, t = { config: {} }) {
          return this.realtime.channel(e, t);
        }
        getChannels() {
          return this.realtime.getChannels();
        }
        removeChannel(e) {
          return this.realtime.removeChannel(e);
        }
        removeAllChannels() {
          return this.realtime.removeAllChannels();
        }
        _getAccessToken() {
          var e, t;
          return s(this, void 0, void 0, function* () {
            const { data: r } = yield this.auth.getSession();
            return (t = (e = r.session) === null || e === void 0 ? void 0 : e.access_token) !== null && t !== void 0 ? t : null;
          });
        }
        _initSupabaseAuthClient({ autoRefreshToken: e, persistSession: t, detectSessionInUrl: r, storage: s, storageKey: n, flowType: o, debug: i }, a, A) {
          var l;
          const c = { Authorization: `Bearer ${this.supabaseKey}`, apikey: `${this.supabaseKey}` };
          return new d.SupabaseAuthClient({
            url: this.authUrl,
            headers: Object.assign(Object.assign({}, c), a),
            storageKey: n,
            autoRefreshToken: e,
            persistSession: t,
            detectSessionInUrl: r,
            storage: s,
            flowType: o,
            debug: i,
            fetch: A,
            hasCustomAuthorizationHeader: (l = "Authorization" in this.headers) !== null && l !== void 0 ? l : false,
          });
        }
        _initRealtimeClient(e) {
          return new i.RealtimeClient(
            this.realtimeUrl,
            Object.assign(Object.assign({}, e), { params: Object.assign({ apikey: this.supabaseKey }, e === null || e === void 0 ? void 0 : e.params) })
          );
        }
        _listenForAuthEvents() {
          let e = this.auth.onAuthStateChange((e, t) => {
            this._handleTokenChanged(e, "CLIENT", t === null || t === void 0 ? void 0 : t.access_token);
          });
          return e;
        }
        _handleTokenChanged(e, t, r) {
          if ((e === "TOKEN_REFRESHED" || e === "SIGNED_IN") && this.changedAccessToken !== r) {
            this.realtime.setAuth(r !== null && r !== void 0 ? r : null);
            this.changedAccessToken = r;
          } else if (e === "SIGNED_OUT") {
            this.realtime.setAuth(this.supabaseKey);
            if (t == "STORAGE") this.auth.signOut();
            this.changedAccessToken = undefined;
          }
        }
      }
      t["default"] = SupabaseClient;
    },
    85036: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      var o =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.createClient = t.SupabaseClient = t.FunctionRegion = t.FunctionsError = t.FunctionsRelayError = t.FunctionsFetchError = t.FunctionsHttpError = void 0;
      const i = o(r(61619));
      n(r(31904), t);
      var a = r(70459);
      Object.defineProperty(t, "FunctionsHttpError", {
        enumerable: true,
        get: function () {
          return a.FunctionsHttpError;
        },
      });
      Object.defineProperty(t, "FunctionsFetchError", {
        enumerable: true,
        get: function () {
          return a.FunctionsFetchError;
        },
      });
      Object.defineProperty(t, "FunctionsRelayError", {
        enumerable: true,
        get: function () {
          return a.FunctionsRelayError;
        },
      });
      Object.defineProperty(t, "FunctionsError", {
        enumerable: true,
        get: function () {
          return a.FunctionsError;
        },
      });
      Object.defineProperty(t, "FunctionRegion", {
        enumerable: true,
        get: function () {
          return a.FunctionRegion;
        },
      });
      n(r(36209), t);
      var A = r(61619);
      Object.defineProperty(t, "SupabaseClient", {
        enumerable: true,
        get: function () {
          return o(A).default;
        },
      });
      const createClient = (e, t, r) => new i.default(e, t, r);
      t.createClient = createClient;
    },
    15253: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.SupabaseAuthClient = void 0;
      const s = r(31904);
      class SupabaseAuthClient extends s.AuthClient {
        constructor(e) {
          super(e);
        }
      }
      t.SupabaseAuthClient = SupabaseAuthClient;
    },
    23597: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.DEFAULT_REALTIME_OPTIONS = t.DEFAULT_AUTH_OPTIONS = t.DEFAULT_DB_OPTIONS = t.DEFAULT_GLOBAL_OPTIONS = t.DEFAULT_HEADERS = void 0;
      const s = r(50116);
      let n = "";
      if (typeof Deno !== "undefined") {
        n = "deno";
      } else if (typeof document !== "undefined") {
        n = "web";
      } else if (typeof navigator !== "undefined" && navigator.product === "ReactNative") {
        n = "react-native";
      } else {
        n = "node";
      }
      t.DEFAULT_HEADERS = { "X-Client-Info": `supabase-js-${n}/${s.version}` };
      t.DEFAULT_GLOBAL_OPTIONS = { headers: t.DEFAULT_HEADERS };
      t.DEFAULT_DB_OPTIONS = { schema: "public" };
      t.DEFAULT_AUTH_OPTIONS = { autoRefreshToken: true, persistSession: true, detectSessionInUrl: true, flowType: "implicit" };
      t.DEFAULT_REALTIME_OPTIONS = {};
    },
    73248: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.prototype.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      var i =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.fetchWithAuth = t.resolveHeadersConstructor = t.resolveFetch = void 0;
      const a = o(r(83318));
      const resolveFetch = (e) => {
        let t;
        if (e) {
          t = e;
        } else if (typeof fetch === "undefined") {
          t = a.default;
        } else {
          t = fetch;
        }
        return (...e) => t(...e);
      };
      t.resolveFetch = resolveFetch;
      const resolveHeadersConstructor = () => {
        if (typeof Headers === "undefined") {
          return a.Headers;
        }
        return Headers;
      };
      t.resolveHeadersConstructor = resolveHeadersConstructor;
      const fetchWithAuth = (e, r, s) => {
        const n = (0, t.resolveFetch)(s);
        const o = (0, t.resolveHeadersConstructor)();
        return (t, s) =>
          i(void 0, void 0, void 0, function* () {
            var i;
            const a = (i = yield r()) !== null && i !== void 0 ? i : e;
            let A = new o(s === null || s === void 0 ? void 0 : s.headers);
            if (!A.has("apikey")) {
              A.set("apikey", e);
            }
            if (!A.has("Authorization")) {
              A.set("Authorization", `Bearer ${a}`);
            }
            return n(t, Object.assign(Object.assign({}, s), { headers: A }));
          });
      };
      t.fetchWithAuth = fetchWithAuth;
    },
    87301: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.applySettingDefaults = t.isBrowser = t.stripTrailingSlash = t.uuid = void 0;
      function uuid() {
        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (e) {
          var t = (Math.random() * 16) | 0,
            r = e == "x" ? t : (t & 3) | 8;
          return r.toString(16);
        });
      }
      t.uuid = uuid;
      function stripTrailingSlash(e) {
        return e.replace(/\/$/, "");
      }
      t.stripTrailingSlash = stripTrailingSlash;
      const isBrowser = () => typeof window !== "undefined";
      t.isBrowser = isBrowser;
      function applySettingDefaults(e, t) {
        const { db: r, auth: s, realtime: n, global: o } = e;
        const { db: i, auth: a, realtime: A, global: l } = t;
        return {
          db: Object.assign(Object.assign({}, i), r),
          auth: Object.assign(Object.assign({}, a), s),
          realtime: Object.assign(Object.assign({}, A), n),
          global: Object.assign(Object.assign({}, l), o),
        };
      }
      t.applySettingDefaults = applySettingDefaults;
    },
    50116: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.version = void 0;
      t.version = "2.43.1";
    },
    52732: (e, t, r) => {
      var s = r(11063);
      var n = r(22027);
      var o = r(59934);
      var i = Function.bind;
      var a = i.bind(i);
      function bindApi(e, t, r) {
        var s = a(o, null).apply(null, r ? [t, r] : [t]);
        e.api = { remove: s };
        e.remove = s;
        ["before", "error", "after", "wrap"].forEach(function (s) {
          var o = r ? [t, s, r] : [t, s];
          e[s] = e.api[s] = a(n, null).apply(null, o);
        });
      }
      function HookSingular() {
        var e = "h";
        var t = { registry: {} };
        var r = s.bind(null, t, e);
        bindApi(r, t, e);
        return r;
      }
      function HookCollection() {
        var e = { registry: {} };
        var t = s.bind(null, e);
        bindApi(t, e);
        return t;
      }
      var A = false;
      function Hook() {
        if (!A) {
          console.warn(
            '[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'
          );
          A = true;
        }
        return HookCollection();
      }
      Hook.Singular = HookSingular.bind();
      Hook.Collection = HookCollection.bind();
      e.exports = Hook;
      e.exports.Hook = Hook;
      e.exports.Singular = Hook.Singular;
      e.exports.Collection = Hook.Collection;
    },
    22027: (e) => {
      e.exports = addHook;
      function addHook(e, t, r, s) {
        var n = s;
        if (!e.registry[r]) {
          e.registry[r] = [];
        }
        if (t === "before") {
          s = function (e, t) {
            return Promise.resolve().then(n.bind(null, t)).then(e.bind(null, t));
          };
        }
        if (t === "after") {
          s = function (e, t) {
            var r;
            return Promise.resolve()
              .then(e.bind(null, t))
              .then(function (e) {
                r = e;
                return n(r, t);
              })
              .then(function () {
                return r;
              });
          };
        }
        if (t === "error") {
          s = function (e, t) {
            return Promise.resolve()
              .then(e.bind(null, t))
              .catch(function (e) {
                return n(e, t);
              });
          };
        }
        e.registry[r].push({ hook: s, orig: n });
      }
    },
    11063: (e) => {
      e.exports = register;
      function register(e, t, r, s) {
        if (typeof r !== "function") {
          throw new Error("method for before hook must be a function");
        }
        if (!s) {
          s = {};
        }
        if (Array.isArray(t)) {
          return t.reverse().reduce(function (t, r) {
            return register.bind(null, e, r, t, s);
          }, r)();
        }
        return Promise.resolve().then(function () {
          if (!e.registry[t]) {
            return r(s);
          }
          return e.registry[t].reduce(function (e, t) {
            return t.hook.bind(null, e, s);
          }, r)();
        });
      }
    },
    59934: (e) => {
      e.exports = removeHook;
      function removeHook(e, t, r) {
        if (!e.registry[t]) {
          return;
        }
        var s = e.registry[t]
          .map(function (e) {
            return e.orig;
          })
          .indexOf(r);
        if (s === -1) {
          return;
        }
        e.registry[t].splice(s, 1);
      }
    },
    92183: function (e) {
      (function (t) {
        "use strict";
        /*!
         *  decimal.js v10.4.3
         *  An arbitrary-precision Decimal type for JavaScript.
         *  https://github.com/MikeMcl/decimal.js
         *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>
         *  MIT Licence
         */ var r = 9e15,
          s = 1e9,
          n = "0123456789abcdef",
          o =
            "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",
          i =
            "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",
          a = { precision: 20, rounding: 4, modulo: 1, toExpNeg: -7, toExpPos: 21, minE: -r, maxE: r, crypto: false },
          A,
          l,
          c,
          d,
          p = true,
          u = "[DecimalError] ",
          g = u + "Invalid argument: ",
          m = u + "Precision limit exceeded",
          h = u + "crypto unavailable",
          E = "[object Decimal]",
          I = Math.floor,
          C = Math.pow,
          y = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,
          B = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,
          Q = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,
          b = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
          w = 1e7,
          v = 7,
          T = 9007199254740991,
          _ = o.length - 1,
          S = i.length - 1,
          R = { toStringTag: E };
        R.absoluteValue = R.abs = function () {
          var e = new this.constructor(this);
          if (e.s < 0) e.s = 1;
          return finalise(e);
        };
        R.ceil = function () {
          return finalise(new this.constructor(this), this.e + 1, 2);
        };
        R.clampedTo = R.clamp = function (e, t) {
          var r,
            s = this,
            n = s.constructor;
          e = new n(e);
          t = new n(t);
          if (!e.s || !t.s) return new n(NaN);
          if (e.gt(t)) throw Error(g + t);
          r = s.cmp(e);
          return r < 0 ? e : s.cmp(t) > 0 ? t : new n(s);
        };
        R.comparedTo = R.cmp = function (e) {
          var t,
            r,
            s,
            n,
            o = this,
            i = o.d,
            a = (e = new o.constructor(e)).d,
            A = o.s,
            l = e.s;
          if (!i || !a) {
            return !A || !l ? NaN : A !== l ? A : i === a ? 0 : !i ^ (A < 0) ? 1 : -1;
          }
          if (!i[0] || !a[0]) return i[0] ? A : a[0] ? -l : 0;
          if (A !== l) return A;
          if (o.e !== e.e) return (o.e > e.e) ^ (A < 0) ? 1 : -1;
          s = i.length;
          n = a.length;
          for (t = 0, r = s < n ? s : n; t < r; ++t) {
            if (i[t] !== a[t]) return (i[t] > a[t]) ^ (A < 0) ? 1 : -1;
          }
          return s === n ? 0 : (s > n) ^ (A < 0) ? 1 : -1;
        };
        R.cosine = R.cos = function () {
          var e,
            t,
            r = this,
            s = r.constructor;
          if (!r.d) return new s(NaN);
          if (!r.d[0]) return new s(1);
          e = s.precision;
          t = s.rounding;
          s.precision = e + Math.max(r.e, r.sd()) + v;
          s.rounding = 1;
          r = cosine(s, toLessThanHalfPi(s, r));
          s.precision = e;
          s.rounding = t;
          return finalise(d == 2 || d == 3 ? r.neg() : r, e, t, true);
        };
        R.cubeRoot = R.cbrt = function () {
          var e,
            t,
            r,
            s,
            n,
            o,
            i,
            a,
            A,
            l,
            c = this,
            d = c.constructor;
          if (!c.isFinite() || c.isZero()) return new d(c);
          p = false;
          o = c.s * C(c.s * c, 1 / 3);
          if (!o || Math.abs(o) == 1 / 0) {
            r = digitsToString(c.d);
            e = c.e;
            if ((o = (e - r.length + 1) % 3)) r += o == 1 || o == -2 ? "0" : "00";
            o = C(r, 1 / 3);
            e = I((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));
            if (o == 1 / 0) {
              r = "5e" + e;
            } else {
              r = o.toExponential();
              r = r.slice(0, r.indexOf("e") + 1) + e;
            }
            s = new d(r);
            s.s = c.s;
          } else {
            s = new d(o.toString());
          }
          i = (e = d.precision) + 3;
          for (;;) {
            a = s;
            A = a.times(a).times(a);
            l = A.plus(c);
            s = D(l.plus(c).times(a), l.plus(A), i + 2, 1);
            if (digitsToString(a.d).slice(0, i) === (r = digitsToString(s.d)).slice(0, i)) {
              r = r.slice(i - 3, i + 1);
              if (r == "9999" || (!n && r == "4999")) {
                if (!n) {
                  finalise(a, e + 1, 0);
                  if (a.times(a).times(a).eq(c)) {
                    s = a;
                    break;
                  }
                }
                i += 4;
                n = 1;
              } else {
                if (!+r || (!+r.slice(1) && r.charAt(0) == "5")) {
                  finalise(s, e + 1, 1);
                  t = !s.times(s).times(s).eq(c);
                }
                break;
              }
            }
          }
          p = true;
          return finalise(s, e, d.rounding, t);
        };
        R.decimalPlaces = R.dp = function () {
          var e,
            t = this.d,
            r = NaN;
          if (t) {
            e = t.length - 1;
            r = (e - I(this.e / v)) * v;
            e = t[e];
            if (e) for (; e % 10 == 0; e /= 10) r--;
            if (r < 0) r = 0;
          }
          return r;
        };
        R.dividedBy = R.div = function (e) {
          return D(this, new this.constructor(e));
        };
        R.dividedToIntegerBy = R.divToInt = function (e) {
          var t = this,
            r = t.constructor;
          return finalise(D(t, new r(e), 0, 1, 1), r.precision, r.rounding);
        };
        R.equals = R.eq = function (e) {
          return this.cmp(e) === 0;
        };
        R.floor = function () {
          return finalise(new this.constructor(this), this.e + 1, 3);
        };
        R.greaterThan = R.gt = function (e) {
          return this.cmp(e) > 0;
        };
        R.greaterThanOrEqualTo = R.gte = function (e) {
          var t = this.cmp(e);
          return t == 1 || t === 0;
        };
        R.hyperbolicCosine = R.cosh = function () {
          var e,
            t,
            r,
            s,
            n,
            o = this,
            i = o.constructor,
            a = new i(1);
          if (!o.isFinite()) return new i(o.s ? 1 / 0 : NaN);
          if (o.isZero()) return a;
          r = i.precision;
          s = i.rounding;
          i.precision = r + Math.max(o.e, o.sd()) + 4;
          i.rounding = 1;
          n = o.d.length;
          if (n < 32) {
            e = Math.ceil(n / 3);
            t = (1 / tinyPow(4, e)).toString();
          } else {
            e = 16;
            t = "2.3283064365386962890625e-10";
          }
          o = taylorSeries(i, 1, o.times(t), new i(1), true);
          var A,
            l = e,
            c = new i(8);
          for (; l--; ) {
            A = o.times(o);
            o = a.minus(A.times(c.minus(A.times(c))));
          }
          return finalise(o, (i.precision = r), (i.rounding = s), true);
        };
        R.hyperbolicSine = R.sinh = function () {
          var e,
            t,
            r,
            s,
            n = this,
            o = n.constructor;
          if (!n.isFinite() || n.isZero()) return new o(n);
          t = o.precision;
          r = o.rounding;
          o.precision = t + Math.max(n.e, n.sd()) + 4;
          o.rounding = 1;
          s = n.d.length;
          if (s < 3) {
            n = taylorSeries(o, 2, n, n, true);
          } else {
            e = 1.4 * Math.sqrt(s);
            e = e > 16 ? 16 : e | 0;
            n = n.times(1 / tinyPow(5, e));
            n = taylorSeries(o, 2, n, n, true);
            var i,
              a = new o(5),
              A = new o(16),
              l = new o(20);
            for (; e--; ) {
              i = n.times(n);
              n = n.times(a.plus(i.times(A.times(i).plus(l))));
            }
          }
          o.precision = t;
          o.rounding = r;
          return finalise(n, t, r, true);
        };
        R.hyperbolicTangent = R.tanh = function () {
          var e,
            t,
            r = this,
            s = r.constructor;
          if (!r.isFinite()) return new s(r.s);
          if (r.isZero()) return new s(r);
          e = s.precision;
          t = s.rounding;
          s.precision = e + 7;
          s.rounding = 1;
          return D(r.sinh(), r.cosh(), (s.precision = e), (s.rounding = t));
        };
        R.inverseCosine = R.acos = function () {
          var e,
            t = this,
            r = t.constructor,
            s = t.abs().cmp(1),
            n = r.precision,
            o = r.rounding;
          if (s !== -1) {
            return s === 0 ? (t.isNeg() ? getPi(r, n, o) : new r(0)) : new r(NaN);
          }
          if (t.isZero()) return getPi(r, n + 4, o).times(0.5);
          r.precision = n + 6;
          r.rounding = 1;
          t = t.asin();
          e = getPi(r, n + 4, o).times(0.5);
          r.precision = n;
          r.rounding = o;
          return e.minus(t);
        };
        R.inverseHyperbolicCosine = R.acosh = function () {
          var e,
            t,
            r = this,
            s = r.constructor;
          if (r.lte(1)) return new s(r.eq(1) ? 0 : NaN);
          if (!r.isFinite()) return new s(r);
          e = s.precision;
          t = s.rounding;
          s.precision = e + Math.max(Math.abs(r.e), r.sd()) + 4;
          s.rounding = 1;
          p = false;
          r = r.times(r).minus(1).sqrt().plus(r);
          p = true;
          s.precision = e;
          s.rounding = t;
          return r.ln();
        };
        R.inverseHyperbolicSine = R.asinh = function () {
          var e,
            t,
            r = this,
            s = r.constructor;
          if (!r.isFinite() || r.isZero()) return new s(r);
          e = s.precision;
          t = s.rounding;
          s.precision = e + 2 * Math.max(Math.abs(r.e), r.sd()) + 6;
          s.rounding = 1;
          p = false;
          r = r.times(r).plus(1).sqrt().plus(r);
          p = true;
          s.precision = e;
          s.rounding = t;
          return r.ln();
        };
        R.inverseHyperbolicTangent = R.atanh = function () {
          var e,
            t,
            r,
            s,
            n = this,
            o = n.constructor;
          if (!n.isFinite()) return new o(NaN);
          if (n.e >= 0) return new o(n.abs().eq(1) ? n.s / 0 : n.isZero() ? n : NaN);
          e = o.precision;
          t = o.rounding;
          s = n.sd();
          if (Math.max(s, e) < 2 * -n.e - 1) return finalise(new o(n), e, t, true);
          o.precision = r = s - n.e;
          n = D(n.plus(1), new o(1).minus(n), r + e, 1);
          o.precision = e + 4;
          o.rounding = 1;
          n = n.ln();
          o.precision = e;
          o.rounding = t;
          return n.times(0.5);
        };
        R.inverseSine = R.asin = function () {
          var e,
            t,
            r,
            s,
            n = this,
            o = n.constructor;
          if (n.isZero()) return new o(n);
          t = n.abs().cmp(1);
          r = o.precision;
          s = o.rounding;
          if (t !== -1) {
            if (t === 0) {
              e = getPi(o, r + 4, s).times(0.5);
              e.s = n.s;
              return e;
            }
            return new o(NaN);
          }
          o.precision = r + 6;
          o.rounding = 1;
          n = n.div(new o(1).minus(n.times(n)).sqrt().plus(1)).atan();
          o.precision = r;
          o.rounding = s;
          return n.times(2);
        };
        R.inverseTangent = R.atan = function () {
          var e,
            t,
            r,
            s,
            n,
            o,
            i,
            a,
            A,
            l = this,
            c = l.constructor,
            d = c.precision,
            u = c.rounding;
          if (!l.isFinite()) {
            if (!l.s) return new c(NaN);
            if (d + 4 <= S) {
              i = getPi(c, d + 4, u).times(0.5);
              i.s = l.s;
              return i;
            }
          } else if (l.isZero()) {
            return new c(l);
          } else if (l.abs().eq(1) && d + 4 <= S) {
            i = getPi(c, d + 4, u).times(0.25);
            i.s = l.s;
            return i;
          }
          c.precision = a = d + 10;
          c.rounding = 1;
          r = Math.min(28, (a / v + 2) | 0);
          for (e = r; e; --e) l = l.div(l.times(l).plus(1).sqrt().plus(1));
          p = false;
          t = Math.ceil(a / v);
          s = 1;
          A = l.times(l);
          i = new c(l);
          n = l;
          for (; e !== -1; ) {
            n = n.times(A);
            o = i.minus(n.div((s += 2)));
            n = n.times(A);
            i = o.plus(n.div((s += 2)));
            if (i.d[t] !== void 0) for (e = t; i.d[e] === o.d[e] && e--; );
          }
          if (r) i = i.times(2 << (r - 1));
          p = true;
          return finalise(i, (c.precision = d), (c.rounding = u), true);
        };
        R.isFinite = function () {
          return !!this.d;
        };
        R.isInteger = R.isInt = function () {
          return !!this.d && I(this.e / v) > this.d.length - 2;
        };
        R.isNaN = function () {
          return !this.s;
        };
        R.isNegative = R.isNeg = function () {
          return this.s < 0;
        };
        R.isPositive = R.isPos = function () {
          return this.s > 0;
        };
        R.isZero = function () {
          return !!this.d && this.d[0] === 0;
        };
        R.lessThan = R.lt = function (e) {
          return this.cmp(e) < 0;
        };
        R.lessThanOrEqualTo = R.lte = function (e) {
          return this.cmp(e) < 1;
        };
        R.logarithm = R.log = function (e) {
          var t,
            r,
            s,
            n,
            o,
            i,
            a,
            A,
            l = this,
            c = l.constructor,
            d = c.precision,
            u = c.rounding,
            g = 5;
          if (e == null) {
            e = new c(10);
            t = true;
          } else {
            e = new c(e);
            r = e.d;
            if (e.s < 0 || !r || !r[0] || e.eq(1)) return new c(NaN);
            t = e.eq(10);
          }
          r = l.d;
          if (l.s < 0 || !r || !r[0] || l.eq(1)) {
            return new c(r && !r[0] ? -1 / 0 : l.s != 1 ? NaN : r ? 0 : 1 / 0);
          }
          if (t) {
            if (r.length > 1) {
              o = true;
            } else {
              for (n = r[0]; n % 10 === 0; ) n /= 10;
              o = n !== 1;
            }
          }
          p = false;
          a = d + g;
          i = naturalLogarithm(l, a);
          s = t ? getLn10(c, a + 10) : naturalLogarithm(e, a);
          A = D(i, s, a, 1);
          if (checkRoundingDigits(A.d, (n = d), u)) {
            do {
              a += 10;
              i = naturalLogarithm(l, a);
              s = t ? getLn10(c, a + 10) : naturalLogarithm(e, a);
              A = D(i, s, a, 1);
              if (!o) {
                if (+digitsToString(A.d).slice(n + 1, n + 15) + 1 == 1e14) {
                  A = finalise(A, d + 1, 0);
                }
                break;
              }
            } while (checkRoundingDigits(A.d, (n += 10), u));
          }
          p = true;
          return finalise(A, d, u);
        };
        R.minus = R.sub = function (e) {
          var t,
            r,
            s,
            n,
            o,
            i,
            a,
            A,
            l,
            c,
            d,
            u,
            g = this,
            m = g.constructor;
          e = new m(e);
          if (!g.d || !e.d) {
            if (!g.s || !e.s) e = new m(NaN);
            else if (g.d) e.s = -e.s;
            else e = new m(e.d || g.s !== e.s ? g : NaN);
            return e;
          }
          if (g.s != e.s) {
            e.s = -e.s;
            return g.plus(e);
          }
          l = g.d;
          u = e.d;
          a = m.precision;
          A = m.rounding;
          if (!l[0] || !u[0]) {
            if (u[0]) e.s = -e.s;
            else if (l[0]) e = new m(g);
            else return new m(A === 3 ? -0 : 0);
            return p ? finalise(e, a, A) : e;
          }
          r = I(e.e / v);
          c = I(g.e / v);
          l = l.slice();
          o = c - r;
          if (o) {
            d = o < 0;
            if (d) {
              t = l;
              o = -o;
              i = u.length;
            } else {
              t = u;
              r = c;
              i = l.length;
            }
            s = Math.max(Math.ceil(a / v), i) + 2;
            if (o > s) {
              o = s;
              t.length = 1;
            }
            t.reverse();
            for (s = o; s--; ) t.push(0);
            t.reverse();
          } else {
            s = l.length;
            i = u.length;
            d = s < i;
            if (d) i = s;
            for (s = 0; s < i; s++) {
              if (l[s] != u[s]) {
                d = l[s] < u[s];
                break;
              }
            }
            o = 0;
          }
          if (d) {
            t = l;
            l = u;
            u = t;
            e.s = -e.s;
          }
          i = l.length;
          for (s = u.length - i; s > 0; --s) l[i++] = 0;
          for (s = u.length; s > o; ) {
            if (l[--s] < u[s]) {
              for (n = s; n && l[--n] === 0; ) l[n] = w - 1;
              --l[n];
              l[s] += w;
            }
            l[s] -= u[s];
          }
          for (; l[--i] === 0; ) l.pop();
          for (; l[0] === 0; l.shift()) --r;
          if (!l[0]) return new m(A === 3 ? -0 : 0);
          e.d = l;
          e.e = getBase10Exponent(l, r);
          return p ? finalise(e, a, A) : e;
        };
        R.modulo = R.mod = function (e) {
          var t,
            r = this,
            s = r.constructor;
          e = new s(e);
          if (!r.d || !e.s || (e.d && !e.d[0])) return new s(NaN);
          if (!e.d || (r.d && !r.d[0])) {
            return finalise(new s(r), s.precision, s.rounding);
          }
          p = false;
          if (s.modulo == 9) {
            t = D(r, e.abs(), 0, 3, 1);
            t.s *= e.s;
          } else {
            t = D(r, e, 0, s.modulo, 1);
          }
          t = t.times(e);
          p = true;
          return r.minus(t);
        };
        R.naturalExponential = R.exp = function () {
          return naturalExponential(this);
        };
        R.naturalLogarithm = R.ln = function () {
          return naturalLogarithm(this);
        };
        R.negated = R.neg = function () {
          var e = new this.constructor(this);
          e.s = -e.s;
          return finalise(e);
        };
        R.plus = R.add = function (e) {
          var t,
            r,
            s,
            n,
            o,
            i,
            a,
            A,
            l,
            c,
            d = this,
            u = d.constructor;
          e = new u(e);
          if (!d.d || !e.d) {
            if (!d.s || !e.s) e = new u(NaN);
            else if (!d.d) e = new u(e.d || d.s === e.s ? d : NaN);
            return e;
          }
          if (d.s != e.s) {
            e.s = -e.s;
            return d.minus(e);
          }
          l = d.d;
          c = e.d;
          a = u.precision;
          A = u.rounding;
          if (!l[0] || !c[0]) {
            if (!c[0]) e = new u(d);
            return p ? finalise(e, a, A) : e;
          }
          o = I(d.e / v);
          s = I(e.e / v);
          l = l.slice();
          n = o - s;
          if (n) {
            if (n < 0) {
              r = l;
              n = -n;
              i = c.length;
            } else {
              r = c;
              s = o;
              i = l.length;
            }
            o = Math.ceil(a / v);
            i = o > i ? o + 1 : i + 1;
            if (n > i) {
              n = i;
              r.length = 1;
            }
            r.reverse();
            for (; n--; ) r.push(0);
            r.reverse();
          }
          i = l.length;
          n = c.length;
          if (i - n < 0) {
            n = i;
            r = c;
            c = l;
            l = r;
          }
          for (t = 0; n; ) {
            t = ((l[--n] = l[n] + c[n] + t) / w) | 0;
            l[n] %= w;
          }
          if (t) {
            l.unshift(t);
            ++s;
          }
          for (i = l.length; l[--i] == 0; ) l.pop();
          e.d = l;
          e.e = getBase10Exponent(l, s);
          return p ? finalise(e, a, A) : e;
        };
        R.precision = R.sd = function (e) {
          var t,
            r = this;
          if (e !== void 0 && e !== !!e && e !== 1 && e !== 0) throw Error(g + e);
          if (r.d) {
            t = getPrecision(r.d);
            if (e && r.e + 1 > t) t = r.e + 1;
          } else {
            t = NaN;
          }
          return t;
        };
        R.round = function () {
          var e = this,
            t = e.constructor;
          return finalise(new t(e), e.e + 1, t.rounding);
        };
        R.sine = R.sin = function () {
          var e,
            t,
            r = this,
            s = r.constructor;
          if (!r.isFinite()) return new s(NaN);
          if (r.isZero()) return new s(r);
          e = s.precision;
          t = s.rounding;
          s.precision = e + Math.max(r.e, r.sd()) + v;
          s.rounding = 1;
          r = sine(s, toLessThanHalfPi(s, r));
          s.precision = e;
          s.rounding = t;
          return finalise(d > 2 ? r.neg() : r, e, t, true);
        };
        R.squareRoot = R.sqrt = function () {
          var e,
            t,
            r,
            s,
            n,
            o,
            i = this,
            a = i.d,
            A = i.e,
            l = i.s,
            c = i.constructor;
          if (l !== 1 || !a || !a[0]) {
            return new c(!l || (l < 0 && (!a || a[0])) ? NaN : a ? i : 1 / 0);
          }
          p = false;
          l = Math.sqrt(+i);
          if (l == 0 || l == 1 / 0) {
            t = digitsToString(a);
            if ((t.length + A) % 2 == 0) t += "0";
            l = Math.sqrt(t);
            A = I((A + 1) / 2) - (A < 0 || A % 2);
            if (l == 1 / 0) {
              t = "5e" + A;
            } else {
              t = l.toExponential();
              t = t.slice(0, t.indexOf("e") + 1) + A;
            }
            s = new c(t);
          } else {
            s = new c(l.toString());
          }
          r = (A = c.precision) + 3;
          for (;;) {
            o = s;
            s = o.plus(D(i, o, r + 2, 1)).times(0.5);
            if (digitsToString(o.d).slice(0, r) === (t = digitsToString(s.d)).slice(0, r)) {
              t = t.slice(r - 3, r + 1);
              if (t == "9999" || (!n && t == "4999")) {
                if (!n) {
                  finalise(o, A + 1, 0);
                  if (o.times(o).eq(i)) {
                    s = o;
                    break;
                  }
                }
                r += 4;
                n = 1;
              } else {
                if (!+t || (!+t.slice(1) && t.charAt(0) == "5")) {
                  finalise(s, A + 1, 1);
                  e = !s.times(s).eq(i);
                }
                break;
              }
            }
          }
          p = true;
          return finalise(s, A, c.rounding, e);
        };
        R.tangent = R.tan = function () {
          var e,
            t,
            r = this,
            s = r.constructor;
          if (!r.isFinite()) return new s(NaN);
          if (r.isZero()) return new s(r);
          e = s.precision;
          t = s.rounding;
          s.precision = e + 10;
          s.rounding = 1;
          r = r.sin();
          r.s = 1;
          r = D(r, new s(1).minus(r.times(r)).sqrt(), e + 10, 0);
          s.precision = e;
          s.rounding = t;
          return finalise(d == 2 || d == 4 ? r.neg() : r, e, t, true);
        };
        R.times = R.mul = function (e) {
          var t,
            r,
            s,
            n,
            o,
            i,
            a,
            A,
            l,
            c = this,
            d = c.constructor,
            u = c.d,
            g = (e = new d(e)).d;
          e.s *= c.s;
          if (!u || !u[0] || !g || !g[0]) {
            return new d(!e.s || (u && !u[0] && !g) || (g && !g[0] && !u) ? NaN : !u || !g ? e.s / 0 : e.s * 0);
          }
          r = I(c.e / v) + I(e.e / v);
          A = u.length;
          l = g.length;
          if (A < l) {
            o = u;
            u = g;
            g = o;
            i = A;
            A = l;
            l = i;
          }
          o = [];
          i = A + l;
          for (s = i; s--; ) o.push(0);
          for (s = l; --s >= 0; ) {
            t = 0;
            for (n = A + s; n > s; ) {
              a = o[n] + g[s] * u[n - s - 1] + t;
              o[n--] = a % w | 0;
              t = (a / w) | 0;
            }
            o[n] = (o[n] + t) % w | 0;
          }
          for (; !o[--i]; ) o.pop();
          if (t) ++r;
          else o.shift();
          e.d = o;
          e.e = getBase10Exponent(o, r);
          return p ? finalise(e, d.precision, d.rounding) : e;
        };
        R.toBinary = function (e, t) {
          return toStringBinary(this, 2, e, t);
        };
        R.toDecimalPlaces = R.toDP = function (e, t) {
          var r = this,
            n = r.constructor;
          r = new n(r);
          if (e === void 0) return r;
          checkInt32(e, 0, s);
          if (t === void 0) t = n.rounding;
          else checkInt32(t, 0, 8);
          return finalise(r, e + r.e + 1, t);
        };
        R.toExponential = function (e, t) {
          var r,
            n = this,
            o = n.constructor;
          if (e === void 0) {
            r = finiteToString(n, true);
          } else {
            checkInt32(e, 0, s);
            if (t === void 0) t = o.rounding;
            else checkInt32(t, 0, 8);
            n = finalise(new o(n), e + 1, t);
            r = finiteToString(n, true, e + 1);
          }
          return n.isNeg() && !n.isZero() ? "-" + r : r;
        };
        R.toFixed = function (e, t) {
          var r,
            n,
            o = this,
            i = o.constructor;
          if (e === void 0) {
            r = finiteToString(o);
          } else {
            checkInt32(e, 0, s);
            if (t === void 0) t = i.rounding;
            else checkInt32(t, 0, 8);
            n = finalise(new i(o), e + o.e + 1, t);
            r = finiteToString(n, false, e + n.e + 1);
          }
          return o.isNeg() && !o.isZero() ? "-" + r : r;
        };
        R.toFraction = function (e) {
          var t,
            r,
            s,
            n,
            o,
            i,
            a,
            A,
            l,
            c,
            d,
            u,
            m = this,
            h = m.d,
            E = m.constructor;
          if (!h) return new E(m);
          l = r = new E(1);
          s = A = new E(0);
          t = new E(s);
          o = t.e = getPrecision(h) - m.e - 1;
          i = o % v;
          t.d[0] = C(10, i < 0 ? v + i : i);
          if (e == null) {
            e = o > 0 ? t : l;
          } else {
            a = new E(e);
            if (!a.isInt() || a.lt(l)) throw Error(g + a);
            e = a.gt(t) ? (o > 0 ? t : l) : a;
          }
          p = false;
          a = new E(digitsToString(h));
          c = E.precision;
          E.precision = o = h.length * v * 2;
          for (;;) {
            d = D(a, t, 0, 1, 1);
            n = r.plus(d.times(s));
            if (n.cmp(e) == 1) break;
            r = s;
            s = n;
            n = l;
            l = A.plus(d.times(n));
            A = n;
            n = t;
            t = a.minus(d.times(n));
            a = n;
          }
          n = D(e.minus(r), s, 0, 1, 1);
          A = A.plus(n.times(l));
          r = r.plus(n.times(s));
          A.s = l.s = m.s;
          u =
            D(l, s, o, 1)
              .minus(m)
              .abs()
              .cmp(D(A, r, o, 1).minus(m).abs()) < 1
              ? [l, s]
              : [A, r];
          E.precision = c;
          p = true;
          return u;
        };
        R.toHexadecimal = R.toHex = function (e, t) {
          return toStringBinary(this, 16, e, t);
        };
        R.toNearest = function (e, t) {
          var r = this,
            s = r.constructor;
          r = new s(r);
          if (e == null) {
            if (!r.d) return r;
            e = new s(1);
            t = s.rounding;
          } else {
            e = new s(e);
            if (t === void 0) {
              t = s.rounding;
            } else {
              checkInt32(t, 0, 8);
            }
            if (!r.d) return e.s ? r : e;
            if (!e.d) {
              if (e.s) e.s = r.s;
              return e;
            }
          }
          if (e.d[0]) {
            p = false;
            r = D(r, e, 0, t, 1).times(e);
            p = true;
            finalise(r);
          } else {
            e.s = r.s;
            r = e;
          }
          return r;
        };
        R.toNumber = function () {
          return +this;
        };
        R.toOctal = function (e, t) {
          return toStringBinary(this, 8, e, t);
        };
        R.toPower = R.pow = function (e) {
          var t,
            r,
            s,
            n,
            o,
            i,
            a = this,
            A = a.constructor,
            l = +(e = new A(e));
          if (!a.d || !e.d || !a.d[0] || !e.d[0]) return new A(C(+a, l));
          a = new A(a);
          if (a.eq(1)) return a;
          s = A.precision;
          o = A.rounding;
          if (e.eq(1)) return finalise(a, s, o);
          t = I(e.e / v);
          if (t >= e.d.length - 1 && (r = l < 0 ? -l : l) <= T) {
            n = intPow(A, a, r, s);
            return e.s < 0 ? new A(1).div(n) : finalise(n, s, o);
          }
          i = a.s;
          if (i < 0) {
            if (t < e.d.length - 1) return new A(NaN);
            if ((e.d[t] & 1) == 0) i = 1;
            if (a.e == 0 && a.d[0] == 1 && a.d.length == 1) {
              a.s = i;
              return a;
            }
          }
          r = C(+a, l);
          t = r == 0 || !isFinite(r) ? I(l * (Math.log("0." + digitsToString(a.d)) / Math.LN10 + a.e + 1)) : new A(r + "").e;
          if (t > A.maxE + 1 || t < A.minE - 1) return new A(t > 0 ? i / 0 : 0);
          p = false;
          A.rounding = a.s = 1;
          r = Math.min(12, (t + "").length);
          n = naturalExponential(e.times(naturalLogarithm(a, s + r)), s);
          if (n.d) {
            n = finalise(n, s + 5, 1);
            if (checkRoundingDigits(n.d, s, o)) {
              t = s + 10;
              n = finalise(naturalExponential(e.times(naturalLogarithm(a, t + r)), t), t + 5, 1);
              if (+digitsToString(n.d).slice(s + 1, s + 15) + 1 == 1e14) {
                n = finalise(n, s + 1, 0);
              }
            }
          }
          n.s = i;
          p = true;
          A.rounding = o;
          return finalise(n, s, o);
        };
        R.toPrecision = function (e, t) {
          var r,
            n = this,
            o = n.constructor;
          if (e === void 0) {
            r = finiteToString(n, n.e <= o.toExpNeg || n.e >= o.toExpPos);
          } else {
            checkInt32(e, 1, s);
            if (t === void 0) t = o.rounding;
            else checkInt32(t, 0, 8);
            n = finalise(new o(n), e, t);
            r = finiteToString(n, e <= n.e || n.e <= o.toExpNeg, e);
          }
          return n.isNeg() && !n.isZero() ? "-" + r : r;
        };
        R.toSignificantDigits = R.toSD = function (e, t) {
          var r = this,
            n = r.constructor;
          if (e === void 0) {
            e = n.precision;
            t = n.rounding;
          } else {
            checkInt32(e, 1, s);
            if (t === void 0) t = n.rounding;
            else checkInt32(t, 0, 8);
          }
          return finalise(new n(r), e, t);
        };
        R.toString = function () {
          var e = this,
            t = e.constructor,
            r = finiteToString(e, e.e <= t.toExpNeg || e.e >= t.toExpPos);
          return e.isNeg() && !e.isZero() ? "-" + r : r;
        };
        R.truncated = R.trunc = function () {
          return finalise(new this.constructor(this), this.e + 1, 1);
        };
        R.valueOf = R.toJSON = function () {
          var e = this,
            t = e.constructor,
            r = finiteToString(e, e.e <= t.toExpNeg || e.e >= t.toExpPos);
          return e.isNeg() ? "-" + r : r;
        };
        function digitsToString(e) {
          var t,
            r,
            s,
            n = e.length - 1,
            o = "",
            i = e[0];
          if (n > 0) {
            o += i;
            for (t = 1; t < n; t++) {
              s = e[t] + "";
              r = v - s.length;
              if (r) o += getZeroString(r);
              o += s;
            }
            i = e[t];
            s = i + "";
            r = v - s.length;
            if (r) o += getZeroString(r);
          } else if (i === 0) {
            return "0";
          }
          for (; i % 10 === 0; ) i /= 10;
          return o + i;
        }
        function checkInt32(e, t, r) {
          if (e !== ~~e || e < t || e > r) {
            throw Error(g + e);
          }
        }
        function checkRoundingDigits(e, t, r, s) {
          var n, o, i, a;
          for (o = e[0]; o >= 10; o /= 10) --t;
          if (--t < 0) {
            t += v;
            n = 0;
          } else {
            n = Math.ceil((t + 1) / v);
            t %= v;
          }
          o = C(10, v - t);
          a = e[n] % o | 0;
          if (s == null) {
            if (t < 3) {
              if (t == 0) a = (a / 100) | 0;
              else if (t == 1) a = (a / 10) | 0;
              i = (r < 4 && a == 99999) || (r > 3 && a == 49999) || a == 5e4 || a == 0;
            } else {
              i =
                (((r < 4 && a + 1 == o) || (r > 3 && a + 1 == o / 2)) && ((e[n + 1] / o / 100) | 0) == C(10, t - 2) - 1) ||
                ((a == o / 2 || a == 0) && ((e[n + 1] / o / 100) | 0) == 0);
            }
          } else {
            if (t < 4) {
              if (t == 0) a = (a / 1e3) | 0;
              else if (t == 1) a = (a / 100) | 0;
              else if (t == 2) a = (a / 10) | 0;
              i = ((s || r < 4) && a == 9999) || (!s && r > 3 && a == 4999);
            } else {
              i = (((s || r < 4) && a + 1 == o) || (!s && r > 3 && a + 1 == o / 2)) && ((e[n + 1] / o / 1e3) | 0) == C(10, t - 3) - 1;
            }
          }
          return i;
        }
        function convertBase(e, t, r) {
          var s,
            o = [0],
            i,
            a = 0,
            A = e.length;
          for (; a < A; ) {
            for (i = o.length; i--; ) o[i] *= t;
            o[0] += n.indexOf(e.charAt(a++));
            for (s = 0; s < o.length; s++) {
              if (o[s] > r - 1) {
                if (o[s + 1] === void 0) o[s + 1] = 0;
                o[s + 1] += (o[s] / r) | 0;
                o[s] %= r;
              }
            }
          }
          return o.reverse();
        }
        function cosine(e, t) {
          var r, s, n;
          if (t.isZero()) return t;
          s = t.d.length;
          if (s < 32) {
            r = Math.ceil(s / 3);
            n = (1 / tinyPow(4, r)).toString();
          } else {
            r = 16;
            n = "2.3283064365386962890625e-10";
          }
          e.precision += r;
          t = taylorSeries(e, 1, t.times(n), new e(1));
          for (var o = r; o--; ) {
            var i = t.times(t);
            t = i.times(i).minus(i).times(8).plus(1);
          }
          e.precision -= r;
          return t;
        }
        var D = (function () {
          function multiplyInteger(e, t, r) {
            var s,
              n = 0,
              o = e.length;
            for (e = e.slice(); o--; ) {
              s = e[o] * t + n;
              e[o] = s % r | 0;
              n = (s / r) | 0;
            }
            if (n) e.unshift(n);
            return e;
          }
          function compare(e, t, r, s) {
            var n, o;
            if (r != s) {
              o = r > s ? 1 : -1;
            } else {
              for (n = o = 0; n < r; n++) {
                if (e[n] != t[n]) {
                  o = e[n] > t[n] ? 1 : -1;
                  break;
                }
              }
            }
            return o;
          }
          function subtract(e, t, r, s) {
            var n = 0;
            for (; r--; ) {
              e[r] -= n;
              n = e[r] < t[r] ? 1 : 0;
              e[r] = n * s + e[r] - t[r];
            }
            for (; !e[0] && e.length > 1; ) e.shift();
          }
          return function (e, t, r, s, n, o) {
            var i,
              a,
              A,
              c,
              d,
              p,
              u,
              g,
              m,
              h,
              E,
              C,
              y,
              B,
              Q,
              b,
              T,
              _,
              S,
              R,
              D = e.constructor,
              k = e.s == t.s ? 1 : -1,
              F = e.d,
              O = t.d;
            if (!F || !F[0] || !O || !O[0]) {
              return new D(!e.s || !t.s || (F ? O && F[0] == O[0] : !O) ? NaN : (F && F[0] == 0) || !O ? k * 0 : k / 0);
            }
            if (o) {
              d = 1;
              a = e.e - t.e;
            } else {
              o = w;
              d = v;
              a = I(e.e / d) - I(t.e / d);
            }
            S = O.length;
            T = F.length;
            m = new D(k);
            h = m.d = [];
            for (A = 0; O[A] == (F[A] || 0); A++);
            if (O[A] > (F[A] || 0)) a--;
            if (r == null) {
              B = r = D.precision;
              s = D.rounding;
            } else if (n) {
              B = r + (e.e - t.e) + 1;
            } else {
              B = r;
            }
            if (B < 0) {
              h.push(1);
              p = true;
            } else {
              B = (B / d + 2) | 0;
              A = 0;
              if (S == 1) {
                c = 0;
                O = O[0];
                B++;
                for (; (A < T || c) && B--; A++) {
                  Q = c * o + (F[A] || 0);
                  h[A] = (Q / O) | 0;
                  c = Q % O | 0;
                }
                p = c || A < T;
              } else {
                c = (o / (O[0] + 1)) | 0;
                if (c > 1) {
                  O = multiplyInteger(O, c, o);
                  F = multiplyInteger(F, c, o);
                  S = O.length;
                  T = F.length;
                }
                b = S;
                E = F.slice(0, S);
                C = E.length;
                for (; C < S; ) E[C++] = 0;
                R = O.slice();
                R.unshift(0);
                _ = O[0];
                if (O[1] >= o / 2) ++_;
                do {
                  c = 0;
                  i = compare(O, E, S, C);
                  if (i < 0) {
                    y = E[0];
                    if (S != C) y = y * o + (E[1] || 0);
                    c = (y / _) | 0;
                    if (c > 1) {
                      if (c >= o) c = o - 1;
                      u = multiplyInteger(O, c, o);
                      g = u.length;
                      C = E.length;
                      i = compare(u, E, g, C);
                      if (i == 1) {
                        c--;
                        subtract(u, S < g ? R : O, g, o);
                      }
                    } else {
                      if (c == 0) i = c = 1;
                      u = O.slice();
                    }
                    g = u.length;
                    if (g < C) u.unshift(0);
                    subtract(E, u, C, o);
                    if (i == -1) {
                      C = E.length;
                      i = compare(O, E, S, C);
                      if (i < 1) {
                        c++;
                        subtract(E, S < C ? R : O, C, o);
                      }
                    }
                    C = E.length;
                  } else if (i === 0) {
                    c++;
                    E = [0];
                  }
                  h[A++] = c;
                  if (i && E[0]) {
                    E[C++] = F[b] || 0;
                  } else {
                    E = [F[b]];
                    C = 1;
                  }
                } while ((b++ < T || E[0] !== void 0) && B--);
                p = E[0] !== void 0;
              }
              if (!h[0]) h.shift();
            }
            if (d == 1) {
              m.e = a;
              l = p;
            } else {
              for (A = 1, c = h[0]; c >= 10; c /= 10) A++;
              m.e = A + a * d - 1;
              finalise(m, n ? r + m.e + 1 : r, s, p);
            }
            return m;
          };
        })();
        function finalise(e, t, r, s) {
          var n,
            o,
            i,
            a,
            A,
            l,
            c,
            d,
            u,
            g = e.constructor;
          e: if (t != null) {
            d = e.d;
            if (!d) return e;
            for (n = 1, a = d[0]; a >= 10; a /= 10) n++;
            o = t - n;
            if (o < 0) {
              o += v;
              i = t;
              c = d[(u = 0)];
              A = (c / C(10, n - i - 1)) % 10 | 0;
            } else {
              u = Math.ceil((o + 1) / v);
              a = d.length;
              if (u >= a) {
                if (s) {
                  for (; a++ <= u; ) d.push(0);
                  c = A = 0;
                  n = 1;
                  o %= v;
                  i = o - v + 1;
                } else {
                  break e;
                }
              } else {
                c = a = d[u];
                for (n = 1; a >= 10; a /= 10) n++;
                o %= v;
                i = o - v + n;
                A = i < 0 ? 0 : (c / C(10, n - i - 1)) % 10 | 0;
              }
            }
            s = s || t < 0 || d[u + 1] !== void 0 || (i < 0 ? c : c % C(10, n - i - 1));
            l =
              r < 4
                ? (A || s) && (r == 0 || r == (e.s < 0 ? 3 : 2))
                : A > 5 || (A == 5 && (r == 4 || s || (r == 6 && (o > 0 ? (i > 0 ? c / C(10, n - i) : 0) : d[u - 1]) % 10 & 1) || r == (e.s < 0 ? 8 : 7)));
            if (t < 1 || !d[0]) {
              d.length = 0;
              if (l) {
                t -= e.e + 1;
                d[0] = C(10, (v - (t % v)) % v);
                e.e = -t || 0;
              } else {
                d[0] = e.e = 0;
              }
              return e;
            }
            if (o == 0) {
              d.length = u;
              a = 1;
              u--;
            } else {
              d.length = u + 1;
              a = C(10, v - o);
              d[u] = i > 0 ? ((c / C(10, n - i)) % C(10, i) | 0) * a : 0;
            }
            if (l) {
              for (;;) {
                if (u == 0) {
                  for (o = 1, i = d[0]; i >= 10; i /= 10) o++;
                  i = d[0] += a;
                  for (a = 1; i >= 10; i /= 10) a++;
                  if (o != a) {
                    e.e++;
                    if (d[0] == w) d[0] = 1;
                  }
                  break;
                } else {
                  d[u] += a;
                  if (d[u] != w) break;
                  d[u--] = 0;
                  a = 1;
                }
              }
            }
            for (o = d.length; d[--o] === 0; ) d.pop();
          }
          if (p) {
            if (e.e > g.maxE) {
              e.d = null;
              e.e = NaN;
            } else if (e.e < g.minE) {
              e.e = 0;
              e.d = [0];
            }
          }
          return e;
        }
        function finiteToString(e, t, r) {
          if (!e.isFinite()) return nonFiniteToString(e);
          var s,
            n = e.e,
            o = digitsToString(e.d),
            i = o.length;
          if (t) {
            if (r && (s = r - i) > 0) {
              o = o.charAt(0) + "." + o.slice(1) + getZeroString(s);
            } else if (i > 1) {
              o = o.charAt(0) + "." + o.slice(1);
            }
            o = o + (e.e < 0 ? "e" : "e+") + e.e;
          } else if (n < 0) {
            o = "0." + getZeroString(-n - 1) + o;
            if (r && (s = r - i) > 0) o += getZeroString(s);
          } else if (n >= i) {
            o += getZeroString(n + 1 - i);
            if (r && (s = r - n - 1) > 0) o = o + "." + getZeroString(s);
          } else {
            if ((s = n + 1) < i) o = o.slice(0, s) + "." + o.slice(s);
            if (r && (s = r - i) > 0) {
              if (n + 1 === i) o += ".";
              o += getZeroString(s);
            }
          }
          return o;
        }
        function getBase10Exponent(e, t) {
          var r = e[0];
          for (t *= v; r >= 10; r /= 10) t++;
          return t;
        }
        function getLn10(e, t, r) {
          if (t > _) {
            p = true;
            if (r) e.precision = r;
            throw Error(m);
          }
          return finalise(new e(o), t, 1, true);
        }
        function getPi(e, t, r) {
          if (t > S) throw Error(m);
          return finalise(new e(i), t, r, true);
        }
        function getPrecision(e) {
          var t = e.length - 1,
            r = t * v + 1;
          t = e[t];
          if (t) {
            for (; t % 10 == 0; t /= 10) r--;
            for (t = e[0]; t >= 10; t /= 10) r++;
          }
          return r;
        }
        function getZeroString(e) {
          var t = "";
          for (; e--; ) t += "0";
          return t;
        }
        function intPow(e, t, r, s) {
          var n,
            o = new e(1),
            i = Math.ceil(s / v + 4);
          p = false;
          for (;;) {
            if (r % 2) {
              o = o.times(t);
              if (truncate(o.d, i)) n = true;
            }
            r = I(r / 2);
            if (r === 0) {
              r = o.d.length - 1;
              if (n && o.d[r] === 0) ++o.d[r];
              break;
            }
            t = t.times(t);
            truncate(t.d, i);
          }
          p = true;
          return o;
        }
        function isOdd(e) {
          return e.d[e.d.length - 1] & 1;
        }
        function maxOrMin(e, t, r) {
          var s,
            n = new e(t[0]),
            o = 0;
          for (; ++o < t.length; ) {
            s = new e(t[o]);
            if (!s.s) {
              n = s;
              break;
            } else if (n[r](s)) {
              n = s;
            }
          }
          return n;
        }
        function naturalExponential(e, t) {
          var r,
            s,
            n,
            o,
            i,
            a,
            A,
            l = 0,
            c = 0,
            d = 0,
            u = e.constructor,
            g = u.rounding,
            m = u.precision;
          if (!e.d || !e.d[0] || e.e > 17) {
            return new u(e.d ? (!e.d[0] ? 1 : e.s < 0 ? 0 : 1 / 0) : e.s ? (e.s < 0 ? 0 : e) : 0 / 0);
          }
          if (t == null) {
            p = false;
            A = m;
          } else {
            A = t;
          }
          a = new u(0.03125);
          while (e.e > -2) {
            e = e.times(a);
            d += 5;
          }
          s = ((Math.log(C(2, d)) / Math.LN10) * 2 + 5) | 0;
          A += s;
          r = o = i = new u(1);
          u.precision = A;
          for (;;) {
            o = finalise(o.times(e), A, 1);
            r = r.times(++c);
            a = i.plus(D(o, r, A, 1));
            if (digitsToString(a.d).slice(0, A) === digitsToString(i.d).slice(0, A)) {
              n = d;
              while (n--) i = finalise(i.times(i), A, 1);
              if (t == null) {
                if (l < 3 && checkRoundingDigits(i.d, A - s, g, l)) {
                  u.precision = A += 10;
                  r = o = a = new u(1);
                  c = 0;
                  l++;
                } else {
                  return finalise(i, (u.precision = m), g, (p = true));
                }
              } else {
                u.precision = m;
                return i;
              }
            }
            i = a;
          }
        }
        function naturalLogarithm(e, t) {
          var r,
            s,
            n,
            o,
            i,
            a,
            A,
            l,
            c,
            d,
            u,
            g = 1,
            m = 10,
            h = e,
            E = h.d,
            I = h.constructor,
            C = I.rounding,
            y = I.precision;
          if (h.s < 0 || !E || !E[0] || (!h.e && E[0] == 1 && E.length == 1)) {
            return new I(E && !E[0] ? -1 / 0 : h.s != 1 ? NaN : E ? 0 : h);
          }
          if (t == null) {
            p = false;
            c = y;
          } else {
            c = t;
          }
          I.precision = c += m;
          r = digitsToString(E);
          s = r.charAt(0);
          if (Math.abs((o = h.e)) < 15e14) {
            while ((s < 7 && s != 1) || (s == 1 && r.charAt(1) > 3)) {
              h = h.times(e);
              r = digitsToString(h.d);
              s = r.charAt(0);
              g++;
            }
            o = h.e;
            if (s > 1) {
              h = new I("0." + r);
              o++;
            } else {
              h = new I(s + "." + r.slice(1));
            }
          } else {
            l = getLn10(I, c + 2, y).times(o + "");
            h = naturalLogarithm(new I(s + "." + r.slice(1)), c - m).plus(l);
            I.precision = y;
            return t == null ? finalise(h, y, C, (p = true)) : h;
          }
          d = h;
          A = i = h = D(h.minus(1), h.plus(1), c, 1);
          u = finalise(h.times(h), c, 1);
          n = 3;
          for (;;) {
            i = finalise(i.times(u), c, 1);
            l = A.plus(D(i, new I(n), c, 1));
            if (digitsToString(l.d).slice(0, c) === digitsToString(A.d).slice(0, c)) {
              A = A.times(2);
              if (o !== 0) A = A.plus(getLn10(I, c + 2, y).times(o + ""));
              A = D(A, new I(g), c, 1);
              if (t == null) {
                if (checkRoundingDigits(A.d, c - m, C, a)) {
                  I.precision = c += m;
                  l = i = h = D(d.minus(1), d.plus(1), c, 1);
                  u = finalise(h.times(h), c, 1);
                  n = a = 1;
                } else {
                  return finalise(A, (I.precision = y), C, (p = true));
                }
              } else {
                I.precision = y;
                return A;
              }
            }
            A = l;
            n += 2;
          }
        }
        function nonFiniteToString(e) {
          return String((e.s * e.s) / 0);
        }
        function parseDecimal(e, t) {
          var r, s, n;
          if ((r = t.indexOf(".")) > -1) t = t.replace(".", "");
          if ((s = t.search(/e/i)) > 0) {
            if (r < 0) r = s;
            r += +t.slice(s + 1);
            t = t.substring(0, s);
          } else if (r < 0) {
            r = t.length;
          }
          for (s = 0; t.charCodeAt(s) === 48; s++);
          for (n = t.length; t.charCodeAt(n - 1) === 48; --n);
          t = t.slice(s, n);
          if (t) {
            n -= s;
            e.e = r = r - s - 1;
            e.d = [];
            s = (r + 1) % v;
            if (r < 0) s += v;
            if (s < n) {
              if (s) e.d.push(+t.slice(0, s));
              for (n -= v; s < n; ) e.d.push(+t.slice(s, (s += v)));
              t = t.slice(s);
              s = v - t.length;
            } else {
              s -= n;
            }
            for (; s--; ) t += "0";
            e.d.push(+t);
            if (p) {
              if (e.e > e.constructor.maxE) {
                e.d = null;
                e.e = NaN;
              } else if (e.e < e.constructor.minE) {
                e.e = 0;
                e.d = [0];
              }
            }
          } else {
            e.e = 0;
            e.d = [0];
          }
          return e;
        }
        function parseOther(e, t) {
          var r, s, n, o, i, a, l, c, d;
          if (t.indexOf("_") > -1) {
            t = t.replace(/(\d)_(?=\d)/g, "$1");
            if (b.test(t)) return parseDecimal(e, t);
          } else if (t === "Infinity" || t === "NaN") {
            if (!+t) e.s = NaN;
            e.e = NaN;
            e.d = null;
            return e;
          }
          if (B.test(t)) {
            r = 16;
            t = t.toLowerCase();
          } else if (y.test(t)) {
            r = 2;
          } else if (Q.test(t)) {
            r = 8;
          } else {
            throw Error(g + t);
          }
          o = t.search(/p/i);
          if (o > 0) {
            l = +t.slice(o + 1);
            t = t.substring(2, o);
          } else {
            t = t.slice(2);
          }
          o = t.indexOf(".");
          i = o >= 0;
          s = e.constructor;
          if (i) {
            t = t.replace(".", "");
            a = t.length;
            o = a - o;
            n = intPow(s, new s(r), o, o * 2);
          }
          c = convertBase(t, r, w);
          d = c.length - 1;
          for (o = d; c[o] === 0; --o) c.pop();
          if (o < 0) return new s(e.s * 0);
          e.e = getBase10Exponent(c, d);
          e.d = c;
          p = false;
          if (i) e = D(e, n, a * 4);
          if (l) e = e.times(Math.abs(l) < 54 ? C(2, l) : A.pow(2, l));
          p = true;
          return e;
        }
        function sine(e, t) {
          var r,
            s = t.d.length;
          if (s < 3) {
            return t.isZero() ? t : taylorSeries(e, 2, t, t);
          }
          r = 1.4 * Math.sqrt(s);
          r = r > 16 ? 16 : r | 0;
          t = t.times(1 / tinyPow(5, r));
          t = taylorSeries(e, 2, t, t);
          var n,
            o = new e(5),
            i = new e(16),
            a = new e(20);
          for (; r--; ) {
            n = t.times(t);
            t = t.times(o.plus(n.times(i.times(n).minus(a))));
          }
          return t;
        }
        function taylorSeries(e, t, r, s, n) {
          var o,
            i,
            a,
            A,
            l = 1,
            c = e.precision,
            d = Math.ceil(c / v);
          p = false;
          A = r.times(r);
          a = new e(s);
          for (;;) {
            i = D(a.times(A), new e(t++ * t++), c, 1);
            a = n ? s.plus(i) : s.minus(i);
            s = D(i.times(A), new e(t++ * t++), c, 1);
            i = a.plus(s);
            if (i.d[d] !== void 0) {
              for (o = d; i.d[o] === a.d[o] && o--; );
              if (o == -1) break;
            }
            o = a;
            a = s;
            s = i;
            i = o;
            l++;
          }
          p = true;
          i.d.length = d + 1;
          return i;
        }
        function tinyPow(e, t) {
          var r = e;
          while (--t) r *= e;
          return r;
        }
        function toLessThanHalfPi(e, t) {
          var r,
            s = t.s < 0,
            n = getPi(e, e.precision, 1),
            o = n.times(0.5);
          t = t.abs();
          if (t.lte(o)) {
            d = s ? 4 : 1;
            return t;
          }
          r = t.divToInt(n);
          if (r.isZero()) {
            d = s ? 3 : 2;
          } else {
            t = t.minus(r.times(n));
            if (t.lte(o)) {
              d = isOdd(r) ? (s ? 2 : 3) : s ? 4 : 1;
              return t;
            }
            d = isOdd(r) ? (s ? 1 : 4) : s ? 3 : 2;
          }
          return t.minus(n).abs();
        }
        function toStringBinary(e, t, r, o) {
          var i,
            a,
            A,
            c,
            d,
            p,
            u,
            g,
            m,
            h = e.constructor,
            E = r !== void 0;
          if (E) {
            checkInt32(r, 1, s);
            if (o === void 0) o = h.rounding;
            else checkInt32(o, 0, 8);
          } else {
            r = h.precision;
            o = h.rounding;
          }
          if (!e.isFinite()) {
            u = nonFiniteToString(e);
          } else {
            u = finiteToString(e);
            A = u.indexOf(".");
            if (E) {
              i = 2;
              if (t == 16) {
                r = r * 4 - 3;
              } else if (t == 8) {
                r = r * 3 - 2;
              }
            } else {
              i = t;
            }
            if (A >= 0) {
              u = u.replace(".", "");
              m = new h(1);
              m.e = u.length - A;
              m.d = convertBase(finiteToString(m), 10, i);
              m.e = m.d.length;
            }
            g = convertBase(u, 10, i);
            a = d = g.length;
            for (; g[--d] == 0; ) g.pop();
            if (!g[0]) {
              u = E ? "0p+0" : "0";
            } else {
              if (A < 0) {
                a--;
              } else {
                e = new h(e);
                e.d = g;
                e.e = a;
                e = D(e, m, r, o, 0, i);
                g = e.d;
                a = e.e;
                p = l;
              }
              A = g[r];
              c = i / 2;
              p = p || g[r + 1] !== void 0;
              p =
                o < 4
                  ? (A !== void 0 || p) && (o === 0 || o === (e.s < 0 ? 3 : 2))
                  : A > c || (A === c && (o === 4 || p || (o === 6 && g[r - 1] & 1) || o === (e.s < 0 ? 8 : 7)));
              g.length = r;
              if (p) {
                for (; ++g[--r] > i - 1; ) {
                  g[r] = 0;
                  if (!r) {
                    ++a;
                    g.unshift(1);
                  }
                }
              }
              for (d = g.length; !g[d - 1]; --d);
              for (A = 0, u = ""; A < d; A++) u += n.charAt(g[A]);
              if (E) {
                if (d > 1) {
                  if (t == 16 || t == 8) {
                    A = t == 16 ? 4 : 3;
                    for (--d; d % A; d++) u += "0";
                    g = convertBase(u, i, t);
                    for (d = g.length; !g[d - 1]; --d);
                    for (A = 1, u = "1."; A < d; A++) u += n.charAt(g[A]);
                  } else {
                    u = u.charAt(0) + "." + u.slice(1);
                  }
                }
                u = u + (a < 0 ? "p" : "p+") + a;
              } else if (a < 0) {
                for (; ++a; ) u = "0" + u;
                u = "0." + u;
              } else {
                if (++a > d) for (a -= d; a--; ) u += "0";
                else if (a < d) u = u.slice(0, a) + "." + u.slice(a);
              }
            }
            u = (t == 16 ? "0x" : t == 2 ? "0b" : t == 8 ? "0o" : "") + u;
          }
          return e.s < 0 ? "-" + u : u;
        }
        function truncate(e, t) {
          if (e.length > t) {
            e.length = t;
            return true;
          }
        }
        function abs(e) {
          return new this(e).abs();
        }
        function acos(e) {
          return new this(e).acos();
        }
        function acosh(e) {
          return new this(e).acosh();
        }
        function add(e, t) {
          return new this(e).plus(t);
        }
        function asin(e) {
          return new this(e).asin();
        }
        function asinh(e) {
          return new this(e).asinh();
        }
        function atan(e) {
          return new this(e).atan();
        }
        function atanh(e) {
          return new this(e).atanh();
        }
        function atan2(e, t) {
          e = new this(e);
          t = new this(t);
          var r,
            s = this.precision,
            n = this.rounding,
            o = s + 4;
          if (!e.s || !t.s) {
            r = new this(NaN);
          } else if (!e.d && !t.d) {
            r = getPi(this, o, 1).times(t.s > 0 ? 0.25 : 0.75);
            r.s = e.s;
          } else if (!t.d || e.isZero()) {
            r = t.s < 0 ? getPi(this, s, n) : new this(0);
            r.s = e.s;
          } else if (!e.d || t.isZero()) {
            r = getPi(this, o, 1).times(0.5);
            r.s = e.s;
          } else if (t.s < 0) {
            this.precision = o;
            this.rounding = 1;
            r = this.atan(D(e, t, o, 1));
            t = getPi(this, o, 1);
            this.precision = s;
            this.rounding = n;
            r = e.s < 0 ? r.minus(t) : r.plus(t);
          } else {
            r = this.atan(D(e, t, o, 1));
          }
          return r;
        }
        function cbrt(e) {
          return new this(e).cbrt();
        }
        function ceil(e) {
          return finalise((e = new this(e)), e.e + 1, 2);
        }
        function clamp(e, t, r) {
          return new this(e).clamp(t, r);
        }
        function config(e) {
          if (!e || typeof e !== "object") throw Error(u + "Object expected");
          var t,
            n,
            o,
            i = e.defaults === true,
            A = ["precision", 1, s, "rounding", 0, 8, "toExpNeg", -r, 0, "toExpPos", 0, r, "maxE", 0, r, "minE", -r, 0, "modulo", 0, 9];
          for (t = 0; t < A.length; t += 3) {
            if (((n = A[t]), i)) this[n] = a[n];
            if ((o = e[n]) !== void 0) {
              if (I(o) === o && o >= A[t + 1] && o <= A[t + 2]) this[n] = o;
              else throw Error(g + n + ": " + o);
            }
          }
          if (((n = "crypto"), i)) this[n] = a[n];
          if ((o = e[n]) !== void 0) {
            if (o === true || o === false || o === 0 || o === 1) {
              if (o) {
                if (typeof crypto != "undefined" && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
                  this[n] = true;
                } else {
                  throw Error(h);
                }
              } else {
                this[n] = false;
              }
            } else {
              throw Error(g + n + ": " + o);
            }
          }
          return this;
        }
        function cos(e) {
          return new this(e).cos();
        }
        function cosh(e) {
          return new this(e).cosh();
        }
        function clone(e) {
          var t, r, s;
          function Decimal(e) {
            var t,
              r,
              s,
              n = this;
            if (!(n instanceof Decimal)) return new Decimal(e);
            n.constructor = Decimal;
            if (isDecimalInstance(e)) {
              n.s = e.s;
              if (p) {
                if (!e.d || e.e > Decimal.maxE) {
                  n.e = NaN;
                  n.d = null;
                } else if (e.e < Decimal.minE) {
                  n.e = 0;
                  n.d = [0];
                } else {
                  n.e = e.e;
                  n.d = e.d.slice();
                }
              } else {
                n.e = e.e;
                n.d = e.d ? e.d.slice() : e.d;
              }
              return;
            }
            s = typeof e;
            if (s === "number") {
              if (e === 0) {
                n.s = 1 / e < 0 ? -1 : 1;
                n.e = 0;
                n.d = [0];
                return;
              }
              if (e < 0) {
                e = -e;
                n.s = -1;
              } else {
                n.s = 1;
              }
              if (e === ~~e && e < 1e7) {
                for (t = 0, r = e; r >= 10; r /= 10) t++;
                if (p) {
                  if (t > Decimal.maxE) {
                    n.e = NaN;
                    n.d = null;
                  } else if (t < Decimal.minE) {
                    n.e = 0;
                    n.d = [0];
                  } else {
                    n.e = t;
                    n.d = [e];
                  }
                } else {
                  n.e = t;
                  n.d = [e];
                }
                return;
              } else if (e * 0 !== 0) {
                if (!e) n.s = NaN;
                n.e = NaN;
                n.d = null;
                return;
              }
              return parseDecimal(n, e.toString());
            } else if (s !== "string") {
              throw Error(g + e);
            }
            if ((r = e.charCodeAt(0)) === 45) {
              e = e.slice(1);
              n.s = -1;
            } else {
              if (r === 43) e = e.slice(1);
              n.s = 1;
            }
            return b.test(e) ? parseDecimal(n, e) : parseOther(n, e);
          }
          Decimal.prototype = R;
          Decimal.ROUND_UP = 0;
          Decimal.ROUND_DOWN = 1;
          Decimal.ROUND_CEIL = 2;
          Decimal.ROUND_FLOOR = 3;
          Decimal.ROUND_HALF_UP = 4;
          Decimal.ROUND_HALF_DOWN = 5;
          Decimal.ROUND_HALF_EVEN = 6;
          Decimal.ROUND_HALF_CEIL = 7;
          Decimal.ROUND_HALF_FLOOR = 8;
          Decimal.EUCLID = 9;
          Decimal.config = Decimal.set = config;
          Decimal.clone = clone;
          Decimal.isDecimal = isDecimalInstance;
          Decimal.abs = abs;
          Decimal.acos = acos;
          Decimal.acosh = acosh;
          Decimal.add = add;
          Decimal.asin = asin;
          Decimal.asinh = asinh;
          Decimal.atan = atan;
          Decimal.atanh = atanh;
          Decimal.atan2 = atan2;
          Decimal.cbrt = cbrt;
          Decimal.ceil = ceil;
          Decimal.clamp = clamp;
          Decimal.cos = cos;
          Decimal.cosh = cosh;
          Decimal.div = div;
          Decimal.exp = exp;
          Decimal.floor = floor;
          Decimal.hypot = hypot;
          Decimal.ln = ln;
          Decimal.log = log;
          Decimal.log10 = log10;
          Decimal.log2 = log2;
          Decimal.max = max;
          Decimal.min = min;
          Decimal.mod = mod;
          Decimal.mul = mul;
          Decimal.pow = pow;
          Decimal.random = random;
          Decimal.round = round;
          Decimal.sign = sign;
          Decimal.sin = sin;
          Decimal.sinh = sinh;
          Decimal.sqrt = sqrt;
          Decimal.sub = sub;
          Decimal.sum = sum;
          Decimal.tan = tan;
          Decimal.tanh = tanh;
          Decimal.trunc = trunc;
          if (e === void 0) e = {};
          if (e) {
            if (e.defaults !== true) {
              s = ["precision", "rounding", "toExpNeg", "toExpPos", "maxE", "minE", "modulo", "crypto"];
              for (t = 0; t < s.length; ) if (!e.hasOwnProperty((r = s[t++]))) e[r] = this[r];
            }
          }
          Decimal.config(e);
          return Decimal;
        }
        function div(e, t) {
          return new this(e).div(t);
        }
        function exp(e) {
          return new this(e).exp();
        }
        function floor(e) {
          return finalise((e = new this(e)), e.e + 1, 3);
        }
        function hypot() {
          var e,
            t,
            r = new this(0);
          p = false;
          for (e = 0; e < arguments.length; ) {
            t = new this(arguments[e++]);
            if (!t.d) {
              if (t.s) {
                p = true;
                return new this(1 / 0);
              }
              r = t;
            } else if (r.d) {
              r = r.plus(t.times(t));
            }
          }
          p = true;
          return r.sqrt();
        }
        function isDecimalInstance(e) {
          return e instanceof A || (e && e.toStringTag === E) || false;
        }
        function ln(e) {
          return new this(e).ln();
        }
        function log(e, t) {
          return new this(e).log(t);
        }
        function log2(e) {
          return new this(e).log(2);
        }
        function log10(e) {
          return new this(e).log(10);
        }
        function max() {
          return maxOrMin(this, arguments, "lt");
        }
        function min() {
          return maxOrMin(this, arguments, "gt");
        }
        function mod(e, t) {
          return new this(e).mod(t);
        }
        function mul(e, t) {
          return new this(e).mul(t);
        }
        function pow(e, t) {
          return new this(e).pow(t);
        }
        function random(e) {
          var t,
            r,
            n,
            o,
            i = 0,
            a = new this(1),
            A = [];
          if (e === void 0) e = this.precision;
          else checkInt32(e, 1, s);
          n = Math.ceil(e / v);
          if (!this.crypto) {
            for (; i < n; ) A[i++] = (Math.random() * 1e7) | 0;
          } else if (crypto.getRandomValues) {
            t = crypto.getRandomValues(new Uint32Array(n));
            for (; i < n; ) {
              o = t[i];
              if (o >= 429e7) {
                t[i] = crypto.getRandomValues(new Uint32Array(1))[0];
              } else {
                A[i++] = o % 1e7;
              }
            }
          } else if (crypto.randomBytes) {
            t = crypto.randomBytes((n *= 4));
            for (; i < n; ) {
              o = t[i] + (t[i + 1] << 8) + (t[i + 2] << 16) + ((t[i + 3] & 127) << 24);
              if (o >= 214e7) {
                crypto.randomBytes(4).copy(t, i);
              } else {
                A.push(o % 1e7);
                i += 4;
              }
            }
            i = n / 4;
          } else {
            throw Error(h);
          }
          n = A[--i];
          e %= v;
          if (n && e) {
            o = C(10, v - e);
            A[i] = ((n / o) | 0) * o;
          }
          for (; A[i] === 0; i--) A.pop();
          if (i < 0) {
            r = 0;
            A = [0];
          } else {
            r = -1;
            for (; A[0] === 0; r -= v) A.shift();
            for (n = 1, o = A[0]; o >= 10; o /= 10) n++;
            if (n < v) r -= v - n;
          }
          a.e = r;
          a.d = A;
          return a;
        }
        function round(e) {
          return finalise((e = new this(e)), e.e + 1, this.rounding);
        }
        function sign(e) {
          e = new this(e);
          return e.d ? (e.d[0] ? e.s : 0 * e.s) : e.s || NaN;
        }
        function sin(e) {
          return new this(e).sin();
        }
        function sinh(e) {
          return new this(e).sinh();
        }
        function sqrt(e) {
          return new this(e).sqrt();
        }
        function sub(e, t) {
          return new this(e).sub(t);
        }
        function sum() {
          var e = 0,
            t = arguments,
            r = new this(t[e]);
          p = false;
          for (; r.s && ++e < t.length; ) r = r.plus(t[e]);
          p = true;
          return finalise(r, this.precision, this.rounding);
        }
        function tan(e) {
          return new this(e).tan();
        }
        function tanh(e) {
          return new this(e).tanh();
        }
        function trunc(e) {
          return finalise((e = new this(e)), e.e + 1, 1);
        }
        A = clone(a);
        A.prototype.constructor = A;
        A["default"] = A.Decimal = A;
        o = new A(o);
        i = new A(i);
        if (typeof define == "function" && define.amd) {
          define(function () {
            return A;
          });
        } else if (true && e.exports) {
          if (typeof Symbol == "function" && typeof Symbol.iterator == "symbol") {
            R[Symbol["for"]("nodejs.util.inspect.custom")] = R.toString;
            R[Symbol.toStringTag] = "Decimal";
          }
          e.exports = A;
        } else {
          if (!t) {
            t = typeof self != "undefined" && self && self.self == self ? self : window;
          }
          c = t.Decimal;
          A.noConflict = function () {
            t.Decimal = c;
            return A;
          };
          t.Decimal = A;
        }
      })(this);
    },
    14150: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      class Deprecation extends Error {
        constructor(e) {
          super(e);
          if (Error.captureStackTrace) {
            Error.captureStackTrace(this, this.constructor);
          }
          this.name = "Deprecation";
        }
      }
      t.Deprecation = Deprecation;
    },
    52874: (e, t, r) => {
      (function () {
        r(18889).config(Object.assign({}, r(39990), r(4531)(process.argv)));
      })();
    },
    4531: (e) => {
      const t = /^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/;
      e.exports = function optionMatcher(e) {
        return e.reduce(function (e, r) {
          const s = r.match(t);
          if (s) {
            e[s[1]] = s[2];
          }
          return e;
        }, {});
      };
    },
    39990: (e) => {
      const t = {};
      if (process.env.DOTENV_CONFIG_ENCODING != null) {
        t.encoding = process.env.DOTENV_CONFIG_ENCODING;
      }
      if (process.env.DOTENV_CONFIG_PATH != null) {
        t.path = process.env.DOTENV_CONFIG_PATH;
      }
      if (process.env.DOTENV_CONFIG_DEBUG != null) {
        t.debug = process.env.DOTENV_CONFIG_DEBUG;
      }
      if (process.env.DOTENV_CONFIG_OVERRIDE != null) {
        t.override = process.env.DOTENV_CONFIG_OVERRIDE;
      }
      if (process.env.DOTENV_CONFIG_DOTENV_KEY != null) {
        t.DOTENV_KEY = process.env.DOTENV_CONFIG_DOTENV_KEY;
      }
      e.exports = t;
    },
    18889: (e, t, r) => {
      const s = r(79896);
      const n = r(16928);
      const o = r(70857);
      const i = r(76982);
      const a = r(80056);
      const A = a.version;
      const l = /(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;
      function parse(e) {
        const t = {};
        let r = e.toString();
        r = r.replace(/\r\n?/gm, "\n");
        let s;
        while ((s = l.exec(r)) != null) {
          const e = s[1];
          let r = s[2] || "";
          r = r.trim();
          const n = r[0];
          r = r.replace(/^(['"`])([\s\S]*)\1$/gm, "$2");
          if (n === '"') {
            r = r.replace(/\\n/g, "\n");
            r = r.replace(/\\r/g, "\r");
          }
          t[e] = r;
        }
        return t;
      }
      function _parseVault(e) {
        const t = _vaultPath(e);
        const r = c.configDotenv({ path: t });
        if (!r.parsed) {
          const e = new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);
          e.code = "MISSING_DATA";
          throw e;
        }
        const s = _dotenvKey(e).split(",");
        const n = s.length;
        let o;
        for (let e = 0; e < n; e++) {
          try {
            const t = s[e].trim();
            const n = _instructions(r, t);
            o = c.decrypt(n.ciphertext, n.key);
            break;
          } catch (t) {
            if (e + 1 >= n) {
              throw t;
            }
          }
        }
        return c.parse(o);
      }
      function _log(e) {
        console.log(`[dotenv@${A}][INFO] ${e}`);
      }
      function _warn(e) {
        console.log(`[dotenv@${A}][WARN] ${e}`);
      }
      function _debug(e) {
        console.log(`[dotenv@${A}][DEBUG] ${e}`);
      }
      function _dotenvKey(e) {
        if (e && e.DOTENV_KEY && e.DOTENV_KEY.length > 0) {
          return e.DOTENV_KEY;
        }
        if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {
          return process.env.DOTENV_KEY;
        }
        return "";
      }
      function _instructions(e, t) {
        let r;
        try {
          r = new URL(t);
        } catch (e) {
          if (e.code === "ERR_INVALID_URL") {
            const e = new Error(
              "INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development"
            );
            e.code = "INVALID_DOTENV_KEY";
            throw e;
          }
          throw e;
        }
        const s = r.password;
        if (!s) {
          const e = new Error("INVALID_DOTENV_KEY: Missing key part");
          e.code = "INVALID_DOTENV_KEY";
          throw e;
        }
        const n = r.searchParams.get("environment");
        if (!n) {
          const e = new Error("INVALID_DOTENV_KEY: Missing environment part");
          e.code = "INVALID_DOTENV_KEY";
          throw e;
        }
        const o = `DOTENV_VAULT_${n.toUpperCase()}`;
        const i = e.parsed[o];
        if (!i) {
          const e = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${o} in your .env.vault file.`);
          e.code = "NOT_FOUND_DOTENV_ENVIRONMENT";
          throw e;
        }
        return { ciphertext: i, key: s };
      }
      function _vaultPath(e) {
        let t = null;
        if (e && e.path && e.path.length > 0) {
          if (Array.isArray(e.path)) {
            for (const r of e.path) {
              if (s.existsSync(r)) {
                t = r.endsWith(".vault") ? r : `${r}.vault`;
              }
            }
          } else {
            t = e.path.endsWith(".vault") ? e.path : `${e.path}.vault`;
          }
        } else {
          t = n.resolve(process.cwd(), ".env.vault");
        }
        if (s.existsSync(t)) {
          return t;
        }
        return null;
      }
      function _resolveHome(e) {
        return e[0] === "~" ? n.join(o.homedir(), e.slice(1)) : e;
      }
      function _configVault(e) {
        _log("Loading env from encrypted .env.vault");
        const t = c._parseVault(e);
        let r = process.env;
        if (e && e.processEnv != null) {
          r = e.processEnv;
        }
        c.populate(r, t, e);
        return { parsed: t };
      }
      function configDotenv(e) {
        const t = n.resolve(process.cwd(), ".env");
        let r = "utf8";
        const o = Boolean(e && e.debug);
        if (e && e.encoding) {
          r = e.encoding;
        } else {
          if (o) {
            _debug("No encoding is specified. UTF-8 is used by default");
          }
        }
        let i = [t];
        if (e && e.path) {
          if (!Array.isArray(e.path)) {
            i = [_resolveHome(e.path)];
          } else {
            i = [];
            for (const t of e.path) {
              i.push(_resolveHome(t));
            }
          }
        }
        let a;
        const A = {};
        for (const t of i) {
          try {
            const n = c.parse(s.readFileSync(t, { encoding: r }));
            c.populate(A, n, e);
          } catch (e) {
            if (o) {
              _debug(`Failed to load ${t} ${e.message}`);
            }
            a = e;
          }
        }
        let l = process.env;
        if (e && e.processEnv != null) {
          l = e.processEnv;
        }
        c.populate(l, A, e);
        if (a) {
          return { parsed: A, error: a };
        } else {
          return { parsed: A };
        }
      }
      function config(e) {
        if (_dotenvKey(e).length === 0) {
          return c.configDotenv(e);
        }
        const t = _vaultPath(e);
        if (!t) {
          _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`);
          return c.configDotenv(e);
        }
        return c._configVault(e);
      }
      function decrypt(e, t) {
        const r = Buffer.from(t.slice(-64), "hex");
        let s = Buffer.from(e, "base64");
        const n = s.subarray(0, 12);
        const o = s.subarray(-16);
        s = s.subarray(12, -16);
        try {
          const e = i.createDecipheriv("aes-256-gcm", r, n);
          e.setAuthTag(o);
          return `${e.update(s)}${e.final()}`;
        } catch (e) {
          const t = e instanceof RangeError;
          const r = e.message === "Invalid key length";
          const s = e.message === "Unsupported state or unable to authenticate data";
          if (t || r) {
            const e = new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");
            e.code = "INVALID_DOTENV_KEY";
            throw e;
          } else if (s) {
            const e = new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");
            e.code = "DECRYPTION_FAILED";
            throw e;
          } else {
            throw e;
          }
        }
      }
      function populate(e, t, r = {}) {
        const s = Boolean(r && r.debug);
        const n = Boolean(r && r.override);
        if (typeof t !== "object") {
          const e = new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");
          e.code = "OBJECT_REQUIRED";
          throw e;
        }
        for (const r of Object.keys(t)) {
          if (Object.prototype.hasOwnProperty.call(e, r)) {
            if (n === true) {
              e[r] = t[r];
            }
            if (s) {
              if (n === true) {
                _debug(`"${r}" is already defined and WAS overwritten`);
              } else {
                _debug(`"${r}" is already defined and was NOT overwritten`);
              }
            }
          } else {
            e[r] = t[r];
          }
        }
      }
      const c = {
        configDotenv: configDotenv,
        _configVault: _configVault,
        _parseVault: _parseVault,
        config: config,
        decrypt: decrypt,
        parse: parse,
        populate: populate,
      };
      e.exports.configDotenv = c.configDotenv;
      e.exports._configVault = c._configVault;
      e.exports._parseVault = c._parseVault;
      e.exports.config = c.config;
      e.exports.decrypt = c.decrypt;
      e.exports.parse = c.parse;
      e.exports.populate = c.populate;
      e.exports = c;
    },
    55560: (e, t, r) => {
      var s = r(58264);
      e.exports = s(once);
      e.exports.strict = s(onceStrict);
      once.proto = once(function () {
        Object.defineProperty(Function.prototype, "once", {
          value: function () {
            return once(this);
          },
          configurable: true,
        });
        Object.defineProperty(Function.prototype, "onceStrict", {
          value: function () {
            return onceStrict(this);
          },
          configurable: true,
        });
      });
      function once(e) {
        var f = function () {
          if (f.called) return f.value;
          f.called = true;
          return (f.value = e.apply(this, arguments));
        };
        f.called = false;
        return f;
      }
      function onceStrict(e) {
        var f = function () {
          if (f.called) throw new Error(f.onceError);
          f.called = true;
          return (f.value = e.apply(this, arguments));
        };
        var t = e.name || "Function wrapped with `once`";
        f.onceError = t + " shouldn't be called more than once";
        f.called = false;
        return f;
      }
    },
    1552: (e, t, r) => {
      "use strict";
      var s = r(24876);
      var n = r(92472);
      var o = { TRANSITIONAL: 0, NONTRANSITIONAL: 1 };
      function normalize(e) {
        return e
          .split("\0")
          .map(function (e) {
            return e.normalize("NFC");
          })
          .join("\0");
      }
      function findStatus(e) {
        var t = 0;
        var r = n.length - 1;
        while (t <= r) {
          var s = Math.floor((t + r) / 2);
          var o = n[s];
          if (o[0][0] <= e && o[0][1] >= e) {
            return o;
          } else if (o[0][0] > e) {
            r = s - 1;
          } else {
            t = s + 1;
          }
        }
        return null;
      }
      var i = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
      function countSymbols(e) {
        return e.replace(i, "_").length;
      }
      function mapChars(e, t, r) {
        var s = false;
        var n = "";
        var i = countSymbols(e);
        for (var a = 0; a < i; ++a) {
          var A = e.codePointAt(a);
          var l = findStatus(A);
          switch (l[1]) {
            case "disallowed":
              s = true;
              n += String.fromCodePoint(A);
              break;
            case "ignored":
              break;
            case "mapped":
              n += String.fromCodePoint.apply(String, l[2]);
              break;
            case "deviation":
              if (r === o.TRANSITIONAL) {
                n += String.fromCodePoint.apply(String, l[2]);
              } else {
                n += String.fromCodePoint(A);
              }
              break;
            case "valid":
              n += String.fromCodePoint(A);
              break;
            case "disallowed_STD3_mapped":
              if (t) {
                s = true;
                n += String.fromCodePoint(A);
              } else {
                n += String.fromCodePoint.apply(String, l[2]);
              }
              break;
            case "disallowed_STD3_valid":
              if (t) {
                s = true;
              }
              n += String.fromCodePoint(A);
              break;
          }
        }
        return { string: n, error: s };
      }
      var a =
        /[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;
      function validateLabel(e, t) {
        if (e.substr(0, 4) === "xn--") {
          e = s.toUnicode(e);
          t = o.NONTRANSITIONAL;
        }
        var r = false;
        if (normalize(e) !== e || (e[3] === "-" && e[4] === "-") || e[0] === "-" || e[e.length - 1] === "-" || e.indexOf(".") !== -1 || e.search(a) === 0) {
          r = true;
        }
        var n = countSymbols(e);
        for (var i = 0; i < n; ++i) {
          var A = findStatus(e.codePointAt(i));
          if ((processing === o.TRANSITIONAL && A[1] !== "valid") || (processing === o.NONTRANSITIONAL && A[1] !== "valid" && A[1] !== "deviation")) {
            r = true;
            break;
          }
        }
        return { label: e, error: r };
      }
      function processing(e, t, r) {
        var s = mapChars(e, t, r);
        s.string = normalize(s.string);
        var n = s.string.split(".");
        for (var o = 0; o < n.length; ++o) {
          try {
            var i = validateLabel(n[o]);
            n[o] = i.label;
            s.error = s.error || i.error;
          } catch (e) {
            s.error = true;
          }
        }
        return { string: n.join("."), error: s.error };
      }
      e.exports.toASCII = function (e, t, r, n) {
        var o = processing(e, t, r);
        var i = o.string.split(".");
        i = i.map(function (e) {
          try {
            return s.toASCII(e);
          } catch (t) {
            o.error = true;
            return e;
          }
        });
        if (n) {
          var a = i.slice(0, i.length - 1).join(".").length;
          if (a.length > 253 || a.length === 0) {
            o.error = true;
          }
          for (var A = 0; A < i.length; ++A) {
            if (i.length > 63 || i.length === 0) {
              o.error = true;
              break;
            }
          }
        }
        if (o.error) return null;
        return i.join(".");
      };
      e.exports.toUnicode = function (e, t) {
        var r = processing(e, t, o.NONTRANSITIONAL);
        return { domain: r.string, error: r.error };
      };
      e.exports.PROCESSING_OPTIONS = o;
    },
    20770: (e, t, r) => {
      e.exports = r(20218);
    },
    20218: (e, t, r) => {
      "use strict";
      var s = r(69278);
      var n = r(64756);
      var o = r(58611);
      var i = r(65692);
      var a = r(24434);
      var A = r(42613);
      var l = r(39023);
      t.httpOverHttp = httpOverHttp;
      t.httpsOverHttp = httpsOverHttp;
      t.httpOverHttps = httpOverHttps;
      t.httpsOverHttps = httpsOverHttps;
      function httpOverHttp(e) {
        var t = new TunnelingAgent(e);
        t.request = o.request;
        return t;
      }
      function httpsOverHttp(e) {
        var t = new TunnelingAgent(e);
        t.request = o.request;
        t.createSocket = createSecureSocket;
        t.defaultPort = 443;
        return t;
      }
      function httpOverHttps(e) {
        var t = new TunnelingAgent(e);
        t.request = i.request;
        return t;
      }
      function httpsOverHttps(e) {
        var t = new TunnelingAgent(e);
        t.request = i.request;
        t.createSocket = createSecureSocket;
        t.defaultPort = 443;
        return t;
      }
      function TunnelingAgent(e) {
        var t = this;
        t.options = e || {};
        t.proxyOptions = t.options.proxy || {};
        t.maxSockets = t.options.maxSockets || o.Agent.defaultMaxSockets;
        t.requests = [];
        t.sockets = [];
        t.on("free", function onFree(e, r, s, n) {
          var o = toOptions(r, s, n);
          for (var i = 0, a = t.requests.length; i < a; ++i) {
            var A = t.requests[i];
            if (A.host === o.host && A.port === o.port) {
              t.requests.splice(i, 1);
              A.request.onSocket(e);
              return;
            }
          }
          e.destroy();
          t.removeSocket(e);
        });
      }
      l.inherits(TunnelingAgent, a.EventEmitter);
      TunnelingAgent.prototype.addRequest = function addRequest(e, t, r, s) {
        var n = this;
        var o = mergeOptions({ request: e }, n.options, toOptions(t, r, s));
        if (n.sockets.length >= this.maxSockets) {
          n.requests.push(o);
          return;
        }
        n.createSocket(o, function (t) {
          t.on("free", onFree);
          t.on("close", onCloseOrRemove);
          t.on("agentRemove", onCloseOrRemove);
          e.onSocket(t);
          function onFree() {
            n.emit("free", t, o);
          }
          function onCloseOrRemove(e) {
            n.removeSocket(t);
            t.removeListener("free", onFree);
            t.removeListener("close", onCloseOrRemove);
            t.removeListener("agentRemove", onCloseOrRemove);
          }
        });
      };
      TunnelingAgent.prototype.createSocket = function createSocket(e, t) {
        var r = this;
        var s = {};
        r.sockets.push(s);
        var n = mergeOptions({}, r.proxyOptions, { method: "CONNECT", path: e.host + ":" + e.port, agent: false, headers: { host: e.host + ":" + e.port } });
        if (e.localAddress) {
          n.localAddress = e.localAddress;
        }
        if (n.proxyAuth) {
          n.headers = n.headers || {};
          n.headers["Proxy-Authorization"] = "Basic " + new Buffer(n.proxyAuth).toString("base64");
        }
        c("making CONNECT request");
        var o = r.request(n);
        o.useChunkedEncodingByDefault = false;
        o.once("response", onResponse);
        o.once("upgrade", onUpgrade);
        o.once("connect", onConnect);
        o.once("error", onError);
        o.end();
        function onResponse(e) {
          e.upgrade = true;
        }
        function onUpgrade(e, t, r) {
          process.nextTick(function () {
            onConnect(e, t, r);
          });
        }
        function onConnect(n, i, a) {
          o.removeAllListeners();
          i.removeAllListeners();
          if (n.statusCode !== 200) {
            c("tunneling socket could not be established, statusCode=%d", n.statusCode);
            i.destroy();
            var A = new Error("tunneling socket could not be established, " + "statusCode=" + n.statusCode);
            A.code = "ECONNRESET";
            e.request.emit("error", A);
            r.removeSocket(s);
            return;
          }
          if (a.length > 0) {
            c("got illegal response body from proxy");
            i.destroy();
            var A = new Error("got illegal response body from proxy");
            A.code = "ECONNRESET";
            e.request.emit("error", A);
            r.removeSocket(s);
            return;
          }
          c("tunneling connection has established");
          r.sockets[r.sockets.indexOf(s)] = i;
          return t(i);
        }
        function onError(t) {
          o.removeAllListeners();
          c("tunneling socket could not be established, cause=%s\n", t.message, t.stack);
          var n = new Error("tunneling socket could not be established, " + "cause=" + t.message);
          n.code = "ECONNRESET";
          e.request.emit("error", n);
          r.removeSocket(s);
        }
      };
      TunnelingAgent.prototype.removeSocket = function removeSocket(e) {
        var t = this.sockets.indexOf(e);
        if (t === -1) {
          return;
        }
        this.sockets.splice(t, 1);
        var r = this.requests.shift();
        if (r) {
          this.createSocket(r, function (e) {
            r.request.onSocket(e);
          });
        }
      };
      function createSecureSocket(e, t) {
        var r = this;
        TunnelingAgent.prototype.createSocket.call(r, e, function (s) {
          var o = e.request.getHeader("host");
          var i = mergeOptions({}, r.options, { socket: s, servername: o ? o.replace(/:.*$/, "") : e.host });
          var a = n.connect(0, i);
          r.sockets[r.sockets.indexOf(s)] = a;
          t(a);
        });
      }
      function toOptions(e, t, r) {
        if (typeof e === "string") {
          return { host: e, port: t, localAddress: r };
        }
        return e;
      }
      function mergeOptions(e) {
        for (var t = 1, r = arguments.length; t < r; ++t) {
          var s = arguments[t];
          if (typeof s === "object") {
            var n = Object.keys(s);
            for (var o = 0, i = n.length; o < i; ++o) {
              var a = n[o];
              if (s[a] !== undefined) {
                e[a] = s[a];
              }
            }
          }
        }
        return e;
      }
      var c;
      if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
        c = function () {
          var e = Array.prototype.slice.call(arguments);
          if (typeof e[0] === "string") {
            e[0] = "TUNNEL: " + e[0];
          } else {
            e.unshift("TUNNEL:");
          }
          console.error.apply(console, e);
        };
      } else {
        c = function () {};
      }
      t.debug = c;
    },
    893: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__classPrivateFieldSet) ||
        function (e, t, r, s, n) {
          if (s === "m") throw new TypeError("Private method is not writable");
          if (s === "a" && !n) throw new TypeError("Private accessor was defined without a setter");
          if (typeof t === "function" ? e !== t || !n : !t.has(e))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
          return s === "a" ? n.call(e, r) : n ? (n.value = r) : t.set(e, r), r;
        };
      var n =
        (this && this.__classPrivateFieldGet) ||
        function (e, t, r, s) {
          if (r === "a" && !s) throw new TypeError("Private accessor was defined without a getter");
          if (typeof t === "function" ? e !== t || !s : !t.has(e))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
          return r === "m" ? s : r === "a" ? s.call(e) : s ? s.value : t.get(e);
        };
      var o;
      Object.defineProperty(t, "__esModule", { value: true });
      t.AbstractCompilingTypedUnionValidator = void 0;
      const i = r(45105);
      const a = r(25269);
      const A = r(73422);
      const l = r(17085);
      class AbstractCompilingTypedUnionValidator extends A.AbstractTypedUnionValidator {
        constructor(e) {
          super(e);
          o.set(this, void 0);
          s(this, o, new Array(e.anyOf.length), "f");
        }
        test(e) {
          const t = this.compiledFindSchemaMemberIndex(e);
          return this.compiledSchemaMemberTest(t, e);
        }
        errors(e) {
          const t = this.compiledFindSchemaMemberIndexOrError(e);
          if (typeof t !== "number") {
            return (0, l.createUnionTypeErrorIterable)(t);
          }
          return (0, l.createErrorsIterable)(i.Value.Errors(this.schema.anyOf[t], e));
        }
        assertReturningSchema(e, t) {
          const r = this.compiledFindSchemaMemberIndexOrError(e);
          if (typeof r !== "number") {
            (0, l.throwInvalidAssert)(t, r);
          }
          const s = this.schema.anyOf[r];
          if (!this.compiledSchemaMemberTest(r, e)) {
            (0, l.throwInvalidAssert)(t, i.Value.Errors(s, e).First());
          }
          return s;
        }
        validateReturningSchema(e, t) {
          const r = this.compiledFindSchemaMemberIndexOrError(e);
          if (typeof r !== "number") {
            (0, l.throwInvalidValidate)(t, r);
          }
          const s = this.schema.anyOf[r];
          if (!this.compiledSchemaMemberTest(r, e)) {
            (0, l.throwInvalidValidate)(t, i.Value.Errors(s, e));
          }
          return s;
        }
        compiledFindSchemaMemberIndexOrError(e) {
          const t = this.compiledFindSchemaMemberIndex(e);
          if (t === null) {
            return (0, l.createUnionTypeError)(this.schema, e);
          }
          return t;
        }
        compiledSchemaMemberTest(e, t) {
          if (e === null) {
            return false;
          }
          if (n(this, o, "f")[e] === undefined) {
            let t = a.TypeCompiler.Compile(this.schema.anyOf[e]).Code();
            t = t.replace(`(typeof value === 'object' && value !== null && !Array.isArray(value)) &&`, "");
            const r = t.indexOf("function");
            const s = t.indexOf("return", r);
            t = "return " + t.substring(t.indexOf("(", s), t.length - 1);
            n(this, o, "f")[e] = new Function("value", t);
          }
          return n(this, o, "f")[e](t);
        }
      }
      t.AbstractCompilingTypedUnionValidator = AbstractCompilingTypedUnionValidator;
      o = new WeakMap();
    },
    58453: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.AbstractStandardValidator = void 0;
      const s = r(29293);
      class AbstractStandardValidator extends s.AbstractValidator {
        constructor(e) {
          super(e);
        }
        assertAndClean(e, t) {
          this.assert(e, t);
          this.cleanValue(this.schema, e);
        }
        assertAndCleanCopy(e, t) {
          this.assert(e, t);
          return this.cleanCopyOfValue(this.schema, e);
        }
        validateAndClean(e, t) {
          this.validate(e, t);
          this.cleanValue(this.schema, e);
        }
        validateAndCleanCopy(e, t) {
          this.validate(e, t);
          return this.cleanCopyOfValue(this.schema, e);
        }
      }
      t.AbstractStandardValidator = AbstractStandardValidator;
    },
    73422: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.AbstractTypedUnionValidator = t.DEFAULT_DISCRIMINANT_KEY = void 0;
      const s = r(29293);
      t.DEFAULT_DISCRIMINANT_KEY = "kind";
      class AbstractTypedUnionValidator extends s.AbstractValidator {
        constructor(e) {
          super(e);
        }
        assert(e, t) {
          this.assertReturningSchema(e, t);
        }
        assertAndClean(e, t) {
          const r = this.assertReturningSchema(e, t);
          this.cleanValue(r, e);
        }
        assertAndCleanCopy(e, t) {
          const r = this.assertReturningSchema(e, t);
          return this.cleanCopyOfValue(r, e);
        }
        validate(e, t) {
          this.validateReturningSchema(e, t);
        }
        validateAndClean(e, t) {
          const r = this.validateReturningSchema(e, t);
          this.cleanValue(r, e);
        }
        validateAndCleanCopy(e, t) {
          const r = this.validateReturningSchema(e, t);
          return this.cleanCopyOfValue(r, e);
        }
        toValueKeyDereference(e) {
          return /^[a-zA-Z_$][a-zA-Z_$0-9]*$/.test(e) ? `value.${e}` : `value['${e.replace(/'/g, "\\'")}']`;
        }
      }
      t.AbstractTypedUnionValidator = AbstractTypedUnionValidator;
    },
    29293: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.AbstractValidator = void 0;
      const s = r(45105);
      const n = r(17085);
      class AbstractValidator {
        constructor(e) {
          this.schema = e;
        }
        testReturningErrors(e) {
          return this.test(e) ? null : this.errors(e);
        }
        testReturningFirstError(e) {
          const t = this.testReturningErrors(e);
          if (t === null) {
            return null;
          }
          const r = t[Symbol.iterator]().next();
          return r.done ? null : r.value;
        }
        firstError(e) {
          const t = this.errors(e)[Symbol.iterator]();
          const r = t.next();
          return r.done ? null : r.value;
        }
        cleanCopyOfValue(e, t) {
          if (e.type === "object" && typeof t === "object") {
            const r = {};
            Object.keys(e.properties).forEach((e) => {
              r[e] = t[e];
            });
            return r;
          }
          return t;
        }
        cleanValue(e, t) {
          if (e.type === "object" && typeof t === "object") {
            const r = Object.keys(e.properties);
            Object.getOwnPropertyNames(t).forEach((e) => {
              if (!r.includes(e)) {
                delete t[e];
              }
            });
          }
        }
        uncompiledAssert(e, t, r) {
          if (!s.Value.Check(e, t)) {
            (0, n.throwInvalidAssert)(r, s.Value.Errors(e, t).First());
          }
        }
        uncompiledValidate(e, t, r) {
          if (!s.Value.Check(e, t)) {
            (0, n.throwInvalidValidate)(r, s.Value.Errors(e, t));
          }
        }
      }
      t.AbstractValidator = AbstractValidator;
    },
    26498: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__classPrivateFieldSet) ||
        function (e, t, r, s, n) {
          if (s === "m") throw new TypeError("Private method is not writable");
          if (s === "a" && !n) throw new TypeError("Private accessor was defined without a setter");
          if (typeof t === "function" ? e !== t || !n : !t.has(e))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
          return s === "a" ? n.call(e, r) : n ? (n.value = r) : t.set(e, r), r;
        };
      var n =
        (this && this.__classPrivateFieldGet) ||
        function (e, t, r, s) {
          if (r === "a" && !s) throw new TypeError("Private accessor was defined without a getter");
          if (typeof t === "function" ? e !== t || !s : !t.has(e))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
          return r === "m" ? s : r === "a" ? s.call(e) : s ? s.value : t.get(e);
        };
      var o, i;
      Object.defineProperty(t, "__esModule", { value: true });
      t.CompilingDiscriminatedUnionValidator = void 0;
      const a = r(73422);
      const A = r(893);
      class CompilingDiscriminatedUnionValidator extends A.AbstractCompilingTypedUnionValidator {
        constructor(e) {
          var t;
          super(e);
          o.set(this, void 0);
          i.set(this, void 0);
          s(this, o, (t = this.schema.discriminantKey) !== null && t !== void 0 ? t : a.DEFAULT_DISCRIMINANT_KEY, "f");
        }
        compiledFindSchemaMemberIndex(e) {
          if (n(this, i, "f") === undefined) {
            const e = [
              `if (typeof value !== 'object' || value === null || Array.isArray(value)) return null;\n          switch (${this.toValueKeyDereference(n(this, o, "f"))}) {\n`,
            ];
            for (let t = 0; t < this.schema.anyOf.length; ++t) {
              const r = this.schema.anyOf[t].properties[n(this, o, "f")];
              if (r === undefined) {
                throw Error(`Discriminant key '${n(this, o, "f")}' not present in all members of discriminated union`);
              }
              const s = r.const;
              if (typeof s === "string") {
                e.push(`case '${s.replace(/'/g, "\\'")}': return ${t};\n`);
              } else {
                e.push(`case ${s}: return ${t};\n`);
              }
            }
            const t = e.join("") + "default: return null; }";
            s(this, i, new Function("value", t), "f");
          }
          return n(this, i, "f").call(this, e);
        }
      }
      t.CompilingDiscriminatedUnionValidator = CompilingDiscriminatedUnionValidator;
      (o = new WeakMap()), (i = new WeakMap());
    },
    59557: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__classPrivateFieldGet) ||
        function (e, t, r, s) {
          if (r === "a" && !s) throw new TypeError("Private accessor was defined without a getter");
          if (typeof t === "function" ? e !== t || !s : !t.has(e))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
          return r === "m" ? s : r === "a" ? s.call(e) : s ? s.value : t.get(e);
        };
      var n =
        (this && this.__classPrivateFieldSet) ||
        function (e, t, r, s, n) {
          if (s === "m") throw new TypeError("Private method is not writable");
          if (s === "a" && !n) throw new TypeError("Private accessor was defined without a setter");
          if (typeof t === "function" ? e !== t || !n : !t.has(e))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
          return s === "a" ? n.call(e, r) : n ? (n.value = r) : t.set(e, r), r;
        };
      var o;
      Object.defineProperty(t, "__esModule", { value: true });
      t.DiscriminatedUnionValidator = void 0;
      const i = r(45105);
      const a = r(73422);
      const A = r(17085);
      class DiscriminatedUnionValidator extends a.AbstractTypedUnionValidator {
        constructor(e) {
          var t;
          super(e);
          o.set(this, false);
          this.discriminantKey = (t = this.schema.discriminantKey) !== null && t !== void 0 ? t : a.DEFAULT_DISCRIMINANT_KEY;
        }
        test(e) {
          const t = this.findSchemaMemberIndex(e);
          if (typeof t !== "number") {
            return false;
          }
          return i.Value.Check(this.schema.anyOf[t], e);
        }
        errors(e) {
          const t = this.findSchemaMemberIndex(e);
          if (typeof t !== "number") {
            return (0, A.createUnionTypeErrorIterable)(t);
          }
          const r = this.schema.anyOf[t];
          return (0, A.createErrorsIterable)(i.Value.Errors(r, e));
        }
        assertReturningSchema(e, t) {
          const r = this.findSchemaMemberIndex(e);
          if (typeof r !== "number") {
            (0, A.throwInvalidAssert)(t, r);
          }
          const s = this.schema.anyOf[r];
          this.uncompiledAssert(s, e, t);
          return s;
        }
        validateReturningSchema(e, t) {
          const r = this.findSchemaMemberIndex(e);
          if (typeof r !== "number") {
            (0, A.throwInvalidValidate)(t, r);
          }
          const s = this.schema.anyOf[r];
          this.uncompiledValidate(s, e, t);
          return s;
        }
        findSchemaMemberIndex(e) {
          if (!s(this, o, "f")) {
            for (const e of this.schema.anyOf) {
              if (e.properties[this.discriminantKey] === undefined) {
                throw Error(`Discriminant key '${this.discriminantKey}' not present in all members of discriminated union`);
              }
            }
            n(this, o, true, "f");
          }
          if (typeof e === "object" && e !== null) {
            const t = e[this.discriminantKey];
            if (t !== undefined) {
              for (let e = 0; e < this.schema.anyOf.length; ++e) {
                const r = this.schema.anyOf[e].properties[this.discriminantKey];
                if (r !== undefined && r.const === t) {
                  return e;
                }
              }
            }
          }
          return (0, A.createUnionTypeError)(this.schema, e);
        }
      }
      t.DiscriminatedUnionValidator = DiscriminatedUnionValidator;
      o = new WeakMap();
    },
    96388: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(59557), t);
      n(r(26498), t);
    },
    44574: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__classPrivateFieldSet) ||
        function (e, t, r, s, n) {
          if (s === "m") throw new TypeError("Private method is not writable");
          if (s === "a" && !n) throw new TypeError("Private accessor was defined without a setter");
          if (typeof t === "function" ? e !== t || !n : !t.has(e))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
          return s === "a" ? n.call(e, r) : n ? (n.value = r) : t.set(e, r), r;
        };
      var n =
        (this && this.__classPrivateFieldGet) ||
        function (e, t, r, s) {
          if (r === "a" && !s) throw new TypeError("Private accessor was defined without a getter");
          if (typeof t === "function" ? e !== t || !s : !t.has(e))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
          return r === "m" ? s : r === "a" ? s.call(e) : s ? s.value : t.get(e);
        };
      var o, i;
      Object.defineProperty(t, "__esModule", { value: true });
      t.CompilingHeterogeneousUnionValidator = void 0;
      const a = r(893);
      const A = r(25233);
      class CompilingHeterogeneousUnionValidator extends a.AbstractCompilingTypedUnionValidator {
        constructor(e) {
          super(e);
          o.set(this, void 0);
          i.set(this, void 0);
          s(this, o, new A.TypeIdentifyingKeyIndex(e), "f");
        }
        compiledFindSchemaMemberIndex(e) {
          if (n(this, i, "f") === undefined) {
            n(this, o, "f").cacheKeys();
            const e = [`return ((typeof value !== 'object' || value === null || Array.isArray(value)) ? null : `];
            for (let t = 0; t < this.schema.anyOf.length; ++t) {
              const r = n(this, o, "f").keyByMemberIndex[t];
              e.push(`${this.toValueKeyDereference(r)} !== undefined ? ${t} : `);
            }
            s(this, i, new Function("value", e.join("") + "null)"), "f");
          }
          return n(this, i, "f").call(this, e);
        }
      }
      t.CompilingHeterogeneousUnionValidator = CompilingHeterogeneousUnionValidator;
      (o = new WeakMap()), (i = new WeakMap());
    },
    2025: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__classPrivateFieldSet) ||
        function (e, t, r, s, n) {
          if (s === "m") throw new TypeError("Private method is not writable");
          if (s === "a" && !n) throw new TypeError("Private accessor was defined without a setter");
          if (typeof t === "function" ? e !== t || !n : !t.has(e))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
          return s === "a" ? n.call(e, r) : n ? (n.value = r) : t.set(e, r), r;
        };
      var n =
        (this && this.__classPrivateFieldGet) ||
        function (e, t, r, s) {
          if (r === "a" && !s) throw new TypeError("Private accessor was defined without a getter");
          if (typeof t === "function" ? e !== t || !s : !t.has(e))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
          return r === "m" ? s : r === "a" ? s.call(e) : s ? s.value : t.get(e);
        };
      var o;
      Object.defineProperty(t, "__esModule", { value: true });
      t.HeterogeneousUnionValidator = void 0;
      const i = r(45105);
      const a = r(73422);
      const A = r(17085);
      const l = r(25233);
      class HeterogeneousUnionValidator extends a.AbstractTypedUnionValidator {
        constructor(e) {
          super(e);
          o.set(this, void 0);
          s(this, o, new l.TypeIdentifyingKeyIndex(e), "f");
        }
        test(e) {
          const t = this.findSchemaMemberIndex(e);
          if (typeof t !== "number") {
            return false;
          }
          return i.Value.Check(this.schema.anyOf[t], e);
        }
        errors(e) {
          const t = this.findSchemaMemberIndex(e);
          if (typeof t !== "number") {
            return (0, A.createUnionTypeErrorIterable)(t);
          }
          const r = this.schema.anyOf[t];
          return (0, A.createErrorsIterable)(i.Value.Errors(r, e));
        }
        assertReturningSchema(e, t) {
          const r = this.findSchemaMemberIndex(e);
          if (typeof r !== "number") {
            (0, A.throwInvalidAssert)(t, r);
          }
          const s = this.schema.anyOf[r];
          this.uncompiledAssert(s, e, t);
          return s;
        }
        validateReturningSchema(e, t) {
          const r = this.findSchemaMemberIndex(e);
          if (typeof r !== "number") {
            (0, A.throwInvalidValidate)(t, r);
          }
          const s = this.schema.anyOf[r];
          this.uncompiledValidate(s, e, t);
          return s;
        }
        findSchemaMemberIndex(e) {
          if (n(this, o, "f").keyByMemberIndex === undefined) {
            n(this, o, "f").cacheKeys();
          }
          if (typeof e === "object" && e !== null) {
            for (let t = 0; t < this.schema.anyOf.length; ++t) {
              const r = n(this, o, "f").keyByMemberIndex[t];
              if (e[r] !== undefined) {
                return t;
              }
            }
          }
          return (0, A.createUnionTypeError)(this.schema, e);
        }
      }
      t.HeterogeneousUnionValidator = HeterogeneousUnionValidator;
      o = new WeakMap();
    },
    29539: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(2025), t);
      n(r(44574), t);
      n(r(5680), t);
    },
    25233: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TypeIdentifyingKeyIndex =
        t.MESSAGE_MEMBERS_MISSING_KEY =
        t.MESSAGE_MULTIPLE_MEMBERS_WITH_SAME_KEY =
        t.MESSAGE_MEMBER_WITH_MULTIPLE_KEYS =
        t.MESSAGE_OPTIONAL_TYPE_ID_KEY =
          void 0;
      const s = r(14019);
      t.MESSAGE_OPTIONAL_TYPE_ID_KEY = "Type identifying key cannot be optional";
      t.MESSAGE_MEMBER_WITH_MULTIPLE_KEYS = "Union has member with multiple identifying keys";
      t.MESSAGE_MULTIPLE_MEMBERS_WITH_SAME_KEY = "Union has multiple members with same identifying key";
      t.MESSAGE_MEMBERS_MISSING_KEY = "Union has members missing identifying keys";
      class TypeIdentifyingKeyIndex {
        constructor(e) {
          this.schema = e;
        }
        cacheKeys() {
          const e = this.schema.anyOf.length;
          const r = new Set();
          this.keyByMemberIndex = new Array(e);
          for (let n = 0; n < e; ++n) {
            const e = this.schema.anyOf[n];
            for (const [o, i] of Object.entries(e.properties)) {
              if (i.typeIdentifyingKey) {
                if (i[s.Optional] == "Optional") {
                  throw Error(t.MESSAGE_OPTIONAL_TYPE_ID_KEY);
                }
                if (this.keyByMemberIndex[n] !== undefined) {
                  throw Error(t.MESSAGE_MEMBER_WITH_MULTIPLE_KEYS);
                }
                if (r.has(o)) {
                  throw Error(t.MESSAGE_MULTIPLE_MEMBERS_WITH_SAME_KEY);
                }
                this.keyByMemberIndex[n] = o;
                r.add(o);
              }
            }
          }
          if (r.size < e) {
            this.keyByMemberIndex = undefined;
            throw Error(t.MESSAGE_MEMBERS_MISSING_KEY);
          }
        }
      }
      t.TypeIdentifyingKeyIndex = TypeIdentifyingKeyIndex;
    },
    5680: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.TypeIdentifyingKey = void 0;
      function TypeIdentifyingKey(e) {
        return Object.assign(Object.assign({}, e), { typeIdentifyingKey: true });
      }
      t.TypeIdentifyingKey = TypeIdentifyingKey;
    },
    80619: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(29293), t);
      n(r(58453), t);
      n(r(73422), t);
      n(r(68589), t);
      n(r(29539), t);
      n(r(96388), t);
      n(r(55776), t);
    },
    17085: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.throwInvalidValidate =
        t.throwInvalidAssert =
        t.createUnionTypeErrorIterable =
        t.createUnionTypeError =
        t.createErrorsIterable =
        t.adjustErrorMessage =
        t.DEFAULT_UNKNOWN_TYPE_MESSAGE =
        t.DEFAULT_OVERALL_MESSAGE =
          void 0;
      const s = r(14019);
      const n = r(65507);
      const o = r(55776);
      t.DEFAULT_OVERALL_MESSAGE = "Invalid value";
      t.DEFAULT_UNKNOWN_TYPE_MESSAGE = "Object type not recognized";
      const i = "Expected required property";
      function adjustErrorMessage(e) {
        if (e.schema.errorMessage !== undefined) {
          e.message = e.schema.errorMessage;
        }
        return e;
      }
      t.adjustErrorMessage = adjustErrorMessage;
      function createErrorsIterable(e) {
        return {
          [Symbol.iterator]: function* () {
            const t = e[Symbol.iterator]();
            let r = t.next();
            let n = "???";
            while (r.value !== undefined) {
              const e = r.value;
              const o = e.message;
              if (e.path !== n) {
                adjustErrorMessage(e);
                if (e.message != o) {
                  n = e.path;
                  yield e;
                } else if (e.message != i || ["Any", "Unknown"].includes(e.schema[s.Kind])) {
                  yield e;
                }
              }
              r = t.next();
            }
          },
        };
      }
      t.createErrorsIterable = createErrorsIterable;
      function createUnionTypeError(e, r) {
        var s;
        return {
          type: n.ValueErrorType.Union,
          path: "",
          schema: e,
          value: r,
          message: (s = e.errorMessage) !== null && s !== void 0 ? s : t.DEFAULT_UNKNOWN_TYPE_MESSAGE,
        };
      }
      t.createUnionTypeError = createUnionTypeError;
      function createUnionTypeErrorIterable(e) {
        return {
          [Symbol.iterator]: function* () {
            yield e;
          },
        };
      }
      t.createUnionTypeErrorIterable = createUnionTypeErrorIterable;
      function throwInvalidAssert(e, r) {
        adjustErrorMessage(r);
        throw new o.ValidationException(e === undefined ? t.DEFAULT_OVERALL_MESSAGE : e.replace("{error}", o.ValidationException.errorToString(r)), [r]);
      }
      t.throwInvalidAssert = throwInvalidAssert;
      function throwInvalidValidate(e, r) {
        throw new o.ValidationException(
          e !== null && e !== void 0 ? e : t.DEFAULT_OVERALL_MESSAGE,
          r instanceof n.ValueErrorIterator ? [...createErrorsIterable(r)] : [r]
        );
      }
      t.throwInvalidValidate = throwInvalidValidate;
    },
    55776: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.ValidationException = void 0;
      class ValidationException {
        constructor(e, t = []) {
          this.message = e;
          this.details = t;
        }
        toString() {
          let e = this.message;
          if (this.details.length > 0) {
            if (!e.endsWith(":")) {
              e += ":";
            }
            for (const t of this.details) {
              e += "\n * " + ValidationException.errorToString(t);
            }
          }
          return e;
        }
        static errorToString(e) {
          return e.path != "" ? `${e.path.substring(1)} - ${e.message}` : e.message;
        }
      }
      t.ValidationException = ValidationException;
    },
    3470: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__classPrivateFieldGet) ||
        function (e, t, r, s) {
          if (r === "a" && !s) throw new TypeError("Private accessor was defined without a getter");
          if (typeof t === "function" ? e !== t || !s : !t.has(e))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
          return r === "m" ? s : r === "a" ? s.call(e) : s ? s.value : t.get(e);
        };
      var n =
        (this && this.__classPrivateFieldSet) ||
        function (e, t, r, s, n) {
          if (s === "m") throw new TypeError("Private method is not writable");
          if (s === "a" && !n) throw new TypeError("Private accessor was defined without a setter");
          if (typeof t === "function" ? e !== t || !n : !t.has(e))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
          return s === "a" ? n.call(e, r) : n ? (n.value = r) : t.set(e, r), r;
        };
      var o;
      Object.defineProperty(t, "__esModule", { value: true });
      t.CompilingStandardValidator = void 0;
      const i = r(25269);
      const a = r(58453);
      const A = r(17085);
      class CompilingStandardValidator extends a.AbstractStandardValidator {
        constructor(e) {
          super(e);
          o.set(this, void 0);
        }
        test(e) {
          const t = this.getCompiledType();
          return t.Check(e);
        }
        assert(e, t) {
          const r = this.getCompiledType();
          if (!r.Check(e)) {
            (0, A.throwInvalidAssert)(t, r.Errors(e).First());
          }
        }
        validate(e, t) {
          const r = this.getCompiledType();
          if (!r.Check(e)) {
            (0, A.throwInvalidValidate)(t, r.Errors(e));
          }
        }
        errors(e) {
          const t = this.getCompiledType();
          return (0, A.createErrorsIterable)(t.Errors(e));
        }
        getCompiledType() {
          if (s(this, o, "f") === undefined) {
            n(this, o, i.TypeCompiler.Compile(this.schema), "f");
          }
          return s(this, o, "f");
        }
      }
      t.CompilingStandardValidator = CompilingStandardValidator;
      o = new WeakMap();
    },
    68589: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__exportStar) ||
        function (e, t) {
          for (var r in e) if (r !== "default" && !Object.prototype.hasOwnProperty.call(t, r)) s(t, e, r);
        };
      Object.defineProperty(t, "__esModule", { value: true });
      n(r(12491), t);
      n(r(3470), t);
    },
    12491: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.StandardValidator = void 0;
      const s = r(58453);
      const n = r(45105);
      const o = r(17085);
      class StandardValidator extends s.AbstractStandardValidator {
        constructor(e) {
          super(e);
        }
        test(e) {
          return n.Value.Check(this.schema, e);
        }
        assert(e, t) {
          this.uncompiledAssert(this.schema, e, t);
        }
        validate(e, t) {
          this.uncompiledValidate(this.schema, e, t);
        }
        errors(e) {
          return (0, o.createErrorsIterable)(n.Value.Errors(this.schema, e));
        }
      }
      t.StandardValidator = StandardValidator;
    },
    46752: (e, t, r) => {
      "use strict";
      const s = r(86197);
      const n = r(28611);
      const o = r(68707);
      const i = r(35076);
      const a = r(81093);
      const A = r(59965);
      const l = r(3440);
      const { InvalidArgumentError: c } = o;
      const d = r(56615);
      const p = r(59136);
      const u = r(47365);
      const g = r(47501);
      const m = r(94004);
      const h = r(52429);
      const E = r(22720);
      const I = r(53573);
      const { getGlobalDispatcher: C, setGlobalDispatcher: y } = r(32581);
      const B = r(78840);
      const Q = r(48299);
      const b = r(64415);
      let w;
      try {
        r(76982);
        w = true;
      } catch {
        w = false;
      }
      Object.assign(n.prototype, d);
      e.exports.Dispatcher = n;
      e.exports.Client = s;
      e.exports.Pool = i;
      e.exports.BalancedPool = a;
      e.exports.Agent = A;
      e.exports.ProxyAgent = E;
      e.exports.RetryHandler = I;
      e.exports.DecoratorHandler = B;
      e.exports.RedirectHandler = Q;
      e.exports.createRedirectInterceptor = b;
      e.exports.buildConnector = p;
      e.exports.errors = o;
      function makeDispatcher(e) {
        return (t, r, s) => {
          if (typeof r === "function") {
            s = r;
            r = null;
          }
          if (!t || (typeof t !== "string" && typeof t !== "object" && !(t instanceof URL))) {
            throw new c("invalid url");
          }
          if (r != null && typeof r !== "object") {
            throw new c("invalid opts");
          }
          if (r && r.path != null) {
            if (typeof r.path !== "string") {
              throw new c("invalid opts.path");
            }
            let e = r.path;
            if (!r.path.startsWith("/")) {
              e = `/${e}`;
            }
            t = new URL(l.parseOrigin(t).origin + e);
          } else {
            if (!r) {
              r = typeof t === "object" ? t : {};
            }
            t = l.parseURL(t);
          }
          const { agent: n, dispatcher: o = C() } = r;
          if (n) {
            throw new c("unsupported opts.agent. Did you mean opts.client?");
          }
          return e.call(
            o,
            { ...r, origin: t.origin, path: t.search ? `${t.pathname}${t.search}` : t.pathname, method: r.method || (r.body ? "PUT" : "GET") },
            s
          );
        };
      }
      e.exports.setGlobalDispatcher = y;
      e.exports.getGlobalDispatcher = C;
      if (l.nodeMajor > 16 || (l.nodeMajor === 16 && l.nodeMinor >= 8)) {
        let t = null;
        e.exports.fetch = async function fetch(e) {
          if (!t) {
            t = r(12315).fetch;
          }
          try {
            return await t(...arguments);
          } catch (e) {
            if (typeof e === "object") {
              Error.captureStackTrace(e, this);
            }
            throw e;
          }
        };
        e.exports.Headers = r(26349).Headers;
        e.exports.Response = r(48676).Response;
        e.exports.Request = r(25194).Request;
        e.exports.FormData = r(43073).FormData;
        e.exports.File = r(63041).File;
        e.exports.FileReader = r(82160).FileReader;
        const { setGlobalOrigin: s, getGlobalOrigin: n } = r(75628);
        e.exports.setGlobalOrigin = s;
        e.exports.getGlobalOrigin = n;
        const { CacheStorage: o } = r(44738);
        const { kConstruct: i } = r(80296);
        e.exports.caches = new o(i);
      }
      if (l.nodeMajor >= 16) {
        const { deleteCookie: t, getCookies: s, getSetCookies: n, setCookie: o } = r(53168);
        e.exports.deleteCookie = t;
        e.exports.getCookies = s;
        e.exports.getSetCookies = n;
        e.exports.setCookie = o;
        const { parseMIMEType: i, serializeAMimeType: a } = r(94322);
        e.exports.parseMIMEType = i;
        e.exports.serializeAMimeType = a;
      }
      if (l.nodeMajor >= 18 && w) {
        const { WebSocket: t } = r(55171);
        e.exports.WebSocket = t;
      }
      e.exports.request = makeDispatcher(d.request);
      e.exports.stream = makeDispatcher(d.stream);
      e.exports.pipeline = makeDispatcher(d.pipeline);
      e.exports.connect = makeDispatcher(d.connect);
      e.exports.upgrade = makeDispatcher(d.upgrade);
      e.exports.MockClient = u;
      e.exports.MockPool = m;
      e.exports.MockAgent = g;
      e.exports.mockErrors = h;
    },
    59965: (e, t, r) => {
      "use strict";
      const { InvalidArgumentError: s } = r(68707);
      const { kClients: n, kRunning: o, kClose: i, kDestroy: a, kDispatch: A, kInterceptors: l } = r(36443);
      const c = r(50001);
      const d = r(35076);
      const p = r(86197);
      const u = r(3440);
      const g = r(64415);
      const { WeakRef: m, FinalizationRegistry: h } = r(13194)();
      const E = Symbol("onConnect");
      const I = Symbol("onDisconnect");
      const C = Symbol("onConnectionError");
      const y = Symbol("maxRedirections");
      const B = Symbol("onDrain");
      const Q = Symbol("factory");
      const b = Symbol("finalizer");
      const w = Symbol("options");
      function defaultFactory(e, t) {
        return t && t.connections === 1 ? new p(e, t) : new d(e, t);
      }
      class Agent extends c {
        constructor({ factory: e = defaultFactory, maxRedirections: t = 0, connect: r, ...o } = {}) {
          super();
          if (typeof e !== "function") {
            throw new s("factory must be a function.");
          }
          if (r != null && typeof r !== "function" && typeof r !== "object") {
            throw new s("connect must be a function or an object");
          }
          if (!Number.isInteger(t) || t < 0) {
            throw new s("maxRedirections must be a positive number");
          }
          if (r && typeof r !== "function") {
            r = { ...r };
          }
          this[l] = o.interceptors && o.interceptors.Agent && Array.isArray(o.interceptors.Agent) ? o.interceptors.Agent : [g({ maxRedirections: t })];
          this[w] = { ...u.deepClone(o), connect: r };
          this[w].interceptors = o.interceptors ? { ...o.interceptors } : undefined;
          this[y] = t;
          this[Q] = e;
          this[n] = new Map();
          this[b] = new h((e) => {
            const t = this[n].get(e);
            if (t !== undefined && t.deref() === undefined) {
              this[n].delete(e);
            }
          });
          const i = this;
          this[B] = (e, t) => {
            i.emit("drain", e, [i, ...t]);
          };
          this[E] = (e, t) => {
            i.emit("connect", e, [i, ...t]);
          };
          this[I] = (e, t, r) => {
            i.emit("disconnect", e, [i, ...t], r);
          };
          this[C] = (e, t, r) => {
            i.emit("connectionError", e, [i, ...t], r);
          };
        }
        get [o]() {
          let e = 0;
          for (const t of this[n].values()) {
            const r = t.deref();
            if (r) {
              e += r[o];
            }
          }
          return e;
        }
        [A](e, t) {
          let r;
          if (e.origin && (typeof e.origin === "string" || e.origin instanceof URL)) {
            r = String(e.origin);
          } else {
            throw new s("opts.origin must be a non-empty string or URL.");
          }
          const o = this[n].get(r);
          let i = o ? o.deref() : null;
          if (!i) {
            i = this[Q](e.origin, this[w]).on("drain", this[B]).on("connect", this[E]).on("disconnect", this[I]).on("connectionError", this[C]);
            this[n].set(r, new m(i));
            this[b].register(i, r);
          }
          return i.dispatch(e, t);
        }
        async [i]() {
          const e = [];
          for (const t of this[n].values()) {
            const r = t.deref();
            if (r) {
              e.push(r.close());
            }
          }
          await Promise.all(e);
        }
        async [a](e) {
          const t = [];
          for (const r of this[n].values()) {
            const s = r.deref();
            if (s) {
              t.push(s.destroy(e));
            }
          }
          await Promise.all(t);
        }
      }
      e.exports = Agent;
    },
    80158: (e, t, r) => {
      const { addAbortListener: s } = r(3440);
      const { RequestAbortedError: n } = r(68707);
      const o = Symbol("kListener");
      const i = Symbol("kSignal");
      function abort(e) {
        if (e.abort) {
          e.abort();
        } else {
          e.onError(new n());
        }
      }
      function addSignal(e, t) {
        e[i] = null;
        e[o] = null;
        if (!t) {
          return;
        }
        if (t.aborted) {
          abort(e);
          return;
        }
        e[i] = t;
        e[o] = () => {
          abort(e);
        };
        s(e[i], e[o]);
      }
      function removeSignal(e) {
        if (!e[i]) {
          return;
        }
        if ("removeEventListener" in e[i]) {
          e[i].removeEventListener("abort", e[o]);
        } else {
          e[i].removeListener("abort", e[o]);
        }
        e[i] = null;
        e[o] = null;
      }
      e.exports = { addSignal: addSignal, removeSignal: removeSignal };
    },
    34660: (e, t, r) => {
      "use strict";
      const { AsyncResource: s } = r(90290);
      const { InvalidArgumentError: n, RequestAbortedError: o, SocketError: i } = r(68707);
      const a = r(3440);
      const { addSignal: A, removeSignal: l } = r(80158);
      class ConnectHandler extends s {
        constructor(e, t) {
          if (!e || typeof e !== "object") {
            throw new n("invalid opts");
          }
          if (typeof t !== "function") {
            throw new n("invalid callback");
          }
          const { signal: r, opaque: s, responseHeaders: o } = e;
          if (r && typeof r.on !== "function" && typeof r.addEventListener !== "function") {
            throw new n("signal must be an EventEmitter or EventTarget");
          }
          super("UNDICI_CONNECT");
          this.opaque = s || null;
          this.responseHeaders = o || null;
          this.callback = t;
          this.abort = null;
          A(this, r);
        }
        onConnect(e, t) {
          if (!this.callback) {
            throw new o();
          }
          this.abort = e;
          this.context = t;
        }
        onHeaders() {
          throw new i("bad connect", null);
        }
        onUpgrade(e, t, r) {
          const { callback: s, opaque: n, context: o } = this;
          l(this);
          this.callback = null;
          let i = t;
          if (i != null) {
            i = this.responseHeaders === "raw" ? a.parseRawHeaders(t) : a.parseHeaders(t);
          }
          this.runInAsyncScope(s, null, null, { statusCode: e, headers: i, socket: r, opaque: n, context: o });
        }
        onError(e) {
          const { callback: t, opaque: r } = this;
          l(this);
          if (t) {
            this.callback = null;
            queueMicrotask(() => {
              this.runInAsyncScope(t, null, e, { opaque: r });
            });
          }
        }
      }
      function connect(e, t) {
        if (t === undefined) {
          return new Promise((t, r) => {
            connect.call(this, e, (e, s) => (e ? r(e) : t(s)));
          });
        }
        try {
          const r = new ConnectHandler(e, t);
          this.dispatch({ ...e, method: "CONNECT" }, r);
        } catch (r) {
          if (typeof t !== "function") {
            throw r;
          }
          const s = e && e.opaque;
          queueMicrotask(() => t(r, { opaque: s }));
        }
      }
      e.exports = connect;
    },
    76862: (e, t, r) => {
      "use strict";
      const { Readable: s, Duplex: n, PassThrough: o } = r(2203);
      const { InvalidArgumentError: i, InvalidReturnValueError: a, RequestAbortedError: A } = r(68707);
      const l = r(3440);
      const { AsyncResource: c } = r(90290);
      const { addSignal: d, removeSignal: p } = r(80158);
      const u = r(42613);
      const g = Symbol("resume");
      class PipelineRequest extends s {
        constructor() {
          super({ autoDestroy: true });
          this[g] = null;
        }
        _read() {
          const { [g]: e } = this;
          if (e) {
            this[g] = null;
            e();
          }
        }
        _destroy(e, t) {
          this._read();
          t(e);
        }
      }
      class PipelineResponse extends s {
        constructor(e) {
          super({ autoDestroy: true });
          this[g] = e;
        }
        _read() {
          this[g]();
        }
        _destroy(e, t) {
          if (!e && !this._readableState.endEmitted) {
            e = new A();
          }
          t(e);
        }
      }
      class PipelineHandler extends c {
        constructor(e, t) {
          if (!e || typeof e !== "object") {
            throw new i("invalid opts");
          }
          if (typeof t !== "function") {
            throw new i("invalid handler");
          }
          const { signal: r, method: s, opaque: o, onInfo: a, responseHeaders: c } = e;
          if (r && typeof r.on !== "function" && typeof r.addEventListener !== "function") {
            throw new i("signal must be an EventEmitter or EventTarget");
          }
          if (s === "CONNECT") {
            throw new i("invalid method");
          }
          if (a && typeof a !== "function") {
            throw new i("invalid onInfo callback");
          }
          super("UNDICI_PIPELINE");
          this.opaque = o || null;
          this.responseHeaders = c || null;
          this.handler = t;
          this.abort = null;
          this.context = null;
          this.onInfo = a || null;
          this.req = new PipelineRequest().on("error", l.nop);
          this.ret = new n({
            readableObjectMode: e.objectMode,
            autoDestroy: true,
            read: () => {
              const { body: e } = this;
              if (e && e.resume) {
                e.resume();
              }
            },
            write: (e, t, r) => {
              const { req: s } = this;
              if (s.push(e, t) || s._readableState.destroyed) {
                r();
              } else {
                s[g] = r;
              }
            },
            destroy: (e, t) => {
              const { body: r, req: s, res: n, ret: o, abort: i } = this;
              if (!e && !o._readableState.endEmitted) {
                e = new A();
              }
              if (i && e) {
                i();
              }
              l.destroy(r, e);
              l.destroy(s, e);
              l.destroy(n, e);
              p(this);
              t(e);
            },
          }).on("prefinish", () => {
            const { req: e } = this;
            e.push(null);
          });
          this.res = null;
          d(this, r);
        }
        onConnect(e, t) {
          const { ret: r, res: s } = this;
          u(!s, "pipeline cannot be retried");
          if (r.destroyed) {
            throw new A();
          }
          this.abort = e;
          this.context = t;
        }
        onHeaders(e, t, r) {
          const { opaque: s, handler: n, context: o } = this;
          if (e < 200) {
            if (this.onInfo) {
              const r = this.responseHeaders === "raw" ? l.parseRawHeaders(t) : l.parseHeaders(t);
              this.onInfo({ statusCode: e, headers: r });
            }
            return;
          }
          this.res = new PipelineResponse(r);
          let i;
          try {
            this.handler = null;
            const r = this.responseHeaders === "raw" ? l.parseRawHeaders(t) : l.parseHeaders(t);
            i = this.runInAsyncScope(n, null, { statusCode: e, headers: r, opaque: s, body: this.res, context: o });
          } catch (e) {
            this.res.on("error", l.nop);
            throw e;
          }
          if (!i || typeof i.on !== "function") {
            throw new a("expected Readable");
          }
          i.on("data", (e) => {
            const { ret: t, body: r } = this;
            if (!t.push(e) && r.pause) {
              r.pause();
            }
          })
            .on("error", (e) => {
              const { ret: t } = this;
              l.destroy(t, e);
            })
            .on("end", () => {
              const { ret: e } = this;
              e.push(null);
            })
            .on("close", () => {
              const { ret: e } = this;
              if (!e._readableState.ended) {
                l.destroy(e, new A());
              }
            });
          this.body = i;
        }
        onData(e) {
          const { res: t } = this;
          return t.push(e);
        }
        onComplete(e) {
          const { res: t } = this;
          t.push(null);
        }
        onError(e) {
          const { ret: t } = this;
          this.handler = null;
          l.destroy(t, e);
        }
      }
      function pipeline(e, t) {
        try {
          const r = new PipelineHandler(e, t);
          this.dispatch({ ...e, body: r.req }, r);
          return r.ret;
        } catch (e) {
          return new o().destroy(e);
        }
      }
      e.exports = pipeline;
    },
    14043: (e, t, r) => {
      "use strict";
      const s = r(49927);
      const { InvalidArgumentError: n, RequestAbortedError: o } = r(68707);
      const i = r(3440);
      const { getResolveErrorBodyCallback: a } = r(87655);
      const { AsyncResource: A } = r(90290);
      const { addSignal: l, removeSignal: c } = r(80158);
      class RequestHandler extends A {
        constructor(e, t) {
          if (!e || typeof e !== "object") {
            throw new n("invalid opts");
          }
          const { signal: r, method: s, opaque: o, body: a, onInfo: A, responseHeaders: c, throwOnError: d, highWaterMark: p } = e;
          try {
            if (typeof t !== "function") {
              throw new n("invalid callback");
            }
            if (p && (typeof p !== "number" || p < 0)) {
              throw new n("invalid highWaterMark");
            }
            if (r && typeof r.on !== "function" && typeof r.addEventListener !== "function") {
              throw new n("signal must be an EventEmitter or EventTarget");
            }
            if (s === "CONNECT") {
              throw new n("invalid method");
            }
            if (A && typeof A !== "function") {
              throw new n("invalid onInfo callback");
            }
            super("UNDICI_REQUEST");
          } catch (e) {
            if (i.isStream(a)) {
              i.destroy(a.on("error", i.nop), e);
            }
            throw e;
          }
          this.responseHeaders = c || null;
          this.opaque = o || null;
          this.callback = t;
          this.res = null;
          this.abort = null;
          this.body = a;
          this.trailers = {};
          this.context = null;
          this.onInfo = A || null;
          this.throwOnError = d;
          this.highWaterMark = p;
          if (i.isStream(a)) {
            a.on("error", (e) => {
              this.onError(e);
            });
          }
          l(this, r);
        }
        onConnect(e, t) {
          if (!this.callback) {
            throw new o();
          }
          this.abort = e;
          this.context = t;
        }
        onHeaders(e, t, r, n) {
          const { callback: o, opaque: A, abort: l, context: c, responseHeaders: d, highWaterMark: p } = this;
          const u = d === "raw" ? i.parseRawHeaders(t) : i.parseHeaders(t);
          if (e < 200) {
            if (this.onInfo) {
              this.onInfo({ statusCode: e, headers: u });
            }
            return;
          }
          const g = d === "raw" ? i.parseHeaders(t) : u;
          const m = g["content-type"];
          const h = new s({ resume: r, abort: l, contentType: m, highWaterMark: p });
          this.callback = null;
          this.res = h;
          if (o !== null) {
            if (this.throwOnError && e >= 400) {
              this.runInAsyncScope(a, null, { callback: o, body: h, contentType: m, statusCode: e, statusMessage: n, headers: u });
            } else {
              this.runInAsyncScope(o, null, null, { statusCode: e, headers: u, trailers: this.trailers, opaque: A, body: h, context: c });
            }
          }
        }
        onData(e) {
          const { res: t } = this;
          return t.push(e);
        }
        onComplete(e) {
          const { res: t } = this;
          c(this);
          i.parseHeaders(e, this.trailers);
          t.push(null);
        }
        onError(e) {
          const { res: t, callback: r, body: s, opaque: n } = this;
          c(this);
          if (r) {
            this.callback = null;
            queueMicrotask(() => {
              this.runInAsyncScope(r, null, e, { opaque: n });
            });
          }
          if (t) {
            this.res = null;
            queueMicrotask(() => {
              i.destroy(t, e);
            });
          }
          if (s) {
            this.body = null;
            i.destroy(s, e);
          }
        }
      }
      function request(e, t) {
        if (t === undefined) {
          return new Promise((t, r) => {
            request.call(this, e, (e, s) => (e ? r(e) : t(s)));
          });
        }
        try {
          this.dispatch(e, new RequestHandler(e, t));
        } catch (r) {
          if (typeof t !== "function") {
            throw r;
          }
          const s = e && e.opaque;
          queueMicrotask(() => t(r, { opaque: s }));
        }
      }
      e.exports = request;
      e.exports.RequestHandler = RequestHandler;
    },
    3560: (e, t, r) => {
      "use strict";
      const { finished: s, PassThrough: n } = r(2203);
      const { InvalidArgumentError: o, InvalidReturnValueError: i, RequestAbortedError: a } = r(68707);
      const A = r(3440);
      const { getResolveErrorBodyCallback: l } = r(87655);
      const { AsyncResource: c } = r(90290);
      const { addSignal: d, removeSignal: p } = r(80158);
      class StreamHandler extends c {
        constructor(e, t, r) {
          if (!e || typeof e !== "object") {
            throw new o("invalid opts");
          }
          const { signal: s, method: n, opaque: i, body: a, onInfo: l, responseHeaders: c, throwOnError: p } = e;
          try {
            if (typeof r !== "function") {
              throw new o("invalid callback");
            }
            if (typeof t !== "function") {
              throw new o("invalid factory");
            }
            if (s && typeof s.on !== "function" && typeof s.addEventListener !== "function") {
              throw new o("signal must be an EventEmitter or EventTarget");
            }
            if (n === "CONNECT") {
              throw new o("invalid method");
            }
            if (l && typeof l !== "function") {
              throw new o("invalid onInfo callback");
            }
            super("UNDICI_STREAM");
          } catch (e) {
            if (A.isStream(a)) {
              A.destroy(a.on("error", A.nop), e);
            }
            throw e;
          }
          this.responseHeaders = c || null;
          this.opaque = i || null;
          this.factory = t;
          this.callback = r;
          this.res = null;
          this.abort = null;
          this.context = null;
          this.trailers = null;
          this.body = a;
          this.onInfo = l || null;
          this.throwOnError = p || false;
          if (A.isStream(a)) {
            a.on("error", (e) => {
              this.onError(e);
            });
          }
          d(this, s);
        }
        onConnect(e, t) {
          if (!this.callback) {
            throw new a();
          }
          this.abort = e;
          this.context = t;
        }
        onHeaders(e, t, r, o) {
          const { factory: a, opaque: c, context: d, callback: p, responseHeaders: u } = this;
          const g = u === "raw" ? A.parseRawHeaders(t) : A.parseHeaders(t);
          if (e < 200) {
            if (this.onInfo) {
              this.onInfo({ statusCode: e, headers: g });
            }
            return;
          }
          this.factory = null;
          let m;
          if (this.throwOnError && e >= 400) {
            const r = u === "raw" ? A.parseHeaders(t) : g;
            const s = r["content-type"];
            m = new n();
            this.callback = null;
            this.runInAsyncScope(l, null, { callback: p, body: m, contentType: s, statusCode: e, statusMessage: o, headers: g });
          } else {
            if (a === null) {
              return;
            }
            m = this.runInAsyncScope(a, null, { statusCode: e, headers: g, opaque: c, context: d });
            if (!m || typeof m.write !== "function" || typeof m.end !== "function" || typeof m.on !== "function") {
              throw new i("expected Writable");
            }
            s(m, { readable: false }, (e) => {
              const { callback: t, res: r, opaque: s, trailers: n, abort: o } = this;
              this.res = null;
              if (e || !r.readable) {
                A.destroy(r, e);
              }
              this.callback = null;
              this.runInAsyncScope(t, null, e || null, { opaque: s, trailers: n });
              if (e) {
                o();
              }
            });
          }
          m.on("drain", r);
          this.res = m;
          const h = m.writableNeedDrain !== undefined ? m.writableNeedDrain : m._writableState && m._writableState.needDrain;
          return h !== true;
        }
        onData(e) {
          const { res: t } = this;
          return t ? t.write(e) : true;
        }
        onComplete(e) {
          const { res: t } = this;
          p(this);
          if (!t) {
            return;
          }
          this.trailers = A.parseHeaders(e);
          t.end();
        }
        onError(e) {
          const { res: t, callback: r, opaque: s, body: n } = this;
          p(this);
          this.factory = null;
          if (t) {
            this.res = null;
            A.destroy(t, e);
          } else if (r) {
            this.callback = null;
            queueMicrotask(() => {
              this.runInAsyncScope(r, null, e, { opaque: s });
            });
          }
          if (n) {
            this.body = null;
            A.destroy(n, e);
          }
        }
      }
      function stream(e, t, r) {
        if (r === undefined) {
          return new Promise((r, s) => {
            stream.call(this, e, t, (e, t) => (e ? s(e) : r(t)));
          });
        }
        try {
          this.dispatch(e, new StreamHandler(e, t, r));
        } catch (t) {
          if (typeof r !== "function") {
            throw t;
          }
          const s = e && e.opaque;
          queueMicrotask(() => r(t, { opaque: s }));
        }
      }
      e.exports = stream;
    },
    61882: (e, t, r) => {
      "use strict";
      const { InvalidArgumentError: s, RequestAbortedError: n, SocketError: o } = r(68707);
      const { AsyncResource: i } = r(90290);
      const a = r(3440);
      const { addSignal: A, removeSignal: l } = r(80158);
      const c = r(42613);
      class UpgradeHandler extends i {
        constructor(e, t) {
          if (!e || typeof e !== "object") {
            throw new s("invalid opts");
          }
          if (typeof t !== "function") {
            throw new s("invalid callback");
          }
          const { signal: r, opaque: n, responseHeaders: o } = e;
          if (r && typeof r.on !== "function" && typeof r.addEventListener !== "function") {
            throw new s("signal must be an EventEmitter or EventTarget");
          }
          super("UNDICI_UPGRADE");
          this.responseHeaders = o || null;
          this.opaque = n || null;
          this.callback = t;
          this.abort = null;
          this.context = null;
          A(this, r);
        }
        onConnect(e, t) {
          if (!this.callback) {
            throw new n();
          }
          this.abort = e;
          this.context = null;
        }
        onHeaders() {
          throw new o("bad upgrade", null);
        }
        onUpgrade(e, t, r) {
          const { callback: s, opaque: n, context: o } = this;
          c.strictEqual(e, 101);
          l(this);
          this.callback = null;
          const i = this.responseHeaders === "raw" ? a.parseRawHeaders(t) : a.parseHeaders(t);
          this.runInAsyncScope(s, null, null, { headers: i, socket: r, opaque: n, context: o });
        }
        onError(e) {
          const { callback: t, opaque: r } = this;
          l(this);
          if (t) {
            this.callback = null;
            queueMicrotask(() => {
              this.runInAsyncScope(t, null, e, { opaque: r });
            });
          }
        }
      }
      function upgrade(e, t) {
        if (t === undefined) {
          return new Promise((t, r) => {
            upgrade.call(this, e, (e, s) => (e ? r(e) : t(s)));
          });
        }
        try {
          const r = new UpgradeHandler(e, t);
          this.dispatch({ ...e, method: e.method || "GET", upgrade: e.protocol || "Websocket" }, r);
        } catch (r) {
          if (typeof t !== "function") {
            throw r;
          }
          const s = e && e.opaque;
          queueMicrotask(() => t(r, { opaque: s }));
        }
      }
      e.exports = upgrade;
    },
    56615: (e, t, r) => {
      "use strict";
      e.exports.request = r(14043);
      e.exports.stream = r(3560);
      e.exports.pipeline = r(76862);
      e.exports.upgrade = r(61882);
      e.exports.connect = r(34660);
    },
    49927: (e, t, r) => {
      "use strict";
      const s = r(42613);
      const { Readable: n } = r(2203);
      const { RequestAbortedError: o, NotSupportedError: i, InvalidArgumentError: a } = r(68707);
      const A = r(3440);
      const { ReadableStreamFrom: l, toUSVString: c } = r(3440);
      let d;
      const p = Symbol("kConsume");
      const u = Symbol("kReading");
      const g = Symbol("kBody");
      const m = Symbol("abort");
      const h = Symbol("kContentType");
      const noop = () => {};
      e.exports = class BodyReadable extends n {
        constructor({ resume: e, abort: t, contentType: r = "", highWaterMark: s = 64 * 1024 }) {
          super({ autoDestroy: true, read: e, highWaterMark: s });
          this._readableState.dataEmitted = false;
          this[m] = t;
          this[p] = null;
          this[g] = null;
          this[h] = r;
          this[u] = false;
        }
        destroy(e) {
          if (this.destroyed) {
            return this;
          }
          if (!e && !this._readableState.endEmitted) {
            e = new o();
          }
          if (e) {
            this[m]();
          }
          return super.destroy(e);
        }
        emit(e, ...t) {
          if (e === "data") {
            this._readableState.dataEmitted = true;
          } else if (e === "error") {
            this._readableState.errorEmitted = true;
          }
          return super.emit(e, ...t);
        }
        on(e, ...t) {
          if (e === "data" || e === "readable") {
            this[u] = true;
          }
          return super.on(e, ...t);
        }
        addListener(e, ...t) {
          return this.on(e, ...t);
        }
        off(e, ...t) {
          const r = super.off(e, ...t);
          if (e === "data" || e === "readable") {
            this[u] = this.listenerCount("data") > 0 || this.listenerCount("readable") > 0;
          }
          return r;
        }
        removeListener(e, ...t) {
          return this.off(e, ...t);
        }
        push(e) {
          if (this[p] && e !== null && this.readableLength === 0) {
            consumePush(this[p], e);
            return this[u] ? super.push(e) : true;
          }
          return super.push(e);
        }
        async text() {
          return consume(this, "text");
        }
        async json() {
          return consume(this, "json");
        }
        async blob() {
          return consume(this, "blob");
        }
        async arrayBuffer() {
          return consume(this, "arrayBuffer");
        }
        async formData() {
          throw new i();
        }
        get bodyUsed() {
          return A.isDisturbed(this);
        }
        get body() {
          if (!this[g]) {
            this[g] = l(this);
            if (this[p]) {
              this[g].getReader();
              s(this[g].locked);
            }
          }
          return this[g];
        }
        dump(e) {
          let t = e && Number.isFinite(e.limit) ? e.limit : 262144;
          const r = e && e.signal;
          if (r) {
            try {
              if (typeof r !== "object" || !("aborted" in r)) {
                throw new a("signal must be an AbortSignal");
              }
              A.throwIfAborted(r);
            } catch (e) {
              return Promise.reject(e);
            }
          }
          if (this.closed) {
            return Promise.resolve(null);
          }
          return new Promise((e, s) => {
            const n = r
              ? A.addAbortListener(r, () => {
                  this.destroy();
                })
              : noop;
            this.on("close", function () {
              n();
              if (r && r.aborted) {
                s(r.reason || Object.assign(new Error("The operation was aborted"), { name: "AbortError" }));
              } else {
                e(null);
              }
            })
              .on("error", noop)
              .on("data", function (e) {
                t -= e.length;
                if (t <= 0) {
                  this.destroy();
                }
              })
              .resume();
          });
        }
      };
      function isLocked(e) {
        return (e[g] && e[g].locked === true) || e[p];
      }
      function isUnusable(e) {
        return A.isDisturbed(e) || isLocked(e);
      }
      async function consume(e, t) {
        if (isUnusable(e)) {
          throw new TypeError("unusable");
        }
        s(!e[p]);
        return new Promise((r, s) => {
          e[p] = { type: t, stream: e, resolve: r, reject: s, length: 0, body: [] };
          e.on("error", function (e) {
            consumeFinish(this[p], e);
          }).on("close", function () {
            if (this[p].body !== null) {
              consumeFinish(this[p], new o());
            }
          });
          process.nextTick(consumeStart, e[p]);
        });
      }
      function consumeStart(e) {
        if (e.body === null) {
          return;
        }
        const { _readableState: t } = e.stream;
        for (const r of t.buffer) {
          consumePush(e, r);
        }
        if (t.endEmitted) {
          consumeEnd(this[p]);
        } else {
          e.stream.on("end", function () {
            consumeEnd(this[p]);
          });
        }
        e.stream.resume();
        while (e.stream.read() != null) {}
      }
      function consumeEnd(e) {
        const { type: t, body: s, resolve: n, stream: o, length: i } = e;
        try {
          if (t === "text") {
            n(c(Buffer.concat(s)));
          } else if (t === "json") {
            n(JSON.parse(Buffer.concat(s)));
          } else if (t === "arrayBuffer") {
            const e = new Uint8Array(i);
            let t = 0;
            for (const r of s) {
              e.set(r, t);
              t += r.byteLength;
            }
            n(e.buffer);
          } else if (t === "blob") {
            if (!d) {
              d = r(20181).Blob;
            }
            n(new d(s, { type: o[h] }));
          }
          consumeFinish(e);
        } catch (e) {
          o.destroy(e);
        }
      }
      function consumePush(e, t) {
        e.length += t.length;
        e.body.push(t);
      }
      function consumeFinish(e, t) {
        if (e.body === null) {
          return;
        }
        if (t) {
          e.reject(t);
        } else {
          e.resolve();
        }
        e.type = null;
        e.stream = null;
        e.resolve = null;
        e.reject = null;
        e.length = 0;
        e.body = null;
      }
    },
    87655: (e, t, r) => {
      const s = r(42613);
      const { ResponseStatusCodeError: n } = r(68707);
      const { toUSVString: o } = r(3440);
      async function getResolveErrorBodyCallback({ callback: e, body: t, contentType: r, statusCode: i, statusMessage: a, headers: A }) {
        s(t);
        let l = [];
        let c = 0;
        for await (const e of t) {
          l.push(e);
          c += e.length;
          if (c > 128 * 1024) {
            l = null;
            break;
          }
        }
        if (i === 204 || !r || !l) {
          process.nextTick(e, new n(`Response status code ${i}${a ? `: ${a}` : ""}`, i, A));
          return;
        }
        try {
          if (r.startsWith("application/json")) {
            const t = JSON.parse(o(Buffer.concat(l)));
            process.nextTick(e, new n(`Response status code ${i}${a ? `: ${a}` : ""}`, i, A, t));
            return;
          }
          if (r.startsWith("text/")) {
            const t = o(Buffer.concat(l));
            process.nextTick(e, new n(`Response status code ${i}${a ? `: ${a}` : ""}`, i, A, t));
            return;
          }
        } catch (e) {}
        process.nextTick(e, new n(`Response status code ${i}${a ? `: ${a}` : ""}`, i, A));
      }
      e.exports = { getResolveErrorBodyCallback: getResolveErrorBodyCallback };
    },
    81093: (e, t, r) => {
      "use strict";
      const { BalancedPoolMissingUpstreamError: s, InvalidArgumentError: n } = r(68707);
      const { PoolBase: o, kClients: i, kNeedDrain: a, kAddClient: A, kRemoveClient: l, kGetDispatcher: c } = r(58640);
      const d = r(35076);
      const { kUrl: p, kInterceptors: u } = r(36443);
      const { parseOrigin: g } = r(3440);
      const m = Symbol("factory");
      const h = Symbol("options");
      const E = Symbol("kGreatestCommonDivisor");
      const I = Symbol("kCurrentWeight");
      const C = Symbol("kIndex");
      const y = Symbol("kWeight");
      const B = Symbol("kMaxWeightPerServer");
      const Q = Symbol("kErrorPenalty");
      function getGreatestCommonDivisor(e, t) {
        if (t === 0) return e;
        return getGreatestCommonDivisor(t, e % t);
      }
      function defaultFactory(e, t) {
        return new d(e, t);
      }
      class BalancedPool extends o {
        constructor(e = [], { factory: t = defaultFactory, ...r } = {}) {
          super();
          this[h] = r;
          this[C] = -1;
          this[I] = 0;
          this[B] = this[h].maxWeightPerServer || 100;
          this[Q] = this[h].errorPenalty || 15;
          if (!Array.isArray(e)) {
            e = [e];
          }
          if (typeof t !== "function") {
            throw new n("factory must be a function.");
          }
          this[u] = r.interceptors && r.interceptors.BalancedPool && Array.isArray(r.interceptors.BalancedPool) ? r.interceptors.BalancedPool : [];
          this[m] = t;
          for (const t of e) {
            this.addUpstream(t);
          }
          this._updateBalancedPoolStats();
        }
        addUpstream(e) {
          const t = g(e).origin;
          if (this[i].find((e) => e[p].origin === t && e.closed !== true && e.destroyed !== true)) {
            return this;
          }
          const r = this[m](t, Object.assign({}, this[h]));
          this[A](r);
          r.on("connect", () => {
            r[y] = Math.min(this[B], r[y] + this[Q]);
          });
          r.on("connectionError", () => {
            r[y] = Math.max(1, r[y] - this[Q]);
            this._updateBalancedPoolStats();
          });
          r.on("disconnect", (...e) => {
            const t = e[2];
            if (t && t.code === "UND_ERR_SOCKET") {
              r[y] = Math.max(1, r[y] - this[Q]);
              this._updateBalancedPoolStats();
            }
          });
          for (const e of this[i]) {
            e[y] = this[B];
          }
          this._updateBalancedPoolStats();
          return this;
        }
        _updateBalancedPoolStats() {
          this[E] = this[i].map((e) => e[y]).reduce(getGreatestCommonDivisor, 0);
        }
        removeUpstream(e) {
          const t = g(e).origin;
          const r = this[i].find((e) => e[p].origin === t && e.closed !== true && e.destroyed !== true);
          if (r) {
            this[l](r);
          }
          return this;
        }
        get upstreams() {
          return this[i].filter((e) => e.closed !== true && e.destroyed !== true).map((e) => e[p].origin);
        }
        [c]() {
          if (this[i].length === 0) {
            throw new s();
          }
          const e = this[i].find((e) => !e[a] && e.closed !== true && e.destroyed !== true);
          if (!e) {
            return;
          }
          const t = this[i].map((e) => e[a]).reduce((e, t) => e && t, true);
          if (t) {
            return;
          }
          let r = 0;
          let n = this[i].findIndex((e) => !e[a]);
          while (r++ < this[i].length) {
            this[C] = (this[C] + 1) % this[i].length;
            const e = this[i][this[C]];
            if (e[y] > this[i][n][y] && !e[a]) {
              n = this[C];
            }
            if (this[C] === 0) {
              this[I] = this[I] - this[E];
              if (this[I] <= 0) {
                this[I] = this[B];
              }
            }
            if (e[y] >= this[I] && !e[a]) {
              return e;
            }
          }
          this[I] = this[i][n][y];
          this[C] = n;
          return this[i][n];
        }
      }
      e.exports = BalancedPool;
    },
    50479: (e, t, r) => {
      "use strict";
      const { kConstruct: s } = r(80296);
      const { urlEquals: n, fieldValues: o } = r(23993);
      const { kEnumerableProperty: i, isDisturbed: a } = r(3440);
      const { kHeadersList: A } = r(36443);
      const { webidl: l } = r(74222);
      const { Response: c, cloneResponse: d } = r(48676);
      const { Request: p } = r(25194);
      const { kState: u, kHeaders: g, kGuard: m, kRealm: h } = r(89710);
      const { fetching: E } = r(12315);
      const { urlIsHttpHttpsScheme: I, createDeferredPromise: C, readAllBytes: y } = r(15523);
      const B = r(42613);
      const { getGlobalDispatcher: Q } = r(32581);
      class Cache {
        #e;
        constructor() {
          if (arguments[0] !== s) {
            l.illegalConstructor();
          }
          this.#e = arguments[1];
        }
        async match(e, t = {}) {
          l.brandCheck(this, Cache);
          l.argumentLengthCheck(arguments, 1, { header: "Cache.match" });
          e = l.converters.RequestInfo(e);
          t = l.converters.CacheQueryOptions(t);
          const r = await this.matchAll(e, t);
          if (r.length === 0) {
            return;
          }
          return r[0];
        }
        async matchAll(e = undefined, t = {}) {
          l.brandCheck(this, Cache);
          if (e !== undefined) e = l.converters.RequestInfo(e);
          t = l.converters.CacheQueryOptions(t);
          let r = null;
          if (e !== undefined) {
            if (e instanceof p) {
              r = e[u];
              if (r.method !== "GET" && !t.ignoreMethod) {
                return [];
              }
            } else if (typeof e === "string") {
              r = new p(e)[u];
            }
          }
          const s = [];
          if (e === undefined) {
            for (const e of this.#e) {
              s.push(e[1]);
            }
          } else {
            const e = this.#t(r, t);
            for (const t of e) {
              s.push(t[1]);
            }
          }
          const n = [];
          for (const e of s) {
            const t = new c(e.body?.source ?? null);
            const r = t[u].body;
            t[u] = e;
            t[u].body = r;
            t[g][A] = e.headersList;
            t[g][m] = "immutable";
            n.push(t);
          }
          return Object.freeze(n);
        }
        async add(e) {
          l.brandCheck(this, Cache);
          l.argumentLengthCheck(arguments, 1, { header: "Cache.add" });
          e = l.converters.RequestInfo(e);
          const t = [e];
          const r = this.addAll(t);
          return await r;
        }
        async addAll(e) {
          l.brandCheck(this, Cache);
          l.argumentLengthCheck(arguments, 1, { header: "Cache.addAll" });
          e = l.converters["sequence<RequestInfo>"](e);
          const t = [];
          const r = [];
          for (const t of e) {
            if (typeof t === "string") {
              continue;
            }
            const e = t[u];
            if (!I(e.url) || e.method !== "GET") {
              throw l.errors.exception({ header: "Cache.addAll", message: "Expected http/s scheme when method is not GET." });
            }
          }
          const s = [];
          for (const n of e) {
            const e = new p(n)[u];
            if (!I(e.url)) {
              throw l.errors.exception({ header: "Cache.addAll", message: "Expected http/s scheme." });
            }
            e.initiator = "fetch";
            e.destination = "subresource";
            r.push(e);
            const i = C();
            s.push(
              E({
                request: e,
                dispatcher: Q(),
                processResponse(e) {
                  if (e.type === "error" || e.status === 206 || e.status < 200 || e.status > 299) {
                    i.reject(l.errors.exception({ header: "Cache.addAll", message: "Received an invalid status code or the request failed." }));
                  } else if (e.headersList.contains("vary")) {
                    const t = o(e.headersList.get("vary"));
                    for (const e of t) {
                      if (e === "*") {
                        i.reject(l.errors.exception({ header: "Cache.addAll", message: "invalid vary field value" }));
                        for (const e of s) {
                          e.abort();
                        }
                        return;
                      }
                    }
                  }
                },
                processResponseEndOfBody(e) {
                  if (e.aborted) {
                    i.reject(new DOMException("aborted", "AbortError"));
                    return;
                  }
                  i.resolve(e);
                },
              })
            );
            t.push(i.promise);
          }
          const n = Promise.all(t);
          const i = await n;
          const a = [];
          let A = 0;
          for (const e of i) {
            const t = { type: "put", request: r[A], response: e };
            a.push(t);
            A++;
          }
          const c = C();
          let d = null;
          try {
            this.#r(a);
          } catch (e) {
            d = e;
          }
          queueMicrotask(() => {
            if (d === null) {
              c.resolve(undefined);
            } else {
              c.reject(d);
            }
          });
          return c.promise;
        }
        async put(e, t) {
          l.brandCheck(this, Cache);
          l.argumentLengthCheck(arguments, 2, { header: "Cache.put" });
          e = l.converters.RequestInfo(e);
          t = l.converters.Response(t);
          let r = null;
          if (e instanceof p) {
            r = e[u];
          } else {
            r = new p(e)[u];
          }
          if (!I(r.url) || r.method !== "GET") {
            throw l.errors.exception({ header: "Cache.put", message: "Expected an http/s scheme when method is not GET" });
          }
          const s = t[u];
          if (s.status === 206) {
            throw l.errors.exception({ header: "Cache.put", message: "Got 206 status" });
          }
          if (s.headersList.contains("vary")) {
            const e = o(s.headersList.get("vary"));
            for (const t of e) {
              if (t === "*") {
                throw l.errors.exception({ header: "Cache.put", message: "Got * vary field value" });
              }
            }
          }
          if (s.body && (a(s.body.stream) || s.body.stream.locked)) {
            throw l.errors.exception({ header: "Cache.put", message: "Response body is locked or disturbed" });
          }
          const n = d(s);
          const i = C();
          if (s.body != null) {
            const e = s.body.stream;
            const t = e.getReader();
            y(t).then(i.resolve, i.reject);
          } else {
            i.resolve(undefined);
          }
          const A = [];
          const c = { type: "put", request: r, response: n };
          A.push(c);
          const g = await i.promise;
          if (n.body != null) {
            n.body.source = g;
          }
          const m = C();
          let h = null;
          try {
            this.#r(A);
          } catch (e) {
            h = e;
          }
          queueMicrotask(() => {
            if (h === null) {
              m.resolve();
            } else {
              m.reject(h);
            }
          });
          return m.promise;
        }
        async delete(e, t = {}) {
          l.brandCheck(this, Cache);
          l.argumentLengthCheck(arguments, 1, { header: "Cache.delete" });
          e = l.converters.RequestInfo(e);
          t = l.converters.CacheQueryOptions(t);
          let r = null;
          if (e instanceof p) {
            r = e[u];
            if (r.method !== "GET" && !t.ignoreMethod) {
              return false;
            }
          } else {
            B(typeof e === "string");
            r = new p(e)[u];
          }
          const s = [];
          const n = { type: "delete", request: r, options: t };
          s.push(n);
          const o = C();
          let i = null;
          let a;
          try {
            a = this.#r(s);
          } catch (e) {
            i = e;
          }
          queueMicrotask(() => {
            if (i === null) {
              o.resolve(!!a?.length);
            } else {
              o.reject(i);
            }
          });
          return o.promise;
        }
        async keys(e = undefined, t = {}) {
          l.brandCheck(this, Cache);
          if (e !== undefined) e = l.converters.RequestInfo(e);
          t = l.converters.CacheQueryOptions(t);
          let r = null;
          if (e !== undefined) {
            if (e instanceof p) {
              r = e[u];
              if (r.method !== "GET" && !t.ignoreMethod) {
                return [];
              }
            } else if (typeof e === "string") {
              r = new p(e)[u];
            }
          }
          const s = C();
          const n = [];
          if (e === undefined) {
            for (const e of this.#e) {
              n.push(e[0]);
            }
          } else {
            const e = this.#t(r, t);
            for (const t of e) {
              n.push(t[0]);
            }
          }
          queueMicrotask(() => {
            const e = [];
            for (const t of n) {
              const r = new p("https://a");
              r[u] = t;
              r[g][A] = t.headersList;
              r[g][m] = "immutable";
              r[h] = t.client;
              e.push(r);
            }
            s.resolve(Object.freeze(e));
          });
          return s.promise;
        }
        #r(e) {
          const t = this.#e;
          const r = [...t];
          const s = [];
          const n = [];
          try {
            for (const r of e) {
              if (r.type !== "delete" && r.type !== "put") {
                throw l.errors.exception({ header: "Cache.#batchCacheOperations", message: 'operation type does not match "delete" or "put"' });
              }
              if (r.type === "delete" && r.response != null) {
                throw l.errors.exception({ header: "Cache.#batchCacheOperations", message: "delete operation should not have an associated response" });
              }
              if (this.#t(r.request, r.options, s).length) {
                throw new DOMException("???", "InvalidStateError");
              }
              let e;
              if (r.type === "delete") {
                e = this.#t(r.request, r.options);
                if (e.length === 0) {
                  return [];
                }
                for (const r of e) {
                  const e = t.indexOf(r);
                  B(e !== -1);
                  t.splice(e, 1);
                }
              } else if (r.type === "put") {
                if (r.response == null) {
                  throw l.errors.exception({ header: "Cache.#batchCacheOperations", message: "put operation should have an associated response" });
                }
                const n = r.request;
                if (!I(n.url)) {
                  throw l.errors.exception({ header: "Cache.#batchCacheOperations", message: "expected http or https scheme" });
                }
                if (n.method !== "GET") {
                  throw l.errors.exception({ header: "Cache.#batchCacheOperations", message: "not get method" });
                }
                if (r.options != null) {
                  throw l.errors.exception({ header: "Cache.#batchCacheOperations", message: "options must not be defined" });
                }
                e = this.#t(r.request);
                for (const r of e) {
                  const e = t.indexOf(r);
                  B(e !== -1);
                  t.splice(e, 1);
                }
                t.push([r.request, r.response]);
                s.push([r.request, r.response]);
              }
              n.push([r.request, r.response]);
            }
            return n;
          } catch (e) {
            this.#e.length = 0;
            this.#e = r;
            throw e;
          }
        }
        #t(e, t, r) {
          const s = [];
          const n = r ?? this.#e;
          for (const r of n) {
            const [n, o] = r;
            if (this.#s(e, n, o, t)) {
              s.push(r);
            }
          }
          return s;
        }
        #s(e, t, r = null, s) {
          const i = new URL(e.url);
          const a = new URL(t.url);
          if (s?.ignoreSearch) {
            a.search = "";
            i.search = "";
          }
          if (!n(i, a, true)) {
            return false;
          }
          if (r == null || s?.ignoreVary || !r.headersList.contains("vary")) {
            return true;
          }
          const A = o(r.headersList.get("vary"));
          for (const r of A) {
            if (r === "*") {
              return false;
            }
            const s = t.headersList.get(r);
            const n = e.headersList.get(r);
            if (s !== n) {
              return false;
            }
          }
          return true;
        }
      }
      Object.defineProperties(Cache.prototype, {
        [Symbol.toStringTag]: { value: "Cache", configurable: true },
        match: i,
        matchAll: i,
        add: i,
        addAll: i,
        put: i,
        delete: i,
        keys: i,
      });
      const b = [
        { key: "ignoreSearch", converter: l.converters.boolean, defaultValue: false },
        { key: "ignoreMethod", converter: l.converters.boolean, defaultValue: false },
        { key: "ignoreVary", converter: l.converters.boolean, defaultValue: false },
      ];
      l.converters.CacheQueryOptions = l.dictionaryConverter(b);
      l.converters.MultiCacheQueryOptions = l.dictionaryConverter([...b, { key: "cacheName", converter: l.converters.DOMString }]);
      l.converters.Response = l.interfaceConverter(c);
      l.converters["sequence<RequestInfo>"] = l.sequenceConverter(l.converters.RequestInfo);
      e.exports = { Cache: Cache };
    },
    44738: (e, t, r) => {
      "use strict";
      const { kConstruct: s } = r(80296);
      const { Cache: n } = r(50479);
      const { webidl: o } = r(74222);
      const { kEnumerableProperty: i } = r(3440);
      class CacheStorage {
        #n = new Map();
        constructor() {
          if (arguments[0] !== s) {
            o.illegalConstructor();
          }
        }
        async match(e, t = {}) {
          o.brandCheck(this, CacheStorage);
          o.argumentLengthCheck(arguments, 1, { header: "CacheStorage.match" });
          e = o.converters.RequestInfo(e);
          t = o.converters.MultiCacheQueryOptions(t);
          if (t.cacheName != null) {
            if (this.#n.has(t.cacheName)) {
              const r = this.#n.get(t.cacheName);
              const o = new n(s, r);
              return await o.match(e, t);
            }
          } else {
            for (const r of this.#n.values()) {
              const o = new n(s, r);
              const i = await o.match(e, t);
              if (i !== undefined) {
                return i;
              }
            }
          }
        }
        async has(e) {
          o.brandCheck(this, CacheStorage);
          o.argumentLengthCheck(arguments, 1, { header: "CacheStorage.has" });
          e = o.converters.DOMString(e);
          return this.#n.has(e);
        }
        async open(e) {
          o.brandCheck(this, CacheStorage);
          o.argumentLengthCheck(arguments, 1, { header: "CacheStorage.open" });
          e = o.converters.DOMString(e);
          if (this.#n.has(e)) {
            const t = this.#n.get(e);
            return new n(s, t);
          }
          const t = [];
          this.#n.set(e, t);
          return new n(s, t);
        }
        async delete(e) {
          o.brandCheck(this, CacheStorage);
          o.argumentLengthCheck(arguments, 1, { header: "CacheStorage.delete" });
          e = o.converters.DOMString(e);
          return this.#n.delete(e);
        }
        async keys() {
          o.brandCheck(this, CacheStorage);
          const e = this.#n.keys();
          return [...e];
        }
      }
      Object.defineProperties(CacheStorage.prototype, {
        [Symbol.toStringTag]: { value: "CacheStorage", configurable: true },
        match: i,
        has: i,
        open: i,
        delete: i,
        keys: i,
      });
      e.exports = { CacheStorage: CacheStorage };
    },
    80296: (e, t, r) => {
      "use strict";
      e.exports = { kConstruct: r(36443).kConstruct };
    },
    23993: (e, t, r) => {
      "use strict";
      const s = r(42613);
      const { URLSerializer: n } = r(94322);
      const { isValidHeaderName: o } = r(15523);
      function urlEquals(e, t, r = false) {
        const s = n(e, r);
        const o = n(t, r);
        return s === o;
      }
      function fieldValues(e) {
        s(e !== null);
        const t = [];
        for (let r of e.split(",")) {
          r = r.trim();
          if (!r.length) {
            continue;
          } else if (!o(r)) {
            continue;
          }
          t.push(r);
        }
        return t;
      }
      e.exports = { urlEquals: urlEquals, fieldValues: fieldValues };
    },
    86197: (e, t, r) => {
      "use strict";
      const s = r(42613);
      const n = r(69278);
      const o = r(58611);
      const { pipeline: i } = r(2203);
      const a = r(3440);
      const A = r(28804);
      const l = r(44655);
      const c = r(50001);
      const {
        RequestContentLengthMismatchError: d,
        ResponseContentLengthMismatchError: p,
        InvalidArgumentError: u,
        RequestAbortedError: g,
        HeadersTimeoutError: m,
        HeadersOverflowError: h,
        SocketError: E,
        InformationalError: I,
        BodyTimeoutError: C,
        HTTPParserError: y,
        ResponseExceededMaxSizeError: B,
        ClientDestroyedError: Q,
      } = r(68707);
      const b = r(59136);
      const {
        kUrl: w,
        kReset: v,
        kServerName: T,
        kClient: _,
        kBusy: S,
        kParser: R,
        kConnect: D,
        kBlocking: k,
        kResuming: F,
        kRunning: O,
        kPending: N,
        kSize: P,
        kWriting: U,
        kQueue: L,
        kConnected: M,
        kConnecting: G,
        kNeedDrain: x,
        kNoRef: V,
        kKeepAliveDefaultTimeout: j,
        kHostHeader: H,
        kPendingIdx: Y,
        kRunningIdx: J,
        kError: q,
        kPipelining: W,
        kSocket: K,
        kKeepAliveTimeoutValue: $,
        kMaxHeadersSize: z,
        kKeepAliveMaxTimeout: Z,
        kKeepAliveTimeoutThreshold: X,
        kHeadersTimeout: ee,
        kBodyTimeout: te,
        kStrictContentLength: re,
        kConnector: se,
        kMaxRedirections: ne,
        kMaxRequests: oe,
        kCounter: ie,
        kClose: ae,
        kDestroy: Ae,
        kDispatch: le,
        kInterceptors: ce,
        kLocalAddress: de,
        kMaxResponseSize: pe,
        kHTTPConnVersion: ue,
        kHost: ge,
        kHTTP2Session: me,
        kHTTP2SessionState: he,
        kHTTP2BuildRequest: fe,
        kHTTP2CopyHeaders: Ee,
        kHTTP1BuildRequest: Ie,
      } = r(36443);
      let Ce;
      try {
        Ce = r(85675);
      } catch {
        Ce = { constants: {} };
      }
      const {
        constants: {
          HTTP2_HEADER_AUTHORITY: ye,
          HTTP2_HEADER_METHOD: Be,
          HTTP2_HEADER_PATH: Qe,
          HTTP2_HEADER_SCHEME: be,
          HTTP2_HEADER_CONTENT_LENGTH: we,
          HTTP2_HEADER_EXPECT: ve,
          HTTP2_HEADER_STATUS: Te,
        },
      } = Ce;
      let _e = false;
      const Se = Buffer[Symbol.species];
      const Re = Symbol("kClosedResolve");
      const De = {};
      try {
        const e = r(31637);
        De.sendHeaders = e.channel("undici:client:sendHeaders");
        De.beforeConnect = e.channel("undici:client:beforeConnect");
        De.connectError = e.channel("undici:client:connectError");
        De.connected = e.channel("undici:client:connected");
      } catch {
        De.sendHeaders = { hasSubscribers: false };
        De.beforeConnect = { hasSubscribers: false };
        De.connectError = { hasSubscribers: false };
        De.connected = { hasSubscribers: false };
      }
      class Client extends c {
        constructor(
          e,
          {
            interceptors: t,
            maxHeaderSize: r,
            headersTimeout: s,
            socketTimeout: i,
            requestTimeout: A,
            connectTimeout: l,
            bodyTimeout: c,
            idleTimeout: d,
            keepAlive: p,
            keepAliveTimeout: g,
            maxKeepAliveTimeout: m,
            keepAliveMaxTimeout: h,
            keepAliveTimeoutThreshold: E,
            socketPath: I,
            pipelining: C,
            tls: y,
            strictContentLength: B,
            maxCachedSessions: Q,
            maxRedirections: v,
            connect: _,
            maxRequestsPerClient: S,
            localAddress: R,
            maxResponseSize: D,
            autoSelectFamily: k,
            autoSelectFamilyAttemptTimeout: O,
            allowH2: N,
            maxConcurrentStreams: P,
          } = {}
        ) {
          super();
          if (p !== undefined) {
            throw new u("unsupported keepAlive, use pipelining=0 instead");
          }
          if (i !== undefined) {
            throw new u("unsupported socketTimeout, use headersTimeout & bodyTimeout instead");
          }
          if (A !== undefined) {
            throw new u("unsupported requestTimeout, use headersTimeout & bodyTimeout instead");
          }
          if (d !== undefined) {
            throw new u("unsupported idleTimeout, use keepAliveTimeout instead");
          }
          if (m !== undefined) {
            throw new u("unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead");
          }
          if (r != null && !Number.isFinite(r)) {
            throw new u("invalid maxHeaderSize");
          }
          if (I != null && typeof I !== "string") {
            throw new u("invalid socketPath");
          }
          if (l != null && (!Number.isFinite(l) || l < 0)) {
            throw new u("invalid connectTimeout");
          }
          if (g != null && (!Number.isFinite(g) || g <= 0)) {
            throw new u("invalid keepAliveTimeout");
          }
          if (h != null && (!Number.isFinite(h) || h <= 0)) {
            throw new u("invalid keepAliveMaxTimeout");
          }
          if (E != null && !Number.isFinite(E)) {
            throw new u("invalid keepAliveTimeoutThreshold");
          }
          if (s != null && (!Number.isInteger(s) || s < 0)) {
            throw new u("headersTimeout must be a positive integer or zero");
          }
          if (c != null && (!Number.isInteger(c) || c < 0)) {
            throw new u("bodyTimeout must be a positive integer or zero");
          }
          if (_ != null && typeof _ !== "function" && typeof _ !== "object") {
            throw new u("connect must be a function or an object");
          }
          if (v != null && (!Number.isInteger(v) || v < 0)) {
            throw new u("maxRedirections must be a positive number");
          }
          if (S != null && (!Number.isInteger(S) || S < 0)) {
            throw new u("maxRequestsPerClient must be a positive number");
          }
          if (R != null && (typeof R !== "string" || n.isIP(R) === 0)) {
            throw new u("localAddress must be valid string IP address");
          }
          if (D != null && (!Number.isInteger(D) || D < -1)) {
            throw new u("maxResponseSize must be a positive number");
          }
          if (O != null && (!Number.isInteger(O) || O < -1)) {
            throw new u("autoSelectFamilyAttemptTimeout must be a positive number");
          }
          if (N != null && typeof N !== "boolean") {
            throw new u("allowH2 must be a valid boolean value");
          }
          if (P != null && (typeof P !== "number" || P < 1)) {
            throw new u("maxConcurrentStreams must be a possitive integer, greater than 0");
          }
          if (typeof _ !== "function") {
            _ = b({
              ...y,
              maxCachedSessions: Q,
              allowH2: N,
              socketPath: I,
              timeout: l,
              ...(a.nodeHasAutoSelectFamily && k ? { autoSelectFamily: k, autoSelectFamilyAttemptTimeout: O } : undefined),
              ..._,
            });
          }
          this[ce] = t && t.Client && Array.isArray(t.Client) ? t.Client : [Fe({ maxRedirections: v })];
          this[w] = a.parseOrigin(e);
          this[se] = _;
          this[K] = null;
          this[W] = C != null ? C : 1;
          this[z] = r || o.maxHeaderSize;
          this[j] = g == null ? 4e3 : g;
          this[Z] = h == null ? 6e5 : h;
          this[X] = E == null ? 1e3 : E;
          this[$] = this[j];
          this[T] = null;
          this[de] = R != null ? R : null;
          this[F] = 0;
          this[x] = 0;
          this[H] = `host: ${this[w].hostname}${this[w].port ? `:${this[w].port}` : ""}\r\n`;
          this[te] = c != null ? c : 3e5;
          this[ee] = s != null ? s : 3e5;
          this[re] = B == null ? true : B;
          this[ne] = v;
          this[oe] = S;
          this[Re] = null;
          this[pe] = D > -1 ? D : -1;
          this[ue] = "h1";
          this[me] = null;
          this[he] = !N ? null : { openStreams: 0, maxConcurrentStreams: P != null ? P : 100 };
          this[ge] = `${this[w].hostname}${this[w].port ? `:${this[w].port}` : ""}`;
          this[L] = [];
          this[J] = 0;
          this[Y] = 0;
        }
        get pipelining() {
          return this[W];
        }
        set pipelining(e) {
          this[W] = e;
          resume(this, true);
        }
        get [N]() {
          return this[L].length - this[Y];
        }
        get [O]() {
          return this[Y] - this[J];
        }
        get [P]() {
          return this[L].length - this[J];
        }
        get [M]() {
          return !!this[K] && !this[G] && !this[K].destroyed;
        }
        get [S]() {
          const e = this[K];
          return (e && (e[v] || e[U] || e[k])) || this[P] >= (this[W] || 1) || this[N] > 0;
        }
        [D](e) {
          connect(this);
          this.once("connect", e);
        }
        [le](e, t) {
          const r = e.origin || this[w].origin;
          const s = this[ue] === "h2" ? l[fe](r, e, t) : l[Ie](r, e, t);
          this[L].push(s);
          if (this[F]) {
          } else if (a.bodyLength(s.body) == null && a.isIterable(s.body)) {
            this[F] = 1;
            process.nextTick(resume, this);
          } else {
            resume(this, true);
          }
          if (this[F] && this[x] !== 2 && this[S]) {
            this[x] = 2;
          }
          return this[x] < 2;
        }
        async [ae]() {
          return new Promise((e) => {
            if (!this[P]) {
              e(null);
            } else {
              this[Re] = e;
            }
          });
        }
        async [Ae](e) {
          return new Promise((t) => {
            const r = this[L].splice(this[Y]);
            for (let t = 0; t < r.length; t++) {
              const s = r[t];
              errorRequest(this, s, e);
            }
            const callback = () => {
              if (this[Re]) {
                this[Re]();
                this[Re] = null;
              }
              t();
            };
            if (this[me] != null) {
              a.destroy(this[me], e);
              this[me] = null;
              this[he] = null;
            }
            if (!this[K]) {
              queueMicrotask(callback);
            } else {
              a.destroy(this[K].on("close", callback), e);
            }
            resume(this);
          });
        }
      }
      function onHttp2SessionError(e) {
        s(e.code !== "ERR_TLS_CERT_ALTNAME_INVALID");
        this[K][q] = e;
        onError(this[_], e);
      }
      function onHttp2FrameError(e, t, r) {
        const s = new I(`HTTP/2: "frameError" received - type ${e}, code ${t}`);
        if (r === 0) {
          this[K][q] = s;
          onError(this[_], s);
        }
      }
      function onHttp2SessionEnd() {
        a.destroy(this, new E("other side closed"));
        a.destroy(this[K], new E("other side closed"));
      }
      function onHTTP2GoAway(e) {
        const t = this[_];
        const r = new I(`HTTP/2: "GOAWAY" frame received with code ${e}`);
        t[K] = null;
        t[me] = null;
        if (t.destroyed) {
          s(this[N] === 0);
          const e = t[L].splice(t[J]);
          for (let t = 0; t < e.length; t++) {
            const s = e[t];
            errorRequest(this, s, r);
          }
        } else if (t[O] > 0) {
          const e = t[L][t[J]];
          t[L][t[J]++] = null;
          errorRequest(t, e, r);
        }
        t[Y] = t[J];
        s(t[O] === 0);
        t.emit("disconnect", t[w], [t], r);
        resume(t);
      }
      const ke = r(52824);
      const Fe = r(64415);
      const Oe = Buffer.alloc(0);
      async function lazyllhttp() {
        const e = process.env.JEST_WORKER_ID ? r(63870) : undefined;
        let t;
        try {
          t = await WebAssembly.compile(Buffer.from(r(53434), "base64"));
        } catch (s) {
          t = await WebAssembly.compile(Buffer.from(e || r(63870), "base64"));
        }
        return await WebAssembly.instantiate(t, {
          env: {
            wasm_on_url: (e, t, r) => 0,
            wasm_on_status: (e, t, r) => {
              s.strictEqual(Ue.ptr, e);
              const n = t - Ge + Le.byteOffset;
              return Ue.onStatus(new Se(Le.buffer, n, r)) || 0;
            },
            wasm_on_message_begin: (e) => {
              s.strictEqual(Ue.ptr, e);
              return Ue.onMessageBegin() || 0;
            },
            wasm_on_header_field: (e, t, r) => {
              s.strictEqual(Ue.ptr, e);
              const n = t - Ge + Le.byteOffset;
              return Ue.onHeaderField(new Se(Le.buffer, n, r)) || 0;
            },
            wasm_on_header_value: (e, t, r) => {
              s.strictEqual(Ue.ptr, e);
              const n = t - Ge + Le.byteOffset;
              return Ue.onHeaderValue(new Se(Le.buffer, n, r)) || 0;
            },
            wasm_on_headers_complete: (e, t, r, n) => {
              s.strictEqual(Ue.ptr, e);
              return Ue.onHeadersComplete(t, Boolean(r), Boolean(n)) || 0;
            },
            wasm_on_body: (e, t, r) => {
              s.strictEqual(Ue.ptr, e);
              const n = t - Ge + Le.byteOffset;
              return Ue.onBody(new Se(Le.buffer, n, r)) || 0;
            },
            wasm_on_message_complete: (e) => {
              s.strictEqual(Ue.ptr, e);
              return Ue.onMessageComplete() || 0;
            },
          },
        });
      }
      let Ne = null;
      let Pe = lazyllhttp();
      Pe.catch();
      let Ue = null;
      let Le = null;
      let Me = 0;
      let Ge = null;
      const xe = 1;
      const Ve = 2;
      const je = 3;
      class Parser {
        constructor(e, t, { exports: r }) {
          s(Number.isFinite(e[z]) && e[z] > 0);
          this.llhttp = r;
          this.ptr = this.llhttp.llhttp_alloc(ke.TYPE.RESPONSE);
          this.client = e;
          this.socket = t;
          this.timeout = null;
          this.timeoutValue = null;
          this.timeoutType = null;
          this.statusCode = null;
          this.statusText = "";
          this.upgrade = false;
          this.headers = [];
          this.headersSize = 0;
          this.headersMaxSize = e[z];
          this.shouldKeepAlive = false;
          this.paused = false;
          this.resume = this.resume.bind(this);
          this.bytesRead = 0;
          this.keepAlive = "";
          this.contentLength = "";
          this.connection = "";
          this.maxResponseSize = e[pe];
        }
        setTimeout(e, t) {
          this.timeoutType = t;
          if (e !== this.timeoutValue) {
            A.clearTimeout(this.timeout);
            if (e) {
              this.timeout = A.setTimeout(onParserTimeout, e, this);
              if (this.timeout.unref) {
                this.timeout.unref();
              }
            } else {
              this.timeout = null;
            }
            this.timeoutValue = e;
          } else if (this.timeout) {
            if (this.timeout.refresh) {
              this.timeout.refresh();
            }
          }
        }
        resume() {
          if (this.socket.destroyed || !this.paused) {
            return;
          }
          s(this.ptr != null);
          s(Ue == null);
          this.llhttp.llhttp_resume(this.ptr);
          s(this.timeoutType === Ve);
          if (this.timeout) {
            if (this.timeout.refresh) {
              this.timeout.refresh();
            }
          }
          this.paused = false;
          this.execute(this.socket.read() || Oe);
          this.readMore();
        }
        readMore() {
          while (!this.paused && this.ptr) {
            const e = this.socket.read();
            if (e === null) {
              break;
            }
            this.execute(e);
          }
        }
        execute(e) {
          s(this.ptr != null);
          s(Ue == null);
          s(!this.paused);
          const { socket: t, llhttp: r } = this;
          if (e.length > Me) {
            if (Ge) {
              r.free(Ge);
            }
            Me = Math.ceil(e.length / 4096) * 4096;
            Ge = r.malloc(Me);
          }
          new Uint8Array(r.memory.buffer, Ge, Me).set(e);
          try {
            let s;
            try {
              Le = e;
              Ue = this;
              s = r.llhttp_execute(this.ptr, Ge, e.length);
            } catch (e) {
              throw e;
            } finally {
              Ue = null;
              Le = null;
            }
            const n = r.llhttp_get_error_pos(this.ptr) - Ge;
            if (s === ke.ERROR.PAUSED_UPGRADE) {
              this.onUpgrade(e.slice(n));
            } else if (s === ke.ERROR.PAUSED) {
              this.paused = true;
              t.unshift(e.slice(n));
            } else if (s !== ke.ERROR.OK) {
              const t = r.llhttp_get_error_reason(this.ptr);
              let o = "";
              if (t) {
                const e = new Uint8Array(r.memory.buffer, t).indexOf(0);
                o = "Response does not match the HTTP/1.1 protocol (" + Buffer.from(r.memory.buffer, t, e).toString() + ")";
              }
              throw new y(o, ke.ERROR[s], e.slice(n));
            }
          } catch (e) {
            a.destroy(t, e);
          }
        }
        destroy() {
          s(this.ptr != null);
          s(Ue == null);
          this.llhttp.llhttp_free(this.ptr);
          this.ptr = null;
          A.clearTimeout(this.timeout);
          this.timeout = null;
          this.timeoutValue = null;
          this.timeoutType = null;
          this.paused = false;
        }
        onStatus(e) {
          this.statusText = e.toString();
        }
        onMessageBegin() {
          const { socket: e, client: t } = this;
          if (e.destroyed) {
            return -1;
          }
          const r = t[L][t[J]];
          if (!r) {
            return -1;
          }
        }
        onHeaderField(e) {
          const t = this.headers.length;
          if ((t & 1) === 0) {
            this.headers.push(e);
          } else {
            this.headers[t - 1] = Buffer.concat([this.headers[t - 1], e]);
          }
          this.trackHeader(e.length);
        }
        onHeaderValue(e) {
          let t = this.headers.length;
          if ((t & 1) === 1) {
            this.headers.push(e);
            t += 1;
          } else {
            this.headers[t - 1] = Buffer.concat([this.headers[t - 1], e]);
          }
          const r = this.headers[t - 2];
          if (r.length === 10 && r.toString().toLowerCase() === "keep-alive") {
            this.keepAlive += e.toString();
          } else if (r.length === 10 && r.toString().toLowerCase() === "connection") {
            this.connection += e.toString();
          } else if (r.length === 14 && r.toString().toLowerCase() === "content-length") {
            this.contentLength += e.toString();
          }
          this.trackHeader(e.length);
        }
        trackHeader(e) {
          this.headersSize += e;
          if (this.headersSize >= this.headersMaxSize) {
            a.destroy(this.socket, new h());
          }
        }
        onUpgrade(e) {
          const { upgrade: t, client: r, socket: n, headers: o, statusCode: i } = this;
          s(t);
          const A = r[L][r[J]];
          s(A);
          s(!n.destroyed);
          s(n === r[K]);
          s(!this.paused);
          s(A.upgrade || A.method === "CONNECT");
          this.statusCode = null;
          this.statusText = "";
          this.shouldKeepAlive = null;
          s(this.headers.length % 2 === 0);
          this.headers = [];
          this.headersSize = 0;
          n.unshift(e);
          n[R].destroy();
          n[R] = null;
          n[_] = null;
          n[q] = null;
          n.removeListener("error", onSocketError)
            .removeListener("readable", onSocketReadable)
            .removeListener("end", onSocketEnd)
            .removeListener("close", onSocketClose);
          r[K] = null;
          r[L][r[J]++] = null;
          r.emit("disconnect", r[w], [r], new I("upgrade"));
          try {
            A.onUpgrade(i, o, n);
          } catch (e) {
            a.destroy(n, e);
          }
          resume(r);
        }
        onHeadersComplete(e, t, r) {
          const { client: n, socket: o, headers: i, statusText: A } = this;
          if (o.destroyed) {
            return -1;
          }
          const l = n[L][n[J]];
          if (!l) {
            return -1;
          }
          s(!this.upgrade);
          s(this.statusCode < 200);
          if (e === 100) {
            a.destroy(o, new E("bad response", a.getSocketInfo(o)));
            return -1;
          }
          if (t && !l.upgrade) {
            a.destroy(o, new E("bad upgrade", a.getSocketInfo(o)));
            return -1;
          }
          s.strictEqual(this.timeoutType, xe);
          this.statusCode = e;
          this.shouldKeepAlive = r || (l.method === "HEAD" && !o[v] && this.connection.toLowerCase() === "keep-alive");
          if (this.statusCode >= 200) {
            const e = l.bodyTimeout != null ? l.bodyTimeout : n[te];
            this.setTimeout(e, Ve);
          } else if (this.timeout) {
            if (this.timeout.refresh) {
              this.timeout.refresh();
            }
          }
          if (l.method === "CONNECT") {
            s(n[O] === 1);
            this.upgrade = true;
            return 2;
          }
          if (t) {
            s(n[O] === 1);
            this.upgrade = true;
            return 2;
          }
          s(this.headers.length % 2 === 0);
          this.headers = [];
          this.headersSize = 0;
          if (this.shouldKeepAlive && n[W]) {
            const e = this.keepAlive ? a.parseKeepAliveTimeout(this.keepAlive) : null;
            if (e != null) {
              const t = Math.min(e - n[X], n[Z]);
              if (t <= 0) {
                o[v] = true;
              } else {
                n[$] = t;
              }
            } else {
              n[$] = n[j];
            }
          } else {
            o[v] = true;
          }
          const c = l.onHeaders(e, i, this.resume, A) === false;
          if (l.aborted) {
            return -1;
          }
          if (l.method === "HEAD") {
            return 1;
          }
          if (e < 200) {
            return 1;
          }
          if (o[k]) {
            o[k] = false;
            resume(n);
          }
          return c ? ke.ERROR.PAUSED : 0;
        }
        onBody(e) {
          const { client: t, socket: r, statusCode: n, maxResponseSize: o } = this;
          if (r.destroyed) {
            return -1;
          }
          const i = t[L][t[J]];
          s(i);
          s.strictEqual(this.timeoutType, Ve);
          if (this.timeout) {
            if (this.timeout.refresh) {
              this.timeout.refresh();
            }
          }
          s(n >= 200);
          if (o > -1 && this.bytesRead + e.length > o) {
            a.destroy(r, new B());
            return -1;
          }
          this.bytesRead += e.length;
          if (i.onData(e) === false) {
            return ke.ERROR.PAUSED;
          }
        }
        onMessageComplete() {
          const { client: e, socket: t, statusCode: r, upgrade: n, headers: o, contentLength: i, bytesRead: A, shouldKeepAlive: l } = this;
          if (t.destroyed && (!r || l)) {
            return -1;
          }
          if (n) {
            return;
          }
          const c = e[L][e[J]];
          s(c);
          s(r >= 100);
          this.statusCode = null;
          this.statusText = "";
          this.bytesRead = 0;
          this.contentLength = "";
          this.keepAlive = "";
          this.connection = "";
          s(this.headers.length % 2 === 0);
          this.headers = [];
          this.headersSize = 0;
          if (r < 200) {
            return;
          }
          if (c.method !== "HEAD" && i && A !== parseInt(i, 10)) {
            a.destroy(t, new p());
            return -1;
          }
          c.onComplete(o);
          e[L][e[J]++] = null;
          if (t[U]) {
            s.strictEqual(e[O], 0);
            a.destroy(t, new I("reset"));
            return ke.ERROR.PAUSED;
          } else if (!l) {
            a.destroy(t, new I("reset"));
            return ke.ERROR.PAUSED;
          } else if (t[v] && e[O] === 0) {
            a.destroy(t, new I("reset"));
            return ke.ERROR.PAUSED;
          } else if (e[W] === 1) {
            setImmediate(resume, e);
          } else {
            resume(e);
          }
        }
      }
      function onParserTimeout(e) {
        const { socket: t, timeoutType: r, client: n } = e;
        if (r === xe) {
          if (!t[U] || t.writableNeedDrain || n[O] > 1) {
            s(!e.paused, "cannot be paused while waiting for headers");
            a.destroy(t, new m());
          }
        } else if (r === Ve) {
          if (!e.paused) {
            a.destroy(t, new C());
          }
        } else if (r === je) {
          s(n[O] === 0 && n[$]);
          a.destroy(t, new I("socket idle timeout"));
        }
      }
      function onSocketReadable() {
        const { [R]: e } = this;
        if (e) {
          e.readMore();
        }
      }
      function onSocketError(e) {
        const { [_]: t, [R]: r } = this;
        s(e.code !== "ERR_TLS_CERT_ALTNAME_INVALID");
        if (t[ue] !== "h2") {
          if (e.code === "ECONNRESET" && r.statusCode && !r.shouldKeepAlive) {
            r.onMessageComplete();
            return;
          }
        }
        this[q] = e;
        onError(this[_], e);
      }
      function onError(e, t) {
        if (e[O] === 0 && t.code !== "UND_ERR_INFO" && t.code !== "UND_ERR_SOCKET") {
          s(e[Y] === e[J]);
          const r = e[L].splice(e[J]);
          for (let s = 0; s < r.length; s++) {
            const n = r[s];
            errorRequest(e, n, t);
          }
          s(e[P] === 0);
        }
      }
      function onSocketEnd() {
        const { [R]: e, [_]: t } = this;
        if (t[ue] !== "h2") {
          if (e.statusCode && !e.shouldKeepAlive) {
            e.onMessageComplete();
            return;
          }
        }
        a.destroy(this, new E("other side closed", a.getSocketInfo(this)));
      }
      function onSocketClose() {
        const { [_]: e, [R]: t } = this;
        if (e[ue] === "h1" && t) {
          if (!this[q] && t.statusCode && !t.shouldKeepAlive) {
            t.onMessageComplete();
          }
          this[R].destroy();
          this[R] = null;
        }
        const r = this[q] || new E("closed", a.getSocketInfo(this));
        e[K] = null;
        if (e.destroyed) {
          s(e[N] === 0);
          const t = e[L].splice(e[J]);
          for (let s = 0; s < t.length; s++) {
            const n = t[s];
            errorRequest(e, n, r);
          }
        } else if (e[O] > 0 && r.code !== "UND_ERR_INFO") {
          const t = e[L][e[J]];
          e[L][e[J]++] = null;
          errorRequest(e, t, r);
        }
        e[Y] = e[J];
        s(e[O] === 0);
        e.emit("disconnect", e[w], [e], r);
        resume(e);
      }
      async function connect(e) {
        s(!e[G]);
        s(!e[K]);
        let { host: t, hostname: r, protocol: o, port: i } = e[w];
        if (r[0] === "[") {
          const e = r.indexOf("]");
          s(e !== -1);
          const t = r.substring(1, e);
          s(n.isIP(t));
          r = t;
        }
        e[G] = true;
        if (De.beforeConnect.hasSubscribers) {
          De.beforeConnect.publish({ connectParams: { host: t, hostname: r, protocol: o, port: i, servername: e[T], localAddress: e[de] }, connector: e[se] });
        }
        try {
          const n = await new Promise((s, n) => {
            e[se]({ host: t, hostname: r, protocol: o, port: i, servername: e[T], localAddress: e[de] }, (e, t) => {
              if (e) {
                n(e);
              } else {
                s(t);
              }
            });
          });
          if (e.destroyed) {
            a.destroy(
              n.on("error", () => {}),
              new Q()
            );
            return;
          }
          e[G] = false;
          s(n);
          const A = n.alpnProtocol === "h2";
          if (A) {
            if (!_e) {
              _e = true;
              process.emitWarning("H2 support is experimental, expect them to change at any time.", { code: "UNDICI-H2" });
            }
            const t = Ce.connect(e[w], { createConnection: () => n, peerMaxConcurrentStreams: e[he].maxConcurrentStreams });
            e[ue] = "h2";
            t[_] = e;
            t[K] = n;
            t.on("error", onHttp2SessionError);
            t.on("frameError", onHttp2FrameError);
            t.on("end", onHttp2SessionEnd);
            t.on("goaway", onHTTP2GoAway);
            t.on("close", onSocketClose);
            t.unref();
            e[me] = t;
            n[me] = t;
          } else {
            if (!Ne) {
              Ne = await Pe;
              Pe = null;
            }
            n[V] = false;
            n[U] = false;
            n[v] = false;
            n[k] = false;
            n[R] = new Parser(e, n, Ne);
          }
          n[ie] = 0;
          n[oe] = e[oe];
          n[_] = e;
          n[q] = null;
          n.on("error", onSocketError).on("readable", onSocketReadable).on("end", onSocketEnd).on("close", onSocketClose);
          e[K] = n;
          if (De.connected.hasSubscribers) {
            De.connected.publish({
              connectParams: { host: t, hostname: r, protocol: o, port: i, servername: e[T], localAddress: e[de] },
              connector: e[se],
              socket: n,
            });
          }
          e.emit("connect", e[w], [e]);
        } catch (n) {
          if (e.destroyed) {
            return;
          }
          e[G] = false;
          if (De.connectError.hasSubscribers) {
            De.connectError.publish({
              connectParams: { host: t, hostname: r, protocol: o, port: i, servername: e[T], localAddress: e[de] },
              connector: e[se],
              error: n,
            });
          }
          if (n.code === "ERR_TLS_CERT_ALTNAME_INVALID") {
            s(e[O] === 0);
            while (e[N] > 0 && e[L][e[Y]].servername === e[T]) {
              const t = e[L][e[Y]++];
              errorRequest(e, t, n);
            }
          } else {
            onError(e, n);
          }
          e.emit("connectionError", e[w], [e], n);
        }
        resume(e);
      }
      function emitDrain(e) {
        e[x] = 0;
        e.emit("drain", e[w], [e]);
      }
      function resume(e, t) {
        if (e[F] === 2) {
          return;
        }
        e[F] = 2;
        _resume(e, t);
        e[F] = 0;
        if (e[J] > 256) {
          e[L].splice(0, e[J]);
          e[Y] -= e[J];
          e[J] = 0;
        }
      }
      function _resume(e, t) {
        while (true) {
          if (e.destroyed) {
            s(e[N] === 0);
            return;
          }
          if (e[Re] && !e[P]) {
            e[Re]();
            e[Re] = null;
            return;
          }
          const r = e[K];
          if (r && !r.destroyed && r.alpnProtocol !== "h2") {
            if (e[P] === 0) {
              if (!r[V] && r.unref) {
                r.unref();
                r[V] = true;
              }
            } else if (r[V] && r.ref) {
              r.ref();
              r[V] = false;
            }
            if (e[P] === 0) {
              if (r[R].timeoutType !== je) {
                r[R].setTimeout(e[$], je);
              }
            } else if (e[O] > 0 && r[R].statusCode < 200) {
              if (r[R].timeoutType !== xe) {
                const t = e[L][e[J]];
                const s = t.headersTimeout != null ? t.headersTimeout : e[ee];
                r[R].setTimeout(s, xe);
              }
            }
          }
          if (e[S]) {
            e[x] = 2;
          } else if (e[x] === 2) {
            if (t) {
              e[x] = 1;
              process.nextTick(emitDrain, e);
            } else {
              emitDrain(e);
            }
            continue;
          }
          if (e[N] === 0) {
            return;
          }
          if (e[O] >= (e[W] || 1)) {
            return;
          }
          const n = e[L][e[Y]];
          if (e[w].protocol === "https:" && e[T] !== n.servername) {
            if (e[O] > 0) {
              return;
            }
            e[T] = n.servername;
            if (r && r.servername !== n.servername) {
              a.destroy(r, new I("servername changed"));
              return;
            }
          }
          if (e[G]) {
            return;
          }
          if (!r && !e[me]) {
            connect(e);
            return;
          }
          if (r.destroyed || r[U] || r[v] || r[k]) {
            return;
          }
          if (e[O] > 0 && !n.idempotent) {
            return;
          }
          if (e[O] > 0 && (n.upgrade || n.method === "CONNECT")) {
            return;
          }
          if (e[O] > 0 && a.bodyLength(n.body) !== 0 && (a.isStream(n.body) || a.isAsyncIterable(n.body))) {
            return;
          }
          if (!n.aborted && write(e, n)) {
            e[Y]++;
          } else {
            e[L].splice(e[Y], 1);
          }
        }
      }
      function shouldSendContentLength(e) {
        return e !== "GET" && e !== "HEAD" && e !== "OPTIONS" && e !== "TRACE" && e !== "CONNECT";
      }
      function write(e, t) {
        if (e[ue] === "h2") {
          writeH2(e, e[me], t);
          return;
        }
        const { body: r, method: n, path: o, host: i, upgrade: A, headers: l, blocking: c, reset: p } = t;
        const u = n === "PUT" || n === "POST" || n === "PATCH";
        if (r && typeof r.read === "function") {
          r.read(0);
        }
        const m = a.bodyLength(r);
        let h = m;
        if (h === null) {
          h = t.contentLength;
        }
        if (h === 0 && !u) {
          h = null;
        }
        if (shouldSendContentLength(n) && h > 0 && t.contentLength !== null && t.contentLength !== h) {
          if (e[re]) {
            errorRequest(e, t, new d());
            return false;
          }
          process.emitWarning(new d());
        }
        const E = e[K];
        try {
          t.onConnect((r) => {
            if (t.aborted || t.completed) {
              return;
            }
            errorRequest(e, t, r || new g());
            a.destroy(E, new I("aborted"));
          });
        } catch (r) {
          errorRequest(e, t, r);
        }
        if (t.aborted) {
          return false;
        }
        if (n === "HEAD") {
          E[v] = true;
        }
        if (A || n === "CONNECT") {
          E[v] = true;
        }
        if (p != null) {
          E[v] = p;
        }
        if (e[oe] && E[ie]++ >= e[oe]) {
          E[v] = true;
        }
        if (c) {
          E[k] = true;
        }
        let C = `${n} ${o} HTTP/1.1\r\n`;
        if (typeof i === "string") {
          C += `host: ${i}\r\n`;
        } else {
          C += e[H];
        }
        if (A) {
          C += `connection: upgrade\r\nupgrade: ${A}\r\n`;
        } else if (e[W] && !E[v]) {
          C += "connection: keep-alive\r\n";
        } else {
          C += "connection: close\r\n";
        }
        if (l) {
          C += l;
        }
        if (De.sendHeaders.hasSubscribers) {
          De.sendHeaders.publish({ request: t, headers: C, socket: E });
        }
        if (!r || m === 0) {
          if (h === 0) {
            E.write(`${C}content-length: 0\r\n\r\n`, "latin1");
          } else {
            s(h === null, "no body must not have content length");
            E.write(`${C}\r\n`, "latin1");
          }
          t.onRequestSent();
        } else if (a.isBuffer(r)) {
          s(h === r.byteLength, "buffer body must have content length");
          E.cork();
          E.write(`${C}content-length: ${h}\r\n\r\n`, "latin1");
          E.write(r);
          E.uncork();
          t.onBodySent(r);
          t.onRequestSent();
          if (!u) {
            E[v] = true;
          }
        } else if (a.isBlobLike(r)) {
          if (typeof r.stream === "function") {
            writeIterable({ body: r.stream(), client: e, request: t, socket: E, contentLength: h, header: C, expectsPayload: u });
          } else {
            writeBlob({ body: r, client: e, request: t, socket: E, contentLength: h, header: C, expectsPayload: u });
          }
        } else if (a.isStream(r)) {
          writeStream({ body: r, client: e, request: t, socket: E, contentLength: h, header: C, expectsPayload: u });
        } else if (a.isIterable(r)) {
          writeIterable({ body: r, client: e, request: t, socket: E, contentLength: h, header: C, expectsPayload: u });
        } else {
          s(false);
        }
        return true;
      }
      function writeH2(e, t, r) {
        const { body: n, method: o, path: i, host: A, upgrade: c, expectContinue: p, signal: u, headers: m } = r;
        let h;
        if (typeof m === "string") h = l[Ee](m.trim());
        else h = m;
        if (c) {
          errorRequest(e, r, new Error("Upgrade not supported for H2"));
          return false;
        }
        try {
          r.onConnect((t) => {
            if (r.aborted || r.completed) {
              return;
            }
            errorRequest(e, r, t || new g());
          });
        } catch (t) {
          errorRequest(e, r, t);
        }
        if (r.aborted) {
          return false;
        }
        let E;
        const C = e[he];
        h[ye] = A || e[ge];
        h[Be] = o;
        if (o === "CONNECT") {
          t.ref();
          E = t.request(h, { endStream: false, signal: u });
          if (E.id && !E.pending) {
            r.onUpgrade(null, null, E);
            ++C.openStreams;
          } else {
            E.once("ready", () => {
              r.onUpgrade(null, null, E);
              ++C.openStreams;
            });
          }
          E.once("close", () => {
            C.openStreams -= 1;
            if (C.openStreams === 0) t.unref();
          });
          return true;
        }
        h[Qe] = i;
        h[be] = "https";
        const y = o === "PUT" || o === "POST" || o === "PATCH";
        if (n && typeof n.read === "function") {
          n.read(0);
        }
        let B = a.bodyLength(n);
        if (B == null) {
          B = r.contentLength;
        }
        if (B === 0 || !y) {
          B = null;
        }
        if (shouldSendContentLength(o) && B > 0 && r.contentLength != null && r.contentLength !== B) {
          if (e[re]) {
            errorRequest(e, r, new d());
            return false;
          }
          process.emitWarning(new d());
        }
        if (B != null) {
          s(n, "no body must not have content length");
          h[we] = `${B}`;
        }
        t.ref();
        const Q = o === "GET" || o === "HEAD";
        if (p) {
          h[ve] = "100-continue";
          E = t.request(h, { endStream: Q, signal: u });
          E.once("continue", writeBodyH2);
        } else {
          E = t.request(h, { endStream: Q, signal: u });
          writeBodyH2();
        }
        ++C.openStreams;
        E.once("response", (e) => {
          const { [Te]: t, ...s } = e;
          if (r.onHeaders(Number(t), s, E.resume.bind(E), "") === false) {
            E.pause();
          }
        });
        E.once("end", () => {
          r.onComplete([]);
        });
        E.on("data", (e) => {
          if (r.onData(e) === false) {
            E.pause();
          }
        });
        E.once("close", () => {
          C.openStreams -= 1;
          if (C.openStreams === 0) {
            t.unref();
          }
        });
        E.once("error", function (t) {
          if (e[me] && !e[me].destroyed && !this.closed && !this.destroyed) {
            C.streams -= 1;
            a.destroy(E, t);
          }
        });
        E.once("frameError", (t, s) => {
          const n = new I(`HTTP/2: "frameError" received - type ${t}, code ${s}`);
          errorRequest(e, r, n);
          if (e[me] && !e[me].destroyed && !this.closed && !this.destroyed) {
            C.streams -= 1;
            a.destroy(E, n);
          }
        });
        return true;
        function writeBodyH2() {
          if (!n) {
            r.onRequestSent();
          } else if (a.isBuffer(n)) {
            s(B === n.byteLength, "buffer body must have content length");
            E.cork();
            E.write(n);
            E.uncork();
            E.end();
            r.onBodySent(n);
            r.onRequestSent();
          } else if (a.isBlobLike(n)) {
            if (typeof n.stream === "function") {
              writeIterable({ client: e, request: r, contentLength: B, h2stream: E, expectsPayload: y, body: n.stream(), socket: e[K], header: "" });
            } else {
              writeBlob({ body: n, client: e, request: r, contentLength: B, expectsPayload: y, h2stream: E, header: "", socket: e[K] });
            }
          } else if (a.isStream(n)) {
            writeStream({ body: n, client: e, request: r, contentLength: B, expectsPayload: y, socket: e[K], h2stream: E, header: "" });
          } else if (a.isIterable(n)) {
            writeIterable({ body: n, client: e, request: r, contentLength: B, expectsPayload: y, header: "", h2stream: E, socket: e[K] });
          } else {
            s(false);
          }
        }
      }
      function writeStream({ h2stream: e, body: t, client: r, request: n, socket: o, contentLength: A, header: l, expectsPayload: c }) {
        s(A !== 0 || r[O] === 0, "stream body cannot be pipelined");
        if (r[ue] === "h2") {
          const u = i(t, e, (r) => {
            if (r) {
              a.destroy(t, r);
              a.destroy(e, r);
            } else {
              n.onRequestSent();
            }
          });
          u.on("data", onPipeData);
          u.once("end", () => {
            u.removeListener("data", onPipeData);
            a.destroy(u);
          });
          function onPipeData(e) {
            n.onBodySent(e);
          }
          return;
        }
        let d = false;
        const p = new AsyncWriter({ socket: o, request: n, contentLength: A, client: r, expectsPayload: c, header: l });
        const onData = function (e) {
          if (d) {
            return;
          }
          try {
            if (!p.write(e) && this.pause) {
              this.pause();
            }
          } catch (e) {
            a.destroy(this, e);
          }
        };
        const onDrain = function () {
          if (d) {
            return;
          }
          if (t.resume) {
            t.resume();
          }
        };
        const onAbort = function () {
          if (d) {
            return;
          }
          const e = new g();
          queueMicrotask(() => onFinished(e));
        };
        const onFinished = function (e) {
          if (d) {
            return;
          }
          d = true;
          s(o.destroyed || (o[U] && r[O] <= 1));
          o.off("drain", onDrain).off("error", onFinished);
          t.removeListener("data", onData).removeListener("end", onFinished).removeListener("error", onFinished).removeListener("close", onAbort);
          if (!e) {
            try {
              p.end();
            } catch (t) {
              e = t;
            }
          }
          p.destroy(e);
          if (e && (e.code !== "UND_ERR_INFO" || e.message !== "reset")) {
            a.destroy(t, e);
          } else {
            a.destroy(t);
          }
        };
        t.on("data", onData).on("end", onFinished).on("error", onFinished).on("close", onAbort);
        if (t.resume) {
          t.resume();
        }
        o.on("drain", onDrain).on("error", onFinished);
      }
      async function writeBlob({ h2stream: e, body: t, client: r, request: n, socket: o, contentLength: i, header: A, expectsPayload: l }) {
        s(i === t.size, "blob body must have content length");
        const c = r[ue] === "h2";
        try {
          if (i != null && i !== t.size) {
            throw new d();
          }
          const s = Buffer.from(await t.arrayBuffer());
          if (c) {
            e.cork();
            e.write(s);
            e.uncork();
          } else {
            o.cork();
            o.write(`${A}content-length: ${i}\r\n\r\n`, "latin1");
            o.write(s);
            o.uncork();
          }
          n.onBodySent(s);
          n.onRequestSent();
          if (!l) {
            o[v] = true;
          }
          resume(r);
        } catch (t) {
          a.destroy(c ? e : o, t);
        }
      }
      async function writeIterable({ h2stream: e, body: t, client: r, request: n, socket: o, contentLength: i, header: a, expectsPayload: A }) {
        s(i !== 0 || r[O] === 0, "iterator body cannot be pipelined");
        let l = null;
        function onDrain() {
          if (l) {
            const e = l;
            l = null;
            e();
          }
        }
        const waitForDrain = () =>
          new Promise((e, t) => {
            s(l === null);
            if (o[q]) {
              t(o[q]);
            } else {
              l = e;
            }
          });
        if (r[ue] === "h2") {
          e.on("close", onDrain).on("drain", onDrain);
          try {
            for await (const r of t) {
              if (o[q]) {
                throw o[q];
              }
              const t = e.write(r);
              n.onBodySent(r);
              if (!t) {
                await waitForDrain();
              }
            }
          } catch (t) {
            e.destroy(t);
          } finally {
            n.onRequestSent();
            e.end();
            e.off("close", onDrain).off("drain", onDrain);
          }
          return;
        }
        o.on("close", onDrain).on("drain", onDrain);
        const c = new AsyncWriter({ socket: o, request: n, contentLength: i, client: r, expectsPayload: A, header: a });
        try {
          for await (const e of t) {
            if (o[q]) {
              throw o[q];
            }
            if (!c.write(e)) {
              await waitForDrain();
            }
          }
          c.end();
        } catch (e) {
          c.destroy(e);
        } finally {
          o.off("close", onDrain).off("drain", onDrain);
        }
      }
      class AsyncWriter {
        constructor({ socket: e, request: t, contentLength: r, client: s, expectsPayload: n, header: o }) {
          this.socket = e;
          this.request = t;
          this.contentLength = r;
          this.client = s;
          this.bytesWritten = 0;
          this.expectsPayload = n;
          this.header = o;
          e[U] = true;
        }
        write(e) {
          const { socket: t, request: r, contentLength: s, client: n, bytesWritten: o, expectsPayload: i, header: a } = this;
          if (t[q]) {
            throw t[q];
          }
          if (t.destroyed) {
            return false;
          }
          const A = Buffer.byteLength(e);
          if (!A) {
            return true;
          }
          if (s !== null && o + A > s) {
            if (n[re]) {
              throw new d();
            }
            process.emitWarning(new d());
          }
          t.cork();
          if (o === 0) {
            if (!i) {
              t[v] = true;
            }
            if (s === null) {
              t.write(`${a}transfer-encoding: chunked\r\n`, "latin1");
            } else {
              t.write(`${a}content-length: ${s}\r\n\r\n`, "latin1");
            }
          }
          if (s === null) {
            t.write(`\r\n${A.toString(16)}\r\n`, "latin1");
          }
          this.bytesWritten += A;
          const l = t.write(e);
          t.uncork();
          r.onBodySent(e);
          if (!l) {
            if (t[R].timeout && t[R].timeoutType === xe) {
              if (t[R].timeout.refresh) {
                t[R].timeout.refresh();
              }
            }
          }
          return l;
        }
        end() {
          const { socket: e, contentLength: t, client: r, bytesWritten: s, expectsPayload: n, header: o, request: i } = this;
          i.onRequestSent();
          e[U] = false;
          if (e[q]) {
            throw e[q];
          }
          if (e.destroyed) {
            return;
          }
          if (s === 0) {
            if (n) {
              e.write(`${o}content-length: 0\r\n\r\n`, "latin1");
            } else {
              e.write(`${o}\r\n`, "latin1");
            }
          } else if (t === null) {
            e.write("\r\n0\r\n\r\n", "latin1");
          }
          if (t !== null && s !== t) {
            if (r[re]) {
              throw new d();
            } else {
              process.emitWarning(new d());
            }
          }
          if (e[R].timeout && e[R].timeoutType === xe) {
            if (e[R].timeout.refresh) {
              e[R].timeout.refresh();
            }
          }
          resume(r);
        }
        destroy(e) {
          const { socket: t, client: r } = this;
          t[U] = false;
          if (e) {
            s(r[O] <= 1, "pipeline should only contain this request");
            a.destroy(t, e);
          }
        }
      }
      function errorRequest(e, t, r) {
        try {
          t.onError(r);
          s(t.aborted);
        } catch (r) {
          e.emit("error", r);
        }
      }
      e.exports = Client;
    },
    13194: (e, t, r) => {
      "use strict";
      const { kConnected: s, kSize: n } = r(36443);
      class CompatWeakRef {
        constructor(e) {
          this.value = e;
        }
        deref() {
          return this.value[s] === 0 && this.value[n] === 0 ? undefined : this.value;
        }
      }
      class CompatFinalizer {
        constructor(e) {
          this.finalizer = e;
        }
        register(e, t) {
          if (e.on) {
            e.on("disconnect", () => {
              if (e[s] === 0 && e[n] === 0) {
                this.finalizer(t);
              }
            });
          }
        }
      }
      e.exports = function () {
        if (process.env.NODE_V8_COVERAGE) {
          return { WeakRef: CompatWeakRef, FinalizationRegistry: CompatFinalizer };
        }
        return { WeakRef: global.WeakRef || CompatWeakRef, FinalizationRegistry: global.FinalizationRegistry || CompatFinalizer };
      };
    },
    19237: (e) => {
      "use strict";
      const t = 1024;
      const r = 4096;
      e.exports = { maxAttributeValueSize: t, maxNameValuePairSize: r };
    },
    53168: (e, t, r) => {
      "use strict";
      const { parseSetCookie: s } = r(8915);
      const { stringify: n, getHeadersList: o } = r(3834);
      const { webidl: i } = r(74222);
      const { Headers: a } = r(26349);
      function getCookies(e) {
        i.argumentLengthCheck(arguments, 1, { header: "getCookies" });
        i.brandCheck(e, a, { strict: false });
        const t = e.get("cookie");
        const r = {};
        if (!t) {
          return r;
        }
        for (const e of t.split(";")) {
          const [t, ...s] = e.split("=");
          r[t.trim()] = s.join("=");
        }
        return r;
      }
      function deleteCookie(e, t, r) {
        i.argumentLengthCheck(arguments, 2, { header: "deleteCookie" });
        i.brandCheck(e, a, { strict: false });
        t = i.converters.DOMString(t);
        r = i.converters.DeleteCookieAttributes(r);
        setCookie(e, { name: t, value: "", expires: new Date(0), ...r });
      }
      function getSetCookies(e) {
        i.argumentLengthCheck(arguments, 1, { header: "getSetCookies" });
        i.brandCheck(e, a, { strict: false });
        const t = o(e).cookies;
        if (!t) {
          return [];
        }
        return t.map((e) => s(Array.isArray(e) ? e[1] : e));
      }
      function setCookie(e, t) {
        i.argumentLengthCheck(arguments, 2, { header: "setCookie" });
        i.brandCheck(e, a, { strict: false });
        t = i.converters.Cookie(t);
        const r = n(t);
        if (r) {
          e.append("Set-Cookie", n(t));
        }
      }
      i.converters.DeleteCookieAttributes = i.dictionaryConverter([
        { converter: i.nullableConverter(i.converters.DOMString), key: "path", defaultValue: null },
        { converter: i.nullableConverter(i.converters.DOMString), key: "domain", defaultValue: null },
      ]);
      i.converters.Cookie = i.dictionaryConverter([
        { converter: i.converters.DOMString, key: "name" },
        { converter: i.converters.DOMString, key: "value" },
        {
          converter: i.nullableConverter((e) => {
            if (typeof e === "number") {
              return i.converters["unsigned long long"](e);
            }
            return new Date(e);
          }),
          key: "expires",
          defaultValue: null,
        },
        { converter: i.nullableConverter(i.converters["long long"]), key: "maxAge", defaultValue: null },
        { converter: i.nullableConverter(i.converters.DOMString), key: "domain", defaultValue: null },
        { converter: i.nullableConverter(i.converters.DOMString), key: "path", defaultValue: null },
        { converter: i.nullableConverter(i.converters.boolean), key: "secure", defaultValue: null },
        { converter: i.nullableConverter(i.converters.boolean), key: "httpOnly", defaultValue: null },
        { converter: i.converters.USVString, key: "sameSite", allowedValues: ["Strict", "Lax", "None"] },
        { converter: i.sequenceConverter(i.converters.DOMString), key: "unparsed", defaultValue: [] },
      ]);
      e.exports = { getCookies: getCookies, deleteCookie: deleteCookie, getSetCookies: getSetCookies, setCookie: setCookie };
    },
    8915: (e, t, r) => {
      "use strict";
      const { maxNameValuePairSize: s, maxAttributeValueSize: n } = r(19237);
      const { isCTLExcludingHtab: o } = r(3834);
      const { collectASequenceOfCodePointsFast: i } = r(94322);
      const a = r(42613);
      function parseSetCookie(e) {
        if (o(e)) {
          return null;
        }
        let t = "";
        let r = "";
        let n = "";
        let a = "";
        if (e.includes(";")) {
          const s = { position: 0 };
          t = i(";", e, s);
          r = e.slice(s.position);
        } else {
          t = e;
        }
        if (!t.includes("=")) {
          a = t;
        } else {
          const e = { position: 0 };
          n = i("=", t, e);
          a = t.slice(e.position + 1);
        }
        n = n.trim();
        a = a.trim();
        if (n.length + a.length > s) {
          return null;
        }
        return { name: n, value: a, ...parseUnparsedAttributes(r) };
      }
      function parseUnparsedAttributes(e, t = {}) {
        if (e.length === 0) {
          return t;
        }
        a(e[0] === ";");
        e = e.slice(1);
        let r = "";
        if (e.includes(";")) {
          r = i(";", e, { position: 0 });
          e = e.slice(r.length);
        } else {
          r = e;
          e = "";
        }
        let s = "";
        let o = "";
        if (r.includes("=")) {
          const e = { position: 0 };
          s = i("=", r, e);
          o = r.slice(e.position + 1);
        } else {
          s = r;
        }
        s = s.trim();
        o = o.trim();
        if (o.length > n) {
          return parseUnparsedAttributes(e, t);
        }
        const A = s.toLowerCase();
        if (A === "expires") {
          const e = new Date(o);
          t.expires = e;
        } else if (A === "max-age") {
          const r = o.charCodeAt(0);
          if ((r < 48 || r > 57) && o[0] !== "-") {
            return parseUnparsedAttributes(e, t);
          }
          if (!/^\d+$/.test(o)) {
            return parseUnparsedAttributes(e, t);
          }
          const s = Number(o);
          t.maxAge = s;
        } else if (A === "domain") {
          let e = o;
          if (e[0] === ".") {
            e = e.slice(1);
          }
          e = e.toLowerCase();
          t.domain = e;
        } else if (A === "path") {
          let e = "";
          if (o.length === 0 || o[0] !== "/") {
            e = "/";
          } else {
            e = o;
          }
          t.path = e;
        } else if (A === "secure") {
          t.secure = true;
        } else if (A === "httponly") {
          t.httpOnly = true;
        } else if (A === "samesite") {
          let e = "Default";
          const r = o.toLowerCase();
          if (r.includes("none")) {
            e = "None";
          }
          if (r.includes("strict")) {
            e = "Strict";
          }
          if (r.includes("lax")) {
            e = "Lax";
          }
          t.sameSite = e;
        } else {
          t.unparsed ??= [];
          t.unparsed.push(`${s}=${o}`);
        }
        return parseUnparsedAttributes(e, t);
      }
      e.exports = { parseSetCookie: parseSetCookie, parseUnparsedAttributes: parseUnparsedAttributes };
    },
    3834: (e, t, r) => {
      "use strict";
      const s = r(42613);
      const { kHeadersList: n } = r(36443);
      function isCTLExcludingHtab(e) {
        if (e.length === 0) {
          return false;
        }
        for (const t of e) {
          const e = t.charCodeAt(0);
          if (e >= 0 || e <= 8 || e >= 10 || e <= 31 || e === 127) {
            return false;
          }
        }
      }
      function validateCookieName(e) {
        for (const t of e) {
          const e = t.charCodeAt(0);
          if (
            e <= 32 ||
            e > 127 ||
            t === "(" ||
            t === ")" ||
            t === ">" ||
            t === "<" ||
            t === "@" ||
            t === "," ||
            t === ";" ||
            t === ":" ||
            t === "\\" ||
            t === '"' ||
            t === "/" ||
            t === "[" ||
            t === "]" ||
            t === "?" ||
            t === "=" ||
            t === "{" ||
            t === "}"
          ) {
            throw new Error("Invalid cookie name");
          }
        }
      }
      function validateCookieValue(e) {
        for (const t of e) {
          const e = t.charCodeAt(0);
          if (e < 33 || e === 34 || e === 44 || e === 59 || e === 92 || e > 126) {
            throw new Error("Invalid header value");
          }
        }
      }
      function validateCookiePath(e) {
        for (const t of e) {
          const e = t.charCodeAt(0);
          if (e < 33 || t === ";") {
            throw new Error("Invalid cookie path");
          }
        }
      }
      function validateCookieDomain(e) {
        if (e.startsWith("-") || e.endsWith(".") || e.endsWith("-")) {
          throw new Error("Invalid cookie domain");
        }
      }
      function toIMFDate(e) {
        if (typeof e === "number") {
          e = new Date(e);
        }
        const t = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
        const r = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        const s = t[e.getUTCDay()];
        const n = e.getUTCDate().toString().padStart(2, "0");
        const o = r[e.getUTCMonth()];
        const i = e.getUTCFullYear();
        const a = e.getUTCHours().toString().padStart(2, "0");
        const A = e.getUTCMinutes().toString().padStart(2, "0");
        const l = e.getUTCSeconds().toString().padStart(2, "0");
        return `${s}, ${n} ${o} ${i} ${a}:${A}:${l} GMT`;
      }
      function validateCookieMaxAge(e) {
        if (e < 0) {
          throw new Error("Invalid cookie max-age");
        }
      }
      function stringify(e) {
        if (e.name.length === 0) {
          return null;
        }
        validateCookieName(e.name);
        validateCookieValue(e.value);
        const t = [`${e.name}=${e.value}`];
        if (e.name.startsWith("__Secure-")) {
          e.secure = true;
        }
        if (e.name.startsWith("__Host-")) {
          e.secure = true;
          e.domain = null;
          e.path = "/";
        }
        if (e.secure) {
          t.push("Secure");
        }
        if (e.httpOnly) {
          t.push("HttpOnly");
        }
        if (typeof e.maxAge === "number") {
          validateCookieMaxAge(e.maxAge);
          t.push(`Max-Age=${e.maxAge}`);
        }
        if (e.domain) {
          validateCookieDomain(e.domain);
          t.push(`Domain=${e.domain}`);
        }
        if (e.path) {
          validateCookiePath(e.path);
          t.push(`Path=${e.path}`);
        }
        if (e.expires && e.expires.toString() !== "Invalid Date") {
          t.push(`Expires=${toIMFDate(e.expires)}`);
        }
        if (e.sameSite) {
          t.push(`SameSite=${e.sameSite}`);
        }
        for (const r of e.unparsed) {
          if (!r.includes("=")) {
            throw new Error("Invalid unparsed");
          }
          const [e, ...s] = r.split("=");
          t.push(`${e.trim()}=${s.join("=")}`);
        }
        return t.join("; ");
      }
      let o;
      function getHeadersList(e) {
        if (e[n]) {
          return e[n];
        }
        if (!o) {
          o = Object.getOwnPropertySymbols(e).find((e) => e.description === "headers list");
          s(o, "Headers cannot be parsed");
        }
        const t = e[o];
        s(t);
        return t;
      }
      e.exports = { isCTLExcludingHtab: isCTLExcludingHtab, stringify: stringify, getHeadersList: getHeadersList };
    },
    59136: (e, t, r) => {
      "use strict";
      const s = r(69278);
      const n = r(42613);
      const o = r(3440);
      const { InvalidArgumentError: i, ConnectTimeoutError: a } = r(68707);
      let A;
      let l;
      if (global.FinalizationRegistry && !process.env.NODE_V8_COVERAGE) {
        l = class WeakSessionCache {
          constructor(e) {
            this._maxCachedSessions = e;
            this._sessionCache = new Map();
            this._sessionRegistry = new global.FinalizationRegistry((e) => {
              if (this._sessionCache.size < this._maxCachedSessions) {
                return;
              }
              const t = this._sessionCache.get(e);
              if (t !== undefined && t.deref() === undefined) {
                this._sessionCache.delete(e);
              }
            });
          }
          get(e) {
            const t = this._sessionCache.get(e);
            return t ? t.deref() : null;
          }
          set(e, t) {
            if (this._maxCachedSessions === 0) {
              return;
            }
            this._sessionCache.set(e, new WeakRef(t));
            this._sessionRegistry.register(t, e);
          }
        };
      } else {
        l = class SimpleSessionCache {
          constructor(e) {
            this._maxCachedSessions = e;
            this._sessionCache = new Map();
          }
          get(e) {
            return this._sessionCache.get(e);
          }
          set(e, t) {
            if (this._maxCachedSessions === 0) {
              return;
            }
            if (this._sessionCache.size >= this._maxCachedSessions) {
              const { value: e } = this._sessionCache.keys().next();
              this._sessionCache.delete(e);
            }
            this._sessionCache.set(e, t);
          }
        };
      }
      function buildConnector({ allowH2: e, maxCachedSessions: t, socketPath: a, timeout: c, ...d }) {
        if (t != null && (!Number.isInteger(t) || t < 0)) {
          throw new i("maxCachedSessions must be a positive integer or zero");
        }
        const p = { path: a, ...d };
        const u = new l(t == null ? 100 : t);
        c = c == null ? 1e4 : c;
        e = e != null ? e : false;
        return function connect({ hostname: t, host: i, protocol: a, port: l, servername: d, localAddress: g, httpSocket: m }, h) {
          let E;
          if (a === "https:") {
            if (!A) {
              A = r(64756);
            }
            d = d || p.servername || o.getServerName(i) || null;
            const s = d || t;
            const a = u.get(s) || null;
            n(s);
            E = A.connect({
              highWaterMark: 16384,
              ...p,
              servername: d,
              session: a,
              localAddress: g,
              ALPNProtocols: e ? ["http/1.1", "h2"] : ["http/1.1"],
              socket: m,
              port: l || 443,
              host: t,
            });
            E.on("session", function (e) {
              u.set(s, e);
            });
          } else {
            n(!m, "httpSocket can only be sent on TLS update");
            E = s.connect({ highWaterMark: 64 * 1024, ...p, localAddress: g, port: l || 80, host: t });
          }
          if (p.keepAlive == null || p.keepAlive) {
            const e = p.keepAliveInitialDelay === undefined ? 6e4 : p.keepAliveInitialDelay;
            E.setKeepAlive(true, e);
          }
          const I = setupTimeout(() => onConnectTimeout(E), c);
          E.setNoDelay(true)
            .once(a === "https:" ? "secureConnect" : "connect", function () {
              I();
              if (h) {
                const e = h;
                h = null;
                e(null, this);
              }
            })
            .on("error", function (e) {
              I();
              if (h) {
                const t = h;
                h = null;
                t(e);
              }
            });
          return E;
        };
      }
      function setupTimeout(e, t) {
        if (!t) {
          return () => {};
        }
        let r = null;
        let s = null;
        const n = setTimeout(() => {
          r = setImmediate(() => {
            if (process.platform === "win32") {
              s = setImmediate(() => e());
            } else {
              e();
            }
          });
        }, t);
        return () => {
          clearTimeout(n);
          clearImmediate(r);
          clearImmediate(s);
        };
      }
      function onConnectTimeout(e) {
        o.destroy(e, new a());
      }
      e.exports = buildConnector;
    },
    10735: (e) => {
      "use strict";
      const t = {};
      const r = [
        "Accept",
        "Accept-Encoding",
        "Accept-Language",
        "Accept-Ranges",
        "Access-Control-Allow-Credentials",
        "Access-Control-Allow-Headers",
        "Access-Control-Allow-Methods",
        "Access-Control-Allow-Origin",
        "Access-Control-Expose-Headers",
        "Access-Control-Max-Age",
        "Access-Control-Request-Headers",
        "Access-Control-Request-Method",
        "Age",
        "Allow",
        "Alt-Svc",
        "Alt-Used",
        "Authorization",
        "Cache-Control",
        "Clear-Site-Data",
        "Connection",
        "Content-Disposition",
        "Content-Encoding",
        "Content-Language",
        "Content-Length",
        "Content-Location",
        "Content-Range",
        "Content-Security-Policy",
        "Content-Security-Policy-Report-Only",
        "Content-Type",
        "Cookie",
        "Cross-Origin-Embedder-Policy",
        "Cross-Origin-Opener-Policy",
        "Cross-Origin-Resource-Policy",
        "Date",
        "Device-Memory",
        "Downlink",
        "ECT",
        "ETag",
        "Expect",
        "Expect-CT",
        "Expires",
        "Forwarded",
        "From",
        "Host",
        "If-Match",
        "If-Modified-Since",
        "If-None-Match",
        "If-Range",
        "If-Unmodified-Since",
        "Keep-Alive",
        "Last-Modified",
        "Link",
        "Location",
        "Max-Forwards",
        "Origin",
        "Permissions-Policy",
        "Pragma",
        "Proxy-Authenticate",
        "Proxy-Authorization",
        "RTT",
        "Range",
        "Referer",
        "Referrer-Policy",
        "Refresh",
        "Retry-After",
        "Sec-WebSocket-Accept",
        "Sec-WebSocket-Extensions",
        "Sec-WebSocket-Key",
        "Sec-WebSocket-Protocol",
        "Sec-WebSocket-Version",
        "Server",
        "Server-Timing",
        "Service-Worker-Allowed",
        "Service-Worker-Navigation-Preload",
        "Set-Cookie",
        "SourceMap",
        "Strict-Transport-Security",
        "Supports-Loading-Mode",
        "TE",
        "Timing-Allow-Origin",
        "Trailer",
        "Transfer-Encoding",
        "Upgrade",
        "Upgrade-Insecure-Requests",
        "User-Agent",
        "Vary",
        "Via",
        "WWW-Authenticate",
        "X-Content-Type-Options",
        "X-DNS-Prefetch-Control",
        "X-Frame-Options",
        "X-Permitted-Cross-Domain-Policies",
        "X-Powered-By",
        "X-Requested-With",
        "X-XSS-Protection",
      ];
      for (let e = 0; e < r.length; ++e) {
        const s = r[e];
        const n = s.toLowerCase();
        t[s] = t[n] = n;
      }
      Object.setPrototypeOf(t, null);
      e.exports = { wellknownHeaderNames: r, headerNameLowerCasedRecord: t };
    },
    68707: (e) => {
      "use strict";
      class UndiciError extends Error {
        constructor(e) {
          super(e);
          this.name = "UndiciError";
          this.code = "UND_ERR";
        }
      }
      class ConnectTimeoutError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, ConnectTimeoutError);
          this.name = "ConnectTimeoutError";
          this.message = e || "Connect Timeout Error";
          this.code = "UND_ERR_CONNECT_TIMEOUT";
        }
      }
      class HeadersTimeoutError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, HeadersTimeoutError);
          this.name = "HeadersTimeoutError";
          this.message = e || "Headers Timeout Error";
          this.code = "UND_ERR_HEADERS_TIMEOUT";
        }
      }
      class HeadersOverflowError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, HeadersOverflowError);
          this.name = "HeadersOverflowError";
          this.message = e || "Headers Overflow Error";
          this.code = "UND_ERR_HEADERS_OVERFLOW";
        }
      }
      class BodyTimeoutError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, BodyTimeoutError);
          this.name = "BodyTimeoutError";
          this.message = e || "Body Timeout Error";
          this.code = "UND_ERR_BODY_TIMEOUT";
        }
      }
      class ResponseStatusCodeError extends UndiciError {
        constructor(e, t, r, s) {
          super(e);
          Error.captureStackTrace(this, ResponseStatusCodeError);
          this.name = "ResponseStatusCodeError";
          this.message = e || "Response Status Code Error";
          this.code = "UND_ERR_RESPONSE_STATUS_CODE";
          this.body = s;
          this.status = t;
          this.statusCode = t;
          this.headers = r;
        }
      }
      class InvalidArgumentError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, InvalidArgumentError);
          this.name = "InvalidArgumentError";
          this.message = e || "Invalid Argument Error";
          this.code = "UND_ERR_INVALID_ARG";
        }
      }
      class InvalidReturnValueError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, InvalidReturnValueError);
          this.name = "InvalidReturnValueError";
          this.message = e || "Invalid Return Value Error";
          this.code = "UND_ERR_INVALID_RETURN_VALUE";
        }
      }
      class RequestAbortedError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, RequestAbortedError);
          this.name = "AbortError";
          this.message = e || "Request aborted";
          this.code = "UND_ERR_ABORTED";
        }
      }
      class InformationalError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, InformationalError);
          this.name = "InformationalError";
          this.message = e || "Request information";
          this.code = "UND_ERR_INFO";
        }
      }
      class RequestContentLengthMismatchError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, RequestContentLengthMismatchError);
          this.name = "RequestContentLengthMismatchError";
          this.message = e || "Request body length does not match content-length header";
          this.code = "UND_ERR_REQ_CONTENT_LENGTH_MISMATCH";
        }
      }
      class ResponseContentLengthMismatchError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, ResponseContentLengthMismatchError);
          this.name = "ResponseContentLengthMismatchError";
          this.message = e || "Response body length does not match content-length header";
          this.code = "UND_ERR_RES_CONTENT_LENGTH_MISMATCH";
        }
      }
      class ClientDestroyedError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, ClientDestroyedError);
          this.name = "ClientDestroyedError";
          this.message = e || "The client is destroyed";
          this.code = "UND_ERR_DESTROYED";
        }
      }
      class ClientClosedError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, ClientClosedError);
          this.name = "ClientClosedError";
          this.message = e || "The client is closed";
          this.code = "UND_ERR_CLOSED";
        }
      }
      class SocketError extends UndiciError {
        constructor(e, t) {
          super(e);
          Error.captureStackTrace(this, SocketError);
          this.name = "SocketError";
          this.message = e || "Socket error";
          this.code = "UND_ERR_SOCKET";
          this.socket = t;
        }
      }
      class NotSupportedError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, NotSupportedError);
          this.name = "NotSupportedError";
          this.message = e || "Not supported error";
          this.code = "UND_ERR_NOT_SUPPORTED";
        }
      }
      class BalancedPoolMissingUpstreamError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, NotSupportedError);
          this.name = "MissingUpstreamError";
          this.message = e || "No upstream has been added to the BalancedPool";
          this.code = "UND_ERR_BPL_MISSING_UPSTREAM";
        }
      }
      class HTTPParserError extends Error {
        constructor(e, t, r) {
          super(e);
          Error.captureStackTrace(this, HTTPParserError);
          this.name = "HTTPParserError";
          this.code = t ? `HPE_${t}` : undefined;
          this.data = r ? r.toString() : undefined;
        }
      }
      class ResponseExceededMaxSizeError extends UndiciError {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, ResponseExceededMaxSizeError);
          this.name = "ResponseExceededMaxSizeError";
          this.message = e || "Response content exceeded max size";
          this.code = "UND_ERR_RES_EXCEEDED_MAX_SIZE";
        }
      }
      class RequestRetryError extends UndiciError {
        constructor(e, t, { headers: r, data: s }) {
          super(e);
          Error.captureStackTrace(this, RequestRetryError);
          this.name = "RequestRetryError";
          this.message = e || "Request retry error";
          this.code = "UND_ERR_REQ_RETRY";
          this.statusCode = t;
          this.data = s;
          this.headers = r;
        }
      }
      e.exports = {
        HTTPParserError: HTTPParserError,
        UndiciError: UndiciError,
        HeadersTimeoutError: HeadersTimeoutError,
        HeadersOverflowError: HeadersOverflowError,
        BodyTimeoutError: BodyTimeoutError,
        RequestContentLengthMismatchError: RequestContentLengthMismatchError,
        ConnectTimeoutError: ConnectTimeoutError,
        ResponseStatusCodeError: ResponseStatusCodeError,
        InvalidArgumentError: InvalidArgumentError,
        InvalidReturnValueError: InvalidReturnValueError,
        RequestAbortedError: RequestAbortedError,
        ClientDestroyedError: ClientDestroyedError,
        ClientClosedError: ClientClosedError,
        InformationalError: InformationalError,
        SocketError: SocketError,
        NotSupportedError: NotSupportedError,
        ResponseContentLengthMismatchError: ResponseContentLengthMismatchError,
        BalancedPoolMissingUpstreamError: BalancedPoolMissingUpstreamError,
        ResponseExceededMaxSizeError: ResponseExceededMaxSizeError,
        RequestRetryError: RequestRetryError,
      };
    },
    44655: (e, t, r) => {
      "use strict";
      const { InvalidArgumentError: s, NotSupportedError: n } = r(68707);
      const o = r(42613);
      const { kHTTP2BuildRequest: i, kHTTP2CopyHeaders: a, kHTTP1BuildRequest: A } = r(36443);
      const l = r(3440);
      const c = /^[\^_`a-zA-Z\-0-9!#$%&'*+.|~]+$/;
      const d = /[^\t\x20-\x7e\x80-\xff]/;
      const p = /[^\u0021-\u00ff]/;
      const u = Symbol("handler");
      const g = {};
      let m;
      try {
        const e = r(31637);
        g.create = e.channel("undici:request:create");
        g.bodySent = e.channel("undici:request:bodySent");
        g.headers = e.channel("undici:request:headers");
        g.trailers = e.channel("undici:request:trailers");
        g.error = e.channel("undici:request:error");
      } catch {
        g.create = { hasSubscribers: false };
        g.bodySent = { hasSubscribers: false };
        g.headers = { hasSubscribers: false };
        g.trailers = { hasSubscribers: false };
        g.error = { hasSubscribers: false };
      }
      class Request {
        constructor(
          e,
          {
            path: t,
            method: n,
            body: o,
            headers: i,
            query: a,
            idempotent: A,
            blocking: d,
            upgrade: h,
            headersTimeout: E,
            bodyTimeout: I,
            reset: C,
            throwOnError: y,
            expectContinue: B,
          },
          Q
        ) {
          if (typeof t !== "string") {
            throw new s("path must be a string");
          } else if (t[0] !== "/" && !(t.startsWith("http://") || t.startsWith("https://")) && n !== "CONNECT") {
            throw new s("path must be an absolute URL or start with a slash");
          } else if (p.exec(t) !== null) {
            throw new s("invalid request path");
          }
          if (typeof n !== "string") {
            throw new s("method must be a string");
          } else if (c.exec(n) === null) {
            throw new s("invalid request method");
          }
          if (h && typeof h !== "string") {
            throw new s("upgrade must be a string");
          }
          if (E != null && (!Number.isFinite(E) || E < 0)) {
            throw new s("invalid headersTimeout");
          }
          if (I != null && (!Number.isFinite(I) || I < 0)) {
            throw new s("invalid bodyTimeout");
          }
          if (C != null && typeof C !== "boolean") {
            throw new s("invalid reset");
          }
          if (B != null && typeof B !== "boolean") {
            throw new s("invalid expectContinue");
          }
          this.headersTimeout = E;
          this.bodyTimeout = I;
          this.throwOnError = y === true;
          this.method = n;
          this.abort = null;
          if (o == null) {
            this.body = null;
          } else if (l.isStream(o)) {
            this.body = o;
            const e = this.body._readableState;
            if (!e || !e.autoDestroy) {
              this.endHandler = function autoDestroy() {
                l.destroy(this);
              };
              this.body.on("end", this.endHandler);
            }
            this.errorHandler = (e) => {
              if (this.abort) {
                this.abort(e);
              } else {
                this.error = e;
              }
            };
            this.body.on("error", this.errorHandler);
          } else if (l.isBuffer(o)) {
            this.body = o.byteLength ? o : null;
          } else if (ArrayBuffer.isView(o)) {
            this.body = o.buffer.byteLength ? Buffer.from(o.buffer, o.byteOffset, o.byteLength) : null;
          } else if (o instanceof ArrayBuffer) {
            this.body = o.byteLength ? Buffer.from(o) : null;
          } else if (typeof o === "string") {
            this.body = o.length ? Buffer.from(o) : null;
          } else if (l.isFormDataLike(o) || l.isIterable(o) || l.isBlobLike(o)) {
            this.body = o;
          } else {
            throw new s("body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable");
          }
          this.completed = false;
          this.aborted = false;
          this.upgrade = h || null;
          this.path = a ? l.buildURL(t, a) : t;
          this.origin = e;
          this.idempotent = A == null ? n === "HEAD" || n === "GET" : A;
          this.blocking = d == null ? false : d;
          this.reset = C == null ? null : C;
          this.host = null;
          this.contentLength = null;
          this.contentType = null;
          this.headers = "";
          this.expectContinue = B != null ? B : false;
          if (Array.isArray(i)) {
            if (i.length % 2 !== 0) {
              throw new s("headers array must be even");
            }
            for (let e = 0; e < i.length; e += 2) {
              processHeader(this, i[e], i[e + 1]);
            }
          } else if (i && typeof i === "object") {
            const e = Object.keys(i);
            for (let t = 0; t < e.length; t++) {
              const r = e[t];
              processHeader(this, r, i[r]);
            }
          } else if (i != null) {
            throw new s("headers must be an object or an array");
          }
          if (l.isFormDataLike(this.body)) {
            if (l.nodeMajor < 16 || (l.nodeMajor === 16 && l.nodeMinor < 8)) {
              throw new s("Form-Data bodies are only supported in node v16.8 and newer.");
            }
            if (!m) {
              m = r(8923).extractBody;
            }
            const [e, t] = m(o);
            if (this.contentType == null) {
              this.contentType = t;
              this.headers += `content-type: ${t}\r\n`;
            }
            this.body = e.stream;
            this.contentLength = e.length;
          } else if (l.isBlobLike(o) && this.contentType == null && o.type) {
            this.contentType = o.type;
            this.headers += `content-type: ${o.type}\r\n`;
          }
          l.validateHandler(Q, n, h);
          this.servername = l.getServerName(this.host);
          this[u] = Q;
          if (g.create.hasSubscribers) {
            g.create.publish({ request: this });
          }
        }
        onBodySent(e) {
          if (this[u].onBodySent) {
            try {
              return this[u].onBodySent(e);
            } catch (e) {
              this.abort(e);
            }
          }
        }
        onRequestSent() {
          if (g.bodySent.hasSubscribers) {
            g.bodySent.publish({ request: this });
          }
          if (this[u].onRequestSent) {
            try {
              return this[u].onRequestSent();
            } catch (e) {
              this.abort(e);
            }
          }
        }
        onConnect(e) {
          o(!this.aborted);
          o(!this.completed);
          if (this.error) {
            e(this.error);
          } else {
            this.abort = e;
            return this[u].onConnect(e);
          }
        }
        onHeaders(e, t, r, s) {
          o(!this.aborted);
          o(!this.completed);
          if (g.headers.hasSubscribers) {
            g.headers.publish({ request: this, response: { statusCode: e, headers: t, statusText: s } });
          }
          try {
            return this[u].onHeaders(e, t, r, s);
          } catch (e) {
            this.abort(e);
          }
        }
        onData(e) {
          o(!this.aborted);
          o(!this.completed);
          try {
            return this[u].onData(e);
          } catch (e) {
            this.abort(e);
            return false;
          }
        }
        onUpgrade(e, t, r) {
          o(!this.aborted);
          o(!this.completed);
          return this[u].onUpgrade(e, t, r);
        }
        onComplete(e) {
          this.onFinally();
          o(!this.aborted);
          this.completed = true;
          if (g.trailers.hasSubscribers) {
            g.trailers.publish({ request: this, trailers: e });
          }
          try {
            return this[u].onComplete(e);
          } catch (e) {
            this.onError(e);
          }
        }
        onError(e) {
          this.onFinally();
          if (g.error.hasSubscribers) {
            g.error.publish({ request: this, error: e });
          }
          if (this.aborted) {
            return;
          }
          this.aborted = true;
          return this[u].onError(e);
        }
        onFinally() {
          if (this.errorHandler) {
            this.body.off("error", this.errorHandler);
            this.errorHandler = null;
          }
          if (this.endHandler) {
            this.body.off("end", this.endHandler);
            this.endHandler = null;
          }
        }
        addHeader(e, t) {
          processHeader(this, e, t);
          return this;
        }
        static [A](e, t, r) {
          return new Request(e, t, r);
        }
        static [i](e, t, r) {
          const n = t.headers;
          t = { ...t, headers: null };
          const o = new Request(e, t, r);
          o.headers = {};
          if (Array.isArray(n)) {
            if (n.length % 2 !== 0) {
              throw new s("headers array must be even");
            }
            for (let e = 0; e < n.length; e += 2) {
              processHeader(o, n[e], n[e + 1], true);
            }
          } else if (n && typeof n === "object") {
            const e = Object.keys(n);
            for (let t = 0; t < e.length; t++) {
              const r = e[t];
              processHeader(o, r, n[r], true);
            }
          } else if (n != null) {
            throw new s("headers must be an object or an array");
          }
          return o;
        }
        static [a](e) {
          const t = e.split("\r\n");
          const r = {};
          for (const e of t) {
            const [t, s] = e.split(": ");
            if (s == null || s.length === 0) continue;
            if (r[t]) r[t] += `,${s}`;
            else r[t] = s;
          }
          return r;
        }
      }
      function processHeaderValue(e, t, r) {
        if (t && typeof t === "object") {
          throw new s(`invalid ${e} header`);
        }
        t = t != null ? `${t}` : "";
        if (d.exec(t) !== null) {
          throw new s(`invalid ${e} header`);
        }
        return r ? t : `${e}: ${t}\r\n`;
      }
      function processHeader(e, t, r, o = false) {
        if (r && typeof r === "object" && !Array.isArray(r)) {
          throw new s(`invalid ${t} header`);
        } else if (r === undefined) {
          return;
        }
        if (e.host === null && t.length === 4 && t.toLowerCase() === "host") {
          if (d.exec(r) !== null) {
            throw new s(`invalid ${t} header`);
          }
          e.host = r;
        } else if (e.contentLength === null && t.length === 14 && t.toLowerCase() === "content-length") {
          e.contentLength = parseInt(r, 10);
          if (!Number.isFinite(e.contentLength)) {
            throw new s("invalid content-length header");
          }
        } else if (e.contentType === null && t.length === 12 && t.toLowerCase() === "content-type") {
          e.contentType = r;
          if (o) e.headers[t] = processHeaderValue(t, r, o);
          else e.headers += processHeaderValue(t, r);
        } else if (t.length === 17 && t.toLowerCase() === "transfer-encoding") {
          throw new s("invalid transfer-encoding header");
        } else if (t.length === 10 && t.toLowerCase() === "connection") {
          const t = typeof r === "string" ? r.toLowerCase() : null;
          if (t !== "close" && t !== "keep-alive") {
            throw new s("invalid connection header");
          } else if (t === "close") {
            e.reset = true;
          }
        } else if (t.length === 10 && t.toLowerCase() === "keep-alive") {
          throw new s("invalid keep-alive header");
        } else if (t.length === 7 && t.toLowerCase() === "upgrade") {
          throw new s("invalid upgrade header");
        } else if (t.length === 6 && t.toLowerCase() === "expect") {
          throw new n("expect header not supported");
        } else if (c.exec(t) === null) {
          throw new s("invalid header key");
        } else {
          if (Array.isArray(r)) {
            for (let s = 0; s < r.length; s++) {
              if (o) {
                if (e.headers[t]) e.headers[t] += `,${processHeaderValue(t, r[s], o)}`;
                else e.headers[t] = processHeaderValue(t, r[s], o);
              } else {
                e.headers += processHeaderValue(t, r[s]);
              }
            }
          } else {
            if (o) e.headers[t] = processHeaderValue(t, r, o);
            else e.headers += processHeaderValue(t, r);
          }
        }
      }
      e.exports = Request;
    },
    36443: (e) => {
      e.exports = {
        kClose: Symbol("close"),
        kDestroy: Symbol("destroy"),
        kDispatch: Symbol("dispatch"),
        kUrl: Symbol("url"),
        kWriting: Symbol("writing"),
        kResuming: Symbol("resuming"),
        kQueue: Symbol("queue"),
        kConnect: Symbol("connect"),
        kConnecting: Symbol("connecting"),
        kHeadersList: Symbol("headers list"),
        kKeepAliveDefaultTimeout: Symbol("default keep alive timeout"),
        kKeepAliveMaxTimeout: Symbol("max keep alive timeout"),
        kKeepAliveTimeoutThreshold: Symbol("keep alive timeout threshold"),
        kKeepAliveTimeoutValue: Symbol("keep alive timeout"),
        kKeepAlive: Symbol("keep alive"),
        kHeadersTimeout: Symbol("headers timeout"),
        kBodyTimeout: Symbol("body timeout"),
        kServerName: Symbol("server name"),
        kLocalAddress: Symbol("local address"),
        kHost: Symbol("host"),
        kNoRef: Symbol("no ref"),
        kBodyUsed: Symbol("used"),
        kRunning: Symbol("running"),
        kBlocking: Symbol("blocking"),
        kPending: Symbol("pending"),
        kSize: Symbol("size"),
        kBusy: Symbol("busy"),
        kQueued: Symbol("queued"),
        kFree: Symbol("free"),
        kConnected: Symbol("connected"),
        kClosed: Symbol("closed"),
        kNeedDrain: Symbol("need drain"),
        kReset: Symbol("reset"),
        kDestroyed: Symbol.for("nodejs.stream.destroyed"),
        kMaxHeadersSize: Symbol("max headers size"),
        kRunningIdx: Symbol("running index"),
        kPendingIdx: Symbol("pending index"),
        kError: Symbol("error"),
        kClients: Symbol("clients"),
        kClient: Symbol("client"),
        kParser: Symbol("parser"),
        kOnDestroyed: Symbol("destroy callbacks"),
        kPipelining: Symbol("pipelining"),
        kSocket: Symbol("socket"),
        kHostHeader: Symbol("host header"),
        kConnector: Symbol("connector"),
        kStrictContentLength: Symbol("strict content length"),
        kMaxRedirections: Symbol("maxRedirections"),
        kMaxRequests: Symbol("maxRequestsPerClient"),
        kProxy: Symbol("proxy agent options"),
        kCounter: Symbol("socket request counter"),
        kInterceptors: Symbol("dispatch interceptors"),
        kMaxResponseSize: Symbol("max response size"),
        kHTTP2Session: Symbol("http2Session"),
        kHTTP2SessionState: Symbol("http2Session state"),
        kHTTP2BuildRequest: Symbol("http2 build request"),
        kHTTP1BuildRequest: Symbol("http1 build request"),
        kHTTP2CopyHeaders: Symbol("http2 copy headers"),
        kHTTPConnVersion: Symbol("http connection version"),
        kRetryHandlerDefaultRetry: Symbol("retry agent default retry"),
        kConstruct: Symbol("constructable"),
      };
    },
    3440: (e, t, r) => {
      "use strict";
      const s = r(42613);
      const { kDestroyed: n, kBodyUsed: o } = r(36443);
      const { IncomingMessage: i } = r(58611);
      const a = r(2203);
      const A = r(69278);
      const { InvalidArgumentError: l } = r(68707);
      const { Blob: c } = r(20181);
      const d = r(39023);
      const { stringify: p } = r(83480);
      const { headerNameLowerCasedRecord: u } = r(10735);
      const [g, m] = process.versions.node.split(".").map((e) => Number(e));
      function nop() {}
      function isStream(e) {
        return e && typeof e === "object" && typeof e.pipe === "function" && typeof e.on === "function";
      }
      function isBlobLike(e) {
        return (
          (c && e instanceof c) ||
          (e && typeof e === "object" && (typeof e.stream === "function" || typeof e.arrayBuffer === "function") && /^(Blob|File)$/.test(e[Symbol.toStringTag]))
        );
      }
      function buildURL(e, t) {
        if (e.includes("?") || e.includes("#")) {
          throw new Error('Query params cannot be passed when url already contains "?" or "#".');
        }
        const r = p(t);
        if (r) {
          e += "?" + r;
        }
        return e;
      }
      function parseURL(e) {
        if (typeof e === "string") {
          e = new URL(e);
          if (!/^https?:/.test(e.origin || e.protocol)) {
            throw new l("Invalid URL protocol: the URL must start with `http:` or `https:`.");
          }
          return e;
        }
        if (!e || typeof e !== "object") {
          throw new l("Invalid URL: The URL argument must be a non-null object.");
        }
        if (!/^https?:/.test(e.origin || e.protocol)) {
          throw new l("Invalid URL protocol: the URL must start with `http:` or `https:`.");
        }
        if (!(e instanceof URL)) {
          if (e.port != null && e.port !== "" && !Number.isFinite(parseInt(e.port))) {
            throw new l("Invalid URL: port must be a valid integer or a string representation of an integer.");
          }
          if (e.path != null && typeof e.path !== "string") {
            throw new l("Invalid URL path: the path must be a string or null/undefined.");
          }
          if (e.pathname != null && typeof e.pathname !== "string") {
            throw new l("Invalid URL pathname: the pathname must be a string or null/undefined.");
          }
          if (e.hostname != null && typeof e.hostname !== "string") {
            throw new l("Invalid URL hostname: the hostname must be a string or null/undefined.");
          }
          if (e.origin != null && typeof e.origin !== "string") {
            throw new l("Invalid URL origin: the origin must be a string or null/undefined.");
          }
          const t = e.port != null ? e.port : e.protocol === "https:" ? 443 : 80;
          let r = e.origin != null ? e.origin : `${e.protocol}//${e.hostname}:${t}`;
          let s = e.path != null ? e.path : `${e.pathname || ""}${e.search || ""}`;
          if (r.endsWith("/")) {
            r = r.substring(0, r.length - 1);
          }
          if (s && !s.startsWith("/")) {
            s = `/${s}`;
          }
          e = new URL(r + s);
        }
        return e;
      }
      function parseOrigin(e) {
        e = parseURL(e);
        if (e.pathname !== "/" || e.search || e.hash) {
          throw new l("invalid url");
        }
        return e;
      }
      function getHostname(e) {
        if (e[0] === "[") {
          const t = e.indexOf("]");
          s(t !== -1);
          return e.substring(1, t);
        }
        const t = e.indexOf(":");
        if (t === -1) return e;
        return e.substring(0, t);
      }
      function getServerName(e) {
        if (!e) {
          return null;
        }
        s.strictEqual(typeof e, "string");
        const t = getHostname(e);
        if (A.isIP(t)) {
          return "";
        }
        return t;
      }
      function deepClone(e) {
        return JSON.parse(JSON.stringify(e));
      }
      function isAsyncIterable(e) {
        return !!(e != null && typeof e[Symbol.asyncIterator] === "function");
      }
      function isIterable(e) {
        return !!(e != null && (typeof e[Symbol.iterator] === "function" || typeof e[Symbol.asyncIterator] === "function"));
      }
      function bodyLength(e) {
        if (e == null) {
          return 0;
        } else if (isStream(e)) {
          const t = e._readableState;
          return t && t.objectMode === false && t.ended === true && Number.isFinite(t.length) ? t.length : null;
        } else if (isBlobLike(e)) {
          return e.size != null ? e.size : null;
        } else if (isBuffer(e)) {
          return e.byteLength;
        }
        return null;
      }
      function isDestroyed(e) {
        return !e || !!(e.destroyed || e[n]);
      }
      function isReadableAborted(e) {
        const t = e && e._readableState;
        return isDestroyed(e) && t && !t.endEmitted;
      }
      function destroy(e, t) {
        if (e == null || !isStream(e) || isDestroyed(e)) {
          return;
        }
        if (typeof e.destroy === "function") {
          if (Object.getPrototypeOf(e).constructor === i) {
            e.socket = null;
          }
          e.destroy(t);
        } else if (t) {
          process.nextTick(
            (e, t) => {
              e.emit("error", t);
            },
            e,
            t
          );
        }
        if (e.destroyed !== true) {
          e[n] = true;
        }
      }
      const h = /timeout=(\d+)/;
      function parseKeepAliveTimeout(e) {
        const t = e.toString().match(h);
        return t ? parseInt(t[1], 10) * 1e3 : null;
      }
      function headerNameToString(e) {
        return u[e] || e.toLowerCase();
      }
      function parseHeaders(e, t = {}) {
        if (!Array.isArray(e)) return e;
        for (let r = 0; r < e.length; r += 2) {
          const s = e[r].toString().toLowerCase();
          let n = t[s];
          if (!n) {
            if (Array.isArray(e[r + 1])) {
              t[s] = e[r + 1].map((e) => e.toString("utf8"));
            } else {
              t[s] = e[r + 1].toString("utf8");
            }
          } else {
            if (!Array.isArray(n)) {
              n = [n];
              t[s] = n;
            }
            n.push(e[r + 1].toString("utf8"));
          }
        }
        if ("content-length" in t && "content-disposition" in t) {
          t["content-disposition"] = Buffer.from(t["content-disposition"]).toString("latin1");
        }
        return t;
      }
      function parseRawHeaders(e) {
        const t = [];
        let r = false;
        let s = -1;
        for (let n = 0; n < e.length; n += 2) {
          const o = e[n + 0].toString();
          const i = e[n + 1].toString("utf8");
          if (o.length === 14 && (o === "content-length" || o.toLowerCase() === "content-length")) {
            t.push(o, i);
            r = true;
          } else if (o.length === 19 && (o === "content-disposition" || o.toLowerCase() === "content-disposition")) {
            s = t.push(o, i) - 1;
          } else {
            t.push(o, i);
          }
        }
        if (r && s !== -1) {
          t[s] = Buffer.from(t[s]).toString("latin1");
        }
        return t;
      }
      function isBuffer(e) {
        return e instanceof Uint8Array || Buffer.isBuffer(e);
      }
      function validateHandler(e, t, r) {
        if (!e || typeof e !== "object") {
          throw new l("handler must be an object");
        }
        if (typeof e.onConnect !== "function") {
          throw new l("invalid onConnect method");
        }
        if (typeof e.onError !== "function") {
          throw new l("invalid onError method");
        }
        if (typeof e.onBodySent !== "function" && e.onBodySent !== undefined) {
          throw new l("invalid onBodySent method");
        }
        if (r || t === "CONNECT") {
          if (typeof e.onUpgrade !== "function") {
            throw new l("invalid onUpgrade method");
          }
        } else {
          if (typeof e.onHeaders !== "function") {
            throw new l("invalid onHeaders method");
          }
          if (typeof e.onData !== "function") {
            throw new l("invalid onData method");
          }
          if (typeof e.onComplete !== "function") {
            throw new l("invalid onComplete method");
          }
        }
      }
      function isDisturbed(e) {
        return !!(
          e &&
          (a.isDisturbed ? a.isDisturbed(e) || e[o] : e[o] || e.readableDidRead || (e._readableState && e._readableState.dataEmitted) || isReadableAborted(e))
        );
      }
      function isErrored(e) {
        return !!(e && (a.isErrored ? a.isErrored(e) : /state: 'errored'/.test(d.inspect(e))));
      }
      function isReadable(e) {
        return !!(e && (a.isReadable ? a.isReadable(e) : /state: 'readable'/.test(d.inspect(e))));
      }
      function getSocketInfo(e) {
        return {
          localAddress: e.localAddress,
          localPort: e.localPort,
          remoteAddress: e.remoteAddress,
          remotePort: e.remotePort,
          remoteFamily: e.remoteFamily,
          timeout: e.timeout,
          bytesWritten: e.bytesWritten,
          bytesRead: e.bytesRead,
        };
      }
      async function* convertIterableToBuffer(e) {
        for await (const t of e) {
          yield Buffer.isBuffer(t) ? t : Buffer.from(t);
        }
      }
      let E;
      function ReadableStreamFrom(e) {
        if (!E) {
          E = r(63774).ReadableStream;
        }
        if (E.from) {
          return E.from(convertIterableToBuffer(e));
        }
        let t;
        return new E(
          {
            async start() {
              t = e[Symbol.asyncIterator]();
            },
            async pull(e) {
              const { done: r, value: s } = await t.next();
              if (r) {
                queueMicrotask(() => {
                  e.close();
                });
              } else {
                const t = Buffer.isBuffer(s) ? s : Buffer.from(s);
                e.enqueue(new Uint8Array(t));
              }
              return e.desiredSize > 0;
            },
            async cancel(e) {
              await t.return();
            },
          },
          0
        );
      }
      function isFormDataLike(e) {
        return (
          e &&
          typeof e === "object" &&
          typeof e.append === "function" &&
          typeof e.delete === "function" &&
          typeof e.get === "function" &&
          typeof e.getAll === "function" &&
          typeof e.has === "function" &&
          typeof e.set === "function" &&
          e[Symbol.toStringTag] === "FormData"
        );
      }
      function throwIfAborted(e) {
        if (!e) {
          return;
        }
        if (typeof e.throwIfAborted === "function") {
          e.throwIfAborted();
        } else {
          if (e.aborted) {
            const e = new Error("The operation was aborted");
            e.name = "AbortError";
            throw e;
          }
        }
      }
      function addAbortListener(e, t) {
        if ("addEventListener" in e) {
          e.addEventListener("abort", t, { once: true });
          return () => e.removeEventListener("abort", t);
        }
        e.addListener("abort", t);
        return () => e.removeListener("abort", t);
      }
      const I = !!String.prototype.toWellFormed;
      function toUSVString(e) {
        if (I) {
          return `${e}`.toWellFormed();
        } else if (d.toUSVString) {
          return d.toUSVString(e);
        }
        return `${e}`;
      }
      function parseRangeHeader(e) {
        if (e == null || e === "") return { start: 0, end: null, size: null };
        const t = e ? e.match(/^bytes (\d+)-(\d+)\/(\d+)?$/) : null;
        return t ? { start: parseInt(t[1]), end: t[2] ? parseInt(t[2]) : null, size: t[3] ? parseInt(t[3]) : null } : null;
      }
      const C = Object.create(null);
      C.enumerable = true;
      e.exports = {
        kEnumerableProperty: C,
        nop: nop,
        isDisturbed: isDisturbed,
        isErrored: isErrored,
        isReadable: isReadable,
        toUSVString: toUSVString,
        isReadableAborted: isReadableAborted,
        isBlobLike: isBlobLike,
        parseOrigin: parseOrigin,
        parseURL: parseURL,
        getServerName: getServerName,
        isStream: isStream,
        isIterable: isIterable,
        isAsyncIterable: isAsyncIterable,
        isDestroyed: isDestroyed,
        headerNameToString: headerNameToString,
        parseRawHeaders: parseRawHeaders,
        parseHeaders: parseHeaders,
        parseKeepAliveTimeout: parseKeepAliveTimeout,
        destroy: destroy,
        bodyLength: bodyLength,
        deepClone: deepClone,
        ReadableStreamFrom: ReadableStreamFrom,
        isBuffer: isBuffer,
        validateHandler: validateHandler,
        getSocketInfo: getSocketInfo,
        isFormDataLike: isFormDataLike,
        buildURL: buildURL,
        throwIfAborted: throwIfAborted,
        addAbortListener: addAbortListener,
        parseRangeHeader: parseRangeHeader,
        nodeMajor: g,
        nodeMinor: m,
        nodeHasAutoSelectFamily: g > 18 || (g === 18 && m >= 13),
        safeHTTPMethods: ["GET", "HEAD", "OPTIONS", "TRACE"],
      };
    },
    50001: (e, t, r) => {
      "use strict";
      const s = r(28611);
      const { ClientDestroyedError: n, ClientClosedError: o, InvalidArgumentError: i } = r(68707);
      const { kDestroy: a, kClose: A, kDispatch: l, kInterceptors: c } = r(36443);
      const d = Symbol("destroyed");
      const p = Symbol("closed");
      const u = Symbol("onDestroyed");
      const g = Symbol("onClosed");
      const m = Symbol("Intercepted Dispatch");
      class DispatcherBase extends s {
        constructor() {
          super();
          this[d] = false;
          this[u] = null;
          this[p] = false;
          this[g] = [];
        }
        get destroyed() {
          return this[d];
        }
        get closed() {
          return this[p];
        }
        get interceptors() {
          return this[c];
        }
        set interceptors(e) {
          if (e) {
            for (let t = e.length - 1; t >= 0; t--) {
              const e = this[c][t];
              if (typeof e !== "function") {
                throw new i("interceptor must be an function");
              }
            }
          }
          this[c] = e;
        }
        close(e) {
          if (e === undefined) {
            return new Promise((e, t) => {
              this.close((r, s) => (r ? t(r) : e(s)));
            });
          }
          if (typeof e !== "function") {
            throw new i("invalid callback");
          }
          if (this[d]) {
            queueMicrotask(() => e(new n(), null));
            return;
          }
          if (this[p]) {
            if (this[g]) {
              this[g].push(e);
            } else {
              queueMicrotask(() => e(null, null));
            }
            return;
          }
          this[p] = true;
          this[g].push(e);
          const onClosed = () => {
            const e = this[g];
            this[g] = null;
            for (let t = 0; t < e.length; t++) {
              e[t](null, null);
            }
          };
          this[A]()
            .then(() => this.destroy())
            .then(() => {
              queueMicrotask(onClosed);
            });
        }
        destroy(e, t) {
          if (typeof e === "function") {
            t = e;
            e = null;
          }
          if (t === undefined) {
            return new Promise((t, r) => {
              this.destroy(e, (e, s) => (e ? r(e) : t(s)));
            });
          }
          if (typeof t !== "function") {
            throw new i("invalid callback");
          }
          if (this[d]) {
            if (this[u]) {
              this[u].push(t);
            } else {
              queueMicrotask(() => t(null, null));
            }
            return;
          }
          if (!e) {
            e = new n();
          }
          this[d] = true;
          this[u] = this[u] || [];
          this[u].push(t);
          const onDestroyed = () => {
            const e = this[u];
            this[u] = null;
            for (let t = 0; t < e.length; t++) {
              e[t](null, null);
            }
          };
          this[a](e).then(() => {
            queueMicrotask(onDestroyed);
          });
        }
        [m](e, t) {
          if (!this[c] || this[c].length === 0) {
            this[m] = this[l];
            return this[l](e, t);
          }
          let r = this[l].bind(this);
          for (let e = this[c].length - 1; e >= 0; e--) {
            r = this[c][e](r);
          }
          this[m] = r;
          return r(e, t);
        }
        dispatch(e, t) {
          if (!t || typeof t !== "object") {
            throw new i("handler must be an object");
          }
          try {
            if (!e || typeof e !== "object") {
              throw new i("opts must be an object.");
            }
            if (this[d] || this[u]) {
              throw new n();
            }
            if (this[p]) {
              throw new o();
            }
            return this[m](e, t);
          } catch (e) {
            if (typeof t.onError !== "function") {
              throw new i("invalid onError method");
            }
            t.onError(e);
            return false;
          }
        }
      }
      e.exports = DispatcherBase;
    },
    28611: (e, t, r) => {
      "use strict";
      const s = r(24434);
      class Dispatcher extends s {
        dispatch() {
          throw new Error("not implemented");
        }
        close() {
          throw new Error("not implemented");
        }
        destroy() {
          throw new Error("not implemented");
        }
      }
      e.exports = Dispatcher;
    },
    8923: (e, t, r) => {
      "use strict";
      const s = r(89581);
      const n = r(3440);
      const { ReadableStreamFrom: o, isBlobLike: i, isReadableStreamLike: a, readableStreamClose: A, createDeferredPromise: l, fullyReadBody: c } = r(15523);
      const { FormData: d } = r(43073);
      const { kState: p } = r(89710);
      const { webidl: u } = r(74222);
      const { DOMException: g, structuredClone: m } = r(87326);
      const { Blob: h, File: E } = r(20181);
      const { kBodyUsed: I } = r(36443);
      const C = r(42613);
      const { isErrored: y } = r(3440);
      const { isUint8Array: B, isArrayBuffer: Q } = r(98253);
      const { File: b } = r(63041);
      const { parseMIMEType: w, serializeAMimeType: v } = r(94322);
      let T = globalThis.ReadableStream;
      const _ = E ?? b;
      const S = new TextEncoder();
      const R = new TextDecoder();
      function extractBody(e, t = false) {
        if (!T) {
          T = r(63774).ReadableStream;
        }
        let s = null;
        if (e instanceof T) {
          s = e;
        } else if (i(e)) {
          s = e.stream();
        } else {
          s = new T({
            async pull(e) {
              e.enqueue(typeof c === "string" ? S.encode(c) : c);
              queueMicrotask(() => A(e));
            },
            start() {},
            type: undefined,
          });
        }
        C(a(s));
        let l = null;
        let c = null;
        let d = null;
        let p = null;
        if (typeof e === "string") {
          c = e;
          p = "text/plain;charset=UTF-8";
        } else if (e instanceof URLSearchParams) {
          c = e.toString();
          p = "application/x-www-form-urlencoded;charset=UTF-8";
        } else if (Q(e)) {
          c = new Uint8Array(e.slice());
        } else if (ArrayBuffer.isView(e)) {
          c = new Uint8Array(e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength));
        } else if (n.isFormDataLike(e)) {
          const t = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11, "0")}`;
          const r = `--${t}\r\nContent-Disposition: form-data`;
          /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */ const escape = (e) =>
            e.replace(/\n/g, "%0A").replace(/\r/g, "%0D").replace(/"/g, "%22");
          const normalizeLinefeeds = (e) => e.replace(/\r?\n|\r/g, "\r\n");
          const s = [];
          const n = new Uint8Array([13, 10]);
          d = 0;
          let o = false;
          for (const [t, i] of e) {
            if (typeof i === "string") {
              const e = S.encode(r + `; name="${escape(normalizeLinefeeds(t))}"` + `\r\n\r\n${normalizeLinefeeds(i)}\r\n`);
              s.push(e);
              d += e.byteLength;
            } else {
              const e = S.encode(
                `${r}; name="${escape(normalizeLinefeeds(t))}"` +
                  (i.name ? `; filename="${escape(i.name)}"` : "") +
                  "\r\n" +
                  `Content-Type: ${i.type || "application/octet-stream"}\r\n\r\n`
              );
              s.push(e, i, n);
              if (typeof i.size === "number") {
                d += e.byteLength + i.size + n.byteLength;
              } else {
                o = true;
              }
            }
          }
          const i = S.encode(`--${t}--`);
          s.push(i);
          d += i.byteLength;
          if (o) {
            d = null;
          }
          c = e;
          l = async function* () {
            for (const e of s) {
              if (e.stream) {
                yield* e.stream();
              } else {
                yield e;
              }
            }
          };
          p = "multipart/form-data; boundary=" + t;
        } else if (i(e)) {
          c = e;
          d = e.size;
          if (e.type) {
            p = e.type;
          }
        } else if (typeof e[Symbol.asyncIterator] === "function") {
          if (t) {
            throw new TypeError("keepalive");
          }
          if (n.isDisturbed(e) || e.locked) {
            throw new TypeError("Response body object should not be disturbed or locked");
          }
          s = e instanceof T ? e : o(e);
        }
        if (typeof c === "string" || n.isBuffer(c)) {
          d = Buffer.byteLength(c);
        }
        if (l != null) {
          let t;
          s = new T({
            async start() {
              t = l(e)[Symbol.asyncIterator]();
            },
            async pull(e) {
              const { value: r, done: n } = await t.next();
              if (n) {
                queueMicrotask(() => {
                  e.close();
                });
              } else {
                if (!y(s)) {
                  e.enqueue(new Uint8Array(r));
                }
              }
              return e.desiredSize > 0;
            },
            async cancel(e) {
              await t.return();
            },
            type: undefined,
          });
        }
        const u = { stream: s, source: c, length: d };
        return [u, p];
      }
      function safelyExtractBody(e, t = false) {
        if (!T) {
          T = r(63774).ReadableStream;
        }
        if (e instanceof T) {
          C(!n.isDisturbed(e), "The body has already been consumed.");
          C(!e.locked, "The stream is locked.");
        }
        return extractBody(e, t);
      }
      function cloneBody(e) {
        const [t, r] = e.stream.tee();
        const s = m(r, { transfer: [r] });
        const [, n] = s.tee();
        e.stream = t;
        return { stream: n, length: e.length, source: e.source };
      }
      async function* consumeBody(e) {
        if (e) {
          if (B(e)) {
            yield e;
          } else {
            const t = e.stream;
            if (n.isDisturbed(t)) {
              throw new TypeError("The body has already been consumed.");
            }
            if (t.locked) {
              throw new TypeError("The stream is locked.");
            }
            t[I] = true;
            yield* t;
          }
        }
      }
      function throwIfAborted(e) {
        if (e.aborted) {
          throw new g("The operation was aborted.", "AbortError");
        }
      }
      function bodyMixinMethods(e) {
        const t = {
          blob() {
            return specConsumeBody(
              this,
              (e) => {
                let t = bodyMimeType(this);
                if (t === "failure") {
                  t = "";
                } else if (t) {
                  t = v(t);
                }
                return new h([e], { type: t });
              },
              e
            );
          },
          arrayBuffer() {
            return specConsumeBody(this, (e) => new Uint8Array(e).buffer, e);
          },
          text() {
            return specConsumeBody(this, utf8DecodeBytes, e);
          },
          json() {
            return specConsumeBody(this, parseJSONFromBytes, e);
          },
          async formData() {
            u.brandCheck(this, e);
            throwIfAborted(this[p]);
            const t = this.headers.get("Content-Type");
            if (/multipart\/form-data/.test(t)) {
              const e = {};
              for (const [t, r] of this.headers) e[t.toLowerCase()] = r;
              const t = new d();
              let r;
              try {
                r = new s({ headers: e, preservePath: true });
              } catch (e) {
                throw new g(`${e}`, "AbortError");
              }
              r.on("field", (e, r) => {
                t.append(e, r);
              });
              r.on("file", (e, r, s, n, o) => {
                const i = [];
                if (n === "base64" || n.toLowerCase() === "base64") {
                  let n = "";
                  r.on("data", (e) => {
                    n += e.toString().replace(/[\r\n]/gm, "");
                    const t = n.length - (n.length % 4);
                    i.push(Buffer.from(n.slice(0, t), "base64"));
                    n = n.slice(t);
                  });
                  r.on("end", () => {
                    i.push(Buffer.from(n, "base64"));
                    t.append(e, new _(i, s, { type: o }));
                  });
                } else {
                  r.on("data", (e) => {
                    i.push(e);
                  });
                  r.on("end", () => {
                    t.append(e, new _(i, s, { type: o }));
                  });
                }
              });
              const n = new Promise((e, t) => {
                r.on("finish", e);
                r.on("error", (e) => t(new TypeError(e)));
              });
              if (this.body !== null) for await (const e of consumeBody(this[p].body)) r.write(e);
              r.end();
              await n;
              return t;
            } else if (/application\/x-www-form-urlencoded/.test(t)) {
              let e;
              try {
                let t = "";
                const r = new TextDecoder("utf-8", { ignoreBOM: true });
                for await (const e of consumeBody(this[p].body)) {
                  if (!B(e)) {
                    throw new TypeError("Expected Uint8Array chunk");
                  }
                  t += r.decode(e, { stream: true });
                }
                t += r.decode();
                e = new URLSearchParams(t);
              } catch (e) {
                throw Object.assign(new TypeError(), { cause: e });
              }
              const t = new d();
              for (const [r, s] of e) {
                t.append(r, s);
              }
              return t;
            } else {
              await Promise.resolve();
              throwIfAborted(this[p]);
              throw u.errors.exception({ header: `${e.name}.formData`, message: "Could not parse content as FormData." });
            }
          },
        };
        return t;
      }
      function mixinBody(e) {
        Object.assign(e.prototype, bodyMixinMethods(e));
      }
      async function specConsumeBody(e, t, r) {
        u.brandCheck(e, r);
        throwIfAborted(e[p]);
        if (bodyUnusable(e[p].body)) {
          throw new TypeError("Body is unusable");
        }
        const s = l();
        const errorSteps = (e) => s.reject(e);
        const successSteps = (e) => {
          try {
            s.resolve(t(e));
          } catch (e) {
            errorSteps(e);
          }
        };
        if (e[p].body == null) {
          successSteps(new Uint8Array());
          return s.promise;
        }
        await c(e[p].body, successSteps, errorSteps);
        return s.promise;
      }
      function bodyUnusable(e) {
        return e != null && (e.stream.locked || n.isDisturbed(e.stream));
      }
      function utf8DecodeBytes(e) {
        if (e.length === 0) {
          return "";
        }
        if (e[0] === 239 && e[1] === 187 && e[2] === 191) {
          e = e.subarray(3);
        }
        const t = R.decode(e);
        return t;
      }
      function parseJSONFromBytes(e) {
        return JSON.parse(utf8DecodeBytes(e));
      }
      function bodyMimeType(e) {
        const { headersList: t } = e[p];
        const r = t.get("content-type");
        if (r === null) {
          return "failure";
        }
        return w(r);
      }
      e.exports = { extractBody: extractBody, safelyExtractBody: safelyExtractBody, cloneBody: cloneBody, mixinBody: mixinBody };
    },
    87326: (e, t, r) => {
      "use strict";
      const { MessageChannel: s, receiveMessageOnPort: n } = r(28167);
      const o = ["GET", "HEAD", "POST"];
      const i = new Set(o);
      const a = [101, 204, 205, 304];
      const A = [301, 302, 303, 307, 308];
      const l = new Set(A);
      const c = [
        "1",
        "7",
        "9",
        "11",
        "13",
        "15",
        "17",
        "19",
        "20",
        "21",
        "22",
        "23",
        "25",
        "37",
        "42",
        "43",
        "53",
        "69",
        "77",
        "79",
        "87",
        "95",
        "101",
        "102",
        "103",
        "104",
        "109",
        "110",
        "111",
        "113",
        "115",
        "117",
        "119",
        "123",
        "135",
        "137",
        "139",
        "143",
        "161",
        "179",
        "389",
        "427",
        "465",
        "512",
        "513",
        "514",
        "515",
        "526",
        "530",
        "531",
        "532",
        "540",
        "548",
        "554",
        "556",
        "563",
        "587",
        "601",
        "636",
        "989",
        "990",
        "993",
        "995",
        "1719",
        "1720",
        "1723",
        "2049",
        "3659",
        "4045",
        "5060",
        "5061",
        "6000",
        "6566",
        "6665",
        "6666",
        "6667",
        "6668",
        "6669",
        "6697",
        "10080",
      ];
      const d = new Set(c);
      const p = [
        "",
        "no-referrer",
        "no-referrer-when-downgrade",
        "same-origin",
        "origin",
        "strict-origin",
        "origin-when-cross-origin",
        "strict-origin-when-cross-origin",
        "unsafe-url",
      ];
      const u = new Set(p);
      const g = ["follow", "manual", "error"];
      const m = ["GET", "HEAD", "OPTIONS", "TRACE"];
      const h = new Set(m);
      const E = ["navigate", "same-origin", "no-cors", "cors"];
      const I = ["omit", "same-origin", "include"];
      const C = ["default", "no-store", "reload", "no-cache", "force-cache", "only-if-cached"];
      const y = ["content-encoding", "content-language", "content-location", "content-type", "content-length"];
      const B = ["half"];
      const Q = ["CONNECT", "TRACE", "TRACK"];
      const b = new Set(Q);
      const w = ["audio", "audioworklet", "font", "image", "manifest", "paintworklet", "script", "style", "track", "video", "xslt", ""];
      const v = new Set(w);
      const T =
        globalThis.DOMException ??
        (() => {
          try {
            atob("~");
          } catch (e) {
            return Object.getPrototypeOf(e).constructor;
          }
        })();
      let _;
      const S =
        globalThis.structuredClone ??
        function structuredClone(e, t = undefined) {
          if (arguments.length === 0) {
            throw new TypeError("missing argument");
          }
          if (!_) {
            _ = new s();
          }
          _.port1.unref();
          _.port2.unref();
          _.port1.postMessage(e, t?.transfer);
          return n(_.port2).message;
        };
      e.exports = {
        DOMException: T,
        structuredClone: S,
        subresource: w,
        forbiddenMethods: Q,
        requestBodyHeader: y,
        referrerPolicy: p,
        requestRedirect: g,
        requestMode: E,
        requestCredentials: I,
        requestCache: C,
        redirectStatus: A,
        corsSafeListedMethods: o,
        nullBodyStatus: a,
        safeMethods: m,
        badPorts: c,
        requestDuplex: B,
        subresourceSet: v,
        badPortsSet: d,
        redirectStatusSet: l,
        corsSafeListedMethodsSet: i,
        safeMethodsSet: h,
        forbiddenMethodsSet: b,
        referrerPolicySet: u,
      };
    },
    94322: (e, t, r) => {
      const s = r(42613);
      const { atob: n } = r(20181);
      const { isomorphicDecode: o } = r(15523);
      const i = new TextEncoder();
      const a = /^[!#$%&'*+-.^_|~A-Za-z0-9]+$/;
      const A = /(\u000A|\u000D|\u0009|\u0020)/;
      const l = /[\u0009|\u0020-\u007E|\u0080-\u00FF]/;
      function dataURLProcessor(e) {
        s(e.protocol === "data:");
        let t = URLSerializer(e, true);
        t = t.slice(5);
        const r = { position: 0 };
        let n = collectASequenceOfCodePointsFast(",", t, r);
        const i = n.length;
        n = removeASCIIWhitespace(n, true, true);
        if (r.position >= t.length) {
          return "failure";
        }
        r.position++;
        const a = t.slice(i + 1);
        let A = stringPercentDecode(a);
        if (/;(\u0020){0,}base64$/i.test(n)) {
          const e = o(A);
          A = forgivingBase64(e);
          if (A === "failure") {
            return "failure";
          }
          n = n.slice(0, -6);
          n = n.replace(/(\u0020)+$/, "");
          n = n.slice(0, -1);
        }
        if (n.startsWith(";")) {
          n = "text/plain" + n;
        }
        let l = parseMIMEType(n);
        if (l === "failure") {
          l = parseMIMEType("text/plain;charset=US-ASCII");
        }
        return { mimeType: l, body: A };
      }
      function URLSerializer(e, t = false) {
        if (!t) {
          return e.href;
        }
        const r = e.href;
        const s = e.hash.length;
        return s === 0 ? r : r.substring(0, r.length - s);
      }
      function collectASequenceOfCodePoints(e, t, r) {
        let s = "";
        while (r.position < t.length && e(t[r.position])) {
          s += t[r.position];
          r.position++;
        }
        return s;
      }
      function collectASequenceOfCodePointsFast(e, t, r) {
        const s = t.indexOf(e, r.position);
        const n = r.position;
        if (s === -1) {
          r.position = t.length;
          return t.slice(n);
        }
        r.position = s;
        return t.slice(n, r.position);
      }
      function stringPercentDecode(e) {
        const t = i.encode(e);
        return percentDecode(t);
      }
      function percentDecode(e) {
        const t = [];
        for (let r = 0; r < e.length; r++) {
          const s = e[r];
          if (s !== 37) {
            t.push(s);
          } else if (s === 37 && !/^[0-9A-Fa-f]{2}$/i.test(String.fromCharCode(e[r + 1], e[r + 2]))) {
            t.push(37);
          } else {
            const s = String.fromCharCode(e[r + 1], e[r + 2]);
            const n = Number.parseInt(s, 16);
            t.push(n);
            r += 2;
          }
        }
        return Uint8Array.from(t);
      }
      function parseMIMEType(e) {
        e = removeHTTPWhitespace(e, true, true);
        const t = { position: 0 };
        const r = collectASequenceOfCodePointsFast("/", e, t);
        if (r.length === 0 || !a.test(r)) {
          return "failure";
        }
        if (t.position > e.length) {
          return "failure";
        }
        t.position++;
        let s = collectASequenceOfCodePointsFast(";", e, t);
        s = removeHTTPWhitespace(s, false, true);
        if (s.length === 0 || !a.test(s)) {
          return "failure";
        }
        const n = r.toLowerCase();
        const o = s.toLowerCase();
        const i = { type: n, subtype: o, parameters: new Map(), essence: `${n}/${o}` };
        while (t.position < e.length) {
          t.position++;
          collectASequenceOfCodePoints((e) => A.test(e), e, t);
          let r = collectASequenceOfCodePoints((e) => e !== ";" && e !== "=", e, t);
          r = r.toLowerCase();
          if (t.position < e.length) {
            if (e[t.position] === ";") {
              continue;
            }
            t.position++;
          }
          if (t.position > e.length) {
            break;
          }
          let s = null;
          if (e[t.position] === '"') {
            s = collectAnHTTPQuotedString(e, t, true);
            collectASequenceOfCodePointsFast(";", e, t);
          } else {
            s = collectASequenceOfCodePointsFast(";", e, t);
            s = removeHTTPWhitespace(s, false, true);
            if (s.length === 0) {
              continue;
            }
          }
          if (r.length !== 0 && a.test(r) && (s.length === 0 || l.test(s)) && !i.parameters.has(r)) {
            i.parameters.set(r, s);
          }
        }
        return i;
      }
      function forgivingBase64(e) {
        e = e.replace(/[\u0009\u000A\u000C\u000D\u0020]/g, "");
        if (e.length % 4 === 0) {
          e = e.replace(/=?=$/, "");
        }
        if (e.length % 4 === 1) {
          return "failure";
        }
        if (/[^+/0-9A-Za-z]/.test(e)) {
          return "failure";
        }
        const t = n(e);
        const r = new Uint8Array(t.length);
        for (let e = 0; e < t.length; e++) {
          r[e] = t.charCodeAt(e);
        }
        return r;
      }
      function collectAnHTTPQuotedString(e, t, r) {
        const n = t.position;
        let o = "";
        s(e[t.position] === '"');
        t.position++;
        while (true) {
          o += collectASequenceOfCodePoints((e) => e !== '"' && e !== "\\", e, t);
          if (t.position >= e.length) {
            break;
          }
          const r = e[t.position];
          t.position++;
          if (r === "\\") {
            if (t.position >= e.length) {
              o += "\\";
              break;
            }
            o += e[t.position];
            t.position++;
          } else {
            s(r === '"');
            break;
          }
        }
        if (r) {
          return o;
        }
        return e.slice(n, t.position);
      }
      function serializeAMimeType(e) {
        s(e !== "failure");
        const { parameters: t, essence: r } = e;
        let n = r;
        for (let [e, r] of t.entries()) {
          n += ";";
          n += e;
          n += "=";
          if (!a.test(r)) {
            r = r.replace(/(\\|")/g, "\\$1");
            r = '"' + r;
            r += '"';
          }
          n += r;
        }
        return n;
      }
      function isHTTPWhiteSpace(e) {
        return e === "\r" || e === "\n" || e === "\t" || e === " ";
      }
      function removeHTTPWhitespace(e, t = true, r = true) {
        let s = 0;
        let n = e.length - 1;
        if (t) {
          for (; s < e.length && isHTTPWhiteSpace(e[s]); s++);
        }
        if (r) {
          for (; n > 0 && isHTTPWhiteSpace(e[n]); n--);
        }
        return e.slice(s, n + 1);
      }
      function isASCIIWhitespace(e) {
        return e === "\r" || e === "\n" || e === "\t" || e === "\f" || e === " ";
      }
      function removeASCIIWhitespace(e, t = true, r = true) {
        let s = 0;
        let n = e.length - 1;
        if (t) {
          for (; s < e.length && isASCIIWhitespace(e[s]); s++);
        }
        if (r) {
          for (; n > 0 && isASCIIWhitespace(e[n]); n--);
        }
        return e.slice(s, n + 1);
      }
      e.exports = {
        dataURLProcessor: dataURLProcessor,
        URLSerializer: URLSerializer,
        collectASequenceOfCodePoints: collectASequenceOfCodePoints,
        collectASequenceOfCodePointsFast: collectASequenceOfCodePointsFast,
        stringPercentDecode: stringPercentDecode,
        parseMIMEType: parseMIMEType,
        collectAnHTTPQuotedString: collectAnHTTPQuotedString,
        serializeAMimeType: serializeAMimeType,
      };
    },
    63041: (e, t, r) => {
      "use strict";
      const { Blob: s, File: n } = r(20181);
      const { types: o } = r(39023);
      const { kState: i } = r(89710);
      const { isBlobLike: a } = r(15523);
      const { webidl: A } = r(74222);
      const { parseMIMEType: l, serializeAMimeType: c } = r(94322);
      const { kEnumerableProperty: d } = r(3440);
      const p = new TextEncoder();
      class File extends s {
        constructor(e, t, r = {}) {
          A.argumentLengthCheck(arguments, 2, { header: "File constructor" });
          e = A.converters["sequence<BlobPart>"](e);
          t = A.converters.USVString(t);
          r = A.converters.FilePropertyBag(r);
          const s = t;
          let n = r.type;
          let o;
          e: {
            if (n) {
              n = l(n);
              if (n === "failure") {
                n = "";
                break e;
              }
              n = c(n).toLowerCase();
            }
            o = r.lastModified;
          }
          super(processBlobParts(e, r), { type: n });
          this[i] = { name: s, lastModified: o, type: n };
        }
        get name() {
          A.brandCheck(this, File);
          return this[i].name;
        }
        get lastModified() {
          A.brandCheck(this, File);
          return this[i].lastModified;
        }
        get type() {
          A.brandCheck(this, File);
          return this[i].type;
        }
      }
      class FileLike {
        constructor(e, t, r = {}) {
          const s = t;
          const n = r.type;
          const o = r.lastModified ?? Date.now();
          this[i] = { blobLike: e, name: s, type: n, lastModified: o };
        }
        stream(...e) {
          A.brandCheck(this, FileLike);
          return this[i].blobLike.stream(...e);
        }
        arrayBuffer(...e) {
          A.brandCheck(this, FileLike);
          return this[i].blobLike.arrayBuffer(...e);
        }
        slice(...e) {
          A.brandCheck(this, FileLike);
          return this[i].blobLike.slice(...e);
        }
        text(...e) {
          A.brandCheck(this, FileLike);
          return this[i].blobLike.text(...e);
        }
        get size() {
          A.brandCheck(this, FileLike);
          return this[i].blobLike.size;
        }
        get type() {
          A.brandCheck(this, FileLike);
          return this[i].blobLike.type;
        }
        get name() {
          A.brandCheck(this, FileLike);
          return this[i].name;
        }
        get lastModified() {
          A.brandCheck(this, FileLike);
          return this[i].lastModified;
        }
        get [Symbol.toStringTag]() {
          return "File";
        }
      }
      Object.defineProperties(File.prototype, { [Symbol.toStringTag]: { value: "File", configurable: true }, name: d, lastModified: d });
      A.converters.Blob = A.interfaceConverter(s);
      A.converters.BlobPart = function (e, t) {
        if (A.util.Type(e) === "Object") {
          if (a(e)) {
            return A.converters.Blob(e, { strict: false });
          }
          if (ArrayBuffer.isView(e) || o.isAnyArrayBuffer(e)) {
            return A.converters.BufferSource(e, t);
          }
        }
        return A.converters.USVString(e, t);
      };
      A.converters["sequence<BlobPart>"] = A.sequenceConverter(A.converters.BlobPart);
      A.converters.FilePropertyBag = A.dictionaryConverter([
        {
          key: "lastModified",
          converter: A.converters["long long"],
          get defaultValue() {
            return Date.now();
          },
        },
        { key: "type", converter: A.converters.DOMString, defaultValue: "" },
        {
          key: "endings",
          converter: (e) => {
            e = A.converters.DOMString(e);
            e = e.toLowerCase();
            if (e !== "native") {
              e = "transparent";
            }
            return e;
          },
          defaultValue: "transparent",
        },
      ]);
      function processBlobParts(e, t) {
        const r = [];
        for (const s of e) {
          if (typeof s === "string") {
            let e = s;
            if (t.endings === "native") {
              e = convertLineEndingsNative(e);
            }
            r.push(p.encode(e));
          } else if (o.isAnyArrayBuffer(s) || o.isTypedArray(s)) {
            if (!s.buffer) {
              r.push(new Uint8Array(s));
            } else {
              r.push(new Uint8Array(s.buffer, s.byteOffset, s.byteLength));
            }
          } else if (a(s)) {
            r.push(s);
          }
        }
        return r;
      }
      function convertLineEndingsNative(e) {
        let t = "\n";
        if (process.platform === "win32") {
          t = "\r\n";
        }
        return e.replace(/\r?\n/g, t);
      }
      function isFileLike(e) {
        return (
          (n && e instanceof n) ||
          e instanceof File ||
          (e && (typeof e.stream === "function" || typeof e.arrayBuffer === "function") && e[Symbol.toStringTag] === "File")
        );
      }
      e.exports = { File: File, FileLike: FileLike, isFileLike: isFileLike };
    },
    43073: (e, t, r) => {
      "use strict";
      const { isBlobLike: s, toUSVString: n, makeIterator: o } = r(15523);
      const { kState: i } = r(89710);
      const { File: a, FileLike: A, isFileLike: l } = r(63041);
      const { webidl: c } = r(74222);
      const { Blob: d, File: p } = r(20181);
      const u = p ?? a;
      class FormData {
        constructor(e) {
          if (e !== undefined) {
            throw c.errors.conversionFailed({ prefix: "FormData constructor", argument: "Argument 1", types: ["undefined"] });
          }
          this[i] = [];
        }
        append(e, t, r = undefined) {
          c.brandCheck(this, FormData);
          c.argumentLengthCheck(arguments, 2, { header: "FormData.append" });
          if (arguments.length === 3 && !s(t)) {
            throw new TypeError("Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'");
          }
          e = c.converters.USVString(e);
          t = s(t) ? c.converters.Blob(t, { strict: false }) : c.converters.USVString(t);
          r = arguments.length === 3 ? c.converters.USVString(r) : undefined;
          const n = makeEntry(e, t, r);
          this[i].push(n);
        }
        delete(e) {
          c.brandCheck(this, FormData);
          c.argumentLengthCheck(arguments, 1, { header: "FormData.delete" });
          e = c.converters.USVString(e);
          this[i] = this[i].filter((t) => t.name !== e);
        }
        get(e) {
          c.brandCheck(this, FormData);
          c.argumentLengthCheck(arguments, 1, { header: "FormData.get" });
          e = c.converters.USVString(e);
          const t = this[i].findIndex((t) => t.name === e);
          if (t === -1) {
            return null;
          }
          return this[i][t].value;
        }
        getAll(e) {
          c.brandCheck(this, FormData);
          c.argumentLengthCheck(arguments, 1, { header: "FormData.getAll" });
          e = c.converters.USVString(e);
          return this[i].filter((t) => t.name === e).map((e) => e.value);
        }
        has(e) {
          c.brandCheck(this, FormData);
          c.argumentLengthCheck(arguments, 1, { header: "FormData.has" });
          e = c.converters.USVString(e);
          return this[i].findIndex((t) => t.name === e) !== -1;
        }
        set(e, t, r = undefined) {
          c.brandCheck(this, FormData);
          c.argumentLengthCheck(arguments, 2, { header: "FormData.set" });
          if (arguments.length === 3 && !s(t)) {
            throw new TypeError("Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'");
          }
          e = c.converters.USVString(e);
          t = s(t) ? c.converters.Blob(t, { strict: false }) : c.converters.USVString(t);
          r = arguments.length === 3 ? n(r) : undefined;
          const o = makeEntry(e, t, r);
          const a = this[i].findIndex((t) => t.name === e);
          if (a !== -1) {
            this[i] = [...this[i].slice(0, a), o, ...this[i].slice(a + 1).filter((t) => t.name !== e)];
          } else {
            this[i].push(o);
          }
        }
        entries() {
          c.brandCheck(this, FormData);
          return o(() => this[i].map((e) => [e.name, e.value]), "FormData", "key+value");
        }
        keys() {
          c.brandCheck(this, FormData);
          return o(() => this[i].map((e) => [e.name, e.value]), "FormData", "key");
        }
        values() {
          c.brandCheck(this, FormData);
          return o(() => this[i].map((e) => [e.name, e.value]), "FormData", "value");
        }
        forEach(e, t = globalThis) {
          c.brandCheck(this, FormData);
          c.argumentLengthCheck(arguments, 1, { header: "FormData.forEach" });
          if (typeof e !== "function") {
            throw new TypeError("Failed to execute 'forEach' on 'FormData': parameter 1 is not of type 'Function'.");
          }
          for (const [r, s] of this) {
            e.apply(t, [s, r, this]);
          }
        }
      }
      FormData.prototype[Symbol.iterator] = FormData.prototype.entries;
      Object.defineProperties(FormData.prototype, { [Symbol.toStringTag]: { value: "FormData", configurable: true } });
      function makeEntry(e, t, r) {
        e = Buffer.from(e).toString("utf8");
        if (typeof t === "string") {
          t = Buffer.from(t).toString("utf8");
        } else {
          if (!l(t)) {
            t = t instanceof d ? new u([t], "blob", { type: t.type }) : new A(t, "blob", { type: t.type });
          }
          if (r !== undefined) {
            const e = { type: t.type, lastModified: t.lastModified };
            t = (p && t instanceof p) || t instanceof a ? new u([t], r, e) : new A(t, r, e);
          }
        }
        return { name: e, value: t };
      }
      e.exports = { FormData: FormData };
    },
    75628: (e) => {
      "use strict";
      const t = Symbol.for("undici.globalOrigin.1");
      function getGlobalOrigin() {
        return globalThis[t];
      }
      function setGlobalOrigin(e) {
        if (e === undefined) {
          Object.defineProperty(globalThis, t, { value: undefined, writable: true, enumerable: false, configurable: false });
          return;
        }
        const r = new URL(e);
        if (r.protocol !== "http:" && r.protocol !== "https:") {
          throw new TypeError(`Only http & https urls are allowed, received ${r.protocol}`);
        }
        Object.defineProperty(globalThis, t, { value: r, writable: true, enumerable: false, configurable: false });
      }
      e.exports = { getGlobalOrigin: getGlobalOrigin, setGlobalOrigin: setGlobalOrigin };
    },
    26349: (e, t, r) => {
      "use strict";
      const { kHeadersList: s, kConstruct: n } = r(36443);
      const { kGuard: o } = r(89710);
      const { kEnumerableProperty: i } = r(3440);
      const { makeIterator: a, isValidHeaderName: A, isValidHeaderValue: l } = r(15523);
      const { webidl: c } = r(74222);
      const d = r(42613);
      const p = Symbol("headers map");
      const u = Symbol("headers map sorted");
      function isHTTPWhiteSpaceCharCode(e) {
        return e === 10 || e === 13 || e === 9 || e === 32;
      }
      function headerValueNormalize(e) {
        let t = 0;
        let r = e.length;
        while (r > t && isHTTPWhiteSpaceCharCode(e.charCodeAt(r - 1))) --r;
        while (r > t && isHTTPWhiteSpaceCharCode(e.charCodeAt(t))) ++t;
        return t === 0 && r === e.length ? e : e.substring(t, r);
      }
      function fill(e, t) {
        if (Array.isArray(t)) {
          for (let r = 0; r < t.length; ++r) {
            const s = t[r];
            if (s.length !== 2) {
              throw c.errors.exception({ header: "Headers constructor", message: `expected name/value pair to be length 2, found ${s.length}.` });
            }
            appendHeader(e, s[0], s[1]);
          }
        } else if (typeof t === "object" && t !== null) {
          const r = Object.keys(t);
          for (let s = 0; s < r.length; ++s) {
            appendHeader(e, r[s], t[r[s]]);
          }
        } else {
          throw c.errors.conversionFailed({
            prefix: "Headers constructor",
            argument: "Argument 1",
            types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"],
          });
        }
      }
      function appendHeader(e, t, r) {
        r = headerValueNormalize(r);
        if (!A(t)) {
          throw c.errors.invalidArgument({ prefix: "Headers.append", value: t, type: "header name" });
        } else if (!l(r)) {
          throw c.errors.invalidArgument({ prefix: "Headers.append", value: r, type: "header value" });
        }
        if (e[o] === "immutable") {
          throw new TypeError("immutable");
        } else if (e[o] === "request-no-cors") {
        }
        return e[s].append(t, r);
      }
      class HeadersList {
        cookies = null;
        constructor(e) {
          if (e instanceof HeadersList) {
            this[p] = new Map(e[p]);
            this[u] = e[u];
            this.cookies = e.cookies === null ? null : [...e.cookies];
          } else {
            this[p] = new Map(e);
            this[u] = null;
          }
        }
        contains(e) {
          e = e.toLowerCase();
          return this[p].has(e);
        }
        clear() {
          this[p].clear();
          this[u] = null;
          this.cookies = null;
        }
        append(e, t) {
          this[u] = null;
          const r = e.toLowerCase();
          const s = this[p].get(r);
          if (s) {
            const e = r === "cookie" ? "; " : ", ";
            this[p].set(r, { name: s.name, value: `${s.value}${e}${t}` });
          } else {
            this[p].set(r, { name: e, value: t });
          }
          if (r === "set-cookie") {
            this.cookies ??= [];
            this.cookies.push(t);
          }
        }
        set(e, t) {
          this[u] = null;
          const r = e.toLowerCase();
          if (r === "set-cookie") {
            this.cookies = [t];
          }
          this[p].set(r, { name: e, value: t });
        }
        delete(e) {
          this[u] = null;
          e = e.toLowerCase();
          if (e === "set-cookie") {
            this.cookies = null;
          }
          this[p].delete(e);
        }
        get(e) {
          const t = this[p].get(e.toLowerCase());
          return t === undefined ? null : t.value;
        }
        *[Symbol.iterator]() {
          for (const [e, { value: t }] of this[p]) {
            yield [e, t];
          }
        }
        get entries() {
          const e = {};
          if (this[p].size) {
            for (const { name: t, value: r } of this[p].values()) {
              e[t] = r;
            }
          }
          return e;
        }
      }
      class Headers {
        constructor(e = undefined) {
          if (e === n) {
            return;
          }
          this[s] = new HeadersList();
          this[o] = "none";
          if (e !== undefined) {
            e = c.converters.HeadersInit(e);
            fill(this, e);
          }
        }
        append(e, t) {
          c.brandCheck(this, Headers);
          c.argumentLengthCheck(arguments, 2, { header: "Headers.append" });
          e = c.converters.ByteString(e);
          t = c.converters.ByteString(t);
          return appendHeader(this, e, t);
        }
        delete(e) {
          c.brandCheck(this, Headers);
          c.argumentLengthCheck(arguments, 1, { header: "Headers.delete" });
          e = c.converters.ByteString(e);
          if (!A(e)) {
            throw c.errors.invalidArgument({ prefix: "Headers.delete", value: e, type: "header name" });
          }
          if (this[o] === "immutable") {
            throw new TypeError("immutable");
          } else if (this[o] === "request-no-cors") {
          }
          if (!this[s].contains(e)) {
            return;
          }
          this[s].delete(e);
        }
        get(e) {
          c.brandCheck(this, Headers);
          c.argumentLengthCheck(arguments, 1, { header: "Headers.get" });
          e = c.converters.ByteString(e);
          if (!A(e)) {
            throw c.errors.invalidArgument({ prefix: "Headers.get", value: e, type: "header name" });
          }
          return this[s].get(e);
        }
        has(e) {
          c.brandCheck(this, Headers);
          c.argumentLengthCheck(arguments, 1, { header: "Headers.has" });
          e = c.converters.ByteString(e);
          if (!A(e)) {
            throw c.errors.invalidArgument({ prefix: "Headers.has", value: e, type: "header name" });
          }
          return this[s].contains(e);
        }
        set(e, t) {
          c.brandCheck(this, Headers);
          c.argumentLengthCheck(arguments, 2, { header: "Headers.set" });
          e = c.converters.ByteString(e);
          t = c.converters.ByteString(t);
          t = headerValueNormalize(t);
          if (!A(e)) {
            throw c.errors.invalidArgument({ prefix: "Headers.set", value: e, type: "header name" });
          } else if (!l(t)) {
            throw c.errors.invalidArgument({ prefix: "Headers.set", value: t, type: "header value" });
          }
          if (this[o] === "immutable") {
            throw new TypeError("immutable");
          } else if (this[o] === "request-no-cors") {
          }
          this[s].set(e, t);
        }
        getSetCookie() {
          c.brandCheck(this, Headers);
          const e = this[s].cookies;
          if (e) {
            return [...e];
          }
          return [];
        }
        get [u]() {
          if (this[s][u]) {
            return this[s][u];
          }
          const e = [];
          const t = [...this[s]].sort((e, t) => (e[0] < t[0] ? -1 : 1));
          const r = this[s].cookies;
          for (let s = 0; s < t.length; ++s) {
            const [n, o] = t[s];
            if (n === "set-cookie") {
              for (let t = 0; t < r.length; ++t) {
                e.push([n, r[t]]);
              }
            } else {
              d(o !== null);
              e.push([n, o]);
            }
          }
          this[s][u] = e;
          return e;
        }
        keys() {
          c.brandCheck(this, Headers);
          if (this[o] === "immutable") {
            const e = this[u];
            return a(() => e, "Headers", "key");
          }
          return a(() => [...this[u].values()], "Headers", "key");
        }
        values() {
          c.brandCheck(this, Headers);
          if (this[o] === "immutable") {
            const e = this[u];
            return a(() => e, "Headers", "value");
          }
          return a(() => [...this[u].values()], "Headers", "value");
        }
        entries() {
          c.brandCheck(this, Headers);
          if (this[o] === "immutable") {
            const e = this[u];
            return a(() => e, "Headers", "key+value");
          }
          return a(() => [...this[u].values()], "Headers", "key+value");
        }
        forEach(e, t = globalThis) {
          c.brandCheck(this, Headers);
          c.argumentLengthCheck(arguments, 1, { header: "Headers.forEach" });
          if (typeof e !== "function") {
            throw new TypeError("Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'.");
          }
          for (const [r, s] of this) {
            e.apply(t, [s, r, this]);
          }
        }
        [Symbol.for("nodejs.util.inspect.custom")]() {
          c.brandCheck(this, Headers);
          return this[s];
        }
      }
      Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
      Object.defineProperties(Headers.prototype, {
        append: i,
        delete: i,
        get: i,
        has: i,
        set: i,
        getSetCookie: i,
        keys: i,
        values: i,
        entries: i,
        forEach: i,
        [Symbol.iterator]: { enumerable: false },
        [Symbol.toStringTag]: { value: "Headers", configurable: true },
      });
      c.converters.HeadersInit = function (e) {
        if (c.util.Type(e) === "Object") {
          if (e[Symbol.iterator]) {
            return c.converters["sequence<sequence<ByteString>>"](e);
          }
          return c.converters["record<ByteString, ByteString>"](e);
        }
        throw c.errors.conversionFailed({
          prefix: "Headers constructor",
          argument: "Argument 1",
          types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"],
        });
      };
      e.exports = { fill: fill, Headers: Headers, HeadersList: HeadersList };
    },
    12315: (e, t, r) => {
      "use strict";
      const { Response: s, makeNetworkError: n, makeAppropriateNetworkError: o, filterResponse: i, makeResponse: a } = r(48676);
      const { Headers: A } = r(26349);
      const { Request: l, makeRequest: c } = r(25194);
      const d = r(43106);
      const {
        bytesMatch: p,
        makePolicyContainer: u,
        clonePolicyContainer: g,
        requestBadPort: m,
        TAOCheck: h,
        appendRequestOriginHeader: E,
        responseLocationURL: I,
        requestCurrentURL: C,
        setRequestReferrerPolicyOnRedirect: y,
        tryUpgradeRequestToAPotentiallyTrustworthyURL: B,
        createOpaqueTimingInfo: Q,
        appendFetchMetadata: b,
        corsCheck: w,
        crossOriginResourcePolicyCheck: v,
        determineRequestsReferrer: T,
        coarsenedSharedCurrentTime: _,
        createDeferredPromise: S,
        isBlobLike: R,
        sameOrigin: D,
        isCancelled: k,
        isAborted: F,
        isErrorLike: O,
        fullyReadBody: N,
        readableStreamClose: P,
        isomorphicEncode: U,
        urlIsLocal: L,
        urlIsHttpHttpsScheme: M,
        urlHasHttpsScheme: G,
      } = r(15523);
      const { kState: x, kHeaders: V, kGuard: j, kRealm: H } = r(89710);
      const Y = r(42613);
      const { safelyExtractBody: J } = r(8923);
      const { redirectStatusSet: q, nullBodyStatus: W, safeMethodsSet: K, requestBodyHeader: $, subresourceSet: z, DOMException: Z } = r(87326);
      const { kHeadersList: X } = r(36443);
      const ee = r(24434);
      const { Readable: te, pipeline: re } = r(2203);
      const { addAbortListener: se, isErrored: ne, isReadable: oe, nodeMajor: ie, nodeMinor: ae } = r(3440);
      const { dataURLProcessor: Ae, serializeAMimeType: le } = r(94322);
      const { TransformStream: ce } = r(63774);
      const { getGlobalDispatcher: de } = r(32581);
      const { webidl: pe } = r(74222);
      const { STATUS_CODES: ue } = r(58611);
      const ge = ["GET", "HEAD"];
      let me;
      let he = globalThis.ReadableStream;
      class Fetch extends ee {
        constructor(e) {
          super();
          this.dispatcher = e;
          this.connection = null;
          this.dump = false;
          this.state = "ongoing";
          this.setMaxListeners(21);
        }
        terminate(e) {
          if (this.state !== "ongoing") {
            return;
          }
          this.state = "terminated";
          this.connection?.destroy(e);
          this.emit("terminated", e);
        }
        abort(e) {
          if (this.state !== "ongoing") {
            return;
          }
          this.state = "aborted";
          if (!e) {
            e = new Z("The operation was aborted.", "AbortError");
          }
          this.serializedAbortReason = e;
          this.connection?.destroy(e);
          this.emit("terminated", e);
        }
      }
      function fetch(e, t = {}) {
        pe.argumentLengthCheck(arguments, 1, { header: "globalThis.fetch" });
        const r = S();
        let n;
        try {
          n = new l(e, t);
        } catch (e) {
          r.reject(e);
          return r.promise;
        }
        const o = n[x];
        if (n.signal.aborted) {
          abortFetch(r, o, null, n.signal.reason);
          return r.promise;
        }
        const i = o.client.globalObject;
        if (i?.constructor?.name === "ServiceWorkerGlobalScope") {
          o.serviceWorkers = "none";
        }
        let a = null;
        const A = null;
        let c = false;
        let d = null;
        se(n.signal, () => {
          c = true;
          Y(d != null);
          d.abort(n.signal.reason);
          abortFetch(r, o, a, n.signal.reason);
        });
        const handleFetchDone = (e) => finalizeAndReportTiming(e, "fetch");
        const processResponse = (e) => {
          if (c) {
            return Promise.resolve();
          }
          if (e.aborted) {
            abortFetch(r, o, a, d.serializedAbortReason);
            return Promise.resolve();
          }
          if (e.type === "error") {
            r.reject(Object.assign(new TypeError("fetch failed"), { cause: e.error }));
            return Promise.resolve();
          }
          a = new s();
          a[x] = e;
          a[H] = A;
          a[V][X] = e.headersList;
          a[V][j] = "immutable";
          a[V][H] = A;
          r.resolve(a);
        };
        d = fetching({ request: o, processResponseEndOfBody: handleFetchDone, processResponse: processResponse, dispatcher: t.dispatcher ?? de() });
        return r.promise;
      }
      function finalizeAndReportTiming(e, t = "other") {
        if (e.type === "error" && e.aborted) {
          return;
        }
        if (!e.urlList?.length) {
          return;
        }
        const r = e.urlList[0];
        let s = e.timingInfo;
        let n = e.cacheState;
        if (!M(r)) {
          return;
        }
        if (s === null) {
          return;
        }
        if (!e.timingAllowPassed) {
          s = Q({ startTime: s.startTime });
          n = "";
        }
        s.endTime = _();
        e.timingInfo = s;
        markResourceTiming(s, r, t, globalThis, n);
      }
      function markResourceTiming(e, t, r, s, n) {
        if (ie > 18 || (ie === 18 && ae >= 2)) {
          performance.markResourceTiming(e, t.href, r, s, n);
        }
      }
      function abortFetch(e, t, r, s) {
        if (!s) {
          s = new Z("The operation was aborted.", "AbortError");
        }
        e.reject(s);
        if (t.body != null && oe(t.body?.stream)) {
          t.body.stream.cancel(s).catch((e) => {
            if (e.code === "ERR_INVALID_STATE") {
              return;
            }
            throw e;
          });
        }
        if (r == null) {
          return;
        }
        const n = r[x];
        if (n.body != null && oe(n.body?.stream)) {
          n.body.stream.cancel(s).catch((e) => {
            if (e.code === "ERR_INVALID_STATE") {
              return;
            }
            throw e;
          });
        }
      }
      function fetching({
        request: e,
        processRequestBodyChunkLength: t,
        processRequestEndOfBody: r,
        processResponse: s,
        processResponseEndOfBody: n,
        processResponseConsumeBody: o,
        useParallelQueue: i = false,
        dispatcher: a,
      }) {
        let A = null;
        let l = false;
        if (e.client != null) {
          A = e.client.globalObject;
          l = e.client.crossOriginIsolatedCapability;
        }
        const c = _(l);
        const d = Q({ startTime: c });
        const p = {
          controller: new Fetch(a),
          request: e,
          timingInfo: d,
          processRequestBodyChunkLength: t,
          processRequestEndOfBody: r,
          processResponse: s,
          processResponseConsumeBody: o,
          processResponseEndOfBody: n,
          taskDestination: A,
          crossOriginIsolatedCapability: l,
        };
        Y(!e.body || e.body.stream);
        if (e.window === "client") {
          e.window = e.client?.globalObject?.constructor?.name === "Window" ? e.client : "no-window";
        }
        if (e.origin === "client") {
          e.origin = e.client?.origin;
        }
        if (e.policyContainer === "client") {
          if (e.client != null) {
            e.policyContainer = g(e.client.policyContainer);
          } else {
            e.policyContainer = u();
          }
        }
        if (!e.headersList.contains("accept")) {
          const t = "*/*";
          e.headersList.append("accept", t);
        }
        if (!e.headersList.contains("accept-language")) {
          e.headersList.append("accept-language", "*");
        }
        if (e.priority === null) {
        }
        if (z.has(e.destination)) {
        }
        mainFetch(p).catch((e) => {
          p.controller.terminate(e);
        });
        return p.controller;
      }
      async function mainFetch(e, t = false) {
        const r = e.request;
        let s = null;
        if (r.localURLsOnly && !L(C(r))) {
          s = n("local URLs only");
        }
        B(r);
        if (m(r) === "blocked") {
          s = n("bad port");
        }
        if (r.referrerPolicy === "") {
          r.referrerPolicy = r.policyContainer.referrerPolicy;
        }
        if (r.referrer !== "no-referrer") {
          r.referrer = T(r);
        }
        if (s === null) {
          s = await (async () => {
            const t = C(r);
            if ((D(t, r.url) && r.responseTainting === "basic") || t.protocol === "data:" || r.mode === "navigate" || r.mode === "websocket") {
              r.responseTainting = "basic";
              return await schemeFetch(e);
            }
            if (r.mode === "same-origin") {
              return n('request mode cannot be "same-origin"');
            }
            if (r.mode === "no-cors") {
              if (r.redirect !== "follow") {
                return n('redirect mode cannot be "follow" for "no-cors" request');
              }
              r.responseTainting = "opaque";
              return await schemeFetch(e);
            }
            if (!M(C(r))) {
              return n("URL scheme must be a HTTP(S) scheme");
            }
            r.responseTainting = "cors";
            return await httpFetch(e);
          })();
        }
        if (t) {
          return s;
        }
        if (s.status !== 0 && !s.internalResponse) {
          if (r.responseTainting === "cors") {
          }
          if (r.responseTainting === "basic") {
            s = i(s, "basic");
          } else if (r.responseTainting === "cors") {
            s = i(s, "cors");
          } else if (r.responseTainting === "opaque") {
            s = i(s, "opaque");
          } else {
            Y(false);
          }
        }
        let o = s.status === 0 ? s : s.internalResponse;
        if (o.urlList.length === 0) {
          o.urlList.push(...r.urlList);
        }
        if (!r.timingAllowFailed) {
          s.timingAllowPassed = true;
        }
        if (s.type === "opaque" && o.status === 206 && o.rangeRequested && !r.headers.contains("range")) {
          s = o = n();
        }
        if (s.status !== 0 && (r.method === "HEAD" || r.method === "CONNECT" || W.includes(o.status))) {
          o.body = null;
          e.controller.dump = true;
        }
        if (r.integrity) {
          const processBodyError = (t) => fetchFinale(e, n(t));
          if (r.responseTainting === "opaque" || s.body == null) {
            processBodyError(s.error);
            return;
          }
          const processBody = (t) => {
            if (!p(t, r.integrity)) {
              processBodyError("integrity mismatch");
              return;
            }
            s.body = J(t)[0];
            fetchFinale(e, s);
          };
          await N(s.body, processBody, processBodyError);
        } else {
          fetchFinale(e, s);
        }
      }
      function schemeFetch(e) {
        if (k(e) && e.request.redirectCount === 0) {
          return Promise.resolve(o(e));
        }
        const { request: t } = e;
        const { protocol: s } = C(t);
        switch (s) {
          case "about:": {
            return Promise.resolve(n("about scheme is not supported"));
          }
          case "blob:": {
            if (!me) {
              me = r(20181).resolveObjectURL;
            }
            const e = C(t);
            if (e.search.length !== 0) {
              return Promise.resolve(n("NetworkError when attempting to fetch resource."));
            }
            const s = me(e.toString());
            if (t.method !== "GET" || !R(s)) {
              return Promise.resolve(n("invalid method"));
            }
            const o = J(s);
            const i = o[0];
            const A = U(`${i.length}`);
            const l = o[1] ?? "";
            const c = a({
              statusText: "OK",
              headersList: [
                ["content-length", { name: "Content-Length", value: A }],
                ["content-type", { name: "Content-Type", value: l }],
              ],
            });
            c.body = i;
            return Promise.resolve(c);
          }
          case "data:": {
            const e = C(t);
            const r = Ae(e);
            if (r === "failure") {
              return Promise.resolve(n("failed to fetch the data URL"));
            }
            const s = le(r.mimeType);
            return Promise.resolve(a({ statusText: "OK", headersList: [["content-type", { name: "Content-Type", value: s }]], body: J(r.body)[0] }));
          }
          case "file:": {
            return Promise.resolve(n("not implemented... yet..."));
          }
          case "http:":
          case "https:": {
            return httpFetch(e).catch((e) => n(e));
          }
          default: {
            return Promise.resolve(n("unknown scheme"));
          }
        }
      }
      function finalizeResponse(e, t) {
        e.request.done = true;
        if (e.processResponseDone != null) {
          queueMicrotask(() => e.processResponseDone(t));
        }
      }
      function fetchFinale(e, t) {
        if (t.type === "error") {
          t.urlList = [e.request.urlList[0]];
          t.timingInfo = Q({ startTime: e.timingInfo.startTime });
        }
        const processResponseEndOfBody = () => {
          e.request.done = true;
          if (e.processResponseEndOfBody != null) {
            queueMicrotask(() => e.processResponseEndOfBody(t));
          }
        };
        if (e.processResponse != null) {
          queueMicrotask(() => e.processResponse(t));
        }
        if (t.body == null) {
          processResponseEndOfBody();
        } else {
          const identityTransformAlgorithm = (e, t) => {
            t.enqueue(e);
          };
          const e = new ce(
            { start() {}, transform: identityTransformAlgorithm, flush: processResponseEndOfBody },
            {
              size() {
                return 1;
              },
            },
            {
              size() {
                return 1;
              },
            }
          );
          t.body = { stream: t.body.stream.pipeThrough(e) };
        }
        if (e.processResponseConsumeBody != null) {
          const processBody = (r) => e.processResponseConsumeBody(t, r);
          const processBodyError = (r) => e.processResponseConsumeBody(t, r);
          if (t.body == null) {
            queueMicrotask(() => processBody(null));
          } else {
            return N(t.body, processBody, processBodyError);
          }
          return Promise.resolve();
        }
      }
      async function httpFetch(e) {
        const t = e.request;
        let r = null;
        let s = null;
        const o = e.timingInfo;
        if (t.serviceWorkers === "all") {
        }
        if (r === null) {
          if (t.redirect === "follow") {
            t.serviceWorkers = "none";
          }
          s = r = await httpNetworkOrCacheFetch(e);
          if (t.responseTainting === "cors" && w(t, r) === "failure") {
            return n("cors failure");
          }
          if (h(t, r) === "failure") {
            t.timingAllowFailed = true;
          }
        }
        if ((t.responseTainting === "opaque" || r.type === "opaque") && v(t.origin, t.client, t.destination, s) === "blocked") {
          return n("blocked");
        }
        if (q.has(s.status)) {
          if (t.redirect !== "manual") {
            e.controller.connection.destroy();
          }
          if (t.redirect === "error") {
            r = n("unexpected redirect");
          } else if (t.redirect === "manual") {
            r = s;
          } else if (t.redirect === "follow") {
            r = await httpRedirectFetch(e, r);
          } else {
            Y(false);
          }
        }
        r.timingInfo = o;
        return r;
      }
      function httpRedirectFetch(e, t) {
        const r = e.request;
        const s = t.internalResponse ? t.internalResponse : t;
        let o;
        try {
          o = I(s, C(r).hash);
          if (o == null) {
            return t;
          }
        } catch (e) {
          return Promise.resolve(n(e));
        }
        if (!M(o)) {
          return Promise.resolve(n("URL scheme must be a HTTP(S) scheme"));
        }
        if (r.redirectCount === 20) {
          return Promise.resolve(n("redirect count exceeded"));
        }
        r.redirectCount += 1;
        if (r.mode === "cors" && (o.username || o.password) && !D(r, o)) {
          return Promise.resolve(n('cross origin not allowed for request mode "cors"'));
        }
        if (r.responseTainting === "cors" && (o.username || o.password)) {
          return Promise.resolve(n('URL cannot contain credentials for request mode "cors"'));
        }
        if (s.status !== 303 && r.body != null && r.body.source == null) {
          return Promise.resolve(n());
        }
        if (([301, 302].includes(s.status) && r.method === "POST") || (s.status === 303 && !ge.includes(r.method))) {
          r.method = "GET";
          r.body = null;
          for (const e of $) {
            r.headersList.delete(e);
          }
        }
        if (!D(C(r), o)) {
          r.headersList.delete("authorization");
          r.headersList.delete("proxy-authorization", true);
          r.headersList.delete("cookie");
          r.headersList.delete("host");
        }
        if (r.body != null) {
          Y(r.body.source != null);
          r.body = J(r.body.source)[0];
        }
        const i = e.timingInfo;
        i.redirectEndTime = i.postRedirectStartTime = _(e.crossOriginIsolatedCapability);
        if (i.redirectStartTime === 0) {
          i.redirectStartTime = i.startTime;
        }
        r.urlList.push(o);
        y(r, s);
        return mainFetch(e, true);
      }
      async function httpNetworkOrCacheFetch(e, t = false, r = false) {
        const s = e.request;
        let i = null;
        let a = null;
        let A = null;
        const l = null;
        const d = false;
        if (s.window === "no-window" && s.redirect === "error") {
          i = e;
          a = s;
        } else {
          a = c(s);
          i = { ...e };
          i.request = a;
        }
        const p = s.credentials === "include" || (s.credentials === "same-origin" && s.responseTainting === "basic");
        const u = a.body ? a.body.length : null;
        let g = null;
        if (a.body == null && ["POST", "PUT"].includes(a.method)) {
          g = "0";
        }
        if (u != null) {
          g = U(`${u}`);
        }
        if (g != null) {
          a.headersList.append("content-length", g);
        }
        if (u != null && a.keepalive) {
        }
        if (a.referrer instanceof URL) {
          a.headersList.append("referer", U(a.referrer.href));
        }
        E(a);
        b(a);
        if (!a.headersList.contains("user-agent")) {
          a.headersList.append("user-agent", typeof esbuildDetection === "undefined" ? "undici" : "node");
        }
        if (
          a.cache === "default" &&
          (a.headersList.contains("if-modified-since") ||
            a.headersList.contains("if-none-match") ||
            a.headersList.contains("if-unmodified-since") ||
            a.headersList.contains("if-match") ||
            a.headersList.contains("if-range"))
        ) {
          a.cache = "no-store";
        }
        if (a.cache === "no-cache" && !a.preventNoCacheCacheControlHeaderModification && !a.headersList.contains("cache-control")) {
          a.headersList.append("cache-control", "max-age=0");
        }
        if (a.cache === "no-store" || a.cache === "reload") {
          if (!a.headersList.contains("pragma")) {
            a.headersList.append("pragma", "no-cache");
          }
          if (!a.headersList.contains("cache-control")) {
            a.headersList.append("cache-control", "no-cache");
          }
        }
        if (a.headersList.contains("range")) {
          a.headersList.append("accept-encoding", "identity");
        }
        if (!a.headersList.contains("accept-encoding")) {
          if (G(C(a))) {
            a.headersList.append("accept-encoding", "br, gzip, deflate");
          } else {
            a.headersList.append("accept-encoding", "gzip, deflate");
          }
        }
        a.headersList.delete("host");
        if (p) {
        }
        if (l == null) {
          a.cache = "no-store";
        }
        if (a.mode !== "no-store" && a.mode !== "reload") {
        }
        if (A == null) {
          if (a.mode === "only-if-cached") {
            return n("only if cached");
          }
          const e = await httpNetworkFetch(i, p, r);
          if (!K.has(a.method) && e.status >= 200 && e.status <= 399) {
          }
          if (d && e.status === 304) {
          }
          if (A == null) {
            A = e;
          }
        }
        A.urlList = [...a.urlList];
        if (a.headersList.contains("range")) {
          A.rangeRequested = true;
        }
        A.requestIncludesCredentials = p;
        if (A.status === 407) {
          if (s.window === "no-window") {
            return n();
          }
          if (k(e)) {
            return o(e);
          }
          return n("proxy authentication required");
        }
        if (A.status === 421 && !r && (s.body == null || s.body.source != null)) {
          if (k(e)) {
            return o(e);
          }
          e.controller.connection.destroy();
          A = await httpNetworkOrCacheFetch(e, t, true);
        }
        if (t) {
        }
        return A;
      }
      async function httpNetworkFetch(e, t = false, s = false) {
        Y(!e.controller.connection || e.controller.connection.destroyed);
        e.controller.connection = {
          abort: null,
          destroyed: false,
          destroy(e) {
            if (!this.destroyed) {
              this.destroyed = true;
              this.abort?.(e ?? new Z("The operation was aborted.", "AbortError"));
            }
          },
        };
        const i = e.request;
        let l = null;
        const c = e.timingInfo;
        const p = null;
        if (p == null) {
          i.cache = "no-store";
        }
        const u = s ? "yes" : "no";
        if (i.mode === "websocket") {
        } else {
        }
        let g = null;
        if (i.body == null && e.processRequestEndOfBody) {
          queueMicrotask(() => e.processRequestEndOfBody());
        } else if (i.body != null) {
          const processBodyChunk = async function* (t) {
            if (k(e)) {
              return;
            }
            yield t;
            e.processRequestBodyChunkLength?.(t.byteLength);
          };
          const processEndOfBody = () => {
            if (k(e)) {
              return;
            }
            if (e.processRequestEndOfBody) {
              e.processRequestEndOfBody();
            }
          };
          const processBodyError = (t) => {
            if (k(e)) {
              return;
            }
            if (t.name === "AbortError") {
              e.controller.abort();
            } else {
              e.controller.terminate(t);
            }
          };
          g = (async function* () {
            try {
              for await (const e of i.body.stream) {
                yield* processBodyChunk(e);
              }
              processEndOfBody();
            } catch (e) {
              processBodyError(e);
            }
          })();
        }
        try {
          const { body: t, status: r, statusText: s, headersList: n, socket: o } = await dispatch({ body: g });
          if (o) {
            l = a({ status: r, statusText: s, headersList: n, socket: o });
          } else {
            const o = t[Symbol.asyncIterator]();
            e.controller.next = () => o.next();
            l = a({ status: r, statusText: s, headersList: n });
          }
        } catch (t) {
          if (t.name === "AbortError") {
            e.controller.connection.destroy();
            return o(e, t);
          }
          return n(t);
        }
        const pullAlgorithm = () => {
          e.controller.resume();
        };
        const cancelAlgorithm = (t) => {
          e.controller.abort(t);
        };
        if (!he) {
          he = r(63774).ReadableStream;
        }
        const m = new he(
          {
            async start(t) {
              e.controller.controller = t;
            },
            async pull(e) {
              await pullAlgorithm(e);
            },
            async cancel(e) {
              await cancelAlgorithm(e);
            },
          },
          {
            highWaterMark: 0,
            size() {
              return 1;
            },
          }
        );
        l.body = { stream: m };
        e.controller.on("terminated", onAborted);
        e.controller.resume = async () => {
          while (true) {
            let t;
            let r;
            try {
              const { done: r, value: s } = await e.controller.next();
              if (F(e)) {
                break;
              }
              t = r ? undefined : s;
            } catch (s) {
              if (e.controller.ended && !c.encodedBodySize) {
                t = undefined;
              } else {
                t = s;
                r = true;
              }
            }
            if (t === undefined) {
              P(e.controller.controller);
              finalizeResponse(e, l);
              return;
            }
            c.decodedBodySize += t?.byteLength ?? 0;
            if (r) {
              e.controller.terminate(t);
              return;
            }
            e.controller.controller.enqueue(new Uint8Array(t));
            if (ne(m)) {
              e.controller.terminate();
              return;
            }
            if (!e.controller.controller.desiredSize) {
              return;
            }
          }
        };
        function onAborted(t) {
          if (F(e)) {
            l.aborted = true;
            if (oe(m)) {
              e.controller.controller.error(e.controller.serializedAbortReason);
            }
          } else {
            if (oe(m)) {
              e.controller.controller.error(new TypeError("terminated", { cause: O(t) ? t : undefined }));
            }
          }
          e.controller.connection.destroy();
        }
        return l;
        async function dispatch({ body: t }) {
          const r = C(i);
          const s = e.controller.dispatcher;
          return new Promise((n, o) =>
            s.dispatch(
              {
                path: r.pathname + r.search,
                origin: r.origin,
                method: i.method,
                body: e.controller.dispatcher.isMockActive ? i.body && (i.body.source || i.body.stream) : t,
                headers: i.headersList.entries,
                maxRedirections: 0,
                upgrade: i.mode === "websocket" ? "websocket" : undefined,
              },
              {
                body: null,
                abort: null,
                onConnect(t) {
                  const { connection: r } = e.controller;
                  if (r.destroyed) {
                    t(new Z("The operation was aborted.", "AbortError"));
                  } else {
                    e.controller.on("terminated", t);
                    this.abort = r.abort = t;
                  }
                },
                onHeaders(e, t, r, s) {
                  if (e < 200) {
                    return;
                  }
                  let o = [];
                  let a = "";
                  const l = new A();
                  if (Array.isArray(t)) {
                    for (let e = 0; e < t.length; e += 2) {
                      const r = t[e + 0].toString("latin1");
                      const s = t[e + 1].toString("latin1");
                      if (r.toLowerCase() === "content-encoding") {
                        o = s
                          .toLowerCase()
                          .split(",")
                          .map((e) => e.trim());
                      } else if (r.toLowerCase() === "location") {
                        a = s;
                      }
                      l[X].append(r, s);
                    }
                  } else {
                    const e = Object.keys(t);
                    for (const r of e) {
                      const e = t[r];
                      if (r.toLowerCase() === "content-encoding") {
                        o = e
                          .toLowerCase()
                          .split(",")
                          .map((e) => e.trim())
                          .reverse();
                      } else if (r.toLowerCase() === "location") {
                        a = e;
                      }
                      l[X].append(r, e);
                    }
                  }
                  this.body = new te({ read: r });
                  const c = [];
                  const p = i.redirect === "follow" && a && q.has(e);
                  if (i.method !== "HEAD" && i.method !== "CONNECT" && !W.includes(e) && !p) {
                    for (const e of o) {
                      if (e === "x-gzip" || e === "gzip") {
                        c.push(d.createGunzip({ flush: d.constants.Z_SYNC_FLUSH, finishFlush: d.constants.Z_SYNC_FLUSH }));
                      } else if (e === "deflate") {
                        c.push(d.createInflate());
                      } else if (e === "br") {
                        c.push(d.createBrotliDecompress());
                      } else {
                        c.length = 0;
                        break;
                      }
                    }
                  }
                  n({ status: e, statusText: s, headersList: l[X], body: c.length ? re(this.body, ...c, () => {}) : this.body.on("error", () => {}) });
                  return true;
                },
                onData(t) {
                  if (e.controller.dump) {
                    return;
                  }
                  const r = t;
                  c.encodedBodySize += r.byteLength;
                  return this.body.push(r);
                },
                onComplete() {
                  if (this.abort) {
                    e.controller.off("terminated", this.abort);
                  }
                  e.controller.ended = true;
                  this.body.push(null);
                },
                onError(t) {
                  if (this.abort) {
                    e.controller.off("terminated", this.abort);
                  }
                  this.body?.destroy(t);
                  e.controller.terminate(t);
                  o(t);
                },
                onUpgrade(e, t, r) {
                  if (e !== 101) {
                    return;
                  }
                  const s = new A();
                  for (let e = 0; e < t.length; e += 2) {
                    const r = t[e + 0].toString("latin1");
                    const n = t[e + 1].toString("latin1");
                    s[X].append(r, n);
                  }
                  n({ status: e, statusText: ue[e], headersList: s[X], socket: r });
                  return true;
                },
              }
            )
          );
        }
      }
      e.exports = { fetch: fetch, Fetch: Fetch, fetching: fetching, finalizeAndReportTiming: finalizeAndReportTiming };
    },
    25194: (e, t, r) => {
      "use strict";
      const { extractBody: s, mixinBody: n, cloneBody: o } = r(8923);
      const { Headers: i, fill: a, HeadersList: A } = r(26349);
      const { FinalizationRegistry: l } = r(13194)();
      const c = r(3440);
      const { isValidHTTPToken: d, sameOrigin: p, normalizeMethod: u, makePolicyContainer: g, normalizeMethodRecord: m } = r(15523);
      const {
        forbiddenMethodsSet: h,
        corsSafeListedMethodsSet: E,
        referrerPolicy: I,
        requestRedirect: C,
        requestMode: y,
        requestCredentials: B,
        requestCache: Q,
        requestDuplex: b,
      } = r(87326);
      const { kEnumerableProperty: w } = c;
      const { kHeaders: v, kSignal: T, kState: _, kGuard: S, kRealm: R } = r(89710);
      const { webidl: D } = r(74222);
      const { getGlobalOrigin: k } = r(75628);
      const { URLSerializer: F } = r(94322);
      const { kHeadersList: O, kConstruct: N } = r(36443);
      const P = r(42613);
      const { getMaxListeners: U, setMaxListeners: L, getEventListeners: M, defaultMaxListeners: G } = r(24434);
      let x = globalThis.TransformStream;
      const V = Symbol("abortController");
      const j = new l(({ signal: e, abort: t }) => {
        e.removeEventListener("abort", t);
      });
      class Request {
        constructor(e, t = {}) {
          if (e === N) {
            return;
          }
          D.argumentLengthCheck(arguments, 1, { header: "Request constructor" });
          e = D.converters.RequestInfo(e);
          t = D.converters.RequestInit(t);
          this[R] = {
            settingsObject: {
              baseUrl: k(),
              get origin() {
                return this.baseUrl?.origin;
              },
              policyContainer: g(),
            },
          };
          let n = null;
          let o = null;
          const l = this[R].settingsObject.baseUrl;
          let I = null;
          if (typeof e === "string") {
            let t;
            try {
              t = new URL(e, l);
            } catch (t) {
              throw new TypeError("Failed to parse URL from " + e, { cause: t });
            }
            if (t.username || t.password) {
              throw new TypeError("Request cannot be constructed from a URL that includes credentials: " + e);
            }
            n = makeRequest({ urlList: [t] });
            o = "cors";
          } else {
            P(e instanceof Request);
            n = e[_];
            I = e[T];
          }
          const C = this[R].settingsObject.origin;
          let y = "client";
          if (n.window?.constructor?.name === "EnvironmentSettingsObject" && p(n.window, C)) {
            y = n.window;
          }
          if (t.window != null) {
            throw new TypeError(`'window' option '${y}' must be null`);
          }
          if ("window" in t) {
            y = "no-window";
          }
          n = makeRequest({
            method: n.method,
            headersList: n.headersList,
            unsafeRequest: n.unsafeRequest,
            client: this[R].settingsObject,
            window: y,
            priority: n.priority,
            origin: n.origin,
            referrer: n.referrer,
            referrerPolicy: n.referrerPolicy,
            mode: n.mode,
            credentials: n.credentials,
            cache: n.cache,
            redirect: n.redirect,
            integrity: n.integrity,
            keepalive: n.keepalive,
            reloadNavigation: n.reloadNavigation,
            historyNavigation: n.historyNavigation,
            urlList: [...n.urlList],
          });
          const B = Object.keys(t).length !== 0;
          if (B) {
            if (n.mode === "navigate") {
              n.mode = "same-origin";
            }
            n.reloadNavigation = false;
            n.historyNavigation = false;
            n.origin = "client";
            n.referrer = "client";
            n.referrerPolicy = "";
            n.url = n.urlList[n.urlList.length - 1];
            n.urlList = [n.url];
          }
          if (t.referrer !== undefined) {
            const e = t.referrer;
            if (e === "") {
              n.referrer = "no-referrer";
            } else {
              let t;
              try {
                t = new URL(e, l);
              } catch (t) {
                throw new TypeError(`Referrer "${e}" is not a valid URL.`, { cause: t });
              }
              if ((t.protocol === "about:" && t.hostname === "client") || (C && !p(t, this[R].settingsObject.baseUrl))) {
                n.referrer = "client";
              } else {
                n.referrer = t;
              }
            }
          }
          if (t.referrerPolicy !== undefined) {
            n.referrerPolicy = t.referrerPolicy;
          }
          let Q;
          if (t.mode !== undefined) {
            Q = t.mode;
          } else {
            Q = o;
          }
          if (Q === "navigate") {
            throw D.errors.exception({ header: "Request constructor", message: "invalid request mode navigate." });
          }
          if (Q != null) {
            n.mode = Q;
          }
          if (t.credentials !== undefined) {
            n.credentials = t.credentials;
          }
          if (t.cache !== undefined) {
            n.cache = t.cache;
          }
          if (n.cache === "only-if-cached" && n.mode !== "same-origin") {
            throw new TypeError("'only-if-cached' can be set only with 'same-origin' mode");
          }
          if (t.redirect !== undefined) {
            n.redirect = t.redirect;
          }
          if (t.integrity != null) {
            n.integrity = String(t.integrity);
          }
          if (t.keepalive !== undefined) {
            n.keepalive = Boolean(t.keepalive);
          }
          if (t.method !== undefined) {
            let e = t.method;
            if (!d(e)) {
              throw new TypeError(`'${e}' is not a valid HTTP method.`);
            }
            if (h.has(e.toUpperCase())) {
              throw new TypeError(`'${e}' HTTP method is unsupported.`);
            }
            e = m[e] ?? u(e);
            n.method = e;
          }
          if (t.signal !== undefined) {
            I = t.signal;
          }
          this[_] = n;
          const b = new AbortController();
          this[T] = b.signal;
          this[T][R] = this[R];
          if (I != null) {
            if (!I || typeof I.aborted !== "boolean" || typeof I.addEventListener !== "function") {
              throw new TypeError("Failed to construct 'Request': member signal is not of type AbortSignal.");
            }
            if (I.aborted) {
              b.abort(I.reason);
            } else {
              this[V] = b;
              const e = new WeakRef(b);
              const abort = function () {
                const t = e.deref();
                if (t !== undefined) {
                  t.abort(this.reason);
                }
              };
              try {
                if (typeof U === "function" && U(I) === G) {
                  L(100, I);
                } else if (M(I, "abort").length >= G) {
                  L(100, I);
                }
              } catch {}
              c.addAbortListener(I, abort);
              j.register(b, { signal: I, abort: abort });
            }
          }
          this[v] = new i(N);
          this[v][O] = n.headersList;
          this[v][S] = "request";
          this[v][R] = this[R];
          if (Q === "no-cors") {
            if (!E.has(n.method)) {
              throw new TypeError(`'${n.method} is unsupported in no-cors mode.`);
            }
            this[v][S] = "request-no-cors";
          }
          if (B) {
            const e = this[v][O];
            const r = t.headers !== undefined ? t.headers : new A(e);
            e.clear();
            if (r instanceof A) {
              for (const [t, s] of r) {
                e.append(t, s);
              }
              e.cookies = r.cookies;
            } else {
              a(this[v], r);
            }
          }
          const w = e instanceof Request ? e[_].body : null;
          if ((t.body != null || w != null) && (n.method === "GET" || n.method === "HEAD")) {
            throw new TypeError("Request with GET/HEAD method cannot have body.");
          }
          let F = null;
          if (t.body != null) {
            const [e, r] = s(t.body, n.keepalive);
            F = e;
            if (r && !this[v][O].contains("content-type")) {
              this[v].append("content-type", r);
            }
          }
          const H = F ?? w;
          if (H != null && H.source == null) {
            if (F != null && t.duplex == null) {
              throw new TypeError("RequestInit: duplex option is required when sending a body.");
            }
            if (n.mode !== "same-origin" && n.mode !== "cors") {
              throw new TypeError('If request is made from ReadableStream, mode should be "same-origin" or "cors"');
            }
            n.useCORSPreflightFlag = true;
          }
          let Y = H;
          if (F == null && w != null) {
            if (c.isDisturbed(w.stream) || w.stream.locked) {
              throw new TypeError("Cannot construct a Request with a Request object that has already been used.");
            }
            if (!x) {
              x = r(63774).TransformStream;
            }
            const e = new x();
            w.stream.pipeThrough(e);
            Y = { source: w.source, length: w.length, stream: e.readable };
          }
          this[_].body = Y;
        }
        get method() {
          D.brandCheck(this, Request);
          return this[_].method;
        }
        get url() {
          D.brandCheck(this, Request);
          return F(this[_].url);
        }
        get headers() {
          D.brandCheck(this, Request);
          return this[v];
        }
        get destination() {
          D.brandCheck(this, Request);
          return this[_].destination;
        }
        get referrer() {
          D.brandCheck(this, Request);
          if (this[_].referrer === "no-referrer") {
            return "";
          }
          if (this[_].referrer === "client") {
            return "about:client";
          }
          return this[_].referrer.toString();
        }
        get referrerPolicy() {
          D.brandCheck(this, Request);
          return this[_].referrerPolicy;
        }
        get mode() {
          D.brandCheck(this, Request);
          return this[_].mode;
        }
        get credentials() {
          return this[_].credentials;
        }
        get cache() {
          D.brandCheck(this, Request);
          return this[_].cache;
        }
        get redirect() {
          D.brandCheck(this, Request);
          return this[_].redirect;
        }
        get integrity() {
          D.brandCheck(this, Request);
          return this[_].integrity;
        }
        get keepalive() {
          D.brandCheck(this, Request);
          return this[_].keepalive;
        }
        get isReloadNavigation() {
          D.brandCheck(this, Request);
          return this[_].reloadNavigation;
        }
        get isHistoryNavigation() {
          D.brandCheck(this, Request);
          return this[_].historyNavigation;
        }
        get signal() {
          D.brandCheck(this, Request);
          return this[T];
        }
        get body() {
          D.brandCheck(this, Request);
          return this[_].body ? this[_].body.stream : null;
        }
        get bodyUsed() {
          D.brandCheck(this, Request);
          return !!this[_].body && c.isDisturbed(this[_].body.stream);
        }
        get duplex() {
          D.brandCheck(this, Request);
          return "half";
        }
        clone() {
          D.brandCheck(this, Request);
          if (this.bodyUsed || this.body?.locked) {
            throw new TypeError("unusable");
          }
          const e = cloneRequest(this[_]);
          const t = new Request(N);
          t[_] = e;
          t[R] = this[R];
          t[v] = new i(N);
          t[v][O] = e.headersList;
          t[v][S] = this[v][S];
          t[v][R] = this[v][R];
          const r = new AbortController();
          if (this.signal.aborted) {
            r.abort(this.signal.reason);
          } else {
            c.addAbortListener(this.signal, () => {
              r.abort(this.signal.reason);
            });
          }
          t[T] = r.signal;
          return t;
        }
      }
      n(Request);
      function makeRequest(e) {
        const t = {
          method: "GET",
          localURLsOnly: false,
          unsafeRequest: false,
          body: null,
          client: null,
          reservedClient: null,
          replacesClientId: "",
          window: "client",
          keepalive: false,
          serviceWorkers: "all",
          initiator: "",
          destination: "",
          priority: null,
          origin: "client",
          policyContainer: "client",
          referrer: "client",
          referrerPolicy: "",
          mode: "no-cors",
          useCORSPreflightFlag: false,
          credentials: "same-origin",
          useCredentials: false,
          cache: "default",
          redirect: "follow",
          integrity: "",
          cryptoGraphicsNonceMetadata: "",
          parserMetadata: "",
          reloadNavigation: false,
          historyNavigation: false,
          userActivation: false,
          taintedOrigin: false,
          redirectCount: 0,
          responseTainting: "basic",
          preventNoCacheCacheControlHeaderModification: false,
          done: false,
          timingAllowFailed: false,
          ...e,
          headersList: e.headersList ? new A(e.headersList) : new A(),
        };
        t.url = t.urlList[0];
        return t;
      }
      function cloneRequest(e) {
        const t = makeRequest({ ...e, body: null });
        if (e.body != null) {
          t.body = o(e.body);
        }
        return t;
      }
      Object.defineProperties(Request.prototype, {
        method: w,
        url: w,
        headers: w,
        redirect: w,
        clone: w,
        signal: w,
        duplex: w,
        destination: w,
        body: w,
        bodyUsed: w,
        isHistoryNavigation: w,
        isReloadNavigation: w,
        keepalive: w,
        integrity: w,
        cache: w,
        credentials: w,
        attribute: w,
        referrerPolicy: w,
        referrer: w,
        mode: w,
        [Symbol.toStringTag]: { value: "Request", configurable: true },
      });
      D.converters.Request = D.interfaceConverter(Request);
      D.converters.RequestInfo = function (e) {
        if (typeof e === "string") {
          return D.converters.USVString(e);
        }
        if (e instanceof Request) {
          return D.converters.Request(e);
        }
        return D.converters.USVString(e);
      };
      D.converters.AbortSignal = D.interfaceConverter(AbortSignal);
      D.converters.RequestInit = D.dictionaryConverter([
        { key: "method", converter: D.converters.ByteString },
        { key: "headers", converter: D.converters.HeadersInit },
        { key: "body", converter: D.nullableConverter(D.converters.BodyInit) },
        { key: "referrer", converter: D.converters.USVString },
        { key: "referrerPolicy", converter: D.converters.DOMString, allowedValues: I },
        { key: "mode", converter: D.converters.DOMString, allowedValues: y },
        { key: "credentials", converter: D.converters.DOMString, allowedValues: B },
        { key: "cache", converter: D.converters.DOMString, allowedValues: Q },
        { key: "redirect", converter: D.converters.DOMString, allowedValues: C },
        { key: "integrity", converter: D.converters.DOMString },
        { key: "keepalive", converter: D.converters.boolean },
        { key: "signal", converter: D.nullableConverter((e) => D.converters.AbortSignal(e, { strict: false })) },
        { key: "window", converter: D.converters.any },
        { key: "duplex", converter: D.converters.DOMString, allowedValues: b },
      ]);
      e.exports = { Request: Request, makeRequest: makeRequest };
    },
    48676: (e, t, r) => {
      "use strict";
      const { Headers: s, HeadersList: n, fill: o } = r(26349);
      const { extractBody: i, cloneBody: a, mixinBody: A } = r(8923);
      const l = r(3440);
      const { kEnumerableProperty: c } = l;
      const {
        isValidReasonPhrase: d,
        isCancelled: p,
        isAborted: u,
        isBlobLike: g,
        serializeJavascriptValueToJSONString: m,
        isErrorLike: h,
        isomorphicEncode: E,
      } = r(15523);
      const { redirectStatusSet: I, nullBodyStatus: C, DOMException: y } = r(87326);
      const { kState: B, kHeaders: Q, kGuard: b, kRealm: w } = r(89710);
      const { webidl: v } = r(74222);
      const { FormData: T } = r(43073);
      const { getGlobalOrigin: _ } = r(75628);
      const { URLSerializer: S } = r(94322);
      const { kHeadersList: R, kConstruct: D } = r(36443);
      const k = r(42613);
      const { types: F } = r(39023);
      const O = globalThis.ReadableStream || r(63774).ReadableStream;
      const N = new TextEncoder("utf-8");
      class Response {
        static error() {
          const e = { settingsObject: {} };
          const t = new Response();
          t[B] = makeNetworkError();
          t[w] = e;
          t[Q][R] = t[B].headersList;
          t[Q][b] = "immutable";
          t[Q][w] = e;
          return t;
        }
        static json(e, t = {}) {
          v.argumentLengthCheck(arguments, 1, { header: "Response.json" });
          if (t !== null) {
            t = v.converters.ResponseInit(t);
          }
          const r = N.encode(m(e));
          const s = i(r);
          const n = { settingsObject: {} };
          const o = new Response();
          o[w] = n;
          o[Q][b] = "response";
          o[Q][w] = n;
          initializeResponse(o, t, { body: s[0], type: "application/json" });
          return o;
        }
        static redirect(e, t = 302) {
          const r = { settingsObject: {} };
          v.argumentLengthCheck(arguments, 1, { header: "Response.redirect" });
          e = v.converters.USVString(e);
          t = v.converters["unsigned short"](t);
          let s;
          try {
            s = new URL(e, _());
          } catch (t) {
            throw Object.assign(new TypeError("Failed to parse URL from " + e), { cause: t });
          }
          if (!I.has(t)) {
            throw new RangeError("Invalid status code " + t);
          }
          const n = new Response();
          n[w] = r;
          n[Q][b] = "immutable";
          n[Q][w] = r;
          n[B].status = t;
          const o = E(S(s));
          n[B].headersList.append("location", o);
          return n;
        }
        constructor(e = null, t = {}) {
          if (e !== null) {
            e = v.converters.BodyInit(e);
          }
          t = v.converters.ResponseInit(t);
          this[w] = { settingsObject: {} };
          this[B] = makeResponse({});
          this[Q] = new s(D);
          this[Q][b] = "response";
          this[Q][R] = this[B].headersList;
          this[Q][w] = this[w];
          let r = null;
          if (e != null) {
            const [t, s] = i(e);
            r = { body: t, type: s };
          }
          initializeResponse(this, t, r);
        }
        get type() {
          v.brandCheck(this, Response);
          return this[B].type;
        }
        get url() {
          v.brandCheck(this, Response);
          const e = this[B].urlList;
          const t = e[e.length - 1] ?? null;
          if (t === null) {
            return "";
          }
          return S(t, true);
        }
        get redirected() {
          v.brandCheck(this, Response);
          return this[B].urlList.length > 1;
        }
        get status() {
          v.brandCheck(this, Response);
          return this[B].status;
        }
        get ok() {
          v.brandCheck(this, Response);
          return this[B].status >= 200 && this[B].status <= 299;
        }
        get statusText() {
          v.brandCheck(this, Response);
          return this[B].statusText;
        }
        get headers() {
          v.brandCheck(this, Response);
          return this[Q];
        }
        get body() {
          v.brandCheck(this, Response);
          return this[B].body ? this[B].body.stream : null;
        }
        get bodyUsed() {
          v.brandCheck(this, Response);
          return !!this[B].body && l.isDisturbed(this[B].body.stream);
        }
        clone() {
          v.brandCheck(this, Response);
          if (this.bodyUsed || (this.body && this.body.locked)) {
            throw v.errors.exception({ header: "Response.clone", message: "Body has already been consumed." });
          }
          const e = cloneResponse(this[B]);
          const t = new Response();
          t[B] = e;
          t[w] = this[w];
          t[Q][R] = e.headersList;
          t[Q][b] = this[Q][b];
          t[Q][w] = this[Q][w];
          return t;
        }
      }
      A(Response);
      Object.defineProperties(Response.prototype, {
        type: c,
        url: c,
        status: c,
        ok: c,
        redirected: c,
        statusText: c,
        headers: c,
        clone: c,
        body: c,
        bodyUsed: c,
        [Symbol.toStringTag]: { value: "Response", configurable: true },
      });
      Object.defineProperties(Response, { json: c, redirect: c, error: c });
      function cloneResponse(e) {
        if (e.internalResponse) {
          return filterResponse(cloneResponse(e.internalResponse), e.type);
        }
        const t = makeResponse({ ...e, body: null });
        if (e.body != null) {
          t.body = a(e.body);
        }
        return t;
      }
      function makeResponse(e) {
        return {
          aborted: false,
          rangeRequested: false,
          timingAllowPassed: false,
          requestIncludesCredentials: false,
          type: "default",
          status: 200,
          timingInfo: null,
          cacheState: "",
          statusText: "",
          ...e,
          headersList: e.headersList ? new n(e.headersList) : new n(),
          urlList: e.urlList ? [...e.urlList] : [],
        };
      }
      function makeNetworkError(e) {
        const t = h(e);
        return makeResponse({ type: "error", status: 0, error: t ? e : new Error(e ? String(e) : e), aborted: e && e.name === "AbortError" });
      }
      function makeFilteredResponse(e, t) {
        t = { internalResponse: e, ...t };
        return new Proxy(e, {
          get(e, r) {
            return r in t ? t[r] : e[r];
          },
          set(e, r, s) {
            k(!(r in t));
            e[r] = s;
            return true;
          },
        });
      }
      function filterResponse(e, t) {
        if (t === "basic") {
          return makeFilteredResponse(e, { type: "basic", headersList: e.headersList });
        } else if (t === "cors") {
          return makeFilteredResponse(e, { type: "cors", headersList: e.headersList });
        } else if (t === "opaque") {
          return makeFilteredResponse(e, { type: "opaque", urlList: Object.freeze([]), status: 0, statusText: "", body: null });
        } else if (t === "opaqueredirect") {
          return makeFilteredResponse(e, { type: "opaqueredirect", status: 0, statusText: "", headersList: [], body: null });
        } else {
          k(false);
        }
      }
      function makeAppropriateNetworkError(e, t = null) {
        k(p(e));
        return u(e)
          ? makeNetworkError(Object.assign(new y("The operation was aborted.", "AbortError"), { cause: t }))
          : makeNetworkError(Object.assign(new y("Request was cancelled."), { cause: t }));
      }
      function initializeResponse(e, t, r) {
        if (t.status !== null && (t.status < 200 || t.status > 599)) {
          throw new RangeError('init["status"] must be in the range of 200 to 599, inclusive.');
        }
        if ("statusText" in t && t.statusText != null) {
          if (!d(String(t.statusText))) {
            throw new TypeError("Invalid statusText");
          }
        }
        if ("status" in t && t.status != null) {
          e[B].status = t.status;
        }
        if ("statusText" in t && t.statusText != null) {
          e[B].statusText = t.statusText;
        }
        if ("headers" in t && t.headers != null) {
          o(e[Q], t.headers);
        }
        if (r) {
          if (C.includes(e.status)) {
            throw v.errors.exception({ header: "Response constructor", message: "Invalid response status code " + e.status });
          }
          e[B].body = r.body;
          if (r.type != null && !e[B].headersList.contains("Content-Type")) {
            e[B].headersList.append("content-type", r.type);
          }
        }
      }
      v.converters.ReadableStream = v.interfaceConverter(O);
      v.converters.FormData = v.interfaceConverter(T);
      v.converters.URLSearchParams = v.interfaceConverter(URLSearchParams);
      v.converters.XMLHttpRequestBodyInit = function (e) {
        if (typeof e === "string") {
          return v.converters.USVString(e);
        }
        if (g(e)) {
          return v.converters.Blob(e, { strict: false });
        }
        if (F.isArrayBuffer(e) || F.isTypedArray(e) || F.isDataView(e)) {
          return v.converters.BufferSource(e);
        }
        if (l.isFormDataLike(e)) {
          return v.converters.FormData(e, { strict: false });
        }
        if (e instanceof URLSearchParams) {
          return v.converters.URLSearchParams(e);
        }
        return v.converters.DOMString(e);
      };
      v.converters.BodyInit = function (e) {
        if (e instanceof O) {
          return v.converters.ReadableStream(e);
        }
        if (e?.[Symbol.asyncIterator]) {
          return e;
        }
        return v.converters.XMLHttpRequestBodyInit(e);
      };
      v.converters.ResponseInit = v.dictionaryConverter([
        { key: "status", converter: v.converters["unsigned short"], defaultValue: 200 },
        { key: "statusText", converter: v.converters.ByteString, defaultValue: "" },
        { key: "headers", converter: v.converters.HeadersInit },
      ]);
      e.exports = {
        makeNetworkError: makeNetworkError,
        makeResponse: makeResponse,
        makeAppropriateNetworkError: makeAppropriateNetworkError,
        filterResponse: filterResponse,
        Response: Response,
        cloneResponse: cloneResponse,
      };
    },
    89710: (e) => {
      "use strict";
      e.exports = {
        kUrl: Symbol("url"),
        kHeaders: Symbol("headers"),
        kSignal: Symbol("signal"),
        kState: Symbol("state"),
        kGuard: Symbol("guard"),
        kRealm: Symbol("realm"),
      };
    },
    15523: (e, t, r) => {
      "use strict";
      const { redirectStatusSet: s, referrerPolicySet: n, badPortsSet: o } = r(87326);
      const { getGlobalOrigin: i } = r(75628);
      const { performance: a } = r(82987);
      const { isBlobLike: A, toUSVString: l, ReadableStreamFrom: c } = r(3440);
      const d = r(42613);
      const { isUint8Array: p } = r(98253);
      let u = [];
      let g;
      try {
        g = r(76982);
        const e = ["sha256", "sha384", "sha512"];
        u = g.getHashes().filter((t) => e.includes(t));
      } catch {}
      function responseURL(e) {
        const t = e.urlList;
        const r = t.length;
        return r === 0 ? null : t[r - 1].toString();
      }
      function responseLocationURL(e, t) {
        if (!s.has(e.status)) {
          return null;
        }
        let r = e.headersList.get("location");
        if (r !== null && isValidHeaderValue(r)) {
          r = new URL(r, responseURL(e));
        }
        if (r && !r.hash) {
          r.hash = t;
        }
        return r;
      }
      function requestCurrentURL(e) {
        return e.urlList[e.urlList.length - 1];
      }
      function requestBadPort(e) {
        const t = requestCurrentURL(e);
        if (urlIsHttpHttpsScheme(t) && o.has(t.port)) {
          return "blocked";
        }
        return "allowed";
      }
      function isErrorLike(e) {
        return e instanceof Error || e?.constructor?.name === "Error" || e?.constructor?.name === "DOMException";
      }
      function isValidReasonPhrase(e) {
        for (let t = 0; t < e.length; ++t) {
          const r = e.charCodeAt(t);
          if (!(r === 9 || (r >= 32 && r <= 126) || (r >= 128 && r <= 255))) {
            return false;
          }
        }
        return true;
      }
      function isTokenCharCode(e) {
        switch (e) {
          case 34:
          case 40:
          case 41:
          case 44:
          case 47:
          case 58:
          case 59:
          case 60:
          case 61:
          case 62:
          case 63:
          case 64:
          case 91:
          case 92:
          case 93:
          case 123:
          case 125:
            return false;
          default:
            return e >= 33 && e <= 126;
        }
      }
      function isValidHTTPToken(e) {
        if (e.length === 0) {
          return false;
        }
        for (let t = 0; t < e.length; ++t) {
          if (!isTokenCharCode(e.charCodeAt(t))) {
            return false;
          }
        }
        return true;
      }
      function isValidHeaderName(e) {
        return isValidHTTPToken(e);
      }
      function isValidHeaderValue(e) {
        if (e.startsWith("\t") || e.startsWith(" ") || e.endsWith("\t") || e.endsWith(" ")) {
          return false;
        }
        if (e.includes("\0") || e.includes("\r") || e.includes("\n")) {
          return false;
        }
        return true;
      }
      function setRequestReferrerPolicyOnRedirect(e, t) {
        const { headersList: r } = t;
        const s = (r.get("referrer-policy") ?? "").split(",");
        let o = "";
        if (s.length > 0) {
          for (let e = s.length; e !== 0; e--) {
            const t = s[e - 1].trim();
            if (n.has(t)) {
              o = t;
              break;
            }
          }
        }
        if (o !== "") {
          e.referrerPolicy = o;
        }
      }
      function crossOriginResourcePolicyCheck() {
        return "allowed";
      }
      function corsCheck() {
        return "success";
      }
      function TAOCheck() {
        return "success";
      }
      function appendFetchMetadata(e) {
        let t = null;
        t = e.mode;
        e.headersList.set("sec-fetch-mode", t);
      }
      function appendRequestOriginHeader(e) {
        let t = e.origin;
        if (e.responseTainting === "cors" || e.mode === "websocket") {
          if (t) {
            e.headersList.append("origin", t);
          }
        } else if (e.method !== "GET" && e.method !== "HEAD") {
          switch (e.referrerPolicy) {
            case "no-referrer":
              t = null;
              break;
            case "no-referrer-when-downgrade":
            case "strict-origin":
            case "strict-origin-when-cross-origin":
              if (e.origin && urlHasHttpsScheme(e.origin) && !urlHasHttpsScheme(requestCurrentURL(e))) {
                t = null;
              }
              break;
            case "same-origin":
              if (!sameOrigin(e, requestCurrentURL(e))) {
                t = null;
              }
              break;
            default:
          }
          if (t) {
            e.headersList.append("origin", t);
          }
        }
      }
      function coarsenedSharedCurrentTime(e) {
        return a.now();
      }
      function createOpaqueTimingInfo(e) {
        return {
          startTime: e.startTime ?? 0,
          redirectStartTime: 0,
          redirectEndTime: 0,
          postRedirectStartTime: e.startTime ?? 0,
          finalServiceWorkerStartTime: 0,
          finalNetworkResponseStartTime: 0,
          finalNetworkRequestStartTime: 0,
          endTime: 0,
          encodedBodySize: 0,
          decodedBodySize: 0,
          finalConnectionTimingInfo: null,
        };
      }
      function makePolicyContainer() {
        return { referrerPolicy: "strict-origin-when-cross-origin" };
      }
      function clonePolicyContainer(e) {
        return { referrerPolicy: e.referrerPolicy };
      }
      function determineRequestsReferrer(e) {
        const t = e.referrerPolicy;
        d(t);
        let r = null;
        if (e.referrer === "client") {
          const e = i();
          if (!e || e.origin === "null") {
            return "no-referrer";
          }
          r = new URL(e);
        } else if (e.referrer instanceof URL) {
          r = e.referrer;
        }
        let s = stripURLForReferrer(r);
        const n = stripURLForReferrer(r, true);
        if (s.toString().length > 4096) {
          s = n;
        }
        const o = sameOrigin(e, s);
        const a = isURLPotentiallyTrustworthy(s) && !isURLPotentiallyTrustworthy(e.url);
        switch (t) {
          case "origin":
            return n != null ? n : stripURLForReferrer(r, true);
          case "unsafe-url":
            return s;
          case "same-origin":
            return o ? n : "no-referrer";
          case "origin-when-cross-origin":
            return o ? s : n;
          case "strict-origin-when-cross-origin": {
            const t = requestCurrentURL(e);
            if (sameOrigin(s, t)) {
              return s;
            }
            if (isURLPotentiallyTrustworthy(s) && !isURLPotentiallyTrustworthy(t)) {
              return "no-referrer";
            }
            return n;
          }
          case "strict-origin":
          case "no-referrer-when-downgrade":
          default:
            return a ? "no-referrer" : n;
        }
      }
      function stripURLForReferrer(e, t) {
        d(e instanceof URL);
        if (e.protocol === "file:" || e.protocol === "about:" || e.protocol === "blank:") {
          return "no-referrer";
        }
        e.username = "";
        e.password = "";
        e.hash = "";
        if (t) {
          e.pathname = "";
          e.search = "";
        }
        return e;
      }
      function isURLPotentiallyTrustworthy(e) {
        if (!(e instanceof URL)) {
          return false;
        }
        if (e.href === "about:blank" || e.href === "about:srcdoc") {
          return true;
        }
        if (e.protocol === "data:") return true;
        if (e.protocol === "file:") return true;
        return isOriginPotentiallyTrustworthy(e.origin);
        function isOriginPotentiallyTrustworthy(e) {
          if (e == null || e === "null") return false;
          const t = new URL(e);
          if (t.protocol === "https:" || t.protocol === "wss:") {
            return true;
          }
          if (
            /^127(?:\.[0-9]+){0,2}\.[0-9]+$|^\[(?:0*:)*?:?0*1\]$/.test(t.hostname) ||
            t.hostname === "localhost" ||
            t.hostname.includes("localhost.") ||
            t.hostname.endsWith(".localhost")
          ) {
            return true;
          }
          return false;
        }
      }
      function bytesMatch(e, t) {
        if (g === undefined) {
          return true;
        }
        const r = parseMetadata(t);
        if (r === "no metadata") {
          return true;
        }
        if (r.length === 0) {
          return true;
        }
        const s = getStrongestMetadata(r);
        const n = filterMetadataListByAlgorithm(r, s);
        for (const t of n) {
          const r = t.algo;
          const s = t.hash;
          let n = g.createHash(r).update(e).digest("base64");
          if (n[n.length - 1] === "=") {
            if (n[n.length - 2] === "=") {
              n = n.slice(0, -2);
            } else {
              n = n.slice(0, -1);
            }
          }
          if (compareBase64Mixed(n, s)) {
            return true;
          }
        }
        return false;
      }
      const m = /(?<algo>sha256|sha384|sha512)-((?<hash>[A-Za-z0-9+/]+|[A-Za-z0-9_-]+)={0,2}(?:\s|$)( +[!-~]*)?)?/i;
      function parseMetadata(e) {
        const t = [];
        let r = true;
        for (const s of e.split(" ")) {
          r = false;
          const e = m.exec(s);
          if (e === null || e.groups === undefined || e.groups.algo === undefined) {
            continue;
          }
          const n = e.groups.algo.toLowerCase();
          if (u.includes(n)) {
            t.push(e.groups);
          }
        }
        if (r === true) {
          return "no metadata";
        }
        return t;
      }
      function getStrongestMetadata(e) {
        let t = e[0].algo;
        if (t[3] === "5") {
          return t;
        }
        for (let r = 1; r < e.length; ++r) {
          const s = e[r];
          if (s.algo[3] === "5") {
            t = "sha512";
            break;
          } else if (t[3] === "3") {
            continue;
          } else if (s.algo[3] === "3") {
            t = "sha384";
          }
        }
        return t;
      }
      function filterMetadataListByAlgorithm(e, t) {
        if (e.length === 1) {
          return e;
        }
        let r = 0;
        for (let s = 0; s < e.length; ++s) {
          if (e[s].algo === t) {
            e[r++] = e[s];
          }
        }
        e.length = r;
        return e;
      }
      function compareBase64Mixed(e, t) {
        if (e.length !== t.length) {
          return false;
        }
        for (let r = 0; r < e.length; ++r) {
          if (e[r] !== t[r]) {
            if ((e[r] === "+" && t[r] === "-") || (e[r] === "/" && t[r] === "_")) {
              continue;
            }
            return false;
          }
        }
        return true;
      }
      function tryUpgradeRequestToAPotentiallyTrustworthyURL(e) {}
      function sameOrigin(e, t) {
        if (e.origin === t.origin && e.origin === "null") {
          return true;
        }
        if (e.protocol === t.protocol && e.hostname === t.hostname && e.port === t.port) {
          return true;
        }
        return false;
      }
      function createDeferredPromise() {
        let e;
        let t;
        const r = new Promise((r, s) => {
          e = r;
          t = s;
        });
        return { promise: r, resolve: e, reject: t };
      }
      function isAborted(e) {
        return e.controller.state === "aborted";
      }
      function isCancelled(e) {
        return e.controller.state === "aborted" || e.controller.state === "terminated";
      }
      const h = {
        delete: "DELETE",
        DELETE: "DELETE",
        get: "GET",
        GET: "GET",
        head: "HEAD",
        HEAD: "HEAD",
        options: "OPTIONS",
        OPTIONS: "OPTIONS",
        post: "POST",
        POST: "POST",
        put: "PUT",
        PUT: "PUT",
      };
      Object.setPrototypeOf(h, null);
      function normalizeMethod(e) {
        return h[e.toLowerCase()] ?? e;
      }
      function serializeJavascriptValueToJSONString(e) {
        const t = JSON.stringify(e);
        if (t === undefined) {
          throw new TypeError("Value is not JSON serializable");
        }
        d(typeof t === "string");
        return t;
      }
      const E = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));
      function makeIterator(e, t, r) {
        const s = { index: 0, kind: r, target: e };
        const n = {
          next() {
            if (Object.getPrototypeOf(this) !== n) {
              throw new TypeError(`'next' called on an object that does not implement interface ${t} Iterator.`);
            }
            const { index: e, kind: r, target: o } = s;
            const i = o();
            const a = i.length;
            if (e >= a) {
              return { value: undefined, done: true };
            }
            const A = i[e];
            s.index = e + 1;
            return iteratorResult(A, r);
          },
          [Symbol.toStringTag]: `${t} Iterator`,
        };
        Object.setPrototypeOf(n, E);
        return Object.setPrototypeOf({}, n);
      }
      function iteratorResult(e, t) {
        let r;
        switch (t) {
          case "key": {
            r = e[0];
            break;
          }
          case "value": {
            r = e[1];
            break;
          }
          case "key+value": {
            r = e;
            break;
          }
        }
        return { value: r, done: false };
      }
      async function fullyReadBody(e, t, r) {
        const s = t;
        const n = r;
        let o;
        try {
          o = e.stream.getReader();
        } catch (e) {
          n(e);
          return;
        }
        try {
          const e = await readAllBytes(o);
          s(e);
        } catch (e) {
          n(e);
        }
      }
      let I = globalThis.ReadableStream;
      function isReadableStreamLike(e) {
        if (!I) {
          I = r(63774).ReadableStream;
        }
        return e instanceof I || (e[Symbol.toStringTag] === "ReadableStream" && typeof e.tee === "function");
      }
      const C = 65535;
      function isomorphicDecode(e) {
        if (e.length < C) {
          return String.fromCharCode(...e);
        }
        return e.reduce((e, t) => e + String.fromCharCode(t), "");
      }
      function readableStreamClose(e) {
        try {
          e.close();
        } catch (e) {
          if (!e.message.includes("Controller is already closed")) {
            throw e;
          }
        }
      }
      function isomorphicEncode(e) {
        for (let t = 0; t < e.length; t++) {
          d(e.charCodeAt(t) <= 255);
        }
        return e;
      }
      async function readAllBytes(e) {
        const t = [];
        let r = 0;
        while (true) {
          const { done: s, value: n } = await e.read();
          if (s) {
            return Buffer.concat(t, r);
          }
          if (!p(n)) {
            throw new TypeError("Received non-Uint8Array chunk");
          }
          t.push(n);
          r += n.length;
        }
      }
      function urlIsLocal(e) {
        d("protocol" in e);
        const t = e.protocol;
        return t === "about:" || t === "blob:" || t === "data:";
      }
      function urlHasHttpsScheme(e) {
        if (typeof e === "string") {
          return e.startsWith("https:");
        }
        return e.protocol === "https:";
      }
      function urlIsHttpHttpsScheme(e) {
        d("protocol" in e);
        const t = e.protocol;
        return t === "http:" || t === "https:";
      }
      const y = Object.hasOwn || ((e, t) => Object.prototype.hasOwnProperty.call(e, t));
      e.exports = {
        isAborted: isAborted,
        isCancelled: isCancelled,
        createDeferredPromise: createDeferredPromise,
        ReadableStreamFrom: c,
        toUSVString: l,
        tryUpgradeRequestToAPotentiallyTrustworthyURL: tryUpgradeRequestToAPotentiallyTrustworthyURL,
        coarsenedSharedCurrentTime: coarsenedSharedCurrentTime,
        determineRequestsReferrer: determineRequestsReferrer,
        makePolicyContainer: makePolicyContainer,
        clonePolicyContainer: clonePolicyContainer,
        appendFetchMetadata: appendFetchMetadata,
        appendRequestOriginHeader: appendRequestOriginHeader,
        TAOCheck: TAOCheck,
        corsCheck: corsCheck,
        crossOriginResourcePolicyCheck: crossOriginResourcePolicyCheck,
        createOpaqueTimingInfo: createOpaqueTimingInfo,
        setRequestReferrerPolicyOnRedirect: setRequestReferrerPolicyOnRedirect,
        isValidHTTPToken: isValidHTTPToken,
        requestBadPort: requestBadPort,
        requestCurrentURL: requestCurrentURL,
        responseURL: responseURL,
        responseLocationURL: responseLocationURL,
        isBlobLike: A,
        isURLPotentiallyTrustworthy: isURLPotentiallyTrustworthy,
        isValidReasonPhrase: isValidReasonPhrase,
        sameOrigin: sameOrigin,
        normalizeMethod: normalizeMethod,
        serializeJavascriptValueToJSONString: serializeJavascriptValueToJSONString,
        makeIterator: makeIterator,
        isValidHeaderName: isValidHeaderName,
        isValidHeaderValue: isValidHeaderValue,
        hasOwn: y,
        isErrorLike: isErrorLike,
        fullyReadBody: fullyReadBody,
        bytesMatch: bytesMatch,
        isReadableStreamLike: isReadableStreamLike,
        readableStreamClose: readableStreamClose,
        isomorphicEncode: isomorphicEncode,
        isomorphicDecode: isomorphicDecode,
        urlIsLocal: urlIsLocal,
        urlHasHttpsScheme: urlHasHttpsScheme,
        urlIsHttpHttpsScheme: urlIsHttpHttpsScheme,
        readAllBytes: readAllBytes,
        normalizeMethodRecord: h,
        parseMetadata: parseMetadata,
      };
    },
    74222: (e, t, r) => {
      "use strict";
      const { types: s } = r(39023);
      const { hasOwn: n, toUSVString: o } = r(15523);
      const i = {};
      i.converters = {};
      i.util = {};
      i.errors = {};
      i.errors.exception = function (e) {
        return new TypeError(`${e.header}: ${e.message}`);
      };
      i.errors.conversionFailed = function (e) {
        const t = e.types.length === 1 ? "" : " one of";
        const r = `${e.argument} could not be converted to` + `${t}: ${e.types.join(", ")}.`;
        return i.errors.exception({ header: e.prefix, message: r });
      };
      i.errors.invalidArgument = function (e) {
        return i.errors.exception({ header: e.prefix, message: `"${e.value}" is an invalid ${e.type}.` });
      };
      i.brandCheck = function (e, t, r = undefined) {
        if (r?.strict !== false && !(e instanceof t)) {
          throw new TypeError("Illegal invocation");
        } else {
          return e?.[Symbol.toStringTag] === t.prototype[Symbol.toStringTag];
        }
      };
      i.argumentLengthCheck = function ({ length: e }, t, r) {
        if (e < t) {
          throw i.errors.exception({ message: `${t} argument${t !== 1 ? "s" : ""} required, ` + `but${e ? " only" : ""} ${e} found.`, ...r });
        }
      };
      i.illegalConstructor = function () {
        throw i.errors.exception({ header: "TypeError", message: "Illegal constructor" });
      };
      i.util.Type = function (e) {
        switch (typeof e) {
          case "undefined":
            return "Undefined";
          case "boolean":
            return "Boolean";
          case "string":
            return "String";
          case "symbol":
            return "Symbol";
          case "number":
            return "Number";
          case "bigint":
            return "BigInt";
          case "function":
          case "object": {
            if (e === null) {
              return "Null";
            }
            return "Object";
          }
        }
      };
      i.util.ConvertToInt = function (e, t, r, s = {}) {
        let n;
        let o;
        if (t === 64) {
          n = Math.pow(2, 53) - 1;
          if (r === "unsigned") {
            o = 0;
          } else {
            o = Math.pow(-2, 53) + 1;
          }
        } else if (r === "unsigned") {
          o = 0;
          n = Math.pow(2, t) - 1;
        } else {
          o = Math.pow(-2, t) - 1;
          n = Math.pow(2, t - 1) - 1;
        }
        let a = Number(e);
        if (a === 0) {
          a = 0;
        }
        if (s.enforceRange === true) {
          if (Number.isNaN(a) || a === Number.POSITIVE_INFINITY || a === Number.NEGATIVE_INFINITY) {
            throw i.errors.exception({ header: "Integer conversion", message: `Could not convert ${e} to an integer.` });
          }
          a = i.util.IntegerPart(a);
          if (a < o || a > n) {
            throw i.errors.exception({ header: "Integer conversion", message: `Value must be between ${o}-${n}, got ${a}.` });
          }
          return a;
        }
        if (!Number.isNaN(a) && s.clamp === true) {
          a = Math.min(Math.max(a, o), n);
          if (Math.floor(a) % 2 === 0) {
            a = Math.floor(a);
          } else {
            a = Math.ceil(a);
          }
          return a;
        }
        if (Number.isNaN(a) || (a === 0 && Object.is(0, a)) || a === Number.POSITIVE_INFINITY || a === Number.NEGATIVE_INFINITY) {
          return 0;
        }
        a = i.util.IntegerPart(a);
        a = a % Math.pow(2, t);
        if (r === "signed" && a >= Math.pow(2, t) - 1) {
          return a - Math.pow(2, t);
        }
        return a;
      };
      i.util.IntegerPart = function (e) {
        const t = Math.floor(Math.abs(e));
        if (e < 0) {
          return -1 * t;
        }
        return t;
      };
      i.sequenceConverter = function (e) {
        return (t) => {
          if (i.util.Type(t) !== "Object") {
            throw i.errors.exception({ header: "Sequence", message: `Value of type ${i.util.Type(t)} is not an Object.` });
          }
          const r = t?.[Symbol.iterator]?.();
          const s = [];
          if (r === undefined || typeof r.next !== "function") {
            throw i.errors.exception({ header: "Sequence", message: "Object is not an iterator." });
          }
          while (true) {
            const { done: t, value: n } = r.next();
            if (t) {
              break;
            }
            s.push(e(n));
          }
          return s;
        };
      };
      i.recordConverter = function (e, t) {
        return (r) => {
          if (i.util.Type(r) !== "Object") {
            throw i.errors.exception({ header: "Record", message: `Value of type ${i.util.Type(r)} is not an Object.` });
          }
          const n = {};
          if (!s.isProxy(r)) {
            const s = Object.keys(r);
            for (const o of s) {
              const s = e(o);
              const i = t(r[o]);
              n[s] = i;
            }
            return n;
          }
          const o = Reflect.ownKeys(r);
          for (const s of o) {
            const o = Reflect.getOwnPropertyDescriptor(r, s);
            if (o?.enumerable) {
              const o = e(s);
              const i = t(r[s]);
              n[o] = i;
            }
          }
          return n;
        };
      };
      i.interfaceConverter = function (e) {
        return (t, r = {}) => {
          if (r.strict !== false && !(t instanceof e)) {
            throw i.errors.exception({ header: e.name, message: `Expected ${t} to be an instance of ${e.name}.` });
          }
          return t;
        };
      };
      i.dictionaryConverter = function (e) {
        return (t) => {
          const r = i.util.Type(t);
          const s = {};
          if (r === "Null" || r === "Undefined") {
            return s;
          } else if (r !== "Object") {
            throw i.errors.exception({ header: "Dictionary", message: `Expected ${t} to be one of: Null, Undefined, Object.` });
          }
          for (const r of e) {
            const { key: e, defaultValue: o, required: a, converter: A } = r;
            if (a === true) {
              if (!n(t, e)) {
                throw i.errors.exception({ header: "Dictionary", message: `Missing required key "${e}".` });
              }
            }
            let l = t[e];
            const c = n(r, "defaultValue");
            if (c && l !== null) {
              l = l ?? o;
            }
            if (a || c || l !== undefined) {
              l = A(l);
              if (r.allowedValues && !r.allowedValues.includes(l)) {
                throw i.errors.exception({ header: "Dictionary", message: `${l} is not an accepted type. Expected one of ${r.allowedValues.join(", ")}.` });
              }
              s[e] = l;
            }
          }
          return s;
        };
      };
      i.nullableConverter = function (e) {
        return (t) => {
          if (t === null) {
            return t;
          }
          return e(t);
        };
      };
      i.converters.DOMString = function (e, t = {}) {
        if (e === null && t.legacyNullToEmptyString) {
          return "";
        }
        if (typeof e === "symbol") {
          throw new TypeError("Could not convert argument of type symbol to string.");
        }
        return String(e);
      };
      i.converters.ByteString = function (e) {
        const t = i.converters.DOMString(e);
        for (let e = 0; e < t.length; e++) {
          if (t.charCodeAt(e) > 255) {
            throw new TypeError(
              "Cannot convert argument to a ByteString because the character at " + `index ${e} has a value of ${t.charCodeAt(e)} which is greater than 255.`
            );
          }
        }
        return t;
      };
      i.converters.USVString = o;
      i.converters.boolean = function (e) {
        const t = Boolean(e);
        return t;
      };
      i.converters.any = function (e) {
        return e;
      };
      i.converters["long long"] = function (e) {
        const t = i.util.ConvertToInt(e, 64, "signed");
        return t;
      };
      i.converters["unsigned long long"] = function (e) {
        const t = i.util.ConvertToInt(e, 64, "unsigned");
        return t;
      };
      i.converters["unsigned long"] = function (e) {
        const t = i.util.ConvertToInt(e, 32, "unsigned");
        return t;
      };
      i.converters["unsigned short"] = function (e, t) {
        const r = i.util.ConvertToInt(e, 16, "unsigned", t);
        return r;
      };
      i.converters.ArrayBuffer = function (e, t = {}) {
        if (i.util.Type(e) !== "Object" || !s.isAnyArrayBuffer(e)) {
          throw i.errors.conversionFailed({ prefix: `${e}`, argument: `${e}`, types: ["ArrayBuffer"] });
        }
        if (t.allowShared === false && s.isSharedArrayBuffer(e)) {
          throw i.errors.exception({ header: "ArrayBuffer", message: "SharedArrayBuffer is not allowed." });
        }
        return e;
      };
      i.converters.TypedArray = function (e, t, r = {}) {
        if (i.util.Type(e) !== "Object" || !s.isTypedArray(e) || e.constructor.name !== t.name) {
          throw i.errors.conversionFailed({ prefix: `${t.name}`, argument: `${e}`, types: [t.name] });
        }
        if (r.allowShared === false && s.isSharedArrayBuffer(e.buffer)) {
          throw i.errors.exception({ header: "ArrayBuffer", message: "SharedArrayBuffer is not allowed." });
        }
        return e;
      };
      i.converters.DataView = function (e, t = {}) {
        if (i.util.Type(e) !== "Object" || !s.isDataView(e)) {
          throw i.errors.exception({ header: "DataView", message: "Object is not a DataView." });
        }
        if (t.allowShared === false && s.isSharedArrayBuffer(e.buffer)) {
          throw i.errors.exception({ header: "ArrayBuffer", message: "SharedArrayBuffer is not allowed." });
        }
        return e;
      };
      i.converters.BufferSource = function (e, t = {}) {
        if (s.isAnyArrayBuffer(e)) {
          return i.converters.ArrayBuffer(e, t);
        }
        if (s.isTypedArray(e)) {
          return i.converters.TypedArray(e, e.constructor);
        }
        if (s.isDataView(e)) {
          return i.converters.DataView(e, t);
        }
        throw new TypeError(`Could not convert ${e} to a BufferSource.`);
      };
      i.converters["sequence<ByteString>"] = i.sequenceConverter(i.converters.ByteString);
      i.converters["sequence<sequence<ByteString>>"] = i.sequenceConverter(i.converters["sequence<ByteString>"]);
      i.converters["record<ByteString, ByteString>"] = i.recordConverter(i.converters.ByteString, i.converters.ByteString);
      e.exports = { webidl: i };
    },
    40396: (e) => {
      "use strict";
      function getEncoding(e) {
        if (!e) {
          return "failure";
        }
        switch (e.trim().toLowerCase()) {
          case "unicode-1-1-utf-8":
          case "unicode11utf8":
          case "unicode20utf8":
          case "utf-8":
          case "utf8":
          case "x-unicode20utf8":
            return "UTF-8";
          case "866":
          case "cp866":
          case "csibm866":
          case "ibm866":
            return "IBM866";
          case "csisolatin2":
          case "iso-8859-2":
          case "iso-ir-101":
          case "iso8859-2":
          case "iso88592":
          case "iso_8859-2":
          case "iso_8859-2:1987":
          case "l2":
          case "latin2":
            return "ISO-8859-2";
          case "csisolatin3":
          case "iso-8859-3":
          case "iso-ir-109":
          case "iso8859-3":
          case "iso88593":
          case "iso_8859-3":
          case "iso_8859-3:1988":
          case "l3":
          case "latin3":
            return "ISO-8859-3";
          case "csisolatin4":
          case "iso-8859-4":
          case "iso-ir-110":
          case "iso8859-4":
          case "iso88594":
          case "iso_8859-4":
          case "iso_8859-4:1988":
          case "l4":
          case "latin4":
            return "ISO-8859-4";
          case "csisolatincyrillic":
          case "cyrillic":
          case "iso-8859-5":
          case "iso-ir-144":
          case "iso8859-5":
          case "iso88595":
          case "iso_8859-5":
          case "iso_8859-5:1988":
            return "ISO-8859-5";
          case "arabic":
          case "asmo-708":
          case "csiso88596e":
          case "csiso88596i":
          case "csisolatinarabic":
          case "ecma-114":
          case "iso-8859-6":
          case "iso-8859-6-e":
          case "iso-8859-6-i":
          case "iso-ir-127":
          case "iso8859-6":
          case "iso88596":
          case "iso_8859-6":
          case "iso_8859-6:1987":
            return "ISO-8859-6";
          case "csisolatingreek":
          case "ecma-118":
          case "elot_928":
          case "greek":
          case "greek8":
          case "iso-8859-7":
          case "iso-ir-126":
          case "iso8859-7":
          case "iso88597":
          case "iso_8859-7":
          case "iso_8859-7:1987":
          case "sun_eu_greek":
            return "ISO-8859-7";
          case "csiso88598e":
          case "csisolatinhebrew":
          case "hebrew":
          case "iso-8859-8":
          case "iso-8859-8-e":
          case "iso-ir-138":
          case "iso8859-8":
          case "iso88598":
          case "iso_8859-8":
          case "iso_8859-8:1988":
          case "visual":
            return "ISO-8859-8";
          case "csiso88598i":
          case "iso-8859-8-i":
          case "logical":
            return "ISO-8859-8-I";
          case "csisolatin6":
          case "iso-8859-10":
          case "iso-ir-157":
          case "iso8859-10":
          case "iso885910":
          case "l6":
          case "latin6":
            return "ISO-8859-10";
          case "iso-8859-13":
          case "iso8859-13":
          case "iso885913":
            return "ISO-8859-13";
          case "iso-8859-14":
          case "iso8859-14":
          case "iso885914":
            return "ISO-8859-14";
          case "csisolatin9":
          case "iso-8859-15":
          case "iso8859-15":
          case "iso885915":
          case "iso_8859-15":
          case "l9":
            return "ISO-8859-15";
          case "iso-8859-16":
            return "ISO-8859-16";
          case "cskoi8r":
          case "koi":
          case "koi8":
          case "koi8-r":
          case "koi8_r":
            return "KOI8-R";
          case "koi8-ru":
          case "koi8-u":
            return "KOI8-U";
          case "csmacintosh":
          case "mac":
          case "macintosh":
          case "x-mac-roman":
            return "macintosh";
          case "iso-8859-11":
          case "iso8859-11":
          case "iso885911":
          case "tis-620":
          case "windows-874":
            return "windows-874";
          case "cp1250":
          case "windows-1250":
          case "x-cp1250":
            return "windows-1250";
          case "cp1251":
          case "windows-1251":
          case "x-cp1251":
            return "windows-1251";
          case "ansi_x3.4-1968":
          case "ascii":
          case "cp1252":
          case "cp819":
          case "csisolatin1":
          case "ibm819":
          case "iso-8859-1":
          case "iso-ir-100":
          case "iso8859-1":
          case "iso88591":
          case "iso_8859-1":
          case "iso_8859-1:1987":
          case "l1":
          case "latin1":
          case "us-ascii":
          case "windows-1252":
          case "x-cp1252":
            return "windows-1252";
          case "cp1253":
          case "windows-1253":
          case "x-cp1253":
            return "windows-1253";
          case "cp1254":
          case "csisolatin5":
          case "iso-8859-9":
          case "iso-ir-148":
          case "iso8859-9":
          case "iso88599":
          case "iso_8859-9":
          case "iso_8859-9:1989":
          case "l5":
          case "latin5":
          case "windows-1254":
          case "x-cp1254":
            return "windows-1254";
          case "cp1255":
          case "windows-1255":
          case "x-cp1255":
            return "windows-1255";
          case "cp1256":
          case "windows-1256":
          case "x-cp1256":
            return "windows-1256";
          case "cp1257":
          case "windows-1257":
          case "x-cp1257":
            return "windows-1257";
          case "cp1258":
          case "windows-1258":
          case "x-cp1258":
            return "windows-1258";
          case "x-mac-cyrillic":
          case "x-mac-ukrainian":
            return "x-mac-cyrillic";
          case "chinese":
          case "csgb2312":
          case "csiso58gb231280":
          case "gb2312":
          case "gb_2312":
          case "gb_2312-80":
          case "gbk":
          case "iso-ir-58":
          case "x-gbk":
            return "GBK";
          case "gb18030":
            return "gb18030";
          case "big5":
          case "big5-hkscs":
          case "cn-big5":
          case "csbig5":
          case "x-x-big5":
            return "Big5";
          case "cseucpkdfmtjapanese":
          case "euc-jp":
          case "x-euc-jp":
            return "EUC-JP";
          case "csiso2022jp":
          case "iso-2022-jp":
            return "ISO-2022-JP";
          case "csshiftjis":
          case "ms932":
          case "ms_kanji":
          case "shift-jis":
          case "shift_jis":
          case "sjis":
          case "windows-31j":
          case "x-sjis":
            return "Shift_JIS";
          case "cseuckr":
          case "csksc56011987":
          case "euc-kr":
          case "iso-ir-149":
          case "korean":
          case "ks_c_5601-1987":
          case "ks_c_5601-1989":
          case "ksc5601":
          case "ksc_5601":
          case "windows-949":
            return "EUC-KR";
          case "csiso2022kr":
          case "hz-gb-2312":
          case "iso-2022-cn":
          case "iso-2022-cn-ext":
          case "iso-2022-kr":
          case "replacement":
            return "replacement";
          case "unicodefffe":
          case "utf-16be":
            return "UTF-16BE";
          case "csunicode":
          case "iso-10646-ucs-2":
          case "ucs-2":
          case "unicode":
          case "unicodefeff":
          case "utf-16":
          case "utf-16le":
            return "UTF-16LE";
          case "x-user-defined":
            return "x-user-defined";
          default:
            return "failure";
        }
      }
      e.exports = { getEncoding: getEncoding };
    },
    82160: (e, t, r) => {
      "use strict";
      const { staticPropertyDescriptors: s, readOperation: n, fireAProgressEvent: o } = r(10165);
      const { kState: i, kError: a, kResult: A, kEvents: l, kAborted: c } = r(86812);
      const { webidl: d } = r(74222);
      const { kEnumerableProperty: p } = r(3440);
      class FileReader extends EventTarget {
        constructor() {
          super();
          this[i] = "empty";
          this[A] = null;
          this[a] = null;
          this[l] = { loadend: null, error: null, abort: null, load: null, progress: null, loadstart: null };
        }
        readAsArrayBuffer(e) {
          d.brandCheck(this, FileReader);
          d.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsArrayBuffer" });
          e = d.converters.Blob(e, { strict: false });
          n(this, e, "ArrayBuffer");
        }
        readAsBinaryString(e) {
          d.brandCheck(this, FileReader);
          d.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsBinaryString" });
          e = d.converters.Blob(e, { strict: false });
          n(this, e, "BinaryString");
        }
        readAsText(e, t = undefined) {
          d.brandCheck(this, FileReader);
          d.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsText" });
          e = d.converters.Blob(e, { strict: false });
          if (t !== undefined) {
            t = d.converters.DOMString(t);
          }
          n(this, e, "Text", t);
        }
        readAsDataURL(e) {
          d.brandCheck(this, FileReader);
          d.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsDataURL" });
          e = d.converters.Blob(e, { strict: false });
          n(this, e, "DataURL");
        }
        abort() {
          if (this[i] === "empty" || this[i] === "done") {
            this[A] = null;
            return;
          }
          if (this[i] === "loading") {
            this[i] = "done";
            this[A] = null;
          }
          this[c] = true;
          o("abort", this);
          if (this[i] !== "loading") {
            o("loadend", this);
          }
        }
        get readyState() {
          d.brandCheck(this, FileReader);
          switch (this[i]) {
            case "empty":
              return this.EMPTY;
            case "loading":
              return this.LOADING;
            case "done":
              return this.DONE;
          }
        }
        get result() {
          d.brandCheck(this, FileReader);
          return this[A];
        }
        get error() {
          d.brandCheck(this, FileReader);
          return this[a];
        }
        get onloadend() {
          d.brandCheck(this, FileReader);
          return this[l].loadend;
        }
        set onloadend(e) {
          d.brandCheck(this, FileReader);
          if (this[l].loadend) {
            this.removeEventListener("loadend", this[l].loadend);
          }
          if (typeof e === "function") {
            this[l].loadend = e;
            this.addEventListener("loadend", e);
          } else {
            this[l].loadend = null;
          }
        }
        get onerror() {
          d.brandCheck(this, FileReader);
          return this[l].error;
        }
        set onerror(e) {
          d.brandCheck(this, FileReader);
          if (this[l].error) {
            this.removeEventListener("error", this[l].error);
          }
          if (typeof e === "function") {
            this[l].error = e;
            this.addEventListener("error", e);
          } else {
            this[l].error = null;
          }
        }
        get onloadstart() {
          d.brandCheck(this, FileReader);
          return this[l].loadstart;
        }
        set onloadstart(e) {
          d.brandCheck(this, FileReader);
          if (this[l].loadstart) {
            this.removeEventListener("loadstart", this[l].loadstart);
          }
          if (typeof e === "function") {
            this[l].loadstart = e;
            this.addEventListener("loadstart", e);
          } else {
            this[l].loadstart = null;
          }
        }
        get onprogress() {
          d.brandCheck(this, FileReader);
          return this[l].progress;
        }
        set onprogress(e) {
          d.brandCheck(this, FileReader);
          if (this[l].progress) {
            this.removeEventListener("progress", this[l].progress);
          }
          if (typeof e === "function") {
            this[l].progress = e;
            this.addEventListener("progress", e);
          } else {
            this[l].progress = null;
          }
        }
        get onload() {
          d.brandCheck(this, FileReader);
          return this[l].load;
        }
        set onload(e) {
          d.brandCheck(this, FileReader);
          if (this[l].load) {
            this.removeEventListener("load", this[l].load);
          }
          if (typeof e === "function") {
            this[l].load = e;
            this.addEventListener("load", e);
          } else {
            this[l].load = null;
          }
        }
        get onabort() {
          d.brandCheck(this, FileReader);
          return this[l].abort;
        }
        set onabort(e) {
          d.brandCheck(this, FileReader);
          if (this[l].abort) {
            this.removeEventListener("abort", this[l].abort);
          }
          if (typeof e === "function") {
            this[l].abort = e;
            this.addEventListener("abort", e);
          } else {
            this[l].abort = null;
          }
        }
      }
      FileReader.EMPTY = FileReader.prototype.EMPTY = 0;
      FileReader.LOADING = FileReader.prototype.LOADING = 1;
      FileReader.DONE = FileReader.prototype.DONE = 2;
      Object.defineProperties(FileReader.prototype, {
        EMPTY: s,
        LOADING: s,
        DONE: s,
        readAsArrayBuffer: p,
        readAsBinaryString: p,
        readAsText: p,
        readAsDataURL: p,
        abort: p,
        readyState: p,
        result: p,
        error: p,
        onloadstart: p,
        onprogress: p,
        onload: p,
        onabort: p,
        onerror: p,
        onloadend: p,
        [Symbol.toStringTag]: { value: "FileReader", writable: false, enumerable: false, configurable: true },
      });
      Object.defineProperties(FileReader, { EMPTY: s, LOADING: s, DONE: s });
      e.exports = { FileReader: FileReader };
    },
    15976: (e, t, r) => {
      "use strict";
      const { webidl: s } = r(74222);
      const n = Symbol("ProgressEvent state");
      class ProgressEvent extends Event {
        constructor(e, t = {}) {
          e = s.converters.DOMString(e);
          t = s.converters.ProgressEventInit(t ?? {});
          super(e, t);
          this[n] = { lengthComputable: t.lengthComputable, loaded: t.loaded, total: t.total };
        }
        get lengthComputable() {
          s.brandCheck(this, ProgressEvent);
          return this[n].lengthComputable;
        }
        get loaded() {
          s.brandCheck(this, ProgressEvent);
          return this[n].loaded;
        }
        get total() {
          s.brandCheck(this, ProgressEvent);
          return this[n].total;
        }
      }
      s.converters.ProgressEventInit = s.dictionaryConverter([
        { key: "lengthComputable", converter: s.converters.boolean, defaultValue: false },
        { key: "loaded", converter: s.converters["unsigned long long"], defaultValue: 0 },
        { key: "total", converter: s.converters["unsigned long long"], defaultValue: 0 },
        { key: "bubbles", converter: s.converters.boolean, defaultValue: false },
        { key: "cancelable", converter: s.converters.boolean, defaultValue: false },
        { key: "composed", converter: s.converters.boolean, defaultValue: false },
      ]);
      e.exports = { ProgressEvent: ProgressEvent };
    },
    86812: (e) => {
      "use strict";
      e.exports = {
        kState: Symbol("FileReader state"),
        kResult: Symbol("FileReader result"),
        kError: Symbol("FileReader error"),
        kLastProgressEventFired: Symbol("FileReader last progress event fired timestamp"),
        kEvents: Symbol("FileReader events"),
        kAborted: Symbol("FileReader aborted"),
      };
    },
    10165: (e, t, r) => {
      "use strict";
      const { kState: s, kError: n, kResult: o, kAborted: i, kLastProgressEventFired: a } = r(86812);
      const { ProgressEvent: A } = r(15976);
      const { getEncoding: l } = r(40396);
      const { DOMException: c } = r(87326);
      const { serializeAMimeType: d, parseMIMEType: p } = r(94322);
      const { types: u } = r(39023);
      const { StringDecoder: g } = r(13193);
      const { btoa: m } = r(20181);
      const h = { enumerable: true, writable: false, configurable: false };
      function readOperation(e, t, r, A) {
        if (e[s] === "loading") {
          throw new c("Invalid state", "InvalidStateError");
        }
        e[s] = "loading";
        e[o] = null;
        e[n] = null;
        const l = t.stream();
        const d = l.getReader();
        const p = [];
        let g = d.read();
        let m = true;
        (async () => {
          while (!e[i]) {
            try {
              const { done: l, value: c } = await g;
              if (m && !e[i]) {
                queueMicrotask(() => {
                  fireAProgressEvent("loadstart", e);
                });
              }
              m = false;
              if (!l && u.isUint8Array(c)) {
                p.push(c);
                if ((e[a] === undefined || Date.now() - e[a] >= 50) && !e[i]) {
                  e[a] = Date.now();
                  queueMicrotask(() => {
                    fireAProgressEvent("progress", e);
                  });
                }
                g = d.read();
              } else if (l) {
                queueMicrotask(() => {
                  e[s] = "done";
                  try {
                    const s = packageData(p, r, t.type, A);
                    if (e[i]) {
                      return;
                    }
                    e[o] = s;
                    fireAProgressEvent("load", e);
                  } catch (t) {
                    e[n] = t;
                    fireAProgressEvent("error", e);
                  }
                  if (e[s] !== "loading") {
                    fireAProgressEvent("loadend", e);
                  }
                });
                break;
              }
            } catch (t) {
              if (e[i]) {
                return;
              }
              queueMicrotask(() => {
                e[s] = "done";
                e[n] = t;
                fireAProgressEvent("error", e);
                if (e[s] !== "loading") {
                  fireAProgressEvent("loadend", e);
                }
              });
              break;
            }
          }
        })();
      }
      function fireAProgressEvent(e, t) {
        const r = new A(e, { bubbles: false, cancelable: false });
        t.dispatchEvent(r);
      }
      function packageData(e, t, r, s) {
        switch (t) {
          case "DataURL": {
            let t = "data:";
            const s = p(r || "application/octet-stream");
            if (s !== "failure") {
              t += d(s);
            }
            t += ";base64,";
            const n = new g("latin1");
            for (const r of e) {
              t += m(n.write(r));
            }
            t += m(n.end());
            return t;
          }
          case "Text": {
            let t = "failure";
            if (s) {
              t = l(s);
            }
            if (t === "failure" && r) {
              const e = p(r);
              if (e !== "failure") {
                t = l(e.parameters.get("charset"));
              }
            }
            if (t === "failure") {
              t = "UTF-8";
            }
            return decode(e, t);
          }
          case "ArrayBuffer": {
            const t = combineByteSequences(e);
            return t.buffer;
          }
          case "BinaryString": {
            let t = "";
            const r = new g("latin1");
            for (const s of e) {
              t += r.write(s);
            }
            t += r.end();
            return t;
          }
        }
      }
      function decode(e, t) {
        const r = combineByteSequences(e);
        const s = BOMSniffing(r);
        let n = 0;
        if (s !== null) {
          t = s;
          n = s === "UTF-8" ? 3 : 2;
        }
        const o = r.slice(n);
        return new TextDecoder(t).decode(o);
      }
      function BOMSniffing(e) {
        const [t, r, s] = e;
        if (t === 239 && r === 187 && s === 191) {
          return "UTF-8";
        } else if (t === 254 && r === 255) {
          return "UTF-16BE";
        } else if (t === 255 && r === 254) {
          return "UTF-16LE";
        }
        return null;
      }
      function combineByteSequences(e) {
        const t = e.reduce((e, t) => e + t.byteLength, 0);
        let r = 0;
        return e.reduce((e, t) => {
          e.set(t, r);
          r += t.byteLength;
          return e;
        }, new Uint8Array(t));
      }
      e.exports = { staticPropertyDescriptors: h, readOperation: readOperation, fireAProgressEvent: fireAProgressEvent };
    },
    32581: (e, t, r) => {
      "use strict";
      const s = Symbol.for("undici.globalDispatcher.1");
      const { InvalidArgumentError: n } = r(68707);
      const o = r(59965);
      if (getGlobalDispatcher() === undefined) {
        setGlobalDispatcher(new o());
      }
      function setGlobalDispatcher(e) {
        if (!e || typeof e.dispatch !== "function") {
          throw new n("Argument agent must implement Agent");
        }
        Object.defineProperty(globalThis, s, { value: e, writable: true, enumerable: false, configurable: false });
      }
      function getGlobalDispatcher() {
        return globalThis[s];
      }
      e.exports = { setGlobalDispatcher: setGlobalDispatcher, getGlobalDispatcher: getGlobalDispatcher };
    },
    78840: (e) => {
      "use strict";
      e.exports = class DecoratorHandler {
        constructor(e) {
          this.handler = e;
        }
        onConnect(...e) {
          return this.handler.onConnect(...e);
        }
        onError(...e) {
          return this.handler.onError(...e);
        }
        onUpgrade(...e) {
          return this.handler.onUpgrade(...e);
        }
        onHeaders(...e) {
          return this.handler.onHeaders(...e);
        }
        onData(...e) {
          return this.handler.onData(...e);
        }
        onComplete(...e) {
          return this.handler.onComplete(...e);
        }
        onBodySent(...e) {
          return this.handler.onBodySent(...e);
        }
      };
    },
    48299: (e, t, r) => {
      "use strict";
      const s = r(3440);
      const { kBodyUsed: n } = r(36443);
      const o = r(42613);
      const { InvalidArgumentError: i } = r(68707);
      const a = r(24434);
      const A = [300, 301, 302, 303, 307, 308];
      const l = Symbol("body");
      class BodyAsyncIterable {
        constructor(e) {
          this[l] = e;
          this[n] = false;
        }
        async *[Symbol.asyncIterator]() {
          o(!this[n], "disturbed");
          this[n] = true;
          yield* this[l];
        }
      }
      class RedirectHandler {
        constructor(e, t, r, A) {
          if (t != null && (!Number.isInteger(t) || t < 0)) {
            throw new i("maxRedirections must be a positive number");
          }
          s.validateHandler(A, r.method, r.upgrade);
          this.dispatch = e;
          this.location = null;
          this.abort = null;
          this.opts = { ...r, maxRedirections: 0 };
          this.maxRedirections = t;
          this.handler = A;
          this.history = [];
          if (s.isStream(this.opts.body)) {
            if (s.bodyLength(this.opts.body) === 0) {
              this.opts.body.on("data", function () {
                o(false);
              });
            }
            if (typeof this.opts.body.readableDidRead !== "boolean") {
              this.opts.body[n] = false;
              a.prototype.on.call(this.opts.body, "data", function () {
                this[n] = true;
              });
            }
          } else if (this.opts.body && typeof this.opts.body.pipeTo === "function") {
            this.opts.body = new BodyAsyncIterable(this.opts.body);
          } else if (this.opts.body && typeof this.opts.body !== "string" && !ArrayBuffer.isView(this.opts.body) && s.isIterable(this.opts.body)) {
            this.opts.body = new BodyAsyncIterable(this.opts.body);
          }
        }
        onConnect(e) {
          this.abort = e;
          this.handler.onConnect(e, { history: this.history });
        }
        onUpgrade(e, t, r) {
          this.handler.onUpgrade(e, t, r);
        }
        onError(e) {
          this.handler.onError(e);
        }
        onHeaders(e, t, r, n) {
          this.location = this.history.length >= this.maxRedirections || s.isDisturbed(this.opts.body) ? null : parseLocation(e, t);
          if (this.opts.origin) {
            this.history.push(new URL(this.opts.path, this.opts.origin));
          }
          if (!this.location) {
            return this.handler.onHeaders(e, t, r, n);
          }
          const { origin: o, pathname: i, search: a } = s.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin)));
          const A = a ? `${i}${a}` : i;
          this.opts.headers = cleanRequestHeaders(this.opts.headers, e === 303, this.opts.origin !== o);
          this.opts.path = A;
          this.opts.origin = o;
          this.opts.maxRedirections = 0;
          this.opts.query = null;
          if (e === 303 && this.opts.method !== "HEAD") {
            this.opts.method = "GET";
            this.opts.body = null;
          }
        }
        onData(e) {
          if (this.location) {
          } else {
            return this.handler.onData(e);
          }
        }
        onComplete(e) {
          if (this.location) {
            this.location = null;
            this.abort = null;
            this.dispatch(this.opts, this);
          } else {
            this.handler.onComplete(e);
          }
        }
        onBodySent(e) {
          if (this.handler.onBodySent) {
            this.handler.onBodySent(e);
          }
        }
      }
      function parseLocation(e, t) {
        if (A.indexOf(e) === -1) {
          return null;
        }
        for (let e = 0; e < t.length; e += 2) {
          if (t[e].toString().toLowerCase() === "location") {
            return t[e + 1];
          }
        }
      }
      function shouldRemoveHeader(e, t, r) {
        if (e.length === 4) {
          return s.headerNameToString(e) === "host";
        }
        if (t && s.headerNameToString(e).startsWith("content-")) {
          return true;
        }
        if (r && (e.length === 13 || e.length === 6 || e.length === 19)) {
          const t = s.headerNameToString(e);
          return t === "authorization" || t === "cookie" || t === "proxy-authorization";
        }
        return false;
      }
      function cleanRequestHeaders(e, t, r) {
        const s = [];
        if (Array.isArray(e)) {
          for (let n = 0; n < e.length; n += 2) {
            if (!shouldRemoveHeader(e[n], t, r)) {
              s.push(e[n], e[n + 1]);
            }
          }
        } else if (e && typeof e === "object") {
          for (const n of Object.keys(e)) {
            if (!shouldRemoveHeader(n, t, r)) {
              s.push(n, e[n]);
            }
          }
        } else {
          o(e == null, "headers must be an object or an array");
        }
        return s;
      }
      e.exports = RedirectHandler;
    },
    53573: (e, t, r) => {
      const s = r(42613);
      const { kRetryHandlerDefaultRetry: n } = r(36443);
      const { RequestRetryError: o } = r(68707);
      const { isDisturbed: i, parseHeaders: a, parseRangeHeader: A } = r(3440);
      function calculateRetryAfterHeader(e) {
        const t = Date.now();
        const r = new Date(e).getTime() - t;
        return r;
      }
      class RetryHandler {
        constructor(e, t) {
          const { retryOptions: r, ...s } = e;
          const { retry: o, maxRetries: i, maxTimeout: a, minTimeout: A, timeoutFactor: l, methods: c, errorCodes: d, retryAfter: p, statusCodes: u } = r ?? {};
          this.dispatch = t.dispatch;
          this.handler = t.handler;
          this.opts = s;
          this.abort = null;
          this.aborted = false;
          this.retryOpts = {
            retry: o ?? RetryHandler[n],
            retryAfter: p ?? true,
            maxTimeout: a ?? 30 * 1e3,
            timeout: A ?? 500,
            timeoutFactor: l ?? 2,
            maxRetries: i ?? 5,
            methods: c ?? ["GET", "HEAD", "OPTIONS", "PUT", "DELETE", "TRACE"],
            statusCodes: u ?? [500, 502, 503, 504, 429],
            errorCodes: d ?? ["ECONNRESET", "ECONNREFUSED", "ENOTFOUND", "ENETDOWN", "ENETUNREACH", "EHOSTDOWN", "EHOSTUNREACH", "EPIPE"],
          };
          this.retryCount = 0;
          this.start = 0;
          this.end = null;
          this.etag = null;
          this.resume = null;
          this.handler.onConnect((e) => {
            this.aborted = true;
            if (this.abort) {
              this.abort(e);
            } else {
              this.reason = e;
            }
          });
        }
        onRequestSent() {
          if (this.handler.onRequestSent) {
            this.handler.onRequestSent();
          }
        }
        onUpgrade(e, t, r) {
          if (this.handler.onUpgrade) {
            this.handler.onUpgrade(e, t, r);
          }
        }
        onConnect(e) {
          if (this.aborted) {
            e(this.reason);
          } else {
            this.abort = e;
          }
        }
        onBodySent(e) {
          if (this.handler.onBodySent) return this.handler.onBodySent(e);
        }
        static [n](e, { state: t, opts: r }, s) {
          const { statusCode: n, code: o, headers: i } = e;
          const { method: a, retryOptions: A } = r;
          const { maxRetries: l, timeout: c, maxTimeout: d, timeoutFactor: p, statusCodes: u, errorCodes: g, methods: m } = A;
          let { counter: h, currentTimeout: E } = t;
          E = E != null && E > 0 ? E : c;
          if (o && o !== "UND_ERR_REQ_RETRY" && o !== "UND_ERR_SOCKET" && !g.includes(o)) {
            s(e);
            return;
          }
          if (Array.isArray(m) && !m.includes(a)) {
            s(e);
            return;
          }
          if (n != null && Array.isArray(u) && !u.includes(n)) {
            s(e);
            return;
          }
          if (h > l) {
            s(e);
            return;
          }
          let I = i != null && i["retry-after"];
          if (I) {
            I = Number(I);
            I = isNaN(I) ? calculateRetryAfterHeader(I) : I * 1e3;
          }
          const C = I > 0 ? Math.min(I, d) : Math.min(E * p ** h, d);
          t.currentTimeout = C;
          setTimeout(() => s(null), C);
        }
        onHeaders(e, t, r, n) {
          const i = a(t);
          this.retryCount += 1;
          if (e >= 300) {
            this.abort(new o("Request failed", e, { headers: i, count: this.retryCount }));
            return false;
          }
          if (this.resume != null) {
            this.resume = null;
            if (e !== 206) {
              return true;
            }
            const t = A(i["content-range"]);
            if (!t) {
              this.abort(new o("Content-Range mismatch", e, { headers: i, count: this.retryCount }));
              return false;
            }
            if (this.etag != null && this.etag !== i.etag) {
              this.abort(new o("ETag mismatch", e, { headers: i, count: this.retryCount }));
              return false;
            }
            const { start: n, size: a, end: l = a } = t;
            s(this.start === n, "content-range mismatch");
            s(this.end == null || this.end === l, "content-range mismatch");
            this.resume = r;
            return true;
          }
          if (this.end == null) {
            if (e === 206) {
              const o = A(i["content-range"]);
              if (o == null) {
                return this.handler.onHeaders(e, t, r, n);
              }
              const { start: a, size: l, end: c = l } = o;
              s(a != null && Number.isFinite(a) && this.start !== a, "content-range mismatch");
              s(Number.isFinite(a));
              s(c != null && Number.isFinite(c) && this.end !== c, "invalid content-length");
              this.start = a;
              this.end = c;
            }
            if (this.end == null) {
              const e = i["content-length"];
              this.end = e != null ? Number(e) : null;
            }
            s(Number.isFinite(this.start));
            s(this.end == null || Number.isFinite(this.end), "invalid content-length");
            this.resume = r;
            this.etag = i.etag != null ? i.etag : null;
            return this.handler.onHeaders(e, t, r, n);
          }
          const l = new o("Request failed", e, { headers: i, count: this.retryCount });
          this.abort(l);
          return false;
        }
        onData(e) {
          this.start += e.length;
          return this.handler.onData(e);
        }
        onComplete(e) {
          this.retryCount = 0;
          return this.handler.onComplete(e);
        }
        onError(e) {
          if (this.aborted || i(this.opts.body)) {
            return this.handler.onError(e);
          }
          this.retryOpts.retry(
            e,
            { state: { counter: this.retryCount++, currentTimeout: this.retryAfter }, opts: { retryOptions: this.retryOpts, ...this.opts } },
            onRetry.bind(this)
          );
          function onRetry(e) {
            if (e != null || this.aborted || i(this.opts.body)) {
              return this.handler.onError(e);
            }
            if (this.start !== 0) {
              this.opts = { ...this.opts, headers: { ...this.opts.headers, range: `bytes=${this.start}-${this.end ?? ""}` } };
            }
            try {
              this.dispatch(this.opts, this);
            } catch (e) {
              this.handler.onError(e);
            }
          }
        }
      }
      e.exports = RetryHandler;
    },
    64415: (e, t, r) => {
      "use strict";
      const s = r(48299);
      function createRedirectInterceptor({ maxRedirections: e }) {
        return (t) =>
          function Intercept(r, n) {
            const { maxRedirections: o = e } = r;
            if (!o) {
              return t(r, n);
            }
            const i = new s(t, o, r, n);
            r = { ...r, maxRedirections: 0 };
            return t(r, i);
          };
      }
      e.exports = createRedirectInterceptor;
    },
    52824: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.SPECIAL_HEADERS =
        t.HEADER_STATE =
        t.MINOR =
        t.MAJOR =
        t.CONNECTION_TOKEN_CHARS =
        t.HEADER_CHARS =
        t.TOKEN =
        t.STRICT_TOKEN =
        t.HEX =
        t.URL_CHAR =
        t.STRICT_URL_CHAR =
        t.USERINFO_CHARS =
        t.MARK =
        t.ALPHANUM =
        t.NUM =
        t.HEX_MAP =
        t.NUM_MAP =
        t.ALPHA =
        t.FINISH =
        t.H_METHOD_MAP =
        t.METHOD_MAP =
        t.METHODS_RTSP =
        t.METHODS_ICE =
        t.METHODS_HTTP =
        t.METHODS =
        t.LENIENT_FLAGS =
        t.FLAGS =
        t.TYPE =
        t.ERROR =
          void 0;
      const s = r(50172);
      var n;
      (function (e) {
        e[(e["OK"] = 0)] = "OK";
        e[(e["INTERNAL"] = 1)] = "INTERNAL";
        e[(e["STRICT"] = 2)] = "STRICT";
        e[(e["LF_EXPECTED"] = 3)] = "LF_EXPECTED";
        e[(e["UNEXPECTED_CONTENT_LENGTH"] = 4)] = "UNEXPECTED_CONTENT_LENGTH";
        e[(e["CLOSED_CONNECTION"] = 5)] = "CLOSED_CONNECTION";
        e[(e["INVALID_METHOD"] = 6)] = "INVALID_METHOD";
        e[(e["INVALID_URL"] = 7)] = "INVALID_URL";
        e[(e["INVALID_CONSTANT"] = 8)] = "INVALID_CONSTANT";
        e[(e["INVALID_VERSION"] = 9)] = "INVALID_VERSION";
        e[(e["INVALID_HEADER_TOKEN"] = 10)] = "INVALID_HEADER_TOKEN";
        e[(e["INVALID_CONTENT_LENGTH"] = 11)] = "INVALID_CONTENT_LENGTH";
        e[(e["INVALID_CHUNK_SIZE"] = 12)] = "INVALID_CHUNK_SIZE";
        e[(e["INVALID_STATUS"] = 13)] = "INVALID_STATUS";
        e[(e["INVALID_EOF_STATE"] = 14)] = "INVALID_EOF_STATE";
        e[(e["INVALID_TRANSFER_ENCODING"] = 15)] = "INVALID_TRANSFER_ENCODING";
        e[(e["CB_MESSAGE_BEGIN"] = 16)] = "CB_MESSAGE_BEGIN";
        e[(e["CB_HEADERS_COMPLETE"] = 17)] = "CB_HEADERS_COMPLETE";
        e[(e["CB_MESSAGE_COMPLETE"] = 18)] = "CB_MESSAGE_COMPLETE";
        e[(e["CB_CHUNK_HEADER"] = 19)] = "CB_CHUNK_HEADER";
        e[(e["CB_CHUNK_COMPLETE"] = 20)] = "CB_CHUNK_COMPLETE";
        e[(e["PAUSED"] = 21)] = "PAUSED";
        e[(e["PAUSED_UPGRADE"] = 22)] = "PAUSED_UPGRADE";
        e[(e["PAUSED_H2_UPGRADE"] = 23)] = "PAUSED_H2_UPGRADE";
        e[(e["USER"] = 24)] = "USER";
      })((n = t.ERROR || (t.ERROR = {})));
      var o;
      (function (e) {
        e[(e["BOTH"] = 0)] = "BOTH";
        e[(e["REQUEST"] = 1)] = "REQUEST";
        e[(e["RESPONSE"] = 2)] = "RESPONSE";
      })((o = t.TYPE || (t.TYPE = {})));
      var i;
      (function (e) {
        e[(e["CONNECTION_KEEP_ALIVE"] = 1)] = "CONNECTION_KEEP_ALIVE";
        e[(e["CONNECTION_CLOSE"] = 2)] = "CONNECTION_CLOSE";
        e[(e["CONNECTION_UPGRADE"] = 4)] = "CONNECTION_UPGRADE";
        e[(e["CHUNKED"] = 8)] = "CHUNKED";
        e[(e["UPGRADE"] = 16)] = "UPGRADE";
        e[(e["CONTENT_LENGTH"] = 32)] = "CONTENT_LENGTH";
        e[(e["SKIPBODY"] = 64)] = "SKIPBODY";
        e[(e["TRAILING"] = 128)] = "TRAILING";
        e[(e["TRANSFER_ENCODING"] = 512)] = "TRANSFER_ENCODING";
      })((i = t.FLAGS || (t.FLAGS = {})));
      var a;
      (function (e) {
        e[(e["HEADERS"] = 1)] = "HEADERS";
        e[(e["CHUNKED_LENGTH"] = 2)] = "CHUNKED_LENGTH";
        e[(e["KEEP_ALIVE"] = 4)] = "KEEP_ALIVE";
      })((a = t.LENIENT_FLAGS || (t.LENIENT_FLAGS = {})));
      var A;
      (function (e) {
        e[(e["DELETE"] = 0)] = "DELETE";
        e[(e["GET"] = 1)] = "GET";
        e[(e["HEAD"] = 2)] = "HEAD";
        e[(e["POST"] = 3)] = "POST";
        e[(e["PUT"] = 4)] = "PUT";
        e[(e["CONNECT"] = 5)] = "CONNECT";
        e[(e["OPTIONS"] = 6)] = "OPTIONS";
        e[(e["TRACE"] = 7)] = "TRACE";
        e[(e["COPY"] = 8)] = "COPY";
        e[(e["LOCK"] = 9)] = "LOCK";
        e[(e["MKCOL"] = 10)] = "MKCOL";
        e[(e["MOVE"] = 11)] = "MOVE";
        e[(e["PROPFIND"] = 12)] = "PROPFIND";
        e[(e["PROPPATCH"] = 13)] = "PROPPATCH";
        e[(e["SEARCH"] = 14)] = "SEARCH";
        e[(e["UNLOCK"] = 15)] = "UNLOCK";
        e[(e["BIND"] = 16)] = "BIND";
        e[(e["REBIND"] = 17)] = "REBIND";
        e[(e["UNBIND"] = 18)] = "UNBIND";
        e[(e["ACL"] = 19)] = "ACL";
        e[(e["REPORT"] = 20)] = "REPORT";
        e[(e["MKACTIVITY"] = 21)] = "MKACTIVITY";
        e[(e["CHECKOUT"] = 22)] = "CHECKOUT";
        e[(e["MERGE"] = 23)] = "MERGE";
        e[(e["M-SEARCH"] = 24)] = "M-SEARCH";
        e[(e["NOTIFY"] = 25)] = "NOTIFY";
        e[(e["SUBSCRIBE"] = 26)] = "SUBSCRIBE";
        e[(e["UNSUBSCRIBE"] = 27)] = "UNSUBSCRIBE";
        e[(e["PATCH"] = 28)] = "PATCH";
        e[(e["PURGE"] = 29)] = "PURGE";
        e[(e["MKCALENDAR"] = 30)] = "MKCALENDAR";
        e[(e["LINK"] = 31)] = "LINK";
        e[(e["UNLINK"] = 32)] = "UNLINK";
        e[(e["SOURCE"] = 33)] = "SOURCE";
        e[(e["PRI"] = 34)] = "PRI";
        e[(e["DESCRIBE"] = 35)] = "DESCRIBE";
        e[(e["ANNOUNCE"] = 36)] = "ANNOUNCE";
        e[(e["SETUP"] = 37)] = "SETUP";
        e[(e["PLAY"] = 38)] = "PLAY";
        e[(e["PAUSE"] = 39)] = "PAUSE";
        e[(e["TEARDOWN"] = 40)] = "TEARDOWN";
        e[(e["GET_PARAMETER"] = 41)] = "GET_PARAMETER";
        e[(e["SET_PARAMETER"] = 42)] = "SET_PARAMETER";
        e[(e["REDIRECT"] = 43)] = "REDIRECT";
        e[(e["RECORD"] = 44)] = "RECORD";
        e[(e["FLUSH"] = 45)] = "FLUSH";
      })((A = t.METHODS || (t.METHODS = {})));
      t.METHODS_HTTP = [
        A.DELETE,
        A.GET,
        A.HEAD,
        A.POST,
        A.PUT,
        A.CONNECT,
        A.OPTIONS,
        A.TRACE,
        A.COPY,
        A.LOCK,
        A.MKCOL,
        A.MOVE,
        A.PROPFIND,
        A.PROPPATCH,
        A.SEARCH,
        A.UNLOCK,
        A.BIND,
        A.REBIND,
        A.UNBIND,
        A.ACL,
        A.REPORT,
        A.MKACTIVITY,
        A.CHECKOUT,
        A.MERGE,
        A["M-SEARCH"],
        A.NOTIFY,
        A.SUBSCRIBE,
        A.UNSUBSCRIBE,
        A.PATCH,
        A.PURGE,
        A.MKCALENDAR,
        A.LINK,
        A.UNLINK,
        A.PRI,
        A.SOURCE,
      ];
      t.METHODS_ICE = [A.SOURCE];
      t.METHODS_RTSP = [
        A.OPTIONS,
        A.DESCRIBE,
        A.ANNOUNCE,
        A.SETUP,
        A.PLAY,
        A.PAUSE,
        A.TEARDOWN,
        A.GET_PARAMETER,
        A.SET_PARAMETER,
        A.REDIRECT,
        A.RECORD,
        A.FLUSH,
        A.GET,
        A.POST,
      ];
      t.METHOD_MAP = s.enumToMap(A);
      t.H_METHOD_MAP = {};
      Object.keys(t.METHOD_MAP).forEach((e) => {
        if (/^H/.test(e)) {
          t.H_METHOD_MAP[e] = t.METHOD_MAP[e];
        }
      });
      var l;
      (function (e) {
        e[(e["SAFE"] = 0)] = "SAFE";
        e[(e["SAFE_WITH_CB"] = 1)] = "SAFE_WITH_CB";
        e[(e["UNSAFE"] = 2)] = "UNSAFE";
      })((l = t.FINISH || (t.FINISH = {})));
      t.ALPHA = [];
      for (let e = "A".charCodeAt(0); e <= "Z".charCodeAt(0); e++) {
        t.ALPHA.push(String.fromCharCode(e));
        t.ALPHA.push(String.fromCharCode(e + 32));
      }
      t.NUM_MAP = { 0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9 };
      t.HEX_MAP = {
        0: 0,
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        6: 6,
        7: 7,
        8: 8,
        9: 9,
        A: 10,
        B: 11,
        C: 12,
        D: 13,
        E: 14,
        F: 15,
        a: 10,
        b: 11,
        c: 12,
        d: 13,
        e: 14,
        f: 15,
      };
      t.NUM = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"];
      t.ALPHANUM = t.ALPHA.concat(t.NUM);
      t.MARK = ["-", "_", ".", "!", "~", "*", "'", "(", ")"];
      t.USERINFO_CHARS = t.ALPHANUM.concat(t.MARK).concat(["%", ";", ":", "&", "=", "+", "$", ","]);
      t.STRICT_URL_CHAR = [
        "!",
        '"',
        "$",
        "%",
        "&",
        "'",
        "(",
        ")",
        "*",
        "+",
        ",",
        "-",
        ".",
        "/",
        ":",
        ";",
        "<",
        "=",
        ">",
        "@",
        "[",
        "\\",
        "]",
        "^",
        "_",
        "`",
        "{",
        "|",
        "}",
        "~",
      ].concat(t.ALPHANUM);
      t.URL_CHAR = t.STRICT_URL_CHAR.concat(["\t", "\f"]);
      for (let e = 128; e <= 255; e++) {
        t.URL_CHAR.push(e);
      }
      t.HEX = t.NUM.concat(["a", "b", "c", "d", "e", "f", "A", "B", "C", "D", "E", "F"]);
      t.STRICT_TOKEN = ["!", "#", "$", "%", "&", "'", "*", "+", "-", ".", "^", "_", "`", "|", "~"].concat(t.ALPHANUM);
      t.TOKEN = t.STRICT_TOKEN.concat([" "]);
      t.HEADER_CHARS = ["\t"];
      for (let e = 32; e <= 255; e++) {
        if (e !== 127) {
          t.HEADER_CHARS.push(e);
        }
      }
      t.CONNECTION_TOKEN_CHARS = t.HEADER_CHARS.filter((e) => e !== 44);
      t.MAJOR = t.NUM_MAP;
      t.MINOR = t.MAJOR;
      var c;
      (function (e) {
        e[(e["GENERAL"] = 0)] = "GENERAL";
        e[(e["CONNECTION"] = 1)] = "CONNECTION";
        e[(e["CONTENT_LENGTH"] = 2)] = "CONTENT_LENGTH";
        e[(e["TRANSFER_ENCODING"] = 3)] = "TRANSFER_ENCODING";
        e[(e["UPGRADE"] = 4)] = "UPGRADE";
        e[(e["CONNECTION_KEEP_ALIVE"] = 5)] = "CONNECTION_KEEP_ALIVE";
        e[(e["CONNECTION_CLOSE"] = 6)] = "CONNECTION_CLOSE";
        e[(e["CONNECTION_UPGRADE"] = 7)] = "CONNECTION_UPGRADE";
        e[(e["TRANSFER_ENCODING_CHUNKED"] = 8)] = "TRANSFER_ENCODING_CHUNKED";
      })((c = t.HEADER_STATE || (t.HEADER_STATE = {})));
      t.SPECIAL_HEADERS = {
        connection: c.CONNECTION,
        "content-length": c.CONTENT_LENGTH,
        "proxy-connection": c.CONNECTION,
        "transfer-encoding": c.TRANSFER_ENCODING,
        upgrade: c.UPGRADE,
      };
    },
    63870: (e) => {
      e.exports =
        "";
    },
    53434: (e) => {
      e.exports =
        "AGFzbQEAAAABMAhgAX8Bf2ADf39/AX9gBH9/f38Bf2AAAGADf39/AGABfwBgAn9/AGAGf39/f39/AALLAQgDZW52GHdhc21fb25faGVhZGVyc19jb21wbGV0ZQACA2VudhV3YXNtX29uX21lc3NhZ2VfYmVnaW4AAANlbnYLd2FzbV9vbl91cmwAAQNlbnYOd2FzbV9vbl9zdGF0dXMAAQNlbnYUd2FzbV9vbl9oZWFkZXJfZmllbGQAAQNlbnYUd2FzbV9vbl9oZWFkZXJfdmFsdWUAAQNlbnYMd2FzbV9vbl9ib2R5AAEDZW52GHdhc21fb25fbWVzc2FnZV9jb21wbGV0ZQAAA0ZFAwMEAAAFAAAAAAAABQEFAAUFBQAABgAAAAAGBgYGAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQABAAABAQcAAAUFAwABBAUBcAESEgUDAQACBggBfwFBgNQECwfRBSIGbWVtb3J5AgALX2luaXRpYWxpemUACRlfX2luZGlyZWN0X2Z1bmN0aW9uX3RhYmxlAQALbGxodHRwX2luaXQAChhsbGh0dHBfc2hvdWxkX2tlZXBfYWxpdmUAQQxsbGh0dHBfYWxsb2MADAZtYWxsb2MARgtsbGh0dHBfZnJlZQANBGZyZWUASA9sbGh0dHBfZ2V0X3R5cGUADhVsbGh0dHBfZ2V0X2h0dHBfbWFqb3IADxVsbGh0dHBfZ2V0X2h0dHBfbWlub3IAEBFsbGh0dHBfZ2V0X21ldGhvZAARFmxsaHR0cF9nZXRfc3RhdHVzX2NvZGUAEhJsbGh0dHBfZ2V0X3VwZ3JhZGUAEwxsbGh0dHBfcmVzZXQAFA5sbGh0dHBfZXhlY3V0ZQAVFGxsaHR0cF9zZXR0aW5nc19pbml0ABYNbGxodHRwX2ZpbmlzaAAXDGxsaHR0cF9wYXVzZQAYDWxsaHR0cF9yZXN1bWUAGRtsbGh0dHBfcmVzdW1lX2FmdGVyX3VwZ3JhZGUAGhBsbGh0dHBfZ2V0X2Vycm5vABsXbGxodHRwX2dldF9lcnJvcl9yZWFzb24AHBdsbGh0dHBfc2V0X2Vycm9yX3JlYXNvbgAdFGxsaHR0cF9nZXRfZXJyb3JfcG9zAB4RbGxodHRwX2Vycm5vX25hbWUAHxJsbGh0dHBfbWV0aG9kX25hbWUAIBJsbGh0dHBfc3RhdHVzX25hbWUAIRpsbGh0dHBfc2V0X2xlbmllbnRfaGVhZGVycwAiIWxsaHR0cF9zZXRfbGVuaWVudF9jaHVua2VkX2xlbmd0aAAjHWxsaHR0cF9zZXRfbGVuaWVudF9rZWVwX2FsaXZlACQkbGxodHRwX3NldF9sZW5pZW50X3RyYW5zZmVyX2VuY29kaW5nACUYbGxodHRwX21lc3NhZ2VfbmVlZHNfZW9mAD8JFwEAQQELEQECAwQFCwYHNTk3MS8tJyspCrLgAkUCAAsIABCIgICAAAsZACAAEMKAgIAAGiAAIAI2AjggACABOgAoCxwAIAAgAC8BMiAALQAuIAAQwYCAgAAQgICAgAALKgEBf0HAABDGgICAACIBEMKAgIAAGiABQYCIgIAANgI4IAEgADoAKCABCwoAIAAQyICAgAALBwAgAC0AKAsHACAALQAqCwcAIAAtACsLBwAgAC0AKQsHACAALwEyCwcAIAAtAC4LRQEEfyAAKAIYIQEgAC0ALSECIAAtACghAyAAKAI4IQQgABDCgICAABogACAENgI4IAAgAzoAKCAAIAI6AC0gACABNgIYCxEAIAAgASABIAJqEMOAgIAACxAAIABBAEHcABDMgICAABoLZwEBf0EAIQECQCAAKAIMDQACQAJAAkACQCAALQAvDgMBAAMCCyAAKAI4IgFFDQAgASgCLCIBRQ0AIAAgARGAgICAAAAiAQ0DC0EADwsQyoCAgAAACyAAQcOWgIAANgIQQQ4hAQsgAQseAAJAIAAoAgwNACAAQdGbgIAANgIQIABBFTYCDAsLFgACQCAAKAIMQRVHDQAgAEEANgIMCwsWAAJAIAAoAgxBFkcNACAAQQA2AgwLCwcAIAAoAgwLBwAgACgCEAsJACAAIAE2AhALBwAgACgCFAsiAAJAIABBJEkNABDKgICAAAALIABBAnRBoLOAgABqKAIACyIAAkAgAEEuSQ0AEMqAgIAAAAsgAEECdEGwtICAAGooAgAL7gsBAX9B66iAgAAhAQJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIABBnH9qDvQDY2IAAWFhYWFhYQIDBAVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhBgcICQoLDA0OD2FhYWFhEGFhYWFhYWFhYWFhEWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYRITFBUWFxgZGhthYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhHB0eHyAhIiMkJSYnKCkqKywtLi8wMTIzNDU2YTc4OTphYWFhYWFhYTthYWE8YWFhYT0+P2FhYWFhYWFhQGFhQWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYUJDREVGR0hJSktMTU5PUFFSU2FhYWFhYWFhVFVWV1hZWlthXF1hYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFeYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhX2BhC0Hhp4CAAA8LQaShgIAADwtBy6yAgAAPC0H+sYCAAA8LQcCkgIAADwtBq6SAgAAPC0GNqICAAA8LQeKmgIAADwtBgLCAgAAPC0G5r4CAAA8LQdekgIAADwtB75+AgAAPC0Hhn4CAAA8LQfqfgIAADwtB8qCAgAAPC0Gor4CAAA8LQa6ygIAADwtBiLCAgAAPC0Hsp4CAAA8LQYKigIAADwtBjp2AgAAPC0HQroCAAA8LQcqjgIAADwtBxbKAgAAPC0HfnICAAA8LQdKcgIAADwtBxKCAgAAPC0HXoICAAA8LQaKfgIAADwtB7a6AgAAPC0GrsICAAA8LQdSlgIAADwtBzK6AgAAPC0H6roCAAA8LQfyrgIAADwtB0rCAgAAPC0HxnYCAAA8LQbuggIAADwtB96uAgAAPC0GQsYCAAA8LQdexgIAADwtBoq2AgAAPC0HUp4CAAA8LQeCrgIAADwtBn6yAgAAPC0HrsYCAAA8LQdWfgIAADwtByrGAgAAPC0HepYCAAA8LQdSegIAADwtB9JyAgAAPC0GnsoCAAA8LQbGdgIAADwtBoJ2AgAAPC0G5sYCAAA8LQbywgIAADwtBkqGAgAAPC0GzpoCAAA8LQemsgIAADwtBrJ6AgAAPC0HUq4CAAA8LQfemgIAADwtBgKaAgAAPC0GwoYCAAA8LQf6egIAADwtBjaOAgAAPC0GJrYCAAA8LQfeigIAADwtBoLGAgAAPC0Gun4CAAA8LQcalgIAADwtB6J6AgAAPC0GTooCAAA8LQcKvgIAADwtBw52AgAAPC0GLrICAAA8LQeGdgIAADwtBja+AgAAPC0HqoYCAAA8LQbStgIAADwtB0q+AgAAPC0HfsoCAAA8LQdKygIAADwtB8LCAgAAPC0GpooCAAA8LQfmjgIAADwtBmZ6AgAAPC0G1rICAAA8LQZuwgIAADwtBkrKAgAAPC0G2q4CAAA8LQcKigIAADwtB+LKAgAAPC0GepYCAAA8LQdCigIAADwtBup6AgAAPC0GBnoCAAA8LEMqAgIAAAAtB1qGAgAAhAQsgAQsWACAAIAAtAC1B/gFxIAFBAEdyOgAtCxkAIAAgAC0ALUH9AXEgAUEAR0EBdHI6AC0LGQAgACAALQAtQfsBcSABQQBHQQJ0cjoALQsZACAAIAAtAC1B9wFxIAFBAEdBA3RyOgAtCy4BAn9BACEDAkAgACgCOCIERQ0AIAQoAgAiBEUNACAAIAQRgICAgAAAIQMLIAMLSQECf0EAIQMCQCAAKAI4IgRFDQAgBCgCBCIERQ0AIAAgASACIAFrIAQRgYCAgAAAIgNBf0cNACAAQcaRgIAANgIQQRghAwsgAwsuAQJ/QQAhAwJAIAAoAjgiBEUNACAEKAIwIgRFDQAgACAEEYCAgIAAACEDCyADC0kBAn9BACEDAkAgACgCOCIERQ0AIAQoAggiBEUNACAAIAEgAiABayAEEYGAgIAAACIDQX9HDQAgAEH2ioCAADYCEEEYIQMLIAMLLgECf0EAIQMCQCAAKAI4IgRFDQAgBCgCNCIERQ0AIAAgBBGAgICAAAAhAwsgAwtJAQJ/QQAhAwJAIAAoAjgiBEUNACAEKAIMIgRFDQAgACABIAIgAWsgBBGBgICAAAAiA0F/Rw0AIABB7ZqAgAA2AhBBGCEDCyADCy4BAn9BACEDAkAgACgCOCIERQ0AIAQoAjgiBEUNACAAIAQRgICAgAAAIQMLIAMLSQECf0EAIQMCQCAAKAI4IgRFDQAgBCgCECIERQ0AIAAgASACIAFrIAQRgYCAgAAAIgNBf0cNACAAQZWQgIAANgIQQRghAwsgAwsuAQJ/QQAhAwJAIAAoAjgiBEUNACAEKAI8IgRFDQAgACAEEYCAgIAAACEDCyADC0kBAn9BACEDAkAgACgCOCIERQ0AIAQoAhQiBEUNACAAIAEgAiABayAEEYGAgIAAACIDQX9HDQAgAEGqm4CAADYCEEEYIQMLIAMLLgECf0EAIQMCQCAAKAI4IgRFDQAgBCgCQCIERQ0AIAAgBBGAgICAAAAhAwsgAwtJAQJ/QQAhAwJAIAAoAjgiBEUNACAEKAIYIgRFDQAgACABIAIgAWsgBBGBgICAAAAiA0F/Rw0AIABB7ZOAgAA2AhBBGCEDCyADCy4BAn9BACEDAkAgACgCOCIERQ0AIAQoAkQiBEUNACAAIAQRgICAgAAAIQMLIAMLLgECf0EAIQMCQCAAKAI4IgRFDQAgBCgCJCIERQ0AIAAgBBGAgICAAAAhAwsgAwsuAQJ/QQAhAwJAIAAoAjgiBEUNACAEKAIsIgRFDQAgACAEEYCAgIAAACEDCyADC0kBAn9BACEDAkAgACgCOCIERQ0AIAQoAigiBEUNACAAIAEgAiABayAEEYGAgIAAACIDQX9HDQAgAEH2iICAADYCEEEYIQMLIAMLLgECf0EAIQMCQCAAKAI4IgRFDQAgBCgCUCIERQ0AIAAgBBGAgICAAAAhAwsgAwtJAQJ/QQAhAwJAIAAoAjgiBEUNACAEKAIcIgRFDQAgACABIAIgAWsgBBGBgICAAAAiA0F/Rw0AIABBwpmAgAA2AhBBGCEDCyADCy4BAn9BACEDAkAgACgCOCIERQ0AIAQoAkgiBEUNACAAIAQRgICAgAAAIQMLIAMLSQECf0EAIQMCQCAAKAI4IgRFDQAgBCgCICIERQ0AIAAgASACIAFrIAQRgYCAgAAAIgNBf0cNACAAQZSUgIAANgIQQRghAwsgAwsuAQJ/QQAhAwJAIAAoAjgiBEUNACAEKAJMIgRFDQAgACAEEYCAgIAAACEDCyADCy4BAn9BACEDAkAgACgCOCIERQ0AIAQoAlQiBEUNACAAIAQRgICAgAAAIQMLIAMLLgECf0EAIQMCQCAAKAI4IgRFDQAgBCgCWCIERQ0AIAAgBBGAgICAAAAhAwsgAwtFAQF/AkACQCAALwEwQRRxQRRHDQBBASEDIAAtAChBAUYNASAALwEyQeUARiEDDAELIAAtAClBBUYhAwsgACADOgAuQQAL/gEBA39BASEDAkAgAC8BMCIEQQhxDQAgACkDIEIAUiEDCwJAAkAgAC0ALkUNAEEBIQUgAC0AKUEFRg0BQQEhBSAEQcAAcUUgA3FBAUcNAQtBACEFIARBwABxDQBBAiEFIARB//8DcSIDQQhxDQACQCADQYAEcUUNAAJAIAAtAChBAUcNACAALQAtQQpxDQBBBQ8LQQQPCwJAIANBIHENAAJAIAAtAChBAUYNACAALwEyQf//A3EiAEGcf2pB5ABJDQAgAEHMAUYNACAAQbACRg0AQQQhBSAEQShxRQ0CIANBiARxQYAERg0CC0EADwtBAEEDIAApAyBQGyEFCyAFC2IBAn9BACEBAkAgAC0AKEEBRg0AIAAvATJB//8DcSICQZx/akHkAEkNACACQcwBRg0AIAJBsAJGDQAgAC8BMCIAQcAAcQ0AQQEhASAAQYgEcUGABEYNACAAQShxRSEBCyABC6cBAQN/AkACQAJAIAAtACpFDQAgAC0AK0UNAEEAIQMgAC8BMCIEQQJxRQ0BDAILQQAhAyAALwEwIgRBAXFFDQELQQEhAyAALQAoQQFGDQAgAC8BMkH//wNxIgVBnH9qQeQASQ0AIAVBzAFGDQAgBUGwAkYNACAEQcAAcQ0AQQAhAyAEQYgEcUGABEYNACAEQShxQQBHIQMLIABBADsBMCAAQQA6AC8gAwuZAQECfwJAAkACQCAALQAqRQ0AIAAtACtFDQBBACEBIAAvATAiAkECcUUNAQwCC0EAIQEgAC8BMCICQQFxRQ0BC0EBIQEgAC0AKEEBRg0AIAAvATJB//8DcSIAQZx/akHkAEkNACAAQcwBRg0AIABBsAJGDQAgAkHAAHENAEEAIQEgAkGIBHFBgARGDQAgAkEocUEARyEBCyABC0kBAXsgAEEQav0MAAAAAAAAAAAAAAAAAAAAACIB/QsDACAAIAH9CwMAIABBMGogAf0LAwAgAEEgaiAB/QsDACAAQd0BNgIcQQALewEBfwJAIAAoAgwiAw0AAkAgACgCBEUNACAAIAE2AgQLAkAgACABIAIQxICAgAAiAw0AIAAoAgwPCyAAIAM2AhxBACEDIAAoAgQiAUUNACAAIAEgAiAAKAIIEYGAgIAAACIBRQ0AIAAgAjYCFCAAIAE2AgwgASEDCyADC+TzAQMOfwN+BH8jgICAgABBEGsiAySAgICAACABIQQgASEFIAEhBiABIQcgASEIIAEhCSABIQogASELIAEhDCABIQ0gASEOIAEhDwJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCAAKAIcIhBBf2oO3QHaAQHZAQIDBAUGBwgJCgsMDQ7YAQ8Q1wEREtYBExQVFhcYGRob4AHfARwdHtUBHyAhIiMkJdQBJicoKSorLNMB0gEtLtEB0AEvMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUbbAUdISUrPAc4BS80BTMwBTU5PUFFSU1RVVldYWVpbXF1eX2BhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ent8fX5/gAGBAYIBgwGEAYUBhgGHAYgBiQGKAYsBjAGNAY4BjwGQAZEBkgGTAZQBlQGWAZcBmAGZAZoBmwGcAZ0BngGfAaABoQGiAaMBpAGlAaYBpwGoAakBqgGrAawBrQGuAa8BsAGxAbIBswG0AbUBtgG3AcsBygG4AckBuQHIAboBuwG8Ab0BvgG/AcABwQHCAcMBxAHFAcYBANwBC0EAIRAMxgELQQ4hEAzFAQtBDSEQDMQBC0EPIRAMwwELQRAhEAzCAQtBEyEQDMEBC0EUIRAMwAELQRUhEAy/AQtBFiEQDL4BC0EXIRAMvQELQRghEAy8AQtBGSEQDLsBC0EaIRAMugELQRshEAy5AQtBHCEQDLgBC0EIIRAMtwELQR0hEAy2AQtBICEQDLUBC0EfIRAMtAELQQchEAyzAQtBISEQDLIBC0EiIRAMsQELQR4hEAywAQtBIyEQDK8BC0ESIRAMrgELQREhEAytAQtBJCEQDKwBC0ElIRAMqwELQSYhEAyqAQtBJyEQDKkBC0HDASEQDKgBC0EpIRAMpwELQSshEAymAQtBLCEQDKUBC0EtIRAMpAELQS4hEAyjAQtBLyEQDKIBC0HEASEQDKEBC0EwIRAMoAELQTQhEAyfAQtBDCEQDJ4BC0ExIRAMnQELQTIhEAycAQtBMyEQDJsBC0E5IRAMmgELQTUhEAyZAQtBxQEhEAyYAQtBCyEQDJcBC0E6IRAMlgELQTYhEAyVAQtBCiEQDJQBC0E3IRAMkwELQTghEAySAQtBPCEQDJEBC0E7IRAMkAELQT0hEAyPAQtBCSEQDI4BC0EoIRAMjQELQT4hEAyMAQtBPyEQDIsBC0HAACEQDIoBC0HBACEQDIkBC0HCACEQDIgBC0HDACEQDIcBC0HEACEQDIYBC0HFACEQDIUBC0HGACEQDIQBC0EqIRAMgwELQccAIRAMggELQcgAIRAMgQELQckAIRAMgAELQcoAIRAMfwtBywAhEAx+C0HNACEQDH0LQcwAIRAMfAtBzgAhEAx7C0HPACEQDHoLQdAAIRAMeQtB0QAhEAx4C0HSACEQDHcLQdMAIRAMdgtB1AAhEAx1C0HWACEQDHQLQdUAIRAMcwtBBiEQDHILQdcAIRAMcQtBBSEQDHALQdgAIRAMbwtBBCEQDG4LQdkAIRAMbQtB2gAhEAxsC0HbACEQDGsLQdwAIRAMagtBAyEQDGkLQd0AIRAMaAtB3gAhEAxnC0HfACEQDGYLQeEAIRAMZQtB4AAhEAxkC0HiACEQDGMLQeMAIRAMYgtBAiEQDGELQeQAIRAMYAtB5QAhEAxfC0HmACEQDF4LQecAIRAMXQtB6AAhEAxcC0HpACEQDFsLQeoAIRAMWgtB6wAhEAxZC0HsACEQDFgLQe0AIRAMVwtB7gAhEAxWC0HvACEQDFULQfAAIRAMVAtB8QAhEAxTC0HyACEQDFILQfMAIRAMUQtB9AAhEAxQC0H1ACEQDE8LQfYAIRAMTgtB9wAhEAxNC0H4ACEQDEwLQfkAIRAMSwtB+gAhEAxKC0H7ACEQDEkLQfwAIRAMSAtB/QAhEAxHC0H+ACEQDEYLQf8AIRAMRQtBgAEhEAxEC0GBASEQDEMLQYIBIRAMQgtBgwEhEAxBC0GEASEQDEALQYUBIRAMPwtBhgEhEAw+C0GHASEQDD0LQYgBIRAMPAtBiQEhEAw7C0GKASEQDDoLQYsBIRAMOQtBjAEhEAw4C0GNASEQDDcLQY4BIRAMNgtBjwEhEAw1C0GQASEQDDQLQZEBIRAMMwtBkgEhEAwyC0GTASEQDDELQZQBIRAMMAtBlQEhEAwvC0GWASEQDC4LQZcBIRAMLQtBmAEhEAwsC0GZASEQDCsLQZoBIRAMKgtBmwEhEAwpC0GcASEQDCgLQZ0BIRAMJwtBngEhEAwmC0GfASEQDCULQaABIRAMJAtBoQEhEAwjC0GiASEQDCILQaMBIRAMIQtBpAEhEAwgC0GlASEQDB8LQaYBIRAMHgtBpwEhEAwdC0GoASEQDBwLQakBIRAMGwtBqgEhEAwaC0GrASEQDBkLQawBIRAMGAtBrQEhEAwXC0GuASEQDBYLQQEhEAwVC0GvASEQDBQLQbABIRAMEwtBsQEhEAwSC0GzASEQDBELQbIBIRAMEAtBtAEhEAwPC0G1ASEQDA4LQbYBIRAMDQtBtwEhEAwMC0G4ASEQDAsLQbkBIRAMCgtBugEhEAwJC0G7ASEQDAgLQcYBIRAMBwtBvAEhEAwGC0G9ASEQDAULQb4BIRAMBAtBvwEhEAwDC0HAASEQDAILQcIBIRAMAQtBwQEhEAsDQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIBAOxwEAAQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRobHB4fICEjJSg/QEFERUZHSElKS0xNT1BRUlPeA1dZW1xdYGJlZmdoaWprbG1vcHFyc3R1dnd4eXp7fH1+gAGCAYUBhgGHAYkBiwGMAY0BjgGPAZABkQGUAZUBlgGXAZgBmQGaAZsBnAGdAZ4BnwGgAaEBogGjAaQBpQGmAacBqAGpAaoBqwGsAa0BrgGvAbABsQGyAbMBtAG1AbYBtwG4AbkBugG7AbwBvQG+Ab8BwAHBAcIBwwHEAcUBxgHHAcgByQHKAcsBzAHNAc4BzwHQAdEB0gHTAdQB1QHWAdcB2AHZAdoB2wHcAd0B3gHgAeEB4gHjAeQB5QHmAecB6AHpAeoB6wHsAe0B7gHvAfAB8QHyAfMBmQKkArAC/gL+AgsgASIEIAJHDfMBQd0BIRAM/wMLIAEiECACRw3dAUHDASEQDP4DCyABIgEgAkcNkAFB9wAhEAz9AwsgASIBIAJHDYYBQe8AIRAM/AMLIAEiASACRw1/QeoAIRAM+wMLIAEiASACRw17QegAIRAM+gMLIAEiASACRw14QeYAIRAM+QMLIAEiASACRw0aQRghEAz4AwsgASIBIAJHDRRBEiEQDPcDCyABIgEgAkcNWUHFACEQDPYDCyABIgEgAkcNSkE/IRAM9QMLIAEiASACRw1IQTwhEAz0AwsgASIBIAJHDUFBMSEQDPMDCyAALQAuQQFGDesDDIcCCyAAIAEiASACEMCAgIAAQQFHDeYBIABCADcDIAznAQsgACABIgEgAhC0gICAACIQDecBIAEhAQz1AgsCQCABIgEgAkcNAEEGIRAM8AMLIAAgAUEBaiIBIAIQu4CAgAAiEA3oASABIQEMMQsgAEIANwMgQRIhEAzVAwsgASIQIAJHDStBHSEQDO0DCwJAIAEiASACRg0AIAFBAWohAUEQIRAM1AMLQQchEAzsAwsgAEIAIAApAyAiESACIAEiEGutIhJ9IhMgEyARVhs3AyAgESASViIURQ3lAUEIIRAM6wMLAkAgASIBIAJGDQAgAEGJgICAADYCCCAAIAE2AgQgASEBQRQhEAzSAwtBCSEQDOoDCyABIQEgACkDIFAN5AEgASEBDPICCwJAIAEiASACRw0AQQshEAzpAwsgACABQQFqIgEgAhC2gICAACIQDeUBIAEhAQzyAgsgACABIgEgAhC4gICAACIQDeUBIAEhAQzyAgsgACABIgEgAhC4gICAACIQDeYBIAEhAQwNCyAAIAEiASACELqAgIAAIhAN5wEgASEBDPACCwJAIAEiASACRw0AQQ8hEAzlAwsgAS0AACIQQTtGDQggEEENRw3oASABQQFqIQEM7wILIAAgASIBIAIQuoCAgAAiEA3oASABIQEM8gILA0ACQCABLQAAQfC1gIAAai0AACIQQQFGDQAgEEECRw3rASAAKAIEIRAgAEEANgIEIAAgECABQQFqIgEQuYCAgAAiEA3qASABIQEM9AILIAFBAWoiASACRw0AC0ESIRAM4gMLIAAgASIBIAIQuoCAgAAiEA3pASABIQEMCgsgASIBIAJHDQZBGyEQDOADCwJAIAEiASACRw0AQRYhEAzgAwsgAEGKgICAADYCCCAAIAE2AgQgACABIAIQuICAgAAiEA3qASABIQFBICEQDMYDCwJAIAEiASACRg0AA0ACQCABLQAAQfC3gIAAai0AACIQQQJGDQACQCAQQX9qDgTlAewBAOsB7AELIAFBAWohAUEIIRAMyAMLIAFBAWoiASACRw0AC0EVIRAM3wMLQRUhEAzeAwsDQAJAIAEtAABB8LmAgABqLQAAIhBBAkYNACAQQX9qDgTeAewB4AHrAewBCyABQQFqIgEgAkcNAAtBGCEQDN0DCwJAIAEiASACRg0AIABBi4CAgAA2AgggACABNgIEIAEhAUEHIRAMxAMLQRkhEAzcAwsgAUEBaiEBDAILAkAgASIUIAJHDQBBGiEQDNsDCyAUIQECQCAULQAAQXNqDhTdAu4C7gLuAu4C7gLuAu4C7gLuAu4C7gLuAu4C7gLuAu4C7gLuAgDuAgtBACEQIABBADYCHCAAQa+LgIAANgIQIABBAjYCDCAAIBRBAWo2AhQM2gMLAkAgAS0AACIQQTtGDQAgEEENRw3oASABQQFqIQEM5QILIAFBAWohAQtBIiEQDL8DCwJAIAEiECACRw0AQRwhEAzYAwtCACERIBAhASAQLQAAQVBqDjfnAeYBAQIDBAUGBwgAAAAAAAAACQoLDA0OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPEBESExQAC0EeIRAMvQMLQgIhEQzlAQtCAyERDOQBC0IEIREM4wELQgUhEQziAQtCBiERDOEBC0IHIREM4AELQgghEQzfAQtCCSERDN4BC0IKIREM3QELQgshEQzcAQtCDCERDNsBC0INIREM2gELQg4hEQzZAQtCDyERDNgBC0IKIREM1wELQgshEQzWAQtCDCERDNUBC0INIREM1AELQg4hEQzTAQtCDyERDNIBC0IAIRECQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAIBAtAABBUGoON+UB5AEAAQIDBAUGB+YB5gHmAeYB5gHmAeYBCAkKCwwN5gHmAeYB5gHmAeYB5gHmAeYB5gHmAeYB5gHmAeYB5gHmAeYB5gHmAeYB5gHmAeYB5gHmAQ4PEBESE+YBC0ICIREM5AELQgMhEQzjAQtCBCERDOIBC0IFIREM4QELQgYhEQzgAQtCByERDN8BC0IIIREM3gELQgkhEQzdAQtCCiERDNwBC0ILIREM2wELQgwhEQzaAQtCDSERDNkBC0IOIREM2AELQg8hEQzXAQtCCiERDNYBC0ILIREM1QELQgwhEQzUAQtCDSERDNMBC0IOIREM0gELQg8hEQzRAQsgAEIAIAApAyAiESACIAEiEGutIhJ9IhMgEyARVhs3AyAgESASViIURQ3SAUEfIRAMwAMLAkAgASIBIAJGDQAgAEGJgICAADYCCCAAIAE2AgQgASEBQSQhEAynAwtBICEQDL8DCyAAIAEiECACEL6AgIAAQX9qDgW2AQDFAgHRAdIBC0ERIRAMpAMLIABBAToALyAQIQEMuwMLIAEiASACRw3SAUEkIRAMuwMLIAEiDSACRw0eQcYAIRAMugMLIAAgASIBIAIQsoCAgAAiEA3UASABIQEMtQELIAEiECACRw0mQdAAIRAMuAMLAkAgASIBIAJHDQBBKCEQDLgDCyAAQQA2AgQgAEGMgICAADYCCCAAIAEgARCxgICAACIQDdMBIAEhAQzYAQsCQCABIhAgAkcNAEEpIRAMtwMLIBAtAAAiAUEgRg0UIAFBCUcN0wEgEEEBaiEBDBULAkAgASIBIAJGDQAgAUEBaiEBDBcLQSohEAy1AwsCQCABIhAgAkcNAEErIRAMtQMLAkAgEC0AACIBQQlGDQAgAUEgRw3VAQsgAC0ALEEIRg3TASAQIQEMkQMLAkAgASIBIAJHDQBBLCEQDLQDCyABLQAAQQpHDdUBIAFBAWohAQzJAgsgASIOIAJHDdUBQS8hEAyyAwsDQAJAIAEtAAAiEEEgRg0AAkAgEEF2ag4EANwB3AEA2gELIAEhAQzgAQsgAUEBaiIBIAJHDQALQTEhEAyxAwtBMiEQIAEiFCACRg2wAyACIBRrIAAoAgAiAWohFSAUIAFrQQNqIRYCQANAIBQtAAAiF0EgciAXIBdBv39qQf8BcUEaSRtB/wFxIAFB8LuAgABqLQAARw0BAkAgAUEDRw0AQQYhAQyWAwsgAUEBaiEBIBRBAWoiFCACRw0ACyAAIBU2AgAMsQMLIABBADYCACAUIQEM2QELQTMhECABIhQgAkYNrwMgAiAUayAAKAIAIgFqIRUgFCABa0EIaiEWAkADQCAULQAAIhdBIHIgFyAXQb9/akH/AXFBGkkbQf8BcSABQfS7gIAAai0AAEcNAQJAIAFBCEcNAEEFIQEMlQMLIAFBAWohASAUQQFqIhQgAkcNAAsgACAVNgIADLADCyAAQQA2AgAgFCEBDNgBC0E0IRAgASIUIAJGDa4DIAIgFGsgACgCACIBaiEVIBQgAWtBBWohFgJAA0AgFC0AACIXQSByIBcgF0G/f2pB/wFxQRpJG0H/AXEgAUHQwoCAAGotAABHDQECQCABQQVHDQBBByEBDJQDCyABQQFqIQEgFEEBaiIUIAJHDQALIAAgFTYCAAyvAwsgAEEANgIAIBQhAQzXAQsCQCABIgEgAkYNAANAAkAgAS0AAEGAvoCAAGotAAAiEEEBRg0AIBBBAkYNCiABIQEM3QELIAFBAWoiASACRw0AC0EwIRAMrgMLQTAhEAytAwsCQCABIgEgAkYNAANAAkAgAS0AACIQQSBGDQAgEEF2ag4E2QHaAdoB2QHaAQsgAUEBaiIBIAJHDQALQTghEAytAwtBOCEQDKwDCwNAAkAgAS0AACIQQSBGDQAgEEEJRw0DCyABQQFqIgEgAkcNAAtBPCEQDKsDCwNAAkAgAS0AACIQQSBGDQACQAJAIBBBdmoOBNoBAQHaAQALIBBBLEYN2wELIAEhAQwECyABQQFqIgEgAkcNAAtBPyEQDKoDCyABIQEM2wELQcAAIRAgASIUIAJGDagDIAIgFGsgACgCACIBaiEWIBQgAWtBBmohFwJAA0AgFC0AAEEgciABQYDAgIAAai0AAEcNASABQQZGDY4DIAFBAWohASAUQQFqIhQgAkcNAAsgACAWNgIADKkDCyAAQQA2AgAgFCEBC0E2IRAMjgMLAkAgASIPIAJHDQBBwQAhEAynAwsgAEGMgICAADYCCCAAIA82AgQgDyEBIAAtACxBf2oOBM0B1QHXAdkBhwMLIAFBAWohAQzMAQsCQCABIgEgAkYNAANAAkAgAS0AACIQQSByIBAgEEG/f2pB/wFxQRpJG0H/AXEiEEEJRg0AIBBBIEYNAAJAAkACQAJAIBBBnX9qDhMAAwMDAwMDAwEDAwMDAwMDAwMCAwsgAUEBaiEBQTEhEAyRAwsgAUEBaiEBQTIhEAyQAwsgAUEBaiEBQTMhEAyPAwsgASEBDNABCyABQQFqIgEgAkcNAAtBNSEQDKUDC0E1IRAMpAMLAkAgASIBIAJGDQADQAJAIAEtAABBgLyAgABqLQAAQQFGDQAgASEBDNMBCyABQQFqIgEgAkcNAAtBPSEQDKQDC0E9IRAMowMLIAAgASIBIAIQsICAgAAiEA3WASABIQEMAQsgEEEBaiEBC0E8IRAMhwMLAkAgASIBIAJHDQBBwgAhEAygAwsCQANAAkAgAS0AAEF3ag4YAAL+Av4ChAP+Av4C/gL+Av4C/gL+Av4C/gL+Av4C/gL+Av4C/gL+Av4C/gIA/gILIAFBAWoiASACRw0AC0HCACEQDKADCyABQQFqIQEgAC0ALUEBcUUNvQEgASEBC0EsIRAMhQMLIAEiASACRw3TAUHEACEQDJ0DCwNAAkAgAS0AAEGQwICAAGotAABBAUYNACABIQEMtwILIAFBAWoiASACRw0AC0HFACEQDJwDCyANLQAAIhBBIEYNswEgEEE6Rw2BAyAAKAIEIQEgAEEANgIEIAAgASANEK+AgIAAIgEN0AEgDUEBaiEBDLMCC0HHACEQIAEiDSACRg2aAyACIA1rIAAoAgAiAWohFiANIAFrQQVqIRcDQCANLQAAIhRBIHIgFCAUQb9/akH/AXFBGkkbQf8BcSABQZDCgIAAai0AAEcNgAMgAUEFRg30AiABQQFqIQEgDUEBaiINIAJHDQALIAAgFjYCAAyaAwtByAAhECABIg0gAkYNmQMgAiANayAAKAIAIgFqIRYgDSABa0EJaiEXA0AgDS0AACIUQSByIBQgFEG/f2pB/wFxQRpJG0H/AXEgAUGWwoCAAGotAABHDf8CAkAgAUEJRw0AQQIhAQz1AgsgAUEBaiEBIA1BAWoiDSACRw0ACyAAIBY2AgAMmQMLAkAgASINIAJHDQBByQAhEAyZAwsCQAJAIA0tAAAiAUEgciABIAFBv39qQf8BcUEaSRtB/wFxQZJ/ag4HAIADgAOAA4ADgAMBgAMLIA1BAWohAUE+IRAMgAMLIA1BAWohAUE/IRAM/wILQcoAIRAgASINIAJGDZcDIAIgDWsgACgCACIBaiEWIA0gAWtBAWohFwNAIA0tAAAiFEEgciAUIBRBv39qQf8BcUEaSRtB/wFxIAFBoMKAgABqLQAARw39AiABQQFGDfACIAFBAWohASANQQFqIg0gAkcNAAsgACAWNgIADJcDC0HLACEQIAEiDSACRg2WAyACIA1rIAAoAgAiAWohFiANIAFrQQ5qIRcDQCANLQAAIhRBIHIgFCAUQb9/akH/AXFBGkkbQf8BcSABQaLCgIAAai0AAEcN/AIgAUEORg3wAiABQQFqIQEgDUEBaiINIAJHDQALIAAgFjYCAAyWAwtBzAAhECABIg0gAkYNlQMgAiANayAAKAIAIgFqIRYgDSABa0EPaiEXA0AgDS0AACIUQSByIBQgFEG/f2pB/wFxQRpJG0H/AXEgAUHAwoCAAGotAABHDfsCAkAgAUEPRw0AQQMhAQzxAgsgAUEBaiEBIA1BAWoiDSACRw0ACyAAIBY2AgAMlQMLQc0AIRAgASINIAJGDZQDIAIgDWsgACgCACIBaiEWIA0gAWtBBWohFwNAIA0tAAAiFEEgciAUIBRBv39qQf8BcUEaSRtB/wFxIAFB0MKAgABqLQAARw36AgJAIAFBBUcNAEEEIQEM8AILIAFBAWohASANQQFqIg0gAkcNAAsgACAWNgIADJQDCwJAIAEiDSACRw0AQc4AIRAMlAMLAkACQAJAAkAgDS0AACIBQSByIAEgAUG/f2pB/wFxQRpJG0H/AXFBnX9qDhMA/QL9Av0C/QL9Av0C/QL9Av0C/QL9Av0CAf0C/QL9AgID/QILIA1BAWohAUHBACEQDP0CCyANQQFqIQFBwgAhEAz8AgsgDUEBaiEBQcMAIRAM+wILIA1BAWohAUHEACEQDPoCCwJAIAEiASACRg0AIABBjYCAgAA2AgggACABNgIEIAEhAUHFACEQDPoCC0HPACEQDJIDCyAQIQECQAJAIBAtAABBdmoOBAGoAqgCAKgCCyAQQQFqIQELQSchEAz4AgsCQCABIgEgAkcNAEHRACEQDJEDCwJAIAEtAABBIEYNACABIQEMjQELIAFBAWohASAALQAtQQFxRQ3HASABIQEMjAELIAEiFyACRw3IAUHSACEQDI8DC0HTACEQIAEiFCACRg2OAyACIBRrIAAoAgAiAWohFiAUIAFrQQFqIRcDQCAULQAAIAFB1sKAgABqLQAARw3MASABQQFGDccBIAFBAWohASAUQQFqIhQgAkcNAAsgACAWNgIADI4DCwJAIAEiASACRw0AQdUAIRAMjgMLIAEtAABBCkcNzAEgAUEBaiEBDMcBCwJAIAEiASACRw0AQdYAIRAMjQMLAkACQCABLQAAQXZqDgQAzQHNAQHNAQsgAUEBaiEBDMcBCyABQQFqIQFBygAhEAzzAgsgACABIgEgAhCugICAACIQDcsBIAEhAUHNACEQDPICCyAALQApQSJGDYUDDKYCCwJAIAEiASACRw0AQdsAIRAMigMLQQAhFEEBIRdBASEWQQAhEAJAAkACQAJAAkACQAJAAkACQCABLQAAQVBqDgrUAdMBAAECAwQFBgjVAQtBAiEQDAYLQQMhEAwFC0EEIRAMBAtBBSEQDAMLQQYhEAwCC0EHIRAMAQtBCCEQC0EAIRdBACEWQQAhFAzMAQtBCSEQQQEhFEEAIRdBACEWDMsBCwJAIAEiASACRw0AQd0AIRAMiQMLIAEtAABBLkcNzAEgAUEBaiEBDKYCCyABIgEgAkcNzAFB3wAhEAyHAwsCQCABIgEgAkYNACAAQY6AgIAANgIIIAAgATYCBCABIQFB0AAhEAzuAgtB4AAhEAyGAwtB4QAhECABIgEgAkYNhQMgAiABayAAKAIAIhRqIRYgASAUa0EDaiEXA0AgAS0AACAUQeLCgIAAai0AAEcNzQEgFEEDRg3MASAUQQFqIRQgAUEBaiIBIAJHDQALIAAgFjYCAAyFAwtB4gAhECABIgEgAkYNhAMgAiABayAAKAIAIhRqIRYgASAUa0ECaiEXA0AgAS0AACAUQebCgIAAai0AAEcNzAEgFEECRg3OASAUQQFqIRQgAUEBaiIBIAJHDQALIAAgFjYCAAyEAwtB4wAhECABIgEgAkYNgwMgAiABayAAKAIAIhRqIRYgASAUa0EDaiEXA0AgAS0AACAUQenCgIAAai0AAEcNywEgFEEDRg3OASAUQQFqIRQgAUEBaiIBIAJHDQALIAAgFjYCAAyDAwsCQCABIgEgAkcNAEHlACEQDIMDCyAAIAFBAWoiASACEKiAgIAAIhANzQEgASEBQdYAIRAM6QILAkAgASIBIAJGDQADQAJAIAEtAAAiEEEgRg0AAkACQAJAIBBBuH9qDgsAAc8BzwHPAc8BzwHPAc8BzwECzwELIAFBAWohAUHSACEQDO0CCyABQQFqIQFB0wAhEAzsAgsgAUEBaiEBQdQAIRAM6wILIAFBAWoiASACRw0AC0HkACEQDIIDC0HkACEQDIEDCwNAAkAgAS0AAEHwwoCAAGotAAAiEEEBRg0AIBBBfmoOA88B0AHRAdIBCyABQQFqIgEgAkcNAAtB5gAhEAyAAwsCQCABIgEgAkYNACABQQFqIQEMAwtB5wAhEAz/AgsDQAJAIAEtAABB8MSAgABqLQAAIhBBAUYNAAJAIBBBfmoOBNIB0wHUAQDVAQsgASEBQdcAIRAM5wILIAFBAWoiASACRw0AC0HoACEQDP4CCwJAIAEiASACRw0AQekAIRAM/gILAkAgAS0AACIQQXZqDhq6AdUB1QG8AdUB1QHVAdUB1QHVAdUB1QHVAdUB1QHVAdUB1QHVAdUB1QHVAcoB1QHVAQDTAQsgAUEBaiEBC0EGIRAM4wILA0ACQCABLQAAQfDGgIAAai0AAEEBRg0AIAEhAQyeAgsgAUEBaiIBIAJHDQALQeoAIRAM+wILAkAgASIBIAJGDQAgAUEBaiEBDAMLQesAIRAM+gILAkAgASIBIAJHDQBB7AAhEAz6AgsgAUEBaiEBDAELAkAgASIBIAJHDQBB7QAhEAz5AgsgAUEBaiEBC0EEIRAM3gILAkAgASIUIAJHDQBB7gAhEAz3AgsgFCEBAkACQAJAIBQtAABB8MiAgABqLQAAQX9qDgfUAdUB1gEAnAIBAtcBCyAUQQFqIQEMCgsgFEEBaiEBDM0BC0EAIRAgAEEANgIcIABBm5KAgAA2AhAgAEEHNgIMIAAgFEEBajYCFAz2AgsCQANAAkAgAS0AAEHwyICAAGotAAAiEEEERg0AAkACQCAQQX9qDgfSAdMB1AHZAQAEAdkBCyABIQFB2gAhEAzgAgsgAUEBaiEBQdwAIRAM3wILIAFBAWoiASACRw0AC0HvACEQDPYCCyABQQFqIQEMywELAkAgASIUIAJHDQBB8AAhEAz1AgsgFC0AAEEvRw3UASAUQQFqIQEMBgsCQCABIhQgAkcNAEHxACEQDPQCCwJAIBQtAAAiAUEvRw0AIBRBAWohAUHdACEQDNsCCyABQXZqIgRBFksN0wFBASAEdEGJgIACcUUN0wEMygILAkAgASIBIAJGDQAgAUEBaiEBQd4AIRAM2gILQfIAIRAM8gILAkAgASIUIAJHDQBB9AAhEAzyAgsgFCEBAkAgFC0AAEHwzICAAGotAABBf2oOA8kClAIA1AELQeEAIRAM2AILAkAgASIUIAJGDQADQAJAIBQtAABB8MqAgABqLQAAIgFBA0YNAAJAIAFBf2oOAssCANUBCyAUIQFB3wAhEAzaAgsgFEEBaiIUIAJHDQALQfMAIRAM8QILQfMAIRAM8AILAkAgASIBIAJGDQAgAEGPgICAADYCCCAAIAE2AgQgASEBQeAAIRAM1wILQfUAIRAM7wILAkAgASIBIAJHDQBB9gAhEAzvAgsgAEGPgICAADYCCCAAIAE2AgQgASEBC0EDIRAM1AILA0AgAS0AAEEgRw3DAiABQQFqIgEgAkcNAAtB9wAhEAzsAgsCQCABIgEgAkcNAEH4ACEQDOwCCyABLQAAQSBHDc4BIAFBAWohAQzvAQsgACABIgEgAhCsgICAACIQDc4BIAEhAQyOAgsCQCABIgQgAkcNAEH6ACEQDOoCCyAELQAAQcwARw3RASAEQQFqIQFBEyEQDM8BCwJAIAEiBCACRw0AQfsAIRAM6QILIAIgBGsgACgCACIBaiEUIAQgAWtBBWohEANAIAQtAAAgAUHwzoCAAGotAABHDdABIAFBBUYNzgEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBB+wAhEAzoAgsCQCABIgQgAkcNAEH8ACEQDOgCCwJAAkAgBC0AAEG9f2oODADRAdEB0QHRAdEB0QHRAdEB0QHRAQHRAQsgBEEBaiEBQeYAIRAMzwILIARBAWohAUHnACEQDM4CCwJAIAEiBCACRw0AQf0AIRAM5wILIAIgBGsgACgCACIBaiEUIAQgAWtBAmohEAJAA0AgBC0AACABQe3PgIAAai0AAEcNzwEgAUECRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQf0AIRAM5wILIABBADYCACAQQQFqIQFBECEQDMwBCwJAIAEiBCACRw0AQf4AIRAM5gILIAIgBGsgACgCACIBaiEUIAQgAWtBBWohEAJAA0AgBC0AACABQfbOgIAAai0AAEcNzgEgAUEFRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQf4AIRAM5gILIABBADYCACAQQQFqIQFBFiEQDMsBCwJAIAEiBCACRw0AQf8AIRAM5QILIAIgBGsgACgCACIBaiEUIAQgAWtBA2ohEAJAA0AgBC0AACABQfzOgIAAai0AAEcNzQEgAUEDRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQf8AIRAM5QILIABBADYCACAQQQFqIQFBBSEQDMoBCwJAIAEiBCACRw0AQYABIRAM5AILIAQtAABB2QBHDcsBIARBAWohAUEIIRAMyQELAkAgASIEIAJHDQBBgQEhEAzjAgsCQAJAIAQtAABBsn9qDgMAzAEBzAELIARBAWohAUHrACEQDMoCCyAEQQFqIQFB7AAhEAzJAgsCQCABIgQgAkcNAEGCASEQDOICCwJAAkAgBC0AAEG4f2oOCADLAcsBywHLAcsBywEBywELIARBAWohAUHqACEQDMkCCyAEQQFqIQFB7QAhEAzIAgsCQCABIgQgAkcNAEGDASEQDOECCyACIARrIAAoAgAiAWohECAEIAFrQQJqIRQCQANAIAQtAAAgAUGAz4CAAGotAABHDckBIAFBAkYNASABQQFqIQEgBEEBaiIEIAJHDQALIAAgEDYCAEGDASEQDOECC0EAIRAgAEEANgIAIBRBAWohAQzGAQsCQCABIgQgAkcNAEGEASEQDOACCyACIARrIAAoAgAiAWohFCAEIAFrQQRqIRACQANAIAQtAAAgAUGDz4CAAGotAABHDcgBIAFBBEYNASABQQFqIQEgBEEBaiIEIAJHDQALIAAgFDYCAEGEASEQDOACCyAAQQA2AgAgEEEBaiEBQSMhEAzFAQsCQCABIgQgAkcNAEGFASEQDN8CCwJAAkAgBC0AAEG0f2oOCADIAcgByAHIAcgByAEByAELIARBAWohAUHvACEQDMYCCyAEQQFqIQFB8AAhEAzFAgsCQCABIgQgAkcNAEGGASEQDN4CCyAELQAAQcUARw3FASAEQQFqIQEMgwILAkAgASIEIAJHDQBBhwEhEAzdAgsgAiAEayAAKAIAIgFqIRQgBCABa0EDaiEQAkADQCAELQAAIAFBiM+AgABqLQAARw3FASABQQNGDQEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBBhwEhEAzdAgsgAEEANgIAIBBBAWohAUEtIRAMwgELAkAgASIEIAJHDQBBiAEhEAzcAgsgAiAEayAAKAIAIgFqIRQgBCABa0EIaiEQAkADQCAELQAAIAFB0M+AgABqLQAARw3EASABQQhGDQEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBBiAEhEAzcAgsgAEEANgIAIBBBAWohAUEpIRAMwQELAkAgASIBIAJHDQBBiQEhEAzbAgtBASEQIAEtAABB3wBHDcABIAFBAWohAQyBAgsCQCABIgQgAkcNAEGKASEQDNoCCyACIARrIAAoAgAiAWohFCAEIAFrQQFqIRADQCAELQAAIAFBjM+AgABqLQAARw3BASABQQFGDa8CIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQYoBIRAM2QILAkAgASIEIAJHDQBBiwEhEAzZAgsgAiAEayAAKAIAIgFqIRQgBCABa0ECaiEQAkADQCAELQAAIAFBjs+AgABqLQAARw3BASABQQJGDQEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBBiwEhEAzZAgsgAEEANgIAIBBBAWohAUECIRAMvgELAkAgASIEIAJHDQBBjAEhEAzYAgsgAiAEayAAKAIAIgFqIRQgBCABa0EBaiEQAkADQCAELQAAIAFB8M+AgABqLQAARw3AASABQQFGDQEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBBjAEhEAzYAgsgAEEANgIAIBBBAWohAUEfIRAMvQELAkAgASIEIAJHDQBBjQEhEAzXAgsgAiAEayAAKAIAIgFqIRQgBCABa0EBaiEQAkADQCAELQAAIAFB8s+AgABqLQAARw2/ASABQQFGDQEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBBjQEhEAzXAgsgAEEANgIAIBBBAWohAUEJIRAMvAELAkAgASIEIAJHDQBBjgEhEAzWAgsCQAJAIAQtAABBt39qDgcAvwG/Ab8BvwG/AQG/AQsgBEEBaiEBQfgAIRAMvQILIARBAWohAUH5ACEQDLwCCwJAIAEiBCACRw0AQY8BIRAM1QILIAIgBGsgACgCACIBaiEUIAQgAWtBBWohEAJAA0AgBC0AACABQZHPgIAAai0AAEcNvQEgAUEFRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQY8BIRAM1QILIABBADYCACAQQQFqIQFBGCEQDLoBCwJAIAEiBCACRw0AQZABIRAM1AILIAIgBGsgACgCACIBaiEUIAQgAWtBAmohEAJAA0AgBC0AACABQZfPgIAAai0AAEcNvAEgAUECRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQZABIRAM1AILIABBADYCACAQQQFqIQFBFyEQDLkBCwJAIAEiBCACRw0AQZEBIRAM0wILIAIgBGsgACgCACIBaiEUIAQgAWtBBmohEAJAA0AgBC0AACABQZrPgIAAai0AAEcNuwEgAUEGRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQZEBIRAM0wILIABBADYCACAQQQFqIQFBFSEQDLgBCwJAIAEiBCACRw0AQZIBIRAM0gILIAIgBGsgACgCACIBaiEUIAQgAWtBBWohEAJAA0AgBC0AACABQaHPgIAAai0AAEcNugEgAUEFRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQZIBIRAM0gILIABBADYCACAQQQFqIQFBHiEQDLcBCwJAIAEiBCACRw0AQZMBIRAM0QILIAQtAABBzABHDbgBIARBAWohAUEKIRAMtgELAkAgBCACRw0AQZQBIRAM0AILAkACQCAELQAAQb9/ag4PALkBuQG5AbkBuQG5AbkBuQG5AbkBuQG5AbkBAbkBCyAEQQFqIQFB/gAhEAy3AgsgBEEBaiEBQf8AIRAMtgILAkAgBCACRw0AQZUBIRAMzwILAkACQCAELQAAQb9/ag4DALgBAbgBCyAEQQFqIQFB/QAhEAy2AgsgBEEBaiEEQYABIRAMtQILAkAgBCACRw0AQZYBIRAMzgILIAIgBGsgACgCACIBaiEUIAQgAWtBAWohEAJAA0AgBC0AACABQafPgIAAai0AAEcNtgEgAUEBRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQZYBIRAMzgILIABBADYCACAQQQFqIQFBCyEQDLMBCwJAIAQgAkcNAEGXASEQDM0CCwJAAkACQAJAIAQtAABBU2oOIwC4AbgBuAG4AbgBuAG4AbgBuAG4AbgBuAG4AbgBuAG4AbgBuAG4AbgBuAG4AbgBAbgBuAG4AbgBuAECuAG4AbgBA7gBCyAEQQFqIQFB+wAhEAy2AgsgBEEBaiEBQfwAIRAMtQILIARBAWohBEGBASEQDLQCCyAEQQFqIQRBggEhEAyzAgsCQCAEIAJHDQBBmAEhEAzMAgsgAiAEayAAKAIAIgFqIRQgBCABa0EEaiEQAkADQCAELQAAIAFBqc+AgABqLQAARw20ASABQQRGDQEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBBmAEhEAzMAgsgAEEANgIAIBBBAWohAUEZIRAMsQELAkAgBCACRw0AQZkBIRAMywILIAIgBGsgACgCACIBaiEUIAQgAWtBBWohEAJAA0AgBC0AACABQa7PgIAAai0AAEcNswEgAUEFRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQZkBIRAMywILIABBADYCACAQQQFqIQFBBiEQDLABCwJAIAQgAkcNAEGaASEQDMoCCyACIARrIAAoAgAiAWohFCAEIAFrQQFqIRACQANAIAQtAAAgAUG0z4CAAGotAABHDbIBIAFBAUYNASABQQFqIQEgBEEBaiIEIAJHDQALIAAgFDYCAEGaASEQDMoCCyAAQQA2AgAgEEEBaiEBQRwhEAyvAQsCQCAEIAJHDQBBmwEhEAzJAgsgAiAEayAAKAIAIgFqIRQgBCABa0EBaiEQAkADQCAELQAAIAFBts+AgABqLQAARw2xASABQQFGDQEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBBmwEhEAzJAgsgAEEANgIAIBBBAWohAUEnIRAMrgELAkAgBCACRw0AQZwBIRAMyAILAkACQCAELQAAQax/ag4CAAGxAQsgBEEBaiEEQYYBIRAMrwILIARBAWohBEGHASEQDK4CCwJAIAQgAkcNAEGdASEQDMcCCyACIARrIAAoAgAiAWohFCAEIAFrQQFqIRACQANAIAQtAAAgAUG4z4CAAGotAABHDa8BIAFBAUYNASABQQFqIQEgBEEBaiIEIAJHDQALIAAgFDYCAEGdASEQDMcCCyAAQQA2AgAgEEEBaiEBQSYhEAysAQsCQCAEIAJHDQBBngEhEAzGAgsgAiAEayAAKAIAIgFqIRQgBCABa0EBaiEQAkADQCAELQAAIAFBus+AgABqLQAARw2uASABQQFGDQEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBBngEhEAzGAgsgAEEANgIAIBBBAWohAUEDIRAMqwELAkAgBCACRw0AQZ8BIRAMxQILIAIgBGsgACgCACIBaiEUIAQgAWtBAmohEAJAA0AgBC0AACABQe3PgIAAai0AAEcNrQEgAUECRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQZ8BIRAMxQILIABBADYCACAQQQFqIQFBDCEQDKoBCwJAIAQgAkcNAEGgASEQDMQCCyACIARrIAAoAgAiAWohFCAEIAFrQQNqIRACQANAIAQtAAAgAUG8z4CAAGotAABHDawBIAFBA0YNASABQQFqIQEgBEEBaiIEIAJHDQALIAAgFDYCAEGgASEQDMQCCyAAQQA2AgAgEEEBaiEBQQ0hEAypAQsCQCAEIAJHDQBBoQEhEAzDAgsCQAJAIAQtAABBun9qDgsArAGsAawBrAGsAawBrAGsAawBAawBCyAEQQFqIQRBiwEhEAyqAgsgBEEBaiEEQYwBIRAMqQILAkAgBCACRw0AQaIBIRAMwgILIAQtAABB0ABHDakBIARBAWohBAzpAQsCQCAEIAJHDQBBowEhEAzBAgsCQAJAIAQtAABBt39qDgcBqgGqAaoBqgGqAQCqAQsgBEEBaiEEQY4BIRAMqAILIARBAWohAUEiIRAMpgELAkAgBCACRw0AQaQBIRAMwAILIAIgBGsgACgCACIBaiEUIAQgAWtBAWohEAJAA0AgBC0AACABQcDPgIAAai0AAEcNqAEgAUEBRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQaQBIRAMwAILIABBADYCACAQQQFqIQFBHSEQDKUBCwJAIAQgAkcNAEGlASEQDL8CCwJAAkAgBC0AAEGuf2oOAwCoAQGoAQsgBEEBaiEEQZABIRAMpgILIARBAWohAUEEIRAMpAELAkAgBCACRw0AQaYBIRAMvgILAkACQAJAAkACQCAELQAAQb9/ag4VAKoBqgGqAaoBqgGqAaoBqgGqAaoBAaoBqgECqgGqAQOqAaoBBKoBCyAEQQFqIQRBiAEhEAyoAgsgBEEBaiEEQYkBIRAMpwILIARBAWohBEGKASEQDKYCCyAEQQFqIQRBjwEhEAylAgsgBEEBaiEEQZEBIRAMpAILAkAgBCACRw0AQacBIRAMvQILIAIgBGsgACgCACIBaiEUIAQgAWtBAmohEAJAA0AgBC0AACABQe3PgIAAai0AAEcNpQEgAUECRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQacBIRAMvQILIABBADYCACAQQQFqIQFBESEQDKIBCwJAIAQgAkcNAEGoASEQDLwCCyACIARrIAAoAgAiAWohFCAEIAFrQQJqIRACQANAIAQtAAAgAUHCz4CAAGotAABHDaQBIAFBAkYNASABQQFqIQEgBEEBaiIEIAJHDQALIAAgFDYCAEGoASEQDLwCCyAAQQA2AgAgEEEBaiEBQSwhEAyhAQsCQCAEIAJHDQBBqQEhEAy7AgsgAiAEayAAKAIAIgFqIRQgBCABa0EEaiEQAkADQCAELQAAIAFBxc+AgABqLQAARw2jASABQQRGDQEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBBqQEhEAy7AgsgAEEANgIAIBBBAWohAUErIRAMoAELAkAgBCACRw0AQaoBIRAMugILIAIgBGsgACgCACIBaiEUIAQgAWtBAmohEAJAA0AgBC0AACABQcrPgIAAai0AAEcNogEgAUECRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQaoBIRAMugILIABBADYCACAQQQFqIQFBFCEQDJ8BCwJAIAQgAkcNAEGrASEQDLkCCwJAAkACQAJAIAQtAABBvn9qDg8AAQKkAaQBpAGkAaQBpAGkAaQBpAGkAaQBA6QBCyAEQQFqIQRBkwEhEAyiAgsgBEEBaiEEQZQBIRAMoQILIARBAWohBEGVASEQDKACCyAEQQFqIQRBlgEhEAyfAgsCQCAEIAJHDQBBrAEhEAy4AgsgBC0AAEHFAEcNnwEgBEEBaiEEDOABCwJAIAQgAkcNAEGtASEQDLcCCyACIARrIAAoAgAiAWohFCAEIAFrQQJqIRACQANAIAQtAAAgAUHNz4CAAGotAABHDZ8BIAFBAkYNASABQQFqIQEgBEEBaiIEIAJHDQALIAAgFDYCAEGtASEQDLcCCyAAQQA2AgAgEEEBaiEBQQ4hEAycAQsCQCAEIAJHDQBBrgEhEAy2AgsgBC0AAEHQAEcNnQEgBEEBaiEBQSUhEAybAQsCQCAEIAJHDQBBrwEhEAy1AgsgAiAEayAAKAIAIgFqIRQgBCABa0EIaiEQAkADQCAELQAAIAFB0M+AgABqLQAARw2dASABQQhGDQEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBBrwEhEAy1AgsgAEEANgIAIBBBAWohAUEqIRAMmgELAkAgBCACRw0AQbABIRAMtAILAkACQCAELQAAQat/ag4LAJ0BnQGdAZ0BnQGdAZ0BnQGdAQGdAQsgBEEBaiEEQZoBIRAMmwILIARBAWohBEGbASEQDJoCCwJAIAQgAkcNAEGxASEQDLMCCwJAAkAgBC0AAEG/f2oOFACcAZwBnAGcAZwBnAGcAZwBnAGcAZwBnAGcAZwBnAGcAZwBnAEBnAELIARBAWohBEGZASEQDJoCCyAEQQFqIQRBnAEhEAyZAgsCQCAEIAJHDQBBsgEhEAyyAgsgAiAEayAAKAIAIgFqIRQgBCABa0EDaiEQAkADQCAELQAAIAFB2c+AgABqLQAARw2aASABQQNGDQEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBBsgEhEAyyAgsgAEEANgIAIBBBAWohAUEhIRAMlwELAkAgBCACRw0AQbMBIRAMsQILIAIgBGsgACgCACIBaiEUIAQgAWtBBmohEAJAA0AgBC0AACABQd3PgIAAai0AAEcNmQEgAUEGRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQbMBIRAMsQILIABBADYCACAQQQFqIQFBGiEQDJYBCwJAIAQgAkcNAEG0ASEQDLACCwJAAkACQCAELQAAQbt/ag4RAJoBmgGaAZoBmgGaAZoBmgGaAQGaAZoBmgGaAZoBApoBCyAEQQFqIQRBnQEhEAyYAgsgBEEBaiEEQZ4BIRAMlwILIARBAWohBEGfASEQDJYCCwJAIAQgAkcNAEG1ASEQDK8CCyACIARrIAAoAgAiAWohFCAEIAFrQQVqIRACQANAIAQtAAAgAUHkz4CAAGotAABHDZcBIAFBBUYNASABQQFqIQEgBEEBaiIEIAJHDQALIAAgFDYCAEG1ASEQDK8CCyAAQQA2AgAgEEEBaiEBQSghEAyUAQsCQCAEIAJHDQBBtgEhEAyuAgsgAiAEayAAKAIAIgFqIRQgBCABa0ECaiEQAkADQCAELQAAIAFB6s+AgABqLQAARw2WASABQQJGDQEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBBtgEhEAyuAgsgAEEANgIAIBBBAWohAUEHIRAMkwELAkAgBCACRw0AQbcBIRAMrQILAkACQCAELQAAQbt/ag4OAJYBlgGWAZYBlgGWAZYBlgGWAZYBlgGWAQGWAQsgBEEBaiEEQaEBIRAMlAILIARBAWohBEGiASEQDJMCCwJAIAQgAkcNAEG4ASEQDKwCCyACIARrIAAoAgAiAWohFCAEIAFrQQJqIRACQANAIAQtAAAgAUHtz4CAAGotAABHDZQBIAFBAkYNASABQQFqIQEgBEEBaiIEIAJHDQALIAAgFDYCAEG4ASEQDKwCCyAAQQA2AgAgEEEBaiEBQRIhEAyRAQsCQCAEIAJHDQBBuQEhEAyrAgsgAiAEayAAKAIAIgFqIRQgBCABa0EBaiEQAkADQCAELQAAIAFB8M+AgABqLQAARw2TASABQQFGDQEgAUEBaiEBIARBAWoiBCACRw0ACyAAIBQ2AgBBuQEhEAyrAgsgAEEANgIAIBBBAWohAUEgIRAMkAELAkAgBCACRw0AQboBIRAMqgILIAIgBGsgACgCACIBaiEUIAQgAWtBAWohEAJAA0AgBC0AACABQfLPgIAAai0AAEcNkgEgAUEBRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQboBIRAMqgILIABBADYCACAQQQFqIQFBDyEQDI8BCwJAIAQgAkcNAEG7ASEQDKkCCwJAAkAgBC0AAEG3f2oOBwCSAZIBkgGSAZIBAZIBCyAEQQFqIQRBpQEhEAyQAgsgBEEBaiEEQaYBIRAMjwILAkAgBCACRw0AQbwBIRAMqAILIAIgBGsgACgCACIBaiEUIAQgAWtBB2ohEAJAA0AgBC0AACABQfTPgIAAai0AAEcNkAEgAUEHRg0BIAFBAWohASAEQQFqIgQgAkcNAAsgACAUNgIAQbwBIRAMqAILIABBADYCACAQQQFqIQFBGyEQDI0BCwJAIAQgAkcNAEG9ASEQDKcCCwJAAkACQCAELQAAQb5/ag4SAJEBkQGRAZEBkQGRAZEBkQGRAQGRAZEBkQGRAZEBkQECkQELIARBAWohBEGkASEQDI8CCyAEQQFqIQRBpwEhEAyOAgsgBEEBaiEEQagBIRAMjQILAkAgBCACRw0AQb4BIRAMpgILIAQtAABBzgBHDY0BIARBAWohBAzPAQsCQCAEIAJHDQBBvwEhEAylAgsCQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCAELQAAQb9/ag4VAAECA5wBBAUGnAGcAZwBBwgJCgucAQwNDg+cAQsgBEEBaiEBQegAIRAMmgILIARBAWohAUHpACEQDJkCCyAEQQFqIQFB7gAhEAyYAgsgBEEBaiEBQfIAIRAMlwILIARBAWohAUHzACEQDJYCCyAEQQFqIQFB9gAhEAyVAgsgBEEBaiEBQfcAIRAMlAILIARBAWohAUH6ACEQDJMCCyAEQQFqIQRBgwEhEAySAgsgBEEBaiEEQYQBIRAMkQILIARBAWohBEGFASEQDJACCyAEQQFqIQRBkgEhEAyPAgsgBEEBaiEEQZgBIRAMjgILIARBAWohBEGgASEQDI0CCyAEQQFqIQRBowEhEAyMAgsgBEEBaiEEQaoBIRAMiwILAkAgBCACRg0AIABBkICAgAA2AgggACAENgIEQasBIRAMiwILQcABIRAMowILIAAgBSACEKqAgIAAIgENiwEgBSEBDFwLAkAgBiACRg0AIAZBAWohBQyNAQtBwgEhEAyhAgsDQAJAIBAtAABBdmoOBIwBAACPAQALIBBBAWoiECACRw0AC0HDASEQDKACCwJAIAcgAkYNACAAQZGAgIAANgIIIAAgBzYCBCAHIQFBASEQDIcCC0HEASEQDJ8CCwJAIAcgAkcNAEHFASEQDJ8CCwJAAkAgBy0AAEF2ag4EAc4BzgEAzgELIAdBAWohBgyNAQsgB0EBaiEFDIkBCwJAIAcgAkcNAEHGASEQDJ4CCwJAAkAgBy0AAEF2ag4XAY8BjwEBjwGPAY8BjwGPAY8BjwGPAY8BjwGPAY8BjwGPAY8BjwGPAY8BAI8BCyAHQQFqIQcLQbABIRAMhAILAkAgCCACRw0AQcgBIRAMnQILIAgtAABBIEcNjQEgAEEAOwEyIAhBAWohAUGzASEQDIMCCyABIRcCQANAIBciByACRg0BIActAABBUGpB/wFxIhBBCk8NzAECQCAALwEyIhRBmTNLDQAgACAUQQpsIhQ7ATIgEEH//wNzIBRB/v8DcUkNACAHQQFqIRcgACAUIBBqIhA7ATIgEEH//wNxQegHSQ0BCwtBACEQIABBADYCHCAAQcGJgIAANgIQIABBDTYCDCAAIAdBAWo2AhQMnAILQccBIRAMmwILIAAgCCACEK6AgIAAIhBFDcoBIBBBFUcNjAEgAEHIATYCHCAAIAg2AhQgAEHJl4CAADYCECAAQRU2AgxBACEQDJoCCwJAIAkgAkcNAEHMASEQDJoCC0EAIRRBASEXQQEhFkEAIRACQAJAAkACQAJAAkACQAJAAkAgCS0AAEFQag4KlgGVAQABAgMEBQYIlwELQQIhEAwGC0EDIRAMBQtBBCEQDAQLQQUhEAwDC0EGIRAMAgtBByEQDAELQQghEAtBACEXQQAhFkEAIRQMjgELQQkhEEEBIRRBACEXQQAhFgyNAQsCQCAKIAJHDQBBzgEhEAyZAgsgCi0AAEEuRw2OASAKQQFqIQkMygELIAsgAkcNjgFB0AEhEAyXAgsCQCALIAJGDQAgAEGOgICAADYCCCAAIAs2AgRBtwEhEAz+AQtB0QEhEAyWAgsCQCAEIAJHDQBB0gEhEAyWAgsgAiAEayAAKAIAIhBqIRQgBCAQa0EEaiELA0AgBC0AACAQQfzPgIAAai0AAEcNjgEgEEEERg3pASAQQQFqIRAgBEEBaiIEIAJHDQALIAAgFDYCAEHSASEQDJUCCyAAIAwgAhCsgICAACIBDY0BIAwhAQy4AQsCQCAEIAJHDQBB1AEhEAyUAgsgAiAEayAAKAIAIhBqIRQgBCAQa0EBaiEMA0AgBC0AACAQQYHQgIAAai0AAEcNjwEgEEEBRg2OASAQQQFqIRAgBEEBaiIEIAJHDQALIAAgFDYCAEHUASEQDJMCCwJAIAQgAkcNAEHWASEQDJMCCyACIARrIAAoAgAiEGohFCAEIBBrQQJqIQsDQCAELQAAIBBBg9CAgABqLQAARw2OASAQQQJGDZABIBBBAWohECAEQQFqIgQgAkcNAAsgACAUNgIAQdYBIRAMkgILAkAgBCACRw0AQdcBIRAMkgILAkACQCAELQAAQbt/ag4QAI8BjwGPAY8BjwGPAY8BjwGPAY8BjwGPAY8BjwEBjwELIARBAWohBEG7ASEQDPkBCyAEQQFqIQRBvAEhEAz4AQsCQCAEIAJHDQBB2AEhEAyRAgsgBC0AAEHIAEcNjAEgBEEBaiEEDMQBCwJAIAQgAkYNACAAQZCAgIAANgIIIAAgBDYCBEG+ASEQDPcBC0HZASEQDI8CCwJAIAQgAkcNAEHaASEQDI8CCyAELQAAQcgARg3DASAAQQE6ACgMuQELIABBAjoALyAAIAQgAhCmgICAACIQDY0BQcIBIRAM9AELIAAtAChBf2oOArcBuQG4AQsDQAJAIAQtAABBdmoOBACOAY4BAI4BCyAEQQFqIgQgAkcNAAtB3QEhEAyLAgsgAEEAOgAvIAAtAC1BBHFFDYQCCyAAQQA6AC8gAEEBOgA0IAEhAQyMAQsgEEEVRg3aASAAQQA2AhwgACABNgIUIABBp46AgAA2AhAgAEESNgIMQQAhEAyIAgsCQCAAIBAgAhC0gICAACIEDQAgECEBDIECCwJAIARBFUcNACAAQQM2AhwgACAQNgIUIABBsJiAgAA2AhAgAEEVNgIMQQAhEAyIAgsgAEEANgIcIAAgEDYCFCAAQaeOgIAANgIQIABBEjYCDEEAIRAMhwILIBBBFUYN1gEgAEEANgIcIAAgATYCFCAAQdqNgIAANgIQIABBFDYCDEEAIRAMhgILIAAoAgQhFyAAQQA2AgQgECARp2oiFiEBIAAgFyAQIBYgFBsiEBC1gICAACIURQ2NASAAQQc2AhwgACAQNgIUIAAgFDYCDEEAIRAMhQILIAAgAC8BMEGAAXI7ATAgASEBC0EqIRAM6gELIBBBFUYN0QEgAEEANgIcIAAgATYCFCAAQYOMgIAANgIQIABBEzYCDEEAIRAMggILIBBBFUYNzwEgAEEANgIcIAAgATYCFCAAQZqPgIAANgIQIABBIjYCDEEAIRAMgQILIAAoAgQhECAAQQA2AgQCQCAAIBAgARC3gICAACIQDQAgAUEBaiEBDI0BCyAAQQw2AhwgACAQNgIMIAAgAUEBajYCFEEAIRAMgAILIBBBFUYNzAEgAEEANgIcIAAgATYCFCAAQZqPgIAANgIQIABBIjYCDEEAIRAM/wELIAAoAgQhECAAQQA2AgQCQCAAIBAgARC3gICAACIQDQAgAUEBaiEBDIwBCyAAQQ02AhwgACAQNgIMIAAgAUEBajYCFEEAIRAM/gELIBBBFUYNyQEgAEEANgIcIAAgATYCFCAAQcaMgIAANgIQIABBIzYCDEEAIRAM/QELIAAoAgQhECAAQQA2AgQCQCAAIBAgARC5gICAACIQDQAgAUEBaiEBDIsBCyAAQQ42AhwgACAQNgIMIAAgAUEBajYCFEEAIRAM/AELIABBADYCHCAAIAE2AhQgAEHAlYCAADYCECAAQQI2AgxBACEQDPsBCyAQQRVGDcUBIABBADYCHCAAIAE2AhQgAEHGjICAADYCECAAQSM2AgxBACEQDPoBCyAAQRA2AhwgACABNgIUIAAgEDYCDEEAIRAM+QELIAAoAgQhBCAAQQA2AgQCQCAAIAQgARC5gICAACIEDQAgAUEBaiEBDPEBCyAAQRE2AhwgACAENgIMIAAgAUEBajYCFEEAIRAM+AELIBBBFUYNwQEgAEEANgIcIAAgATYCFCAAQcaMgIAANgIQIABBIzYCDEEAIRAM9wELIAAoAgQhECAAQQA2AgQCQCAAIBAgARC5gICAACIQDQAgAUEBaiEBDIgBCyAAQRM2AhwgACAQNgIMIAAgAUEBajYCFEEAIRAM9gELIAAoAgQhBCAAQQA2AgQCQCAAIAQgARC5gICAACIEDQAgAUEBaiEBDO0BCyAAQRQ2AhwgACAENgIMIAAgAUEBajYCFEEAIRAM9QELIBBBFUYNvQEgAEEANgIcIAAgATYCFCAAQZqPgIAANgIQIABBIjYCDEEAIRAM9AELIAAoAgQhECAAQQA2AgQCQCAAIBAgARC3gICAACIQDQAgAUEBaiEBDIYBCyAAQRY2AhwgACAQNgIMIAAgAUEBajYCFEEAIRAM8wELIAAoAgQhBCAAQQA2AgQCQCAAIAQgARC3gICAACIEDQAgAUEBaiEBDOkBCyAAQRc2AhwgACAENgIMIAAgAUEBajYCFEEAIRAM8gELIABBADYCHCAAIAE2AhQgAEHNk4CAADYCECAAQQw2AgxBACEQDPEBC0IBIRELIBBBAWohAQJAIAApAyAiEkL//////////w9WDQAgACASQgSGIBGENwMgIAEhAQyEAQsgAEEANgIcIAAgATYCFCAAQa2JgIAANgIQIABBDDYCDEEAIRAM7wELIABBADYCHCAAIBA2AhQgAEHNk4CAADYCECAAQQw2AgxBACEQDO4BCyAAKAIEIRcgAEEANgIEIBAgEadqIhYhASAAIBcgECAWIBQbIhAQtYCAgAAiFEUNcyAAQQU2AhwgACAQNgIUIAAgFDYCDEEAIRAM7QELIABBADYCHCAAIBA2AhQgAEGqnICAADYCECAAQQ82AgxBACEQDOwBCyAAIBAgAhC0gICAACIBDQEgECEBC0EOIRAM0QELAkAgAUEVRw0AIABBAjYCHCAAIBA2AhQgAEGwmICAADYCECAAQRU2AgxBACEQDOoBCyAAQQA2AhwgACAQNgIUIABBp46AgAA2AhAgAEESNgIMQQAhEAzpAQsgAUEBaiEQAkAgAC8BMCIBQYABcUUNAAJAIAAgECACELuAgIAAIgENACAQIQEMcAsgAUEVRw26ASAAQQU2AhwgACAQNgIUIABB+ZeAgAA2AhAgAEEVNgIMQQAhEAzpAQsCQCABQaAEcUGgBEcNACAALQAtQQJxDQAgAEEANgIcIAAgEDYCFCAAQZaTgIAANgIQIABBBDYCDEEAIRAM6QELIAAgECACEL2AgIAAGiAQIQECQAJAAkACQAJAIAAgECACELOAgIAADhYCAQAEBAQEBAQEBAQEBAQEBAQEBAQDBAsgAEEBOgAuCyAAIAAvATBBwAByOwEwIBAhAQtBJiEQDNEBCyAAQSM2AhwgACAQNgIUIABBpZaAgAA2AhAgAEEVNgIMQQAhEAzpAQsgAEEANgIcIAAgEDYCFCAAQdWLgIAANgIQIABBETYCDEEAIRAM6AELIAAtAC1BAXFFDQFBwwEhEAzOAQsCQCANIAJGDQADQAJAIA0tAABBIEYNACANIQEMxAELIA1BAWoiDSACRw0AC0ElIRAM5wELQSUhEAzmAQsgACgCBCEEIABBADYCBCAAIAQgDRCvgICAACIERQ2tASAAQSY2AhwgACAENgIMIAAgDUEBajYCFEEAIRAM5QELIBBBFUYNqwEgAEEANgIcIAAgATYCFCAAQf2NgIAANgIQIABBHTYCDEEAIRAM5AELIABBJzYCHCAAIAE2AhQgACAQNgIMQQAhEAzjAQsgECEBQQEhFAJAAkACQAJAAkACQAJAIAAtACxBfmoOBwYFBQMBAgAFCyAAIAAvATBBCHI7ATAMAwtBAiEUDAELQQQhFAsgAEEBOgAsIAAgAC8BMCAUcjsBMAsgECEBC0ErIRAMygELIABBADYCHCAAIBA2AhQgAEGrkoCAADYCECAAQQs2AgxBACEQDOIBCyAAQQA2AhwgACABNgIUIABB4Y+AgAA2AhAgAEEKNgIMQQAhEAzhAQsgAEEAOgAsIBAhAQy9AQsgECEBQQEhFAJAAkACQAJAAkAgAC0ALEF7ag4EAwECAAULIAAgAC8BMEEIcjsBMAwDC0ECIRQMAQtBBCEUCyAAQQE6ACwgACAALwEwIBRyOwEwCyAQIQELQSkhEAzFAQsgAEEANgIcIAAgATYCFCAAQfCUgIAANgIQIABBAzYCDEEAIRAM3QELAkAgDi0AAEENRw0AIAAoAgQhASAAQQA2AgQCQCAAIAEgDhCxgICAACIBDQAgDkEBaiEBDHULIABBLDYCHCAAIAE2AgwgACAOQQFqNgIUQQAhEAzdAQsgAC0ALUEBcUUNAUHEASEQDMMBCwJAIA4gAkcNAEEtIRAM3AELAkACQANAAkAgDi0AAEF2ag4EAgAAAwALIA5BAWoiDiACRw0AC0EtIRAM3QELIAAoAgQhASAAQQA2AgQCQCAAIAEgDhCxgICAACIBDQAgDiEBDHQLIABBLDYCHCAAIA42AhQgACABNgIMQQAhEAzcAQsgACgCBCEBIABBADYCBAJAIAAgASAOELGAgIAAIgENACAOQQFqIQEMcwsgAEEsNgIcIAAgATYCDCAAIA5BAWo2AhRBACEQDNsBCyAAKAIEIQQgAEEANgIEIAAgBCAOELGAgIAAIgQNoAEgDiEBDM4BCyAQQSxHDQEgAUEBaiEQQQEhAQJAAkACQAJAAkAgAC0ALEF7ag4EAwECBAALIBAhAQwEC0ECIQEMAQtBBCEBCyAAQQE6ACwgACAALwEwIAFyOwEwIBAhAQwBCyAAIAAvATBBCHI7ATAgECEBC0E5IRAMvwELIABBADoALCABIQELQTQhEAy9AQsgACAALwEwQSByOwEwIAEhAQwCCyAAKAIEIQQgAEEANgIEAkAgACAEIAEQsYCAgAAiBA0AIAEhAQzHAQsgAEE3NgIcIAAgATYCFCAAIAQ2AgxBACEQDNQBCyAAQQg6ACwgASEBC0EwIRAMuQELAkAgAC0AKEEBRg0AIAEhAQwECyAALQAtQQhxRQ2TASABIQEMAwsgAC0AMEEgcQ2UAUHFASEQDLcBCwJAIA8gAkYNAAJAA0ACQCAPLQAAQVBqIgFB/wFxQQpJDQAgDyEBQTUhEAy6AQsgACkDICIRQpmz5syZs+bMGVYNASAAIBFCCn4iETcDICARIAGtQv8BgyISQn+FVg0BIAAgESASfDcDICAPQQFqIg8gAkcNAAtBOSEQDNEBCyAAKAIEIQIgAEEANgIEIAAgAiAPQQFqIgQQsYCAgAAiAg2VASAEIQEMwwELQTkhEAzPAQsCQCAALwEwIgFBCHFFDQAgAC0AKEEBRw0AIAAtAC1BCHFFDZABCyAAIAFB9/sDcUGABHI7ATAgDyEBC0E3IRAMtAELIAAgAC8BMEEQcjsBMAyrAQsgEEEVRg2LASAAQQA2AhwgACABNgIUIABB8I6AgAA2AhAgAEEcNgIMQQAhEAzLAQsgAEHDADYCHCAAIAE2AgwgACANQQFqNgIUQQAhEAzKAQsCQCABLQAAQTpHDQAgACgCBCEQIABBADYCBAJAIAAgECABEK+AgIAAIhANACABQQFqIQEMYwsgAEHDADYCHCAAIBA2AgwgACABQQFqNgIUQQAhEAzKAQsgAEEANgIcIAAgATYCFCAAQbGRgIAANgIQIABBCjYCDEEAIRAMyQELIABBADYCHCAAIAE2AhQgAEGgmYCAADYCECAAQR42AgxBACEQDMgBCyAAQQA2AgALIABBgBI7ASogACAXQQFqIgEgAhCogICAACIQDQEgASEBC0HHACEQDKwBCyAQQRVHDYMBIABB0QA2AhwgACABNgIUIABB45eAgAA2AhAgAEEVNgIMQQAhEAzEAQsgACgCBCEQIABBADYCBAJAIAAgECABEKeAgIAAIhANACABIQEMXgsgAEHSADYCHCAAIAE2AhQgACAQNgIMQQAhEAzDAQsgAEEANgIcIAAgFDYCFCAAQcGogIAANgIQIABBBzYCDCAAQQA2AgBBACEQDMIBCyAAKAIEIRAgAEEANgIEAkAgACAQIAEQp4CAgAAiEA0AIAEhAQxdCyAAQdMANgIcIAAgATYCFCAAIBA2AgxBACEQDMEBC0EAIRAgAEEANgIcIAAgATYCFCAAQYCRgIAANgIQIABBCTYCDAzAAQsgEEEVRg19IABBADYCHCAAIAE2AhQgAEGUjYCAADYCECAAQSE2AgxBACEQDL8BC0EBIRZBACEXQQAhFEEBIRALIAAgEDoAKyABQQFqIQECQAJAIAAtAC1BEHENAAJAAkACQCAALQAqDgMBAAIECyAWRQ0DDAILIBQNAQwCCyAXRQ0BCyAAKAIEIRAgAEEANgIEAkAgACAQIAEQrYCAgAAiEA0AIAEhAQxcCyAAQdgANgIcIAAgATYCFCAAIBA2AgxBACEQDL4BCyAAKAIEIQQgAEEANgIEAkAgACAEIAEQrYCAgAAiBA0AIAEhAQytAQsgAEHZADYCHCAAIAE2AhQgACAENgIMQQAhEAy9AQsgACgCBCEEIABBADYCBAJAIAAgBCABEK2AgIAAIgQNACABIQEMqwELIABB2gA2AhwgACABNgIUIAAgBDYCDEEAIRAMvAELIAAoAgQhBCAAQQA2AgQCQCAAIAQgARCtgICAACIEDQAgASEBDKkBCyAAQdwANgIcIAAgATYCFCAAIAQ2AgxBACEQDLsBCwJAIAEtAABBUGoiEEH/AXFBCk8NACAAIBA6ACogAUEBaiEBQc8AIRAMogELIAAoAgQhBCAAQQA2AgQCQCAAIAQgARCtgICAACIEDQAgASEBDKcBCyAAQd4ANgIcIAAgATYCFCAAIAQ2AgxBACEQDLoBCyAAQQA2AgAgF0EBaiEBAkAgAC0AKUEjTw0AIAEhAQxZCyAAQQA2AhwgACABNgIUIABB04mAgAA2AhAgAEEINgIMQQAhEAy5AQsgAEEANgIAC0EAIRAgAEEANgIcIAAgATYCFCAAQZCzgIAANgIQIABBCDYCDAy3AQsgAEEANgIAIBdBAWohAQJAIAAtAClBIUcNACABIQEMVgsgAEEANgIcIAAgATYCFCAAQZuKgIAANgIQIABBCDYCDEEAIRAMtgELIABBADYCACAXQQFqIQECQCAALQApIhBBXWpBC08NACABIQEMVQsCQCAQQQZLDQBBASAQdEHKAHFFDQAgASEBDFULQQAhECAAQQA2AhwgACABNgIUIABB94mAgAA2AhAgAEEINgIMDLUBCyAQQRVGDXEgAEEANgIcIAAgATYCFCAAQbmNgIAANgIQIABBGjYCDEEAIRAMtAELIAAoAgQhECAAQQA2AgQCQCAAIBAgARCngICAACIQDQAgASEBDFQLIABB5QA2AhwgACABNgIUIAAgEDYCDEEAIRAMswELIAAoAgQhECAAQQA2AgQCQCAAIBAgARCngICAACIQDQAgASEBDE0LIABB0gA2AhwgACABNgIUIAAgEDYCDEEAIRAMsgELIAAoAgQhECAAQQA2AgQCQCAAIBAgARCngICAACIQDQAgASEBDE0LIABB0wA2AhwgACABNgIUIAAgEDYCDEEAIRAMsQELIAAoAgQhECAAQQA2AgQCQCAAIBAgARCngICAACIQDQAgASEBDFELIABB5QA2AhwgACABNgIUIAAgEDYCDEEAIRAMsAELIABBADYCHCAAIAE2AhQgAEHGioCAADYCECAAQQc2AgxBACEQDK8BCyAAKAIEIRAgAEEANgIEAkAgACAQIAEQp4CAgAAiEA0AIAEhAQxJCyAAQdIANgIcIAAgATYCFCAAIBA2AgxBACEQDK4BCyAAKAIEIRAgAEEANgIEAkAgACAQIAEQp4CAgAAiEA0AIAEhAQxJCyAAQdMANgIcIAAgATYCFCAAIBA2AgxBACEQDK0BCyAAKAIEIRAgAEEANgIEAkAgACAQIAEQp4CAgAAiEA0AIAEhAQxNCyAAQeUANgIcIAAgATYCFCAAIBA2AgxBACEQDKwBCyAAQQA2AhwgACABNgIUIABB3IiAgAA2AhAgAEEHNgIMQQAhEAyrAQsgEEE/Rw0BIAFBAWohAQtBBSEQDJABC0EAIRAgAEEANgIcIAAgATYCFCAAQf2SgIAANgIQIABBBzYCDAyoAQsgACgCBCEQIABBADYCBAJAIAAgECABEKeAgIAAIhANACABIQEMQgsgAEHSADYCHCAAIAE2AhQgACAQNgIMQQAhEAynAQsgACgCBCEQIABBADYCBAJAIAAgECABEKeAgIAAIhANACABIQEMQgsgAEHTADYCHCAAIAE2AhQgACAQNgIMQQAhEAymAQsgACgCBCEQIABBADYCBAJAIAAgECABEKeAgIAAIhANACABIQEMRgsgAEHlADYCHCAAIAE2AhQgACAQNgIMQQAhEAylAQsgACgCBCEBIABBADYCBAJAIAAgASAUEKeAgIAAIgENACAUIQEMPwsgAEHSADYCHCAAIBQ2AhQgACABNgIMQQAhEAykAQsgACgCBCEBIABBADYCBAJAIAAgASAUEKeAgIAAIgENACAUIQEMPwsgAEHTADYCHCAAIBQ2AhQgACABNgIMQQAhEAyjAQsgACgCBCEBIABBADYCBAJAIAAgASAUEKeAgIAAIgENACAUIQEMQwsgAEHlADYCHCAAIBQ2AhQgACABNgIMQQAhEAyiAQsgAEEANgIcIAAgFDYCFCAAQcOPgIAANgIQIABBBzYCDEEAIRAMoQELIABBADYCHCAAIAE2AhQgAEHDj4CAADYCECAAQQc2AgxBACEQDKABC0EAIRAgAEEANgIcIAAgFDYCFCAAQYycgIAANgIQIABBBzYCDAyfAQsgAEEANgIcIAAgFDYCFCAAQYycgIAANgIQIABBBzYCDEEAIRAMngELIABBADYCHCAAIBQ2AhQgAEH+kYCAADYCECAAQQc2AgxBACEQDJ0BCyAAQQA2AhwgACABNgIUIABBjpuAgAA2AhAgAEEGNgIMQQAhEAycAQsgEEEVRg1XIABBADYCHCAAIAE2AhQgAEHMjoCAADYCECAAQSA2AgxBACEQDJsBCyAAQQA2AgAgEEEBaiEBQSQhEAsgACAQOgApIAAoAgQhECAAQQA2AgQgACAQIAEQq4CAgAAiEA1UIAEhAQw+CyAAQQA2AgALQQAhECAAQQA2AhwgACAENgIUIABB8ZuAgAA2AhAgAEEGNgIMDJcBCyABQRVGDVAgAEEANgIcIAAgBTYCFCAAQfCMgIAANgIQIABBGzYCDEEAIRAMlgELIAAoAgQhBSAAQQA2AgQgACAFIBAQqYCAgAAiBQ0BIBBBAWohBQtBrQEhEAx7CyAAQcEBNgIcIAAgBTYCDCAAIBBBAWo2AhRBACEQDJMBCyAAKAIEIQYgAEEANgIEIAAgBiAQEKmAgIAAIgYNASAQQQFqIQYLQa4BIRAMeAsgAEHCATYCHCAAIAY2AgwgACAQQQFqNgIUQQAhEAyQAQsgAEEANgIcIAAgBzYCFCAAQZeLgIAANgIQIABBDTYCDEEAIRAMjwELIABBADYCHCAAIAg2AhQgAEHjkICAADYCECAAQQk2AgxBACEQDI4BCyAAQQA2AhwgACAINgIUIABBlI2AgAA2AhAgAEEhNgIMQQAhEAyNAQtBASEWQQAhF0EAIRRBASEQCyAAIBA6ACsgCUEBaiEIAkACQCAALQAtQRBxDQACQAJAAkAgAC0AKg4DAQACBAsgFkUNAwwCCyAUDQEMAgsgF0UNAQsgACgCBCEQIABBADYCBCAAIBAgCBCtgICAACIQRQ09IABByQE2AhwgACAINgIUIAAgEDYCDEEAIRAMjAELIAAoAgQhBCAAQQA2AgQgACAEIAgQrYCAgAAiBEUNdiAAQcoBNgIcIAAgCDYCFCAAIAQ2AgxBACEQDIsBCyAAKAIEIQQgAEEANgIEIAAgBCAJEK2AgIAAIgRFDXQgAEHLATYCHCAAIAk2AhQgACAENgIMQQAhEAyKAQsgACgCBCEEIABBADYCBCAAIAQgChCtgICAACIERQ1yIABBzQE2AhwgACAKNgIUIAAgBDYCDEEAIRAMiQELAkAgCy0AAEFQaiIQQf8BcUEKTw0AIAAgEDoAKiALQQFqIQpBtgEhEAxwCyAAKAIEIQQgAEEANgIEIAAgBCALEK2AgIAAIgRFDXAgAEHPATYCHCAAIAs2AhQgACAENgIMQQAhEAyIAQsgAEEANgIcIAAgBDYCFCAAQZCzgIAANgIQIABBCDYCDCAAQQA2AgBBACEQDIcBCyABQRVGDT8gAEEANgIcIAAgDDYCFCAAQcyOgIAANgIQIABBIDYCDEEAIRAMhgELIABBgQQ7ASggACgCBCEQIABCADcDACAAIBAgDEEBaiIMEKuAgIAAIhBFDTggAEHTATYCHCAAIAw2AhQgACAQNgIMQQAhEAyFAQsgAEEANgIAC0EAIRAgAEEANgIcIAAgBDYCFCAAQdibgIAANgIQIABBCDYCDAyDAQsgACgCBCEQIABCADcDACAAIBAgC0EBaiILEKuAgIAAIhANAUHGASEQDGkLIABBAjoAKAxVCyAAQdUBNgIcIAAgCzYCFCAAIBA2AgxBACEQDIABCyAQQRVGDTcgAEEANgIcIAAgBDYCFCAAQaSMgIAANgIQIABBEDYCDEEAIRAMfwsgAC0ANEEBRw00IAAgBCACELyAgIAAIhBFDTQgEEEVRw01IABB3AE2AhwgACAENgIUIABB1ZaAgAA2AhAgAEEVNgIMQQAhEAx+C0EAIRAgAEEANgIcIABBr4uAgAA2AhAgAEECNgIMIAAgFEEBajYCFAx9C0EAIRAMYwtBAiEQDGILQQ0hEAxhC0EPIRAMYAtBJSEQDF8LQRMhEAxeC0EVIRAMXQtBFiEQDFwLQRchEAxbC0EYIRAMWgtBGSEQDFkLQRohEAxYC0EbIRAMVwtBHCEQDFYLQR0hEAxVC0EfIRAMVAtBISEQDFMLQSMhEAxSC0HGACEQDFELQS4hEAxQC0EvIRAMTwtBOyEQDE4LQT0hEAxNC0HIACEQDEwLQckAIRAMSwtBywAhEAxKC0HMACEQDEkLQc4AIRAMSAtB0QAhEAxHC0HVACEQDEYLQdgAIRAMRQtB2QAhEAxEC0HbACEQDEMLQeQAIRAMQgtB5QAhEAxBC0HxACEQDEALQfQAIRAMPwtBjQEhEAw+C0GXASEQDD0LQakBIRAMPAtBrAEhEAw7C0HAASEQDDoLQbkBIRAMOQtBrwEhEAw4C0GxASEQDDcLQbIBIRAMNgtBtAEhEAw1C0G1ASEQDDQLQboBIRAMMwtBvQEhEAwyC0G/ASEQDDELQcEBIRAMMAsgAEEANgIcIAAgBDYCFCAAQemLgIAANgIQIABBHzYCDEEAIRAMSAsgAEHbATYCHCAAIAQ2AhQgAEH6loCAADYCECAAQRU2AgxBACEQDEcLIABB+AA2AhwgACAMNgIUIABBypiAgAA2AhAgAEEVNgIMQQAhEAxGCyAAQdEANgIcIAAgBTYCFCAAQbCXgIAANgIQIABBFTYCDEEAIRAMRQsgAEH5ADYCHCAAIAE2AhQgACAQNgIMQQAhEAxECyAAQfgANgIcIAAgATYCFCAAQcqYgIAANgIQIABBFTYCDEEAIRAMQwsgAEHkADYCHCAAIAE2AhQgAEHjl4CAADYCECAAQRU2AgxBACEQDEILIABB1wA2AhwgACABNgIUIABByZeAgAA2AhAgAEEVNgIMQQAhEAxBCyAAQQA2AhwgACABNgIUIABBuY2AgAA2AhAgAEEaNgIMQQAhEAxACyAAQcIANgIcIAAgATYCFCAAQeOYgIAANgIQIABBFTYCDEEAIRAMPwsgAEEANgIEIAAgDyAPELGAgIAAIgRFDQEgAEE6NgIcIAAgBDYCDCAAIA9BAWo2AhRBACEQDD4LIAAoAgQhBCAAQQA2AgQCQCAAIAQgARCxgICAACIERQ0AIABBOzYCHCAAIAQ2AgwgACABQQFqNgIUQQAhEAw+CyABQQFqIQEMLQsgD0EBaiEBDC0LIABBADYCHCAAIA82AhQgAEHkkoCAADYCECAAQQQ2AgxBACEQDDsLIABBNjYCHCAAIAQ2AhQgACACNgIMQQAhEAw6CyAAQS42AhwgACAONgIUIAAgBDYCDEEAIRAMOQsgAEHQADYCHCAAIAE2AhQgAEGRmICAADYCECAAQRU2AgxBACEQDDgLIA1BAWohAQwsCyAAQRU2AhwgACABNgIUIABBgpmAgAA2AhAgAEEVNgIMQQAhEAw2CyAAQRs2AhwgACABNgIUIABBkZeAgAA2AhAgAEEVNgIMQQAhEAw1CyAAQQ82AhwgACABNgIUIABBkZeAgAA2AhAgAEEVNgIMQQAhEAw0CyAAQQs2AhwgACABNgIUIABBkZeAgAA2AhAgAEEVNgIMQQAhEAwzCyAAQRo2AhwgACABNgIUIABBgpmAgAA2AhAgAEEVNgIMQQAhEAwyCyAAQQs2AhwgACABNgIUIABBgpmAgAA2AhAgAEEVNgIMQQAhEAwxCyAAQQo2AhwgACABNgIUIABB5JaAgAA2AhAgAEEVNgIMQQAhEAwwCyAAQR42AhwgACABNgIUIABB+ZeAgAA2AhAgAEEVNgIMQQAhEAwvCyAAQQA2AhwgACAQNgIUIABB2o2AgAA2AhAgAEEUNgIMQQAhEAwuCyAAQQQ2AhwgACABNgIUIABBsJiAgAA2AhAgAEEVNgIMQQAhEAwtCyAAQQA2AgAgC0EBaiELC0G4ASEQDBILIABBADYCACAQQQFqIQFB9QAhEAwRCyABIQECQCAALQApQQVHDQBB4wAhEAwRC0HiACEQDBALQQAhECAAQQA2AhwgAEHkkYCAADYCECAAQQc2AgwgACAUQQFqNgIUDCgLIABBADYCACAXQQFqIQFBwAAhEAwOC0EBIQELIAAgAToALCAAQQA2AgAgF0EBaiEBC0EoIRAMCwsgASEBC0E4IRAMCQsCQCABIg8gAkYNAANAAkAgDy0AAEGAvoCAAGotAAAiAUEBRg0AIAFBAkcNAyAPQQFqIQEMBAsgD0EBaiIPIAJHDQALQT4hEAwiC0E+IRAMIQsgAEEAOgAsIA8hAQwBC0ELIRAMBgtBOiEQDAULIAFBAWohAUEtIRAMBAsgACABOgAsIABBADYCACAWQQFqIQFBDCEQDAMLIABBADYCACAXQQFqIQFBCiEQDAILIABBADYCAAsgAEEAOgAsIA0hAUEJIRAMAAsLQQAhECAAQQA2AhwgACALNgIUIABBzZCAgAA2AhAgAEEJNgIMDBcLQQAhECAAQQA2AhwgACAKNgIUIABB6YqAgAA2AhAgAEEJNgIMDBYLQQAhECAAQQA2AhwgACAJNgIUIABBt5CAgAA2AhAgAEEJNgIMDBULQQAhECAAQQA2AhwgACAINgIUIABBnJGAgAA2AhAgAEEJNgIMDBQLQQAhECAAQQA2AhwgACABNgIUIABBzZCAgAA2AhAgAEEJNgIMDBMLQQAhECAAQQA2AhwgACABNgIUIABB6YqAgAA2AhAgAEEJNgIMDBILQQAhECAAQQA2AhwgACABNgIUIABBt5CAgAA2AhAgAEEJNgIMDBELQQAhECAAQQA2AhwgACABNgIUIABBnJGAgAA2AhAgAEEJNgIMDBALQQAhECAAQQA2AhwgACABNgIUIABBl5WAgAA2AhAgAEEPNgIMDA8LQQAhECAAQQA2AhwgACABNgIUIABBl5WAgAA2AhAgAEEPNgIMDA4LQQAhECAAQQA2AhwgACABNgIUIABBwJKAgAA2AhAgAEELNgIMDA0LQQAhECAAQQA2AhwgACABNgIUIABBlYmAgAA2AhAgAEELNgIMDAwLQQAhECAAQQA2AhwgACABNgIUIABB4Y+AgAA2AhAgAEEKNgIMDAsLQQAhECAAQQA2AhwgACABNgIUIABB+4+AgAA2AhAgAEEKNgIMDAoLQQAhECAAQQA2AhwgACABNgIUIABB8ZmAgAA2AhAgAEECNgIMDAkLQQAhECAAQQA2AhwgACABNgIUIABBxJSAgAA2AhAgAEECNgIMDAgLQQAhECAAQQA2AhwgACABNgIUIABB8pWAgAA2AhAgAEECNgIMDAcLIABBAjYCHCAAIAE2AhQgAEGcmoCAADYCECAAQRY2AgxBACEQDAYLQQEhEAwFC0HUACEQIAEiBCACRg0EIANBCGogACAEIAJB2MKAgABBChDFgICAACADKAIMIQQgAygCCA4DAQQCAAsQyoCAgAAACyAAQQA2AhwgAEG1moCAADYCECAAQRc2AgwgACAEQQFqNgIUQQAhEAwCCyAAQQA2AhwgACAENgIUIABBypqAgAA2AhAgAEEJNgIMQQAhEAwBCwJAIAEiBCACRw0AQSIhEAwBCyAAQYmAgIAANgIIIAAgBDYCBEEhIRALIANBEGokgICAgAAgEAuvAQECfyABKAIAIQYCQAJAIAIgA0YNACAEIAZqIQQgBiADaiACayEHIAIgBkF/cyAFaiIGaiEFA0ACQCACLQAAIAQtAABGDQBBAiEEDAMLAkAgBg0AQQAhBCAFIQIMAwsgBkF/aiEGIARBAWohBCACQQFqIgIgA0cNAAsgByEGIAMhAgsgAEEBNgIAIAEgBjYCACAAIAI2AgQPCyABQQA2AgAgACAENgIAIAAgAjYCBAsKACAAEMeAgIAAC/I2AQt/I4CAgIAAQRBrIgEkgICAgAACQEEAKAKg0ICAAA0AQQAQy4CAgABBgNSEgABrIgJB2QBJDQBBACEDAkBBACgC4NOAgAAiBA0AQQBCfzcC7NOAgABBAEKAgISAgIDAADcC5NOAgABBACABQQhqQXBxQdiq1aoFcyIENgLg04CAAEEAQQA2AvTTgIAAQQBBADYCxNOAgAALQQAgAjYCzNOAgABBAEGA1ISAADYCyNOAgABBAEGA1ISAADYCmNCAgABBACAENgKs0ICAAEEAQX82AqjQgIAAA0AgA0HE0ICAAGogA0G40ICAAGoiBDYCACAEIANBsNCAgABqIgU2AgAgA0G80ICAAGogBTYCACADQczQgIAAaiADQcDQgIAAaiIFNgIAIAUgBDYCACADQdTQgIAAaiADQcjQgIAAaiIENgIAIAQgBTYCACADQdDQgIAAaiAENgIAIANBIGoiA0GAAkcNAAtBgNSEgABBeEGA1ISAAGtBD3FBAEGA1ISAAEEIakEPcRsiA2oiBEEEaiACQUhqIgUgA2siA0EBcjYCAEEAQQAoAvDTgIAANgKk0ICAAEEAIAM2ApTQgIAAQQAgBDYCoNCAgABBgNSEgAAgBWpBODYCBAsCQAJAAkACQAJAAkACQAJAAkACQAJAAkAgAEHsAUsNAAJAQQAoAojQgIAAIgZBECAAQRNqQXBxIABBC0kbIgJBA3YiBHYiA0EDcUUNAAJAAkAgA0EBcSAEckEBcyIFQQN0IgRBsNCAgABqIgMgBEG40ICAAGooAgAiBCgCCCICRw0AQQAgBkF+IAV3cTYCiNCAgAAMAQsgAyACNgIIIAIgAzYCDAsgBEEIaiEDIAQgBUEDdCIFQQNyNgIEIAQgBWoiBCAEKAIEQQFyNgIEDAwLIAJBACgCkNCAgAAiB00NAQJAIANFDQACQAJAIAMgBHRBAiAEdCIDQQAgA2tycSIDQQAgA2txQX9qIgMgA0EMdkEQcSIDdiIEQQV2QQhxIgUgA3IgBCAFdiIDQQJ2QQRxIgRyIAMgBHYiA0EBdkECcSIEciADIAR2IgNBAXZBAXEiBHIgAyAEdmoiBEEDdCIDQbDQgIAAaiIFIANBuNCAgABqKAIAIgMoAggiAEcNAEEAIAZBfiAEd3EiBjYCiNCAgAAMAQsgBSAANgIIIAAgBTYCDAsgAyACQQNyNgIEIAMgBEEDdCIEaiAEIAJrIgU2AgAgAyACaiIAIAVBAXI2AgQCQCAHRQ0AIAdBeHFBsNCAgABqIQJBACgCnNCAgAAhBAJAAkAgBkEBIAdBA3Z0IghxDQBBACAGIAhyNgKI0ICAACACIQgMAQsgAigCCCEICyAIIAQ2AgwgAiAENgIIIAQgAjYCDCAEIAg2AggLIANBCGohA0EAIAA2ApzQgIAAQQAgBTYCkNCAgAAMDAtBACgCjNCAgAAiCUUNASAJQQAgCWtxQX9qIgMgA0EMdkEQcSIDdiIEQQV2QQhxIgUgA3IgBCAFdiIDQQJ2QQRxIgRyIAMgBHYiA0EBdkECcSIEciADIAR2IgNBAXZBAXEiBHIgAyAEdmpBAnRBuNKAgABqKAIAIgAoAgRBeHEgAmshBCAAIQUCQANAAkAgBSgCECIDDQAgBUEUaigCACIDRQ0CCyADKAIEQXhxIAJrIgUgBCAFIARJIgUbIQQgAyAAIAUbIQAgAyEFDAALCyAAKAIYIQoCQCAAKAIMIgggAEYNACAAKAIIIgNBACgCmNCAgABJGiAIIAM2AgggAyAINgIMDAsLAkAgAEEUaiIFKAIAIgMNACAAKAIQIgNFDQMgAEEQaiEFCwNAIAUhCyADIghBFGoiBSgCACIDDQAgCEEQaiEFIAgoAhAiAw0ACyALQQA2AgAMCgtBfyECIABBv39LDQAgAEETaiIDQXBxIQJBACgCjNCAgAAiB0UNAEEAIQsCQCACQYACSQ0AQR8hCyACQf///wdLDQAgA0EIdiIDIANBgP4/akEQdkEIcSIDdCIEIARBgOAfakEQdkEEcSIEdCIFIAVBgIAPakEQdkECcSIFdEEPdiADIARyIAVyayIDQQF0IAIgA0EVanZBAXFyQRxqIQsLQQAgAmshBAJAAkACQAJAIAtBAnRBuNKAgABqKAIAIgUNAEEAIQNBACEIDAELQQAhAyACQQBBGSALQQF2ayALQR9GG3QhAEEAIQgDQAJAIAUoAgRBeHEgAmsiBiAETw0AIAYhBCAFIQggBg0AQQAhBCAFIQggBSEDDAMLIAMgBUEUaigCACIGIAYgBSAAQR12QQRxakEQaigCACIFRhsgAyAGGyEDIABBAXQhACAFDQALCwJAIAMgCHINAEEAIQhBAiALdCIDQQAgA2tyIAdxIgNFDQMgA0EAIANrcUF/aiIDIANBDHZBEHEiA3YiBUEFdkEIcSIAIANyIAUgAHYiA0ECdkEEcSIFciADIAV2IgNBAXZBAnEiBXIgAyAFdiIDQQF2QQFxIgVyIAMgBXZqQQJ0QbjSgIAAaigCACEDCyADRQ0BCwNAIAMoAgRBeHEgAmsiBiAESSEAAkAgAygCECIFDQAgA0EUaigCACEFCyAGIAQgABshBCADIAggABshCCAFIQMgBQ0ACwsgCEUNACAEQQAoApDQgIAAIAJrTw0AIAgoAhghCwJAIAgoAgwiACAIRg0AIAgoAggiA0EAKAKY0ICAAEkaIAAgAzYCCCADIAA2AgwMCQsCQCAIQRRqIgUoAgAiAw0AIAgoAhAiA0UNAyAIQRBqIQULA0AgBSEGIAMiAEEUaiIFKAIAIgMNACAAQRBqIQUgACgCECIDDQALIAZBADYCAAwICwJAQQAoApDQgIAAIgMgAkkNAEEAKAKc0ICAACEEAkACQCADIAJrIgVBEEkNACAEIAJqIgAgBUEBcjYCBEEAIAU2ApDQgIAAQQAgADYCnNCAgAAgBCADaiAFNgIAIAQgAkEDcjYCBAwBCyAEIANBA3I2AgQgBCADaiIDIAMoAgRBAXI2AgRBAEEANgKc0ICAAEEAQQA2ApDQgIAACyAEQQhqIQMMCgsCQEEAKAKU0ICAACIAIAJNDQBBACgCoNCAgAAiAyACaiIEIAAgAmsiBUEBcjYCBEEAIAU2ApTQgIAAQQAgBDYCoNCAgAAgAyACQQNyNgIEIANBCGohAwwKCwJAAkBBACgC4NOAgABFDQBBACgC6NOAgAAhBAwBC0EAQn83AuzTgIAAQQBCgICEgICAwAA3AuTTgIAAQQAgAUEMakFwcUHYqtWqBXM2AuDTgIAAQQBBADYC9NOAgABBAEEANgLE04CAAEGAgAQhBAtBACEDAkAgBCACQccAaiIHaiIGQQAgBGsiC3EiCCACSw0AQQBBMDYC+NOAgAAMCgsCQEEAKALA04CAACIDRQ0AAkBBACgCuNOAgAAiBCAIaiIFIARNDQAgBSADTQ0BC0EAIQNBAEEwNgL404CAAAwKC0EALQDE04CAAEEEcQ0EAkACQAJAQQAoAqDQgIAAIgRFDQBByNOAgAAhAwNAAkAgAygCACIFIARLDQAgBSADKAIEaiAESw0DCyADKAIIIgMNAAsLQQAQy4CAgAAiAEF/Rg0FIAghBgJAQQAoAuTTgIAAIgNBf2oiBCAAcUUNACAIIABrIAQgAGpBACADa3FqIQYLIAYgAk0NBSAGQf7///8HSw0FAkBBACgCwNOAgAAiA0UNAEEAKAK404CAACIEIAZqIgUgBE0NBiAFIANLDQYLIAYQy4CAgAAiAyAARw0BDAcLIAYgAGsgC3EiBkH+////B0sNBCAGEMuAgIAAIgAgAygCACADKAIEakYNAyAAIQMLAkAgA0F/Rg0AIAJByABqIAZNDQACQCAHIAZrQQAoAujTgIAAIgRqQQAgBGtxIgRB/v///wdNDQAgAyEADAcLAkAgBBDLgICAAEF/Rg0AIAQgBmohBiADIQAMBwtBACAGaxDLgICAABoMBAsgAyEAIANBf0cNBQwDC0EAIQgMBwtBACEADAULIABBf0cNAgtBAEEAKALE04CAAEEEcjYCxNOAgAALIAhB/v///wdLDQEgCBDLgICAACEAQQAQy4CAgAAhAyAAQX9GDQEgA0F/Rg0BIAAgA08NASADIABrIgYgAkE4ak0NAQtBAEEAKAK404CAACAGaiIDNgK404CAAAJAIANBACgCvNOAgABNDQBBACADNgK804CAAAsCQAJAAkACQEEAKAKg0ICAACIERQ0AQcjTgIAAIQMDQCAAIAMoAgAiBSADKAIEIghqRg0CIAMoAggiAw0ADAMLCwJAAkBBACgCmNCAgAAiA0UNACAAIANPDQELQQAgADYCmNCAgAALQQAhA0EAIAY2AszTgIAAQQAgADYCyNOAgABBAEF/NgKo0ICAAEEAQQAoAuDTgIAANgKs0ICAAEEAQQA2AtTTgIAAA0AgA0HE0ICAAGogA0G40ICAAGoiBDYCACAEIANBsNCAgABqIgU2AgAgA0G80ICAAGogBTYCACADQczQgIAAaiADQcDQgIAAaiIFNgIAIAUgBDYCACADQdTQgIAAaiADQcjQgIAAaiIENgIAIAQgBTYCACADQdDQgIAAaiAENgIAIANBIGoiA0GAAkcNAAsgAEF4IABrQQ9xQQAgAEEIakEPcRsiA2oiBCAGQUhqIgUgA2siA0EBcjYCBEEAQQAoAvDTgIAANgKk0ICAAEEAIAM2ApTQgIAAQQAgBDYCoNCAgAAgACAFakE4NgIEDAILIAMtAAxBCHENACAEIAVJDQAgBCAATw0AIARBeCAEa0EPcUEAIARBCGpBD3EbIgVqIgBBACgClNCAgAAgBmoiCyAFayIFQQFyNgIEIAMgCCAGajYCBEEAQQAoAvDTgIAANgKk0ICAAEEAIAU2ApTQgIAAQQAgADYCoNCAgAAgBCALakE4NgIEDAELAkAgAEEAKAKY0ICAACIITw0AQQAgADYCmNCAgAAgACEICyAAIAZqIQVByNOAgAAhAwJAAkACQAJAAkACQAJAA0AgAygCACAFRg0BIAMoAggiAw0ADAILCyADLQAMQQhxRQ0BC0HI04CAACEDA0ACQCADKAIAIgUgBEsNACAFIAMoAgRqIgUgBEsNAwsgAygCCCEDDAALCyADIAA2AgAgAyADKAIEIAZqNgIEIABBeCAAa0EPcUEAIABBCGpBD3EbaiILIAJBA3I2AgQgBUF4IAVrQQ9xQQAgBUEIakEPcRtqIgYgCyACaiICayEDAkAgBiAERw0AQQAgAjYCoNCAgABBAEEAKAKU0ICAACADaiIDNgKU0ICAACACIANBAXI2AgQMAwsCQCAGQQAoApzQgIAARw0AQQAgAjYCnNCAgABBAEEAKAKQ0ICAACADaiIDNgKQ0ICAACACIANBAXI2AgQgAiADaiADNgIADAMLAkAgBigCBCIEQQNxQQFHDQAgBEF4cSEHAkACQCAEQf8BSw0AIAYoAggiBSAEQQN2IghBA3RBsNCAgABqIgBGGgJAIAYoAgwiBCAFRw0AQQBBACgCiNCAgABBfiAId3E2AojQgIAADAILIAQgAEYaIAQgBTYCCCAFIAQ2AgwMAQsgBigCGCEJAkACQCAGKAIMIgAgBkYNACAGKAIIIgQgCEkaIAAgBDYCCCAEIAA2AgwMAQsCQCAGQRRqIgQoAgAiBQ0AIAZBEGoiBCgCACIFDQBBACEADAELA0AgBCEIIAUiAEEUaiIEKAIAIgUNACAAQRBqIQQgACgCECIFDQALIAhBADYCAAsgCUUNAAJAAkAgBiAGKAIcIgVBAnRBuNKAgABqIgQoAgBHDQAgBCAANgIAIAANAUEAQQAoAozQgIAAQX4gBXdxNgKM0ICAAAwCCyAJQRBBFCAJKAIQIAZGG2ogADYCACAARQ0BCyAAIAk2AhgCQCAGKAIQIgRFDQAgACAENgIQIAQgADYCGAsgBigCFCIERQ0AIABBFGogBDYCACAEIAA2AhgLIAcgA2ohAyAGIAdqIgYoAgQhBAsgBiAEQX5xNgIEIAIgA2ogAzYCACACIANBAXI2AgQCQCADQf8BSw0AIANBeHFBsNCAgABqIQQCQAJAQQAoAojQgIAAIgVBASADQQN2dCIDcQ0AQQAgBSADcjYCiNCAgAAgBCEDDAELIAQoAgghAwsgAyACNgIMIAQgAjYCCCACIAQ2AgwgAiADNgIIDAMLQR8hBAJAIANB////B0sNACADQQh2IgQgBEGA/j9qQRB2QQhxIgR0IgUgBUGA4B9qQRB2QQRxIgV0IgAgAEGAgA9qQRB2QQJxIgB0QQ92IAQgBXIgAHJrIgRBAXQgAyAEQRVqdkEBcXJBHGohBAsgAiAENgIcIAJCADcCECAEQQJ0QbjSgIAAaiEFAkBBACgCjNCAgAAiAEEBIAR0IghxDQAgBSACNgIAQQAgACAIcjYCjNCAgAAgAiAFNgIYIAIgAjYCCCACIAI2AgwMAwsgA0EAQRkgBEEBdmsgBEEfRht0IQQgBSgCACEAA0AgACIFKAIEQXhxIANGDQIgBEEddiEAIARBAXQhBCAFIABBBHFqQRBqIggoAgAiAA0ACyAIIAI2AgAgAiAFNgIYIAIgAjYCDCACIAI2AggMAgsgAEF4IABrQQ9xQQAgAEEIakEPcRsiA2oiCyAGQUhqIgggA2siA0EBcjYCBCAAIAhqQTg2AgQgBCAFQTcgBWtBD3FBACAFQUlqQQ9xG2pBQWoiCCAIIARBEGpJGyIIQSM2AgRBAEEAKALw04CAADYCpNCAgABBACADNgKU0ICAAEEAIAs2AqDQgIAAIAhBEGpBACkC0NOAgAA3AgAgCEEAKQLI04CAADcCCEEAIAhBCGo2AtDTgIAAQQAgBjYCzNOAgABBACAANgLI04CAAEEAQQA2AtTTgIAAIAhBJGohAwNAIANBBzYCACADQQRqIgMgBUkNAAsgCCAERg0DIAggCCgCBEF+cTYCBCAIIAggBGsiADYCACAEIABBAXI2AgQCQCAAQf8BSw0AIABBeHFBsNCAgABqIQMCQAJAQQAoAojQgIAAIgVBASAAQQN2dCIAcQ0AQQAgBSAAcjYCiNCAgAAgAyEFDAELIAMoAgghBQsgBSAENgIMIAMgBDYCCCAEIAM2AgwgBCAFNgIIDAQLQR8hAwJAIABB////B0sNACAAQQh2IgMgA0GA/j9qQRB2QQhxIgN0IgUgBUGA4B9qQRB2QQRxIgV0IgggCEGAgA9qQRB2QQJxIgh0QQ92IAMgBXIgCHJrIgNBAXQgACADQRVqdkEBcXJBHGohAwsgBCADNgIcIARCADcCECADQQJ0QbjSgIAAaiEFAkBBACgCjNCAgAAiCEEBIAN0IgZxDQAgBSAENgIAQQAgCCAGcjYCjNCAgAAgBCAFNgIYIAQgBDYCCCAEIAQ2AgwMBAsgAEEAQRkgA0EBdmsgA0EfRht0IQMgBSgCACEIA0AgCCIFKAIEQXhxIABGDQMgA0EddiEIIANBAXQhAyAFIAhBBHFqQRBqIgYoAgAiCA0ACyAGIAQ2AgAgBCAFNgIYIAQgBDYCDCAEIAQ2AggMAwsgBSgCCCIDIAI2AgwgBSACNgIIIAJBADYCGCACIAU2AgwgAiADNgIICyALQQhqIQMMBQsgBSgCCCIDIAQ2AgwgBSAENgIIIARBADYCGCAEIAU2AgwgBCADNgIIC0EAKAKU0ICAACIDIAJNDQBBACgCoNCAgAAiBCACaiIFIAMgAmsiA0EBcjYCBEEAIAM2ApTQgIAAQQAgBTYCoNCAgAAgBCACQQNyNgIEIARBCGohAwwDC0EAIQNBAEEwNgL404CAAAwCCwJAIAtFDQACQAJAIAggCCgCHCIFQQJ0QbjSgIAAaiIDKAIARw0AIAMgADYCACAADQFBACAHQX4gBXdxIgc2AozQgIAADAILIAtBEEEUIAsoAhAgCEYbaiAANgIAIABFDQELIAAgCzYCGAJAIAgoAhAiA0UNACAAIAM2AhAgAyAANgIYCyAIQRRqKAIAIgNFDQAgAEEUaiADNgIAIAMgADYCGAsCQAJAIARBD0sNACAIIAQgAmoiA0EDcjYCBCAIIANqIgMgAygCBEEBcjYCBAwBCyAIIAJqIgAgBEEBcjYCBCAIIAJBA3I2AgQgACAEaiAENgIAAkAgBEH/AUsNACAEQXhxQbDQgIAAaiEDAkACQEEAKAKI0ICAACIFQQEgBEEDdnQiBHENAEEAIAUgBHI2AojQgIAAIAMhBAwBCyADKAIIIQQLIAQgADYCDCADIAA2AgggACADNgIMIAAgBDYCCAwBC0EfIQMCQCAEQf///wdLDQAgBEEIdiIDIANBgP4/akEQdkEIcSIDdCIFIAVBgOAfakEQdkEEcSIFdCICIAJBgIAPakEQdkECcSICdEEPdiADIAVyIAJyayIDQQF0IAQgA0EVanZBAXFyQRxqIQMLIAAgAzYCHCAAQgA3AhAgA0ECdEG40oCAAGohBQJAIAdBASADdCICcQ0AIAUgADYCAEEAIAcgAnI2AozQgIAAIAAgBTYCGCAAIAA2AgggACAANgIMDAELIARBAEEZIANBAXZrIANBH0YbdCEDIAUoAgAhAgJAA0AgAiIFKAIEQXhxIARGDQEgA0EddiECIANBAXQhAyAFIAJBBHFqQRBqIgYoAgAiAg0ACyAGIAA2AgAgACAFNgIYIAAgADYCDCAAIAA2AggMAQsgBSgCCCIDIAA2AgwgBSAANgIIIABBADYCGCAAIAU2AgwgACADNgIICyAIQQhqIQMMAQsCQCAKRQ0AAkACQCAAIAAoAhwiBUECdEG40oCAAGoiAygCAEcNACADIAg2AgAgCA0BQQAgCUF+IAV3cTYCjNCAgAAMAgsgCkEQQRQgCigCECAARhtqIAg2AgAgCEUNAQsgCCAKNgIYAkAgACgCECIDRQ0AIAggAzYCECADIAg2AhgLIABBFGooAgAiA0UNACAIQRRqIAM2AgAgAyAINgIYCwJAAkAgBEEPSw0AIAAgBCACaiIDQQNyNgIEIAAgA2oiAyADKAIEQQFyNgIEDAELIAAgAmoiBSAEQQFyNgIEIAAgAkEDcjYCBCAFIARqIAQ2AgACQCAHRQ0AIAdBeHFBsNCAgABqIQJBACgCnNCAgAAhAwJAAkBBASAHQQN2dCIIIAZxDQBBACAIIAZyNgKI0ICAACACIQgMAQsgAigCCCEICyAIIAM2AgwgAiADNgIIIAMgAjYCDCADIAg2AggLQQAgBTYCnNCAgABBACAENgKQ0ICAAAsgAEEIaiEDCyABQRBqJICAgIAAIAMLCgAgABDJgICAAAviDQEHfwJAIABFDQAgAEF4aiIBIABBfGooAgAiAkF4cSIAaiEDAkAgAkEBcQ0AIAJBA3FFDQEgASABKAIAIgJrIgFBACgCmNCAgAAiBEkNASACIABqIQACQCABQQAoApzQgIAARg0AAkAgAkH/AUsNACABKAIIIgQgAkEDdiIFQQN0QbDQgIAAaiIGRhoCQCABKAIMIgIgBEcNAEEAQQAoAojQgIAAQX4gBXdxNgKI0ICAAAwDCyACIAZGGiACIAQ2AgggBCACNgIMDAILIAEoAhghBwJAAkAgASgCDCIGIAFGDQAgASgCCCICIARJGiAGIAI2AgggAiAGNgIMDAELAkAgAUEUaiICKAIAIgQNACABQRBqIgIoAgAiBA0AQQAhBgwBCwNAIAIhBSAEIgZBFGoiAigCACIEDQAgBkEQaiECIAYoAhAiBA0ACyAFQQA2AgALIAdFDQECQAJAIAEgASgCHCIEQQJ0QbjSgIAAaiICKAIARw0AIAIgBjYCACAGDQFBAEEAKAKM0ICAAEF+IAR3cTYCjNCAgAAMAwsgB0EQQRQgBygCECABRhtqIAY2AgAgBkUNAgsgBiAHNgIYAkAgASgCECICRQ0AIAYgAjYCECACIAY2AhgLIAEoAhQiAkUNASAGQRRqIAI2AgAgAiAGNgIYDAELIAMoAgQiAkEDcUEDRw0AIAMgAkF+cTYCBEEAIAA2ApDQgIAAIAEgAGogADYCACABIABBAXI2AgQPCyABIANPDQAgAygCBCICQQFxRQ0AAkACQCACQQJxDQACQCADQQAoAqDQgIAARw0AQQAgATYCoNCAgABBAEEAKAKU0ICAACAAaiIANgKU0ICAACABIABBAXI2AgQgAUEAKAKc0ICAAEcNA0EAQQA2ApDQgIAAQQBBADYCnNCAgAAPCwJAIANBACgCnNCAgABHDQBBACABNgKc0ICAAEEAQQAoApDQgIAAIABqIgA2ApDQgIAAIAEgAEEBcjYCBCABIABqIAA2AgAPCyACQXhxIABqIQACQAJAIAJB/wFLDQAgAygCCCIEIAJBA3YiBUEDdEGw0ICAAGoiBkYaAkAgAygCDCICIARHDQBBAEEAKAKI0ICAAEF+IAV3cTYCiNCAgAAMAgsgAiAGRhogAiAENgIIIAQgAjYCDAwBCyADKAIYIQcCQAJAIAMoAgwiBiADRg0AIAMoAggiAkEAKAKY0ICAAEkaIAYgAjYCCCACIAY2AgwMAQsCQCADQRRqIgIoAgAiBA0AIANBEGoiAigCACIEDQBBACEGDAELA0AgAiEFIAQiBkEUaiICKAIAIgQNACAGQRBqIQIgBigCECIEDQALIAVBADYCAAsgB0UNAAJAAkAgAyADKAIcIgRBAnRBuNKAgABqIgIoAgBHDQAgAiAGNgIAIAYNAUEAQQAoAozQgIAAQX4gBHdxNgKM0ICAAAwCCyAHQRBBFCAHKAIQIANGG2ogBjYCACAGRQ0BCyAGIAc2AhgCQCADKAIQIgJFDQAgBiACNgIQIAIgBjYCGAsgAygCFCICRQ0AIAZBFGogAjYCACACIAY2AhgLIAEgAGogADYCACABIABBAXI2AgQgAUEAKAKc0ICAAEcNAUEAIAA2ApDQgIAADwsgAyACQX5xNgIEIAEgAGogADYCACABIABBAXI2AgQLAkAgAEH/AUsNACAAQXhxQbDQgIAAaiECAkACQEEAKAKI0ICAACIEQQEgAEEDdnQiAHENAEEAIAQgAHI2AojQgIAAIAIhAAwBCyACKAIIIQALIAAgATYCDCACIAE2AgggASACNgIMIAEgADYCCA8LQR8hAgJAIABB////B0sNACAAQQh2IgIgAkGA/j9qQRB2QQhxIgJ0IgQgBEGA4B9qQRB2QQRxIgR0IgYgBkGAgA9qQRB2QQJxIgZ0QQ92IAIgBHIgBnJrIgJBAXQgACACQRVqdkEBcXJBHGohAgsgASACNgIcIAFCADcCECACQQJ0QbjSgIAAaiEEAkACQEEAKAKM0ICAACIGQQEgAnQiA3ENACAEIAE2AgBBACAGIANyNgKM0ICAACABIAQ2AhggASABNgIIIAEgATYCDAwBCyAAQQBBGSACQQF2ayACQR9GG3QhAiAEKAIAIQYCQANAIAYiBCgCBEF4cSAARg0BIAJBHXYhBiACQQF0IQIgBCAGQQRxakEQaiIDKAIAIgYNAAsgAyABNgIAIAEgBDYCGCABIAE2AgwgASABNgIIDAELIAQoAggiACABNgIMIAQgATYCCCABQQA2AhggASAENgIMIAEgADYCCAtBAEEAKAKo0ICAAEF/aiIBQX8gARs2AqjQgIAACwsEAAAAC04AAkAgAA0APwBBEHQPCwJAIABB//8DcQ0AIABBf0wNAAJAIABBEHZAACIAQX9HDQBBAEEwNgL404CAAEF/DwsgAEEQdA8LEMqAgIAAAAvyAgIDfwF+AkAgAkUNACAAIAE6AAAgAiAAaiIDQX9qIAE6AAAgAkEDSQ0AIAAgAToAAiAAIAE6AAEgA0F9aiABOgAAIANBfmogAToAACACQQdJDQAgACABOgADIANBfGogAToAACACQQlJDQAgAEEAIABrQQNxIgRqIgMgAUH/AXFBgYKECGwiATYCACADIAIgBGtBfHEiBGoiAkF8aiABNgIAIARBCUkNACADIAE2AgggAyABNgIEIAJBeGogATYCACACQXRqIAE2AgAgBEEZSQ0AIAMgATYCGCADIAE2AhQgAyABNgIQIAMgATYCDCACQXBqIAE2AgAgAkFsaiABNgIAIAJBaGogATYCACACQWRqIAE2AgAgBCADQQRxQRhyIgVrIgJBIEkNACABrUKBgICAEH4hBiADIAVqIQEDQCABIAY3AxggASAGNwMQIAEgBjcDCCABIAY3AwAgAUEgaiEBIAJBYGoiAkEfSw0ACwsgAAsLjkgBAEGACAuGSAEAAAACAAAAAwAAAAAAAAAAAAAABAAAAAUAAAAAAAAAAAAAAAYAAAAHAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASW52YWxpZCBjaGFyIGluIHVybCBxdWVyeQBTcGFuIGNhbGxiYWNrIGVycm9yIGluIG9uX2JvZHkAQ29udGVudC1MZW5ndGggb3ZlcmZsb3cAQ2h1bmsgc2l6ZSBvdmVyZmxvdwBSZXNwb25zZSBvdmVyZmxvdwBJbnZhbGlkIG1ldGhvZCBmb3IgSFRUUC94LnggcmVxdWVzdABJbnZhbGlkIG1ldGhvZCBmb3IgUlRTUC94LnggcmVxdWVzdABFeHBlY3RlZCBTT1VSQ0UgbWV0aG9kIGZvciBJQ0UveC54IHJlcXVlc3QASW52YWxpZCBjaGFyIGluIHVybCBmcmFnbWVudCBzdGFydABFeHBlY3RlZCBkb3QAU3BhbiBjYWxsYmFjayBlcnJvciBpbiBvbl9zdGF0dXMASW52YWxpZCByZXNwb25zZSBzdGF0dXMASW52YWxpZCBjaGFyYWN0ZXIgaW4gY2h1bmsgZXh0ZW5zaW9ucwBVc2VyIGNhbGxiYWNrIGVycm9yAGBvbl9yZXNldGAgY2FsbGJhY2sgZXJyb3IAYG9uX2NodW5rX2hlYWRlcmAgY2FsbGJhY2sgZXJyb3IAYG9uX21lc3NhZ2VfYmVnaW5gIGNhbGxiYWNrIGVycm9yAGBvbl9jaHVua19leHRlbnNpb25fdmFsdWVgIGNhbGxiYWNrIGVycm9yAGBvbl9zdGF0dXNfY29tcGxldGVgIGNhbGxiYWNrIGVycm9yAGBvbl92ZXJzaW9uX2NvbXBsZXRlYCBjYWxsYmFjayBlcnJvcgBgb25fdXJsX2NvbXBsZXRlYCBjYWxsYmFjayBlcnJvcgBgb25fY2h1bmtfY29tcGxldGVgIGNhbGxiYWNrIGVycm9yAGBvbl9oZWFkZXJfdmFsdWVfY29tcGxldGVgIGNhbGxiYWNrIGVycm9yAGBvbl9tZXNzYWdlX2NvbXBsZXRlYCBjYWxsYmFjayBlcnJvcgBgb25fbWV0aG9kX2NvbXBsZXRlYCBjYWxsYmFjayBlcnJvcgBgb25faGVhZGVyX2ZpZWxkX2NvbXBsZXRlYCBjYWxsYmFjayBlcnJvcgBgb25fY2h1bmtfZXh0ZW5zaW9uX25hbWVgIGNhbGxiYWNrIGVycm9yAFVuZXhwZWN0ZWQgY2hhciBpbiB1cmwgc2VydmVyAEludmFsaWQgaGVhZGVyIHZhbHVlIGNoYXIASW52YWxpZCBoZWFkZXIgZmllbGQgY2hhcgBTcGFuIGNhbGxiYWNrIGVycm9yIGluIG9uX3ZlcnNpb24ASW52YWxpZCBtaW5vciB2ZXJzaW9uAEludmFsaWQgbWFqb3IgdmVyc2lvbgBFeHBlY3RlZCBzcGFjZSBhZnRlciB2ZXJzaW9uAEV4cGVjdGVkIENSTEYgYWZ0ZXIgdmVyc2lvbgBJbnZhbGlkIEhUVFAgdmVyc2lvbgBJbnZhbGlkIGhlYWRlciB0b2tlbgBTcGFuIGNhbGxiYWNrIGVycm9yIGluIG9uX3VybABJbnZhbGlkIGNoYXJhY3RlcnMgaW4gdXJsAFVuZXhwZWN0ZWQgc3RhcnQgY2hhciBpbiB1cmwARG91YmxlIEAgaW4gdXJsAEVtcHR5IENvbnRlbnQtTGVuZ3RoAEludmFsaWQgY2hhcmFjdGVyIGluIENvbnRlbnQtTGVuZ3RoAER1cGxpY2F0ZSBDb250ZW50LUxlbmd0aABJbnZhbGlkIGNoYXIgaW4gdXJsIHBhdGgAQ29udGVudC1MZW5ndGggY2FuJ3QgYmUgcHJlc2VudCB3aXRoIFRyYW5zZmVyLUVuY29kaW5nAEludmFsaWQgY2hhcmFjdGVyIGluIGNodW5rIHNpemUAU3BhbiBjYWxsYmFjayBlcnJvciBpbiBvbl9oZWFkZXJfdmFsdWUAU3BhbiBjYWxsYmFjayBlcnJvciBpbiBvbl9jaHVua19leHRlbnNpb25fdmFsdWUASW52YWxpZCBjaGFyYWN0ZXIgaW4gY2h1bmsgZXh0ZW5zaW9ucyB2YWx1ZQBNaXNzaW5nIGV4cGVjdGVkIExGIGFmdGVyIGhlYWRlciB2YWx1ZQBJbnZhbGlkIGBUcmFuc2Zlci1FbmNvZGluZ2AgaGVhZGVyIHZhbHVlAEludmFsaWQgY2hhcmFjdGVyIGluIGNodW5rIGV4dGVuc2lvbnMgcXVvdGUgdmFsdWUASW52YWxpZCBjaGFyYWN0ZXIgaW4gY2h1bmsgZXh0ZW5zaW9ucyBxdW90ZWQgdmFsdWUAUGF1c2VkIGJ5IG9uX2hlYWRlcnNfY29tcGxldGUASW52YWxpZCBFT0Ygc3RhdGUAb25fcmVzZXQgcGF1c2UAb25fY2h1bmtfaGVhZGVyIHBhdXNlAG9uX21lc3NhZ2VfYmVnaW4gcGF1c2UAb25fY2h1bmtfZXh0ZW5zaW9uX3ZhbHVlIHBhdXNlAG9uX3N0YXR1c19jb21wbGV0ZSBwYXVzZQBvbl92ZXJzaW9uX2NvbXBsZXRlIHBhdXNlAG9uX3VybF9jb21wbGV0ZSBwYXVzZQBvbl9jaHVua19jb21wbGV0ZSBwYXVzZQBvbl9oZWFkZXJfdmFsdWVfY29tcGxldGUgcGF1c2UAb25fbWVzc2FnZV9jb21wbGV0ZSBwYXVzZQBvbl9tZXRob2RfY29tcGxldGUgcGF1c2UAb25faGVhZGVyX2ZpZWxkX2NvbXBsZXRlIHBhdXNlAG9uX2NodW5rX2V4dGVuc2lvbl9uYW1lIHBhdXNlAFVuZXhwZWN0ZWQgc3BhY2UgYWZ0ZXIgc3RhcnQgbGluZQBTcGFuIGNhbGxiYWNrIGVycm9yIGluIG9uX2NodW5rX2V4dGVuc2lvbl9uYW1lAEludmFsaWQgY2hhcmFjdGVyIGluIGNodW5rIGV4dGVuc2lvbnMgbmFtZQBQYXVzZSBvbiBDT05ORUNUL1VwZ3JhZGUAUGF1c2Ugb24gUFJJL1VwZ3JhZGUARXhwZWN0ZWQgSFRUUC8yIENvbm5lY3Rpb24gUHJlZmFjZQBTcGFuIGNhbGxiYWNrIGVycm9yIGluIG9uX21ldGhvZABFeHBlY3RlZCBzcGFjZSBhZnRlciBtZXRob2QAU3BhbiBjYWxsYmFjayBlcnJvciBpbiBvbl9oZWFkZXJfZmllbGQAUGF1c2VkAEludmFsaWQgd29yZCBlbmNvdW50ZXJlZABJbnZhbGlkIG1ldGhvZCBlbmNvdW50ZXJlZABVbmV4cGVjdGVkIGNoYXIgaW4gdXJsIHNjaGVtYQBSZXF1ZXN0IGhhcyBpbnZhbGlkIGBUcmFuc2Zlci1FbmNvZGluZ2AAU1dJVENIX1BST1hZAFVTRV9QUk9YWQBNS0FDVElWSVRZAFVOUFJPQ0VTU0FCTEVfRU5USVRZAENPUFkATU9WRURfUEVSTUFORU5UTFkAVE9PX0VBUkxZAE5PVElGWQBGQUlMRURfREVQRU5ERU5DWQBCQURfR0FURVdBWQBQTEFZAFBVVABDSEVDS09VVABHQVRFV0FZX1RJTUVPVVQAUkVRVUVTVF9USU1FT1VUAE5FVFdPUktfQ09OTkVDVF9USU1FT1VUAENPTk5FQ1RJT05fVElNRU9VVABMT0dJTl9USU1FT1VUAE5FVFdPUktfUkVBRF9USU1FT1VUAFBPU1QATUlTRElSRUNURURfUkVRVUVTVABDTElFTlRfQ0xPU0VEX1JFUVVFU1QAQ0xJRU5UX0NMT1NFRF9MT0FEX0JBTEFOQ0VEX1JFUVVFU1QAQkFEX1JFUVVFU1QASFRUUF9SRVFVRVNUX1NFTlRfVE9fSFRUUFNfUE9SVABSRVBPUlQASU1fQV9URUFQT1QAUkVTRVRfQ09OVEVOVABOT19DT05URU5UAFBBUlRJQUxfQ09OVEVOVABIUEVfSU5WQUxJRF9DT05TVEFOVABIUEVfQ0JfUkVTRVQAR0VUAEhQRV9TVFJJQ1QAQ09ORkxJQ1QAVEVNUE9SQVJZX1JFRElSRUNUAFBFUk1BTkVOVF9SRURJUkVDVABDT05ORUNUAE1VTFRJX1NUQVRVUwBIUEVfSU5WQUxJRF9TVEFUVVMAVE9PX01BTllfUkVRVUVTVFMARUFSTFlfSElOVFMAVU5BVkFJTEFCTEVfRk9SX0xFR0FMX1JFQVNPTlMAT1BUSU9OUwBTV0lUQ0hJTkdfUFJPVE9DT0xTAFZBUklBTlRfQUxTT19ORUdPVElBVEVTAE1VTFRJUExFX0NIT0lDRVMASU5URVJOQUxfU0VSVkVSX0VSUk9SAFdFQl9TRVJWRVJfVU5LTk9XTl9FUlJPUgBSQUlMR1VOX0VSUk9SAElERU5USVRZX1BST1ZJREVSX0FVVEhFTlRJQ0FUSU9OX0VSUk9SAFNTTF9DRVJUSUZJQ0FURV9FUlJPUgBJTlZBTElEX1hfRk9SV0FSREVEX0ZPUgBTRVRfUEFSQU1FVEVSAEdFVF9QQVJBTUVURVIASFBFX1VTRVIAU0VFX09USEVSAEhQRV9DQl9DSFVOS19IRUFERVIATUtDQUxFTkRBUgBTRVRVUABXRUJfU0VSVkVSX0lTX0RPV04AVEVBUkRPV04ASFBFX0NMT1NFRF9DT05ORUNUSU9OAEhFVVJJU1RJQ19FWFBJUkFUSU9OAERJU0NPTk5FQ1RFRF9PUEVSQVRJT04ATk9OX0FVVEhPUklUQVRJVkVfSU5GT1JNQVRJT04ASFBFX0lOVkFMSURfVkVSU0lPTgBIUEVfQ0JfTUVTU0FHRV9CRUdJTgBTSVRFX0lTX0ZST1pFTgBIUEVfSU5WQUxJRF9IRUFERVJfVE9LRU4ASU5WQUxJRF9UT0tFTgBGT1JCSURERU4ARU5IQU5DRV9ZT1VSX0NBTE0ASFBFX0lOVkFMSURfVVJMAEJMT0NLRURfQllfUEFSRU5UQUxfQ09OVFJPTABNS0NPTABBQ0wASFBFX0lOVEVSTkFMAFJFUVVFU1RfSEVBREVSX0ZJRUxEU19UT09fTEFSR0VfVU5PRkZJQ0lBTABIUEVfT0sAVU5MSU5LAFVOTE9DSwBQUkkAUkVUUllfV0lUSABIUEVfSU5WQUxJRF9DT05URU5UX0xFTkdUSABIUEVfVU5FWFBFQ1RFRF9DT05URU5UX0xFTkdUSABGTFVTSABQUk9QUEFUQ0gATS1TRUFSQ0gAVVJJX1RPT19MT05HAFBST0NFU1NJTkcATUlTQ0VMTEFORU9VU19QRVJTSVNURU5UX1dBUk5JTkcATUlTQ0VMTEFORU9VU19XQVJOSU5HAEhQRV9JTlZBTElEX1RSQU5TRkVSX0VOQ09ESU5HAEV4cGVjdGVkIENSTEYASFBFX0lOVkFMSURfQ0hVTktfU0laRQBNT1ZFAENPTlRJTlVFAEhQRV9DQl9TVEFUVVNfQ09NUExFVEUASFBFX0NCX0hFQURFUlNfQ09NUExFVEUASFBFX0NCX1ZFUlNJT05fQ09NUExFVEUASFBFX0NCX1VSTF9DT01QTEVURQBIUEVfQ0JfQ0hVTktfQ09NUExFVEUASFBFX0NCX0hFQURFUl9WQUxVRV9DT01QTEVURQBIUEVfQ0JfQ0hVTktfRVhURU5TSU9OX1ZBTFVFX0NPTVBMRVRFAEhQRV9DQl9DSFVOS19FWFRFTlNJT05fTkFNRV9DT01QTEVURQBIUEVfQ0JfTUVTU0FHRV9DT01QTEVURQBIUEVfQ0JfTUVUSE9EX0NPTVBMRVRFAEhQRV9DQl9IRUFERVJfRklFTERfQ09NUExFVEUAREVMRVRFAEhQRV9JTlZBTElEX0VPRl9TVEFURQBJTlZBTElEX1NTTF9DRVJUSUZJQ0FURQBQQVVTRQBOT19SRVNQT05TRQBVTlNVUFBPUlRFRF9NRURJQV9UWVBFAEdPTkUATk9UX0FDQ0VQVEFCTEUAU0VSVklDRV9VTkFWQUlMQUJMRQBSQU5HRV9OT1RfU0FUSVNGSUFCTEUAT1JJR0lOX0lTX1VOUkVBQ0hBQkxFAFJFU1BPTlNFX0lTX1NUQUxFAFBVUkdFAE1FUkdFAFJFUVVFU1RfSEVBREVSX0ZJRUxEU19UT09fTEFSR0UAUkVRVUVTVF9IRUFERVJfVE9PX0xBUkdFAFBBWUxPQURfVE9PX0xBUkdFAElOU1VGRklDSUVOVF9TVE9SQUdFAEhQRV9QQVVTRURfVVBHUkFERQBIUEVfUEFVU0VEX0gyX1VQR1JBREUAU09VUkNFAEFOTk9VTkNFAFRSQUNFAEhQRV9VTkVYUEVDVEVEX1NQQUNFAERFU0NSSUJFAFVOU1VCU0NSSUJFAFJFQ09SRABIUEVfSU5WQUxJRF9NRVRIT0QATk9UX0ZPVU5EAFBST1BGSU5EAFVOQklORABSRUJJTkQAVU5BVVRIT1JJWkVEAE1FVEhPRF9OT1RfQUxMT1dFRABIVFRQX1ZFUlNJT05fTk9UX1NVUFBPUlRFRABBTFJFQURZX1JFUE9SVEVEAEFDQ0VQVEVEAE5PVF9JTVBMRU1FTlRFRABMT09QX0RFVEVDVEVEAEhQRV9DUl9FWFBFQ1RFRABIUEVfTEZfRVhQRUNURUQAQ1JFQVRFRABJTV9VU0VEAEhQRV9QQVVTRUQAVElNRU9VVF9PQ0NVUkVEAFBBWU1FTlRfUkVRVUlSRUQAUFJFQ09ORElUSU9OX1JFUVVJUkVEAFBST1hZX0FVVEhFTlRJQ0FUSU9OX1JFUVVJUkVEAE5FVFdPUktfQVVUSEVOVElDQVRJT05fUkVRVUlSRUQATEVOR1RIX1JFUVVJUkVEAFNTTF9DRVJUSUZJQ0FURV9SRVFVSVJFRABVUEdSQURFX1JFUVVJUkVEAFBBR0VfRVhQSVJFRABQUkVDT05ESVRJT05fRkFJTEVEAEVYUEVDVEFUSU9OX0ZBSUxFRABSRVZBTElEQVRJT05fRkFJTEVEAFNTTF9IQU5EU0hBS0VfRkFJTEVEAExPQ0tFRABUUkFOU0ZPUk1BVElPTl9BUFBMSUVEAE5PVF9NT0RJRklFRABOT1RfRVhURU5ERUQAQkFORFdJRFRIX0xJTUlUX0VYQ0VFREVEAFNJVEVfSVNfT1ZFUkxPQURFRABIRUFEAEV4cGVjdGVkIEhUVFAvAABeEwAAJhMAADAQAADwFwAAnRMAABUSAAA5FwAA8BIAAAoQAAB1EgAArRIAAIITAABPFAAAfxAAAKAVAAAjFAAAiRIAAIsUAABNFQAA1BEAAM8UAAAQGAAAyRYAANwWAADBEQAA4BcAALsUAAB0FAAAfBUAAOUUAAAIFwAAHxAAAGUVAACjFAAAKBUAAAIVAACZFQAALBAAAIsZAABPDwAA1A4AAGoQAADOEAAAAhcAAIkOAABuEwAAHBMAAGYUAABWFwAAwRMAAM0TAABsEwAAaBcAAGYXAABfFwAAIhMAAM4PAABpDgAA2A4AAGMWAADLEwAAqg4AACgXAAAmFwAAxRMAAF0WAADoEQAAZxMAAGUTAADyFgAAcxMAAB0XAAD5FgAA8xEAAM8OAADOFQAADBIAALMRAAClEQAAYRAAADIXAAC7EwAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBAgEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAgMCAgICAgAAAgIAAgIAAgICAgICAgICAgAEAAAAAAACAgICAgICAgICAgICAgICAgICAgICAgICAgAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAIAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAIAAgICAgIAAAICAAICAAICAgICAgICAgIAAwAEAAAAAgICAgICAgICAgICAgICAgICAgICAgICAgIAAAACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgACAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsb3NlZWVwLWFsaXZlAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQEBAQEBAQEBAgEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQFjaHVua2VkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQABAQEBAQAAAQEAAQEAAQEBAQEBAQEBAQAAAAAAAAABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQAAAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAEAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGVjdGlvbmVudC1sZW5ndGhvbnJveHktY29ubmVjdGlvbgAAAAAAAAAAAAAAAAAAAHJhbnNmZXItZW5jb2RpbmdwZ3JhZGUNCg0KDQpTTQ0KDQpUVFAvQ0UvVFNQLwAAAAAAAAAAAAAAAAECAAEDAAAAAAAAAAAAAAAAAAAAAAAABAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAAAAAAAAAAAABAgABAwAAAAAAAAAAAAAAAAAAAAAAAAQBAQUBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAAAAAAAAAAAAQAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAQEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQABAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQAAAAAAAAAAAAABAAACAAAAAAAAAAAAAAAAAAAAAAAAAwQAAAQEBAQEBAQEBAQEBQQEBAQEBAQEBAQEBAAEAAYHBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEAAQABAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAQAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAAAAAAAAAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAEAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAgAAAAACAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwAAAAAAAAMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE5PVU5DRUVDS09VVE5FQ1RFVEVDUklCRUxVU0hFVEVBRFNFQVJDSFJHRUNUSVZJVFlMRU5EQVJWRU9USUZZUFRJT05TQ0hTRUFZU1RBVENIR0VPUkRJUkVDVE9SVFJDSFBBUkFNRVRFUlVSQ0VCU0NSSUJFQVJET1dOQUNFSU5ETktDS1VCU0NSSUJFSFRUUC9BRFRQLw==";
    },
    50172: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.enumToMap = void 0;
      function enumToMap(e) {
        const t = {};
        Object.keys(e).forEach((r) => {
          const s = e[r];
          if (typeof s === "number") {
            t[r] = s;
          }
        });
        return t;
      }
      t.enumToMap = enumToMap;
    },
    47501: (e, t, r) => {
      "use strict";
      const { kClients: s } = r(36443);
      const n = r(59965);
      const {
        kAgent: o,
        kMockAgentSet: i,
        kMockAgentGet: a,
        kDispatches: A,
        kIsMockActive: l,
        kNetConnect: c,
        kGetNetConnect: d,
        kOptions: p,
        kFactory: u,
      } = r(91117);
      const g = r(47365);
      const m = r(94004);
      const { matchValue: h, buildMockOptions: E } = r(53397);
      const { InvalidArgumentError: I, UndiciError: C } = r(68707);
      const y = r(28611);
      const B = r(91529);
      const Q = r(56142);
      class FakeWeakRef {
        constructor(e) {
          this.value = e;
        }
        deref() {
          return this.value;
        }
      }
      class MockAgent extends y {
        constructor(e) {
          super(e);
          this[c] = true;
          this[l] = true;
          if (e && e.agent && typeof e.agent.dispatch !== "function") {
            throw new I("Argument opts.agent must implement Agent");
          }
          const t = e && e.agent ? e.agent : new n(e);
          this[o] = t;
          this[s] = t[s];
          this[p] = E(e);
        }
        get(e) {
          let t = this[a](e);
          if (!t) {
            t = this[u](e);
            this[i](e, t);
          }
          return t;
        }
        dispatch(e, t) {
          this.get(e.origin);
          return this[o].dispatch(e, t);
        }
        async close() {
          await this[o].close();
          this[s].clear();
        }
        deactivate() {
          this[l] = false;
        }
        activate() {
          this[l] = true;
        }
        enableNetConnect(e) {
          if (typeof e === "string" || typeof e === "function" || e instanceof RegExp) {
            if (Array.isArray(this[c])) {
              this[c].push(e);
            } else {
              this[c] = [e];
            }
          } else if (typeof e === "undefined") {
            this[c] = true;
          } else {
            throw new I("Unsupported matcher. Must be one of String|Function|RegExp.");
          }
        }
        disableNetConnect() {
          this[c] = false;
        }
        get isMockActive() {
          return this[l];
        }
        [i](e, t) {
          this[s].set(e, new FakeWeakRef(t));
        }
        [u](e) {
          const t = Object.assign({ agent: this }, this[p]);
          return this[p] && this[p].connections === 1 ? new g(e, t) : new m(e, t);
        }
        [a](e) {
          const t = this[s].get(e);
          if (t) {
            return t.deref();
          }
          if (typeof e !== "string") {
            const t = this[u]("http://localhost:9999");
            this[i](e, t);
            return t;
          }
          for (const [t, r] of Array.from(this[s])) {
            const s = r.deref();
            if (s && typeof t !== "string" && h(t, e)) {
              const t = this[u](e);
              this[i](e, t);
              t[A] = s[A];
              return t;
            }
          }
        }
        [d]() {
          return this[c];
        }
        pendingInterceptors() {
          const e = this[s];
          return Array.from(e.entries())
            .flatMap(([e, t]) => t.deref()[A].map((t) => ({ ...t, origin: e })))
            .filter(({ pending: e }) => e);
        }
        assertNoPendingInterceptors({ pendingInterceptorsFormatter: e = new Q() } = {}) {
          const t = this.pendingInterceptors();
          if (t.length === 0) {
            return;
          }
          const r = new B("interceptor", "interceptors").pluralize(t.length);
          throw new C(`\n${r.count} ${r.noun} ${r.is} pending:\n\n${e.format(t)}\n`.trim());
        }
      }
      e.exports = MockAgent;
    },
    47365: (e, t, r) => {
      "use strict";
      const { promisify: s } = r(39023);
      const n = r(86197);
      const { buildMockDispatch: o } = r(53397);
      const { kDispatches: i, kMockAgent: a, kClose: A, kOriginalClose: l, kOrigin: c, kOriginalDispatch: d, kConnected: p } = r(91117);
      const { MockInterceptor: u } = r(31511);
      const g = r(36443);
      const { InvalidArgumentError: m } = r(68707);
      class MockClient extends n {
        constructor(e, t) {
          super(e, t);
          if (!t || !t.agent || typeof t.agent.dispatch !== "function") {
            throw new m("Argument opts.agent must implement Agent");
          }
          this[a] = t.agent;
          this[c] = e;
          this[i] = [];
          this[p] = 1;
          this[d] = this.dispatch;
          this[l] = this.close.bind(this);
          this.dispatch = o.call(this);
          this.close = this[A];
        }
        get [g.kConnected]() {
          return this[p];
        }
        intercept(e) {
          return new u(e, this[i]);
        }
        async [A]() {
          await s(this[l])();
          this[p] = 0;
          this[a][g.kClients].delete(this[c]);
        }
      }
      e.exports = MockClient;
    },
    52429: (e, t, r) => {
      "use strict";
      const { UndiciError: s } = r(68707);
      class MockNotMatchedError extends s {
        constructor(e) {
          super(e);
          Error.captureStackTrace(this, MockNotMatchedError);
          this.name = "MockNotMatchedError";
          this.message = e || "The request does not match any registered mock dispatches";
          this.code = "UND_MOCK_ERR_MOCK_NOT_MATCHED";
        }
      }
      e.exports = { MockNotMatchedError: MockNotMatchedError };
    },
    31511: (e, t, r) => {
      "use strict";
      const { getResponseData: s, buildKey: n, addMockDispatch: o } = r(53397);
      const { kDispatches: i, kDispatchKey: a, kDefaultHeaders: A, kDefaultTrailers: l, kContentLength: c, kMockDispatch: d } = r(91117);
      const { InvalidArgumentError: p } = r(68707);
      const { buildURL: u } = r(3440);
      class MockScope {
        constructor(e) {
          this[d] = e;
        }
        delay(e) {
          if (typeof e !== "number" || !Number.isInteger(e) || e <= 0) {
            throw new p("waitInMs must be a valid integer > 0");
          }
          this[d].delay = e;
          return this;
        }
        persist() {
          this[d].persist = true;
          return this;
        }
        times(e) {
          if (typeof e !== "number" || !Number.isInteger(e) || e <= 0) {
            throw new p("repeatTimes must be a valid integer > 0");
          }
          this[d].times = e;
          return this;
        }
      }
      class MockInterceptor {
        constructor(e, t) {
          if (typeof e !== "object") {
            throw new p("opts must be an object");
          }
          if (typeof e.path === "undefined") {
            throw new p("opts.path must be defined");
          }
          if (typeof e.method === "undefined") {
            e.method = "GET";
          }
          if (typeof e.path === "string") {
            if (e.query) {
              e.path = u(e.path, e.query);
            } else {
              const t = new URL(e.path, "data://");
              e.path = t.pathname + t.search;
            }
          }
          if (typeof e.method === "string") {
            e.method = e.method.toUpperCase();
          }
          this[a] = n(e);
          this[i] = t;
          this[A] = {};
          this[l] = {};
          this[c] = false;
        }
        createMockScopeDispatchData(e, t, r = {}) {
          const n = s(t);
          const o = this[c] ? { "content-length": n.length } : {};
          const i = { ...this[A], ...o, ...r.headers };
          const a = { ...this[l], ...r.trailers };
          return { statusCode: e, data: t, headers: i, trailers: a };
        }
        validateReplyParameters(e, t, r) {
          if (typeof e === "undefined") {
            throw new p("statusCode must be defined");
          }
          if (typeof t === "undefined") {
            throw new p("data must be defined");
          }
          if (typeof r !== "object") {
            throw new p("responseOptions must be an object");
          }
        }
        reply(e) {
          if (typeof e === "function") {
            const wrappedDefaultsCallback = (t) => {
              const r = e(t);
              if (typeof r !== "object") {
                throw new p("reply options callback must return an object");
              }
              const { statusCode: s, data: n = "", responseOptions: o = {} } = r;
              this.validateReplyParameters(s, n, o);
              return { ...this.createMockScopeDispatchData(s, n, o) };
            };
            const t = o(this[i], this[a], wrappedDefaultsCallback);
            return new MockScope(t);
          }
          const [t, r = "", s = {}] = [...arguments];
          this.validateReplyParameters(t, r, s);
          const n = this.createMockScopeDispatchData(t, r, s);
          const A = o(this[i], this[a], n);
          return new MockScope(A);
        }
        replyWithError(e) {
          if (typeof e === "undefined") {
            throw new p("error must be defined");
          }
          const t = o(this[i], this[a], { error: e });
          return new MockScope(t);
        }
        defaultReplyHeaders(e) {
          if (typeof e === "undefined") {
            throw new p("headers must be defined");
          }
          this[A] = e;
          return this;
        }
        defaultReplyTrailers(e) {
          if (typeof e === "undefined") {
            throw new p("trailers must be defined");
          }
          this[l] = e;
          return this;
        }
        replyContentLength() {
          this[c] = true;
          return this;
        }
      }
      e.exports.MockInterceptor = MockInterceptor;
      e.exports.MockScope = MockScope;
    },
    94004: (e, t, r) => {
      "use strict";
      const { promisify: s } = r(39023);
      const n = r(35076);
      const { buildMockDispatch: o } = r(53397);
      const { kDispatches: i, kMockAgent: a, kClose: A, kOriginalClose: l, kOrigin: c, kOriginalDispatch: d, kConnected: p } = r(91117);
      const { MockInterceptor: u } = r(31511);
      const g = r(36443);
      const { InvalidArgumentError: m } = r(68707);
      class MockPool extends n {
        constructor(e, t) {
          super(e, t);
          if (!t || !t.agent || typeof t.agent.dispatch !== "function") {
            throw new m("Argument opts.agent must implement Agent");
          }
          this[a] = t.agent;
          this[c] = e;
          this[i] = [];
          this[p] = 1;
          this[d] = this.dispatch;
          this[l] = this.close.bind(this);
          this.dispatch = o.call(this);
          this.close = this[A];
        }
        get [g.kConnected]() {
          return this[p];
        }
        intercept(e) {
          return new u(e, this[i]);
        }
        async [A]() {
          await s(this[l])();
          this[p] = 0;
          this[a][g.kClients].delete(this[c]);
        }
      }
      e.exports = MockPool;
    },
    91117: (e) => {
      "use strict";
      e.exports = {
        kAgent: Symbol("agent"),
        kOptions: Symbol("options"),
        kFactory: Symbol("factory"),
        kDispatches: Symbol("dispatches"),
        kDispatchKey: Symbol("dispatch key"),
        kDefaultHeaders: Symbol("default headers"),
        kDefaultTrailers: Symbol("default trailers"),
        kContentLength: Symbol("content length"),
        kMockAgent: Symbol("mock agent"),
        kMockAgentSet: Symbol("mock agent set"),
        kMockAgentGet: Symbol("mock agent get"),
        kMockDispatch: Symbol("mock dispatch"),
        kClose: Symbol("close"),
        kOriginalClose: Symbol("original agent close"),
        kOrigin: Symbol("origin"),
        kIsMockActive: Symbol("is mock active"),
        kNetConnect: Symbol("net connect"),
        kGetNetConnect: Symbol("get net connect"),
        kConnected: Symbol("connected"),
      };
    },
    53397: (e, t, r) => {
      "use strict";
      const { MockNotMatchedError: s } = r(52429);
      const { kDispatches: n, kMockAgent: o, kOriginalDispatch: i, kOrigin: a, kGetNetConnect: A } = r(91117);
      const { buildURL: l, nop: c } = r(3440);
      const { STATUS_CODES: d } = r(58611);
      const {
        types: { isPromise: p },
      } = r(39023);
      function matchValue(e, t) {
        if (typeof e === "string") {
          return e === t;
        }
        if (e instanceof RegExp) {
          return e.test(t);
        }
        if (typeof e === "function") {
          return e(t) === true;
        }
        return false;
      }
      function lowerCaseEntries(e) {
        return Object.fromEntries(Object.entries(e).map(([e, t]) => [e.toLocaleLowerCase(), t]));
      }
      function getHeaderByName(e, t) {
        if (Array.isArray(e)) {
          for (let r = 0; r < e.length; r += 2) {
            if (e[r].toLocaleLowerCase() === t.toLocaleLowerCase()) {
              return e[r + 1];
            }
          }
          return undefined;
        } else if (typeof e.get === "function") {
          return e.get(t);
        } else {
          return lowerCaseEntries(e)[t.toLocaleLowerCase()];
        }
      }
      function buildHeadersFromArray(e) {
        const t = e.slice();
        const r = [];
        for (let e = 0; e < t.length; e += 2) {
          r.push([t[e], t[e + 1]]);
        }
        return Object.fromEntries(r);
      }
      function matchHeaders(e, t) {
        if (typeof e.headers === "function") {
          if (Array.isArray(t)) {
            t = buildHeadersFromArray(t);
          }
          return e.headers(t ? lowerCaseEntries(t) : {});
        }
        if (typeof e.headers === "undefined") {
          return true;
        }
        if (typeof t !== "object" || typeof e.headers !== "object") {
          return false;
        }
        for (const [r, s] of Object.entries(e.headers)) {
          const e = getHeaderByName(t, r);
          if (!matchValue(s, e)) {
            return false;
          }
        }
        return true;
      }
      function safeUrl(e) {
        if (typeof e !== "string") {
          return e;
        }
        const t = e.split("?");
        if (t.length !== 2) {
          return e;
        }
        const r = new URLSearchParams(t.pop());
        r.sort();
        return [...t, r.toString()].join("?");
      }
      function matchKey(e, { path: t, method: r, body: s, headers: n }) {
        const o = matchValue(e.path, t);
        const i = matchValue(e.method, r);
        const a = typeof e.body !== "undefined" ? matchValue(e.body, s) : true;
        const A = matchHeaders(e, n);
        return o && i && a && A;
      }
      function getResponseData(e) {
        if (Buffer.isBuffer(e)) {
          return e;
        } else if (typeof e === "object") {
          return JSON.stringify(e);
        } else {
          return e.toString();
        }
      }
      function getMockDispatch(e, t) {
        const r = t.query ? l(t.path, t.query) : t.path;
        const n = typeof r === "string" ? safeUrl(r) : r;
        let o = e.filter(({ consumed: e }) => !e).filter(({ path: e }) => matchValue(safeUrl(e), n));
        if (o.length === 0) {
          throw new s(`Mock dispatch not matched for path '${n}'`);
        }
        o = o.filter(({ method: e }) => matchValue(e, t.method));
        if (o.length === 0) {
          throw new s(`Mock dispatch not matched for method '${t.method}'`);
        }
        o = o.filter(({ body: e }) => (typeof e !== "undefined" ? matchValue(e, t.body) : true));
        if (o.length === 0) {
          throw new s(`Mock dispatch not matched for body '${t.body}'`);
        }
        o = o.filter((e) => matchHeaders(e, t.headers));
        if (o.length === 0) {
          throw new s(`Mock dispatch not matched for headers '${typeof t.headers === "object" ? JSON.stringify(t.headers) : t.headers}'`);
        }
        return o[0];
      }
      function addMockDispatch(e, t, r) {
        const s = { timesInvoked: 0, times: 1, persist: false, consumed: false };
        const n = typeof r === "function" ? { callback: r } : { ...r };
        const o = { ...s, ...t, pending: true, data: { error: null, ...n } };
        e.push(o);
        return o;
      }
      function deleteMockDispatch(e, t) {
        const r = e.findIndex((e) => {
          if (!e.consumed) {
            return false;
          }
          return matchKey(e, t);
        });
        if (r !== -1) {
          e.splice(r, 1);
        }
      }
      function buildKey(e) {
        const { path: t, method: r, body: s, headers: n, query: o } = e;
        return { path: t, method: r, body: s, headers: n, query: o };
      }
      function generateKeyValues(e) {
        return Object.entries(e).reduce(
          (e, [t, r]) => [...e, Buffer.from(`${t}`), Array.isArray(r) ? r.map((e) => Buffer.from(`${e}`)) : Buffer.from(`${r}`)],
          []
        );
      }
      function getStatusText(e) {
        return d[e] || "unknown";
      }
      async function getResponse(e) {
        const t = [];
        for await (const r of e) {
          t.push(r);
        }
        return Buffer.concat(t).toString("utf8");
      }
      function mockDispatch(e, t) {
        const r = buildKey(e);
        const s = getMockDispatch(this[n], r);
        s.timesInvoked++;
        if (s.data.callback) {
          s.data = { ...s.data, ...s.data.callback(e) };
        }
        const {
          data: { statusCode: o, data: i, headers: a, trailers: A, error: l },
          delay: d,
          persist: u,
        } = s;
        const { timesInvoked: g, times: m } = s;
        s.consumed = !u && g >= m;
        s.pending = g < m;
        if (l !== null) {
          deleteMockDispatch(this[n], r);
          t.onError(l);
          return true;
        }
        if (typeof d === "number" && d > 0) {
          setTimeout(() => {
            handleReply(this[n]);
          }, d);
        } else {
          handleReply(this[n]);
        }
        function handleReply(s, n = i) {
          const l = Array.isArray(e.headers) ? buildHeadersFromArray(e.headers) : e.headers;
          const d = typeof n === "function" ? n({ ...e, headers: l }) : n;
          if (p(d)) {
            d.then((e) => handleReply(s, e));
            return;
          }
          const u = getResponseData(d);
          const g = generateKeyValues(a);
          const m = generateKeyValues(A);
          t.abort = c;
          t.onHeaders(o, g, resume, getStatusText(o));
          t.onData(Buffer.from(u));
          t.onComplete(m);
          deleteMockDispatch(s, r);
        }
        function resume() {}
        return true;
      }
      function buildMockDispatch() {
        const e = this[o];
        const t = this[a];
        const r = this[i];
        return function dispatch(n, o) {
          if (e.isMockActive) {
            try {
              mockDispatch.call(this, n, o);
            } catch (i) {
              if (i instanceof s) {
                const a = e[A]();
                if (a === false) {
                  throw new s(`${i.message}: subsequent request to origin ${t} was not allowed (net.connect disabled)`);
                }
                if (checkNetConnect(a, t)) {
                  r.call(this, n, o);
                } else {
                  throw new s(`${i.message}: subsequent request to origin ${t} was not allowed (net.connect is not enabled for this origin)`);
                }
              } else {
                throw i;
              }
            }
          } else {
            r.call(this, n, o);
          }
        };
      }
      function checkNetConnect(e, t) {
        const r = new URL(t);
        if (e === true) {
          return true;
        } else if (Array.isArray(e) && e.some((e) => matchValue(e, r.host))) {
          return true;
        }
        return false;
      }
      function buildMockOptions(e) {
        if (e) {
          const { agent: t, ...r } = e;
          return r;
        }
      }
      e.exports = {
        getResponseData: getResponseData,
        getMockDispatch: getMockDispatch,
        addMockDispatch: addMockDispatch,
        deleteMockDispatch: deleteMockDispatch,
        buildKey: buildKey,
        generateKeyValues: generateKeyValues,
        matchValue: matchValue,
        getResponse: getResponse,
        getStatusText: getStatusText,
        mockDispatch: mockDispatch,
        buildMockDispatch: buildMockDispatch,
        checkNetConnect: checkNetConnect,
        buildMockOptions: buildMockOptions,
        getHeaderByName: getHeaderByName,
      };
    },
    56142: (e, t, r) => {
      "use strict";
      const { Transform: s } = r(2203);
      const { Console: n } = r(64236);
      e.exports = class PendingInterceptorsFormatter {
        constructor({ disableColors: e } = {}) {
          this.transform = new s({
            transform(e, t, r) {
              r(null, e);
            },
          });
          this.logger = new n({ stdout: this.transform, inspectOptions: { colors: !e && !process.env.CI } });
        }
        format(e) {
          const t = e.map(({ method: e, path: t, data: { statusCode: r }, persist: s, times: n, timesInvoked: o, origin: i }) => ({
            Method: e,
            Origin: i,
            Path: t,
            "Status code": r,
            Persistent: s ? "✅" : "❌",
            Invocations: o,
            Remaining: s ? Infinity : n - o,
          }));
          this.logger.table(t);
          return this.transform.read().toString();
        }
      };
    },
    91529: (e) => {
      "use strict";
      const t = { pronoun: "it", is: "is", was: "was", this: "this" };
      const r = { pronoun: "they", is: "are", was: "were", this: "these" };
      e.exports = class Pluralizer {
        constructor(e, t) {
          this.singular = e;
          this.plural = t;
        }
        pluralize(e) {
          const s = e === 1;
          const n = s ? t : r;
          const o = s ? this.singular : this.plural;
          return { ...n, count: e, noun: o };
        }
      };
    },
    34869: (e) => {
      "use strict";
      const t = 2048;
      const r = t - 1;
      class FixedCircularBuffer {
        constructor() {
          this.bottom = 0;
          this.top = 0;
          this.list = new Array(t);
          this.next = null;
        }
        isEmpty() {
          return this.top === this.bottom;
        }
        isFull() {
          return ((this.top + 1) & r) === this.bottom;
        }
        push(e) {
          this.list[this.top] = e;
          this.top = (this.top + 1) & r;
        }
        shift() {
          const e = this.list[this.bottom];
          if (e === undefined) return null;
          this.list[this.bottom] = undefined;
          this.bottom = (this.bottom + 1) & r;
          return e;
        }
      }
      e.exports = class FixedQueue {
        constructor() {
          this.head = this.tail = new FixedCircularBuffer();
        }
        isEmpty() {
          return this.head.isEmpty();
        }
        push(e) {
          if (this.head.isFull()) {
            this.head = this.head.next = new FixedCircularBuffer();
          }
          this.head.push(e);
        }
        shift() {
          const e = this.tail;
          const t = e.shift();
          if (e.isEmpty() && e.next !== null) {
            this.tail = e.next;
          }
          return t;
        }
      };
    },
    58640: (e, t, r) => {
      "use strict";
      const s = r(50001);
      const n = r(34869);
      const { kConnected: o, kSize: i, kRunning: a, kPending: A, kQueued: l, kBusy: c, kFree: d, kUrl: p, kClose: u, kDestroy: g, kDispatch: m } = r(36443);
      const h = r(24622);
      const E = Symbol("clients");
      const I = Symbol("needDrain");
      const C = Symbol("queue");
      const y = Symbol("closed resolve");
      const B = Symbol("onDrain");
      const Q = Symbol("onConnect");
      const b = Symbol("onDisconnect");
      const w = Symbol("onConnectionError");
      const v = Symbol("get dispatcher");
      const T = Symbol("add client");
      const _ = Symbol("remove client");
      const S = Symbol("stats");
      class PoolBase extends s {
        constructor() {
          super();
          this[C] = new n();
          this[E] = [];
          this[l] = 0;
          const e = this;
          this[B] = function onDrain(t, r) {
            const s = e[C];
            let n = false;
            while (!n) {
              const t = s.shift();
              if (!t) {
                break;
              }
              e[l]--;
              n = !this.dispatch(t.opts, t.handler);
            }
            this[I] = n;
            if (!this[I] && e[I]) {
              e[I] = false;
              e.emit("drain", t, [e, ...r]);
            }
            if (e[y] && s.isEmpty()) {
              Promise.all(e[E].map((e) => e.close())).then(e[y]);
            }
          };
          this[Q] = (t, r) => {
            e.emit("connect", t, [e, ...r]);
          };
          this[b] = (t, r, s) => {
            e.emit("disconnect", t, [e, ...r], s);
          };
          this[w] = (t, r, s) => {
            e.emit("connectionError", t, [e, ...r], s);
          };
          this[S] = new h(this);
        }
        get [c]() {
          return this[I];
        }
        get [o]() {
          return this[E].filter((e) => e[o]).length;
        }
        get [d]() {
          return this[E].filter((e) => e[o] && !e[I]).length;
        }
        get [A]() {
          let e = this[l];
          for (const { [A]: t } of this[E]) {
            e += t;
          }
          return e;
        }
        get [a]() {
          let e = 0;
          for (const { [a]: t } of this[E]) {
            e += t;
          }
          return e;
        }
        get [i]() {
          let e = this[l];
          for (const { [i]: t } of this[E]) {
            e += t;
          }
          return e;
        }
        get stats() {
          return this[S];
        }
        async [u]() {
          if (this[C].isEmpty()) {
            return Promise.all(this[E].map((e) => e.close()));
          } else {
            return new Promise((e) => {
              this[y] = e;
            });
          }
        }
        async [g](e) {
          while (true) {
            const t = this[C].shift();
            if (!t) {
              break;
            }
            t.handler.onError(e);
          }
          return Promise.all(this[E].map((t) => t.destroy(e)));
        }
        [m](e, t) {
          const r = this[v]();
          if (!r) {
            this[I] = true;
            this[C].push({ opts: e, handler: t });
            this[l]++;
          } else if (!r.dispatch(e, t)) {
            r[I] = true;
            this[I] = !this[v]();
          }
          return !this[I];
        }
        [T](e) {
          e.on("drain", this[B]).on("connect", this[Q]).on("disconnect", this[b]).on("connectionError", this[w]);
          this[E].push(e);
          if (this[I]) {
            process.nextTick(() => {
              if (this[I]) {
                this[B](e[p], [this, e]);
              }
            });
          }
          return this;
        }
        [_](e) {
          e.close(() => {
            const t = this[E].indexOf(e);
            if (t !== -1) {
              this[E].splice(t, 1);
            }
          });
          this[I] = this[E].some((e) => !e[I] && e.closed !== true && e.destroyed !== true);
        }
      }
      e.exports = { PoolBase: PoolBase, kClients: E, kNeedDrain: I, kAddClient: T, kRemoveClient: _, kGetDispatcher: v };
    },
    24622: (e, t, r) => {
      const { kFree: s, kConnected: n, kPending: o, kQueued: i, kRunning: a, kSize: A } = r(36443);
      const l = Symbol("pool");
      class PoolStats {
        constructor(e) {
          this[l] = e;
        }
        get connected() {
          return this[l][n];
        }
        get free() {
          return this[l][s];
        }
        get pending() {
          return this[l][o];
        }
        get queued() {
          return this[l][i];
        }
        get running() {
          return this[l][a];
        }
        get size() {
          return this[l][A];
        }
      }
      e.exports = PoolStats;
    },
    35076: (e, t, r) => {
      "use strict";
      const { PoolBase: s, kClients: n, kNeedDrain: o, kAddClient: i, kGetDispatcher: a } = r(58640);
      const A = r(86197);
      const { InvalidArgumentError: l } = r(68707);
      const c = r(3440);
      const { kUrl: d, kInterceptors: p } = r(36443);
      const u = r(59136);
      const g = Symbol("options");
      const m = Symbol("connections");
      const h = Symbol("factory");
      function defaultFactory(e, t) {
        return new A(e, t);
      }
      class Pool extends s {
        constructor(
          e,
          {
            connections: t,
            factory: r = defaultFactory,
            connect: s,
            connectTimeout: n,
            tls: o,
            maxCachedSessions: i,
            socketPath: a,
            autoSelectFamily: A,
            autoSelectFamilyAttemptTimeout: E,
            allowH2: I,
            ...C
          } = {}
        ) {
          super();
          if (t != null && (!Number.isFinite(t) || t < 0)) {
            throw new l("invalid connections");
          }
          if (typeof r !== "function") {
            throw new l("factory must be a function.");
          }
          if (s != null && typeof s !== "function" && typeof s !== "object") {
            throw new l("connect must be a function or an object");
          }
          if (typeof s !== "function") {
            s = u({
              ...o,
              maxCachedSessions: i,
              allowH2: I,
              socketPath: a,
              timeout: n,
              ...(c.nodeHasAutoSelectFamily && A ? { autoSelectFamily: A, autoSelectFamilyAttemptTimeout: E } : undefined),
              ...s,
            });
          }
          this[p] = C.interceptors && C.interceptors.Pool && Array.isArray(C.interceptors.Pool) ? C.interceptors.Pool : [];
          this[m] = t || null;
          this[d] = c.parseOrigin(e);
          this[g] = { ...c.deepClone(C), connect: s, allowH2: I };
          this[g].interceptors = C.interceptors ? { ...C.interceptors } : undefined;
          this[h] = r;
        }
        [a]() {
          let e = this[n].find((e) => !e[o]);
          if (e) {
            return e;
          }
          if (!this[m] || this[n].length < this[m]) {
            e = this[h](this[d], this[g]);
            this[i](e);
          }
          return e;
        }
      }
      e.exports = Pool;
    },
    22720: (e, t, r) => {
      "use strict";
      const { kProxy: s, kClose: n, kDestroy: o, kInterceptors: i } = r(36443);
      const { URL: a } = r(87016);
      const A = r(59965);
      const l = r(35076);
      const c = r(50001);
      const { InvalidArgumentError: d, RequestAbortedError: p } = r(68707);
      const u = r(59136);
      const g = Symbol("proxy agent");
      const m = Symbol("proxy client");
      const h = Symbol("proxy headers");
      const E = Symbol("request tls settings");
      const I = Symbol("proxy tls settings");
      const C = Symbol("connect endpoint function");
      function defaultProtocolPort(e) {
        return e === "https:" ? 443 : 80;
      }
      function buildProxyOptions(e) {
        if (typeof e === "string") {
          e = { uri: e };
        }
        if (!e || !e.uri) {
          throw new d("Proxy opts.uri is mandatory");
        }
        return { uri: e.uri, protocol: e.protocol || "https" };
      }
      function defaultFactory(e, t) {
        return new l(e, t);
      }
      class ProxyAgent extends c {
        constructor(e) {
          super(e);
          this[s] = buildProxyOptions(e);
          this[g] = new A(e);
          this[i] = e.interceptors && e.interceptors.ProxyAgent && Array.isArray(e.interceptors.ProxyAgent) ? e.interceptors.ProxyAgent : [];
          if (typeof e === "string") {
            e = { uri: e };
          }
          if (!e || !e.uri) {
            throw new d("Proxy opts.uri is mandatory");
          }
          const { clientFactory: t = defaultFactory } = e;
          if (typeof t !== "function") {
            throw new d("Proxy opts.clientFactory must be a function.");
          }
          this[E] = e.requestTls;
          this[I] = e.proxyTls;
          this[h] = e.headers || {};
          const r = new a(e.uri);
          const { origin: n, port: o, host: l, username: c, password: y } = r;
          if (e.auth && e.token) {
            throw new d("opts.auth cannot be used in combination with opts.token");
          } else if (e.auth) {
            this[h]["proxy-authorization"] = `Basic ${e.auth}`;
          } else if (e.token) {
            this[h]["proxy-authorization"] = e.token;
          } else if (c && y) {
            this[h]["proxy-authorization"] = `Basic ${Buffer.from(`${decodeURIComponent(c)}:${decodeURIComponent(y)}`).toString("base64")}`;
          }
          const B = u({ ...e.proxyTls });
          this[C] = u({ ...e.requestTls });
          this[m] = t(r, { connect: B });
          this[g] = new A({
            ...e,
            connect: async (e, t) => {
              let r = e.host;
              if (!e.port) {
                r += `:${defaultProtocolPort(e.protocol)}`;
              }
              try {
                const { socket: s, statusCode: i } = await this[m].connect({ origin: n, port: o, path: r, signal: e.signal, headers: { ...this[h], host: l } });
                if (i !== 200) {
                  s.on("error", () => {}).destroy();
                  t(new p(`Proxy response (${i}) !== 200 when HTTP Tunneling`));
                }
                if (e.protocol !== "https:") {
                  t(null, s);
                  return;
                }
                let a;
                if (this[E]) {
                  a = this[E].servername;
                } else {
                  a = e.servername;
                }
                this[C]({ ...e, servername: a, httpSocket: s }, t);
              } catch (e) {
                t(e);
              }
            },
          });
        }
        dispatch(e, t) {
          const { host: r } = new a(e.origin);
          const s = buildHeaders(e.headers);
          throwIfProxyAuthIsSent(s);
          return this[g].dispatch({ ...e, headers: { ...s, host: r } }, t);
        }
        async [n]() {
          await this[g].close();
          await this[m].close();
        }
        async [o]() {
          await this[g].destroy();
          await this[m].destroy();
        }
      }
      function buildHeaders(e) {
        if (Array.isArray(e)) {
          const t = {};
          for (let r = 0; r < e.length; r += 2) {
            t[e[r]] = e[r + 1];
          }
          return t;
        }
        return e;
      }
      function throwIfProxyAuthIsSent(e) {
        const t = e && Object.keys(e).find((e) => e.toLowerCase() === "proxy-authorization");
        if (t) {
          throw new d("Proxy-Authorization should be sent in ProxyAgent constructor");
        }
      }
      e.exports = ProxyAgent;
    },
    28804: (e) => {
      "use strict";
      let t = Date.now();
      let r;
      const s = [];
      function onTimeout() {
        t = Date.now();
        let e = s.length;
        let r = 0;
        while (r < e) {
          const n = s[r];
          if (n.state === 0) {
            n.state = t + n.delay;
          } else if (n.state > 0 && t >= n.state) {
            n.state = -1;
            n.callback(n.opaque);
          }
          if (n.state === -1) {
            n.state = -2;
            if (r !== e - 1) {
              s[r] = s.pop();
            } else {
              s.pop();
            }
            e -= 1;
          } else {
            r += 1;
          }
        }
        if (s.length > 0) {
          refreshTimeout();
        }
      }
      function refreshTimeout() {
        if (r && r.refresh) {
          r.refresh();
        } else {
          clearTimeout(r);
          r = setTimeout(onTimeout, 1e3);
          if (r.unref) {
            r.unref();
          }
        }
      }
      class Timeout {
        constructor(e, t, r) {
          this.callback = e;
          this.delay = t;
          this.opaque = r;
          this.state = -2;
          this.refresh();
        }
        refresh() {
          if (this.state === -2) {
            s.push(this);
            if (!r || s.length === 1) {
              refreshTimeout();
            }
          }
          this.state = 0;
        }
        clear() {
          this.state = -1;
        }
      }
      e.exports = {
        setTimeout(e, t, r) {
          return t < 1e3 ? setTimeout(e, t, r) : new Timeout(e, t, r);
        },
        clearTimeout(e) {
          if (e instanceof Timeout) {
            e.clear();
          } else {
            clearTimeout(e);
          }
        },
      };
    },
    68550: (e, t, r) => {
      "use strict";
      const s = r(31637);
      const { uid: n, states: o } = r(45913);
      const { kReadyState: i, kSentClose: a, kByteParser: A, kReceivedClose: l } = r(62933);
      const { fireEvent: c, failWebsocketConnection: d } = r(3574);
      const { CloseEvent: p } = r(46255);
      const { makeRequest: u } = r(25194);
      const { fetching: g } = r(12315);
      const { Headers: m } = r(26349);
      const { getGlobalDispatcher: h } = r(32581);
      const { kHeadersList: E } = r(36443);
      const I = {};
      I.open = s.channel("undici:websocket:open");
      I.close = s.channel("undici:websocket:close");
      I.socketError = s.channel("undici:websocket:socket_error");
      let C;
      try {
        C = r(76982);
      } catch {}
      function establishWebSocketConnection(e, t, r, s, o) {
        const i = e;
        i.protocol = e.protocol === "ws:" ? "http:" : "https:";
        const a = u({
          urlList: [i],
          serviceWorkers: "none",
          referrer: "no-referrer",
          mode: "websocket",
          credentials: "include",
          cache: "no-store",
          redirect: "error",
        });
        if (o.headers) {
          const e = new m(o.headers)[E];
          a.headersList = e;
        }
        const A = C.randomBytes(16).toString("base64");
        a.headersList.append("sec-websocket-key", A);
        a.headersList.append("sec-websocket-version", "13");
        for (const e of t) {
          a.headersList.append("sec-websocket-protocol", e);
        }
        const l = "";
        const c = g({
          request: a,
          useParallelQueue: true,
          dispatcher: o.dispatcher ?? h(),
          processResponse(e) {
            if (e.type === "error" || e.status !== 101) {
              d(r, "Received network error or non-101 status code.");
              return;
            }
            if (t.length !== 0 && !e.headersList.get("Sec-WebSocket-Protocol")) {
              d(r, "Server did not respond with sent protocols.");
              return;
            }
            if (e.headersList.get("Upgrade")?.toLowerCase() !== "websocket") {
              d(r, 'Server did not set Upgrade header to "websocket".');
              return;
            }
            if (e.headersList.get("Connection")?.toLowerCase() !== "upgrade") {
              d(r, 'Server did not set Connection header to "upgrade".');
              return;
            }
            const o = e.headersList.get("Sec-WebSocket-Accept");
            const i = C.createHash("sha1")
              .update(A + n)
              .digest("base64");
            if (o !== i) {
              d(r, "Incorrect hash received in Sec-WebSocket-Accept header.");
              return;
            }
            const c = e.headersList.get("Sec-WebSocket-Extensions");
            if (c !== null && c !== l) {
              d(r, "Received different permessage-deflate than the one set.");
              return;
            }
            const p = e.headersList.get("Sec-WebSocket-Protocol");
            if (p !== null && p !== a.headersList.get("Sec-WebSocket-Protocol")) {
              d(r, "Protocol was not set in the opening handshake.");
              return;
            }
            e.socket.on("data", onSocketData);
            e.socket.on("close", onSocketClose);
            e.socket.on("error", onSocketError);
            if (I.open.hasSubscribers) {
              I.open.publish({ address: e.socket.address(), protocol: p, extensions: c });
            }
            s(e);
          },
        });
        return c;
      }
      function onSocketData(e) {
        if (!this.ws[A].write(e)) {
          this.pause();
        }
      }
      function onSocketClose() {
        const { ws: e } = this;
        const t = e[a] && e[l];
        let r = 1005;
        let s = "";
        const n = e[A].closingInfo;
        if (n) {
          r = n.code ?? 1005;
          s = n.reason;
        } else if (!e[a]) {
          r = 1006;
        }
        e[i] = o.CLOSED;
        c("close", e, p, { wasClean: t, code: r, reason: s });
        if (I.close.hasSubscribers) {
          I.close.publish({ websocket: e, code: r, reason: s });
        }
      }
      function onSocketError(e) {
        const { ws: t } = this;
        t[i] = o.CLOSING;
        if (I.socketError.hasSubscribers) {
          I.socketError.publish(e);
        }
        this.destroy();
      }
      e.exports = { establishWebSocketConnection: establishWebSocketConnection };
    },
    45913: (e) => {
      "use strict";
      const t = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";
      const r = { enumerable: true, writable: false, configurable: false };
      const s = { CONNECTING: 0, OPEN: 1, CLOSING: 2, CLOSED: 3 };
      const n = { CONTINUATION: 0, TEXT: 1, BINARY: 2, CLOSE: 8, PING: 9, PONG: 10 };
      const o = 2 ** 16 - 1;
      const i = { INFO: 0, PAYLOADLENGTH_16: 2, PAYLOADLENGTH_64: 3, READ_DATA: 4 };
      const a = Buffer.allocUnsafe(0);
      e.exports = { uid: t, staticPropertyDescriptors: r, states: s, opcodes: n, maxUnsigned16Bit: o, parserStates: i, emptyBuffer: a };
    },
    46255: (e, t, r) => {
      "use strict";
      const { webidl: s } = r(74222);
      const { kEnumerableProperty: n } = r(3440);
      const { MessagePort: o } = r(28167);
      class MessageEvent extends Event {
        #o;
        constructor(e, t = {}) {
          s.argumentLengthCheck(arguments, 1, { header: "MessageEvent constructor" });
          e = s.converters.DOMString(e);
          t = s.converters.MessageEventInit(t);
          super(e, t);
          this.#o = t;
        }
        get data() {
          s.brandCheck(this, MessageEvent);
          return this.#o.data;
        }
        get origin() {
          s.brandCheck(this, MessageEvent);
          return this.#o.origin;
        }
        get lastEventId() {
          s.brandCheck(this, MessageEvent);
          return this.#o.lastEventId;
        }
        get source() {
          s.brandCheck(this, MessageEvent);
          return this.#o.source;
        }
        get ports() {
          s.brandCheck(this, MessageEvent);
          if (!Object.isFrozen(this.#o.ports)) {
            Object.freeze(this.#o.ports);
          }
          return this.#o.ports;
        }
        initMessageEvent(e, t = false, r = false, n = null, o = "", i = "", a = null, A = []) {
          s.brandCheck(this, MessageEvent);
          s.argumentLengthCheck(arguments, 1, { header: "MessageEvent.initMessageEvent" });
          return new MessageEvent(e, { bubbles: t, cancelable: r, data: n, origin: o, lastEventId: i, source: a, ports: A });
        }
      }
      class CloseEvent extends Event {
        #o;
        constructor(e, t = {}) {
          s.argumentLengthCheck(arguments, 1, { header: "CloseEvent constructor" });
          e = s.converters.DOMString(e);
          t = s.converters.CloseEventInit(t);
          super(e, t);
          this.#o = t;
        }
        get wasClean() {
          s.brandCheck(this, CloseEvent);
          return this.#o.wasClean;
        }
        get code() {
          s.brandCheck(this, CloseEvent);
          return this.#o.code;
        }
        get reason() {
          s.brandCheck(this, CloseEvent);
          return this.#o.reason;
        }
      }
      class ErrorEvent extends Event {
        #o;
        constructor(e, t) {
          s.argumentLengthCheck(arguments, 1, { header: "ErrorEvent constructor" });
          super(e, t);
          e = s.converters.DOMString(e);
          t = s.converters.ErrorEventInit(t ?? {});
          this.#o = t;
        }
        get message() {
          s.brandCheck(this, ErrorEvent);
          return this.#o.message;
        }
        get filename() {
          s.brandCheck(this, ErrorEvent);
          return this.#o.filename;
        }
        get lineno() {
          s.brandCheck(this, ErrorEvent);
          return this.#o.lineno;
        }
        get colno() {
          s.brandCheck(this, ErrorEvent);
          return this.#o.colno;
        }
        get error() {
          s.brandCheck(this, ErrorEvent);
          return this.#o.error;
        }
      }
      Object.defineProperties(MessageEvent.prototype, {
        [Symbol.toStringTag]: { value: "MessageEvent", configurable: true },
        data: n,
        origin: n,
        lastEventId: n,
        source: n,
        ports: n,
        initMessageEvent: n,
      });
      Object.defineProperties(CloseEvent.prototype, { [Symbol.toStringTag]: { value: "CloseEvent", configurable: true }, reason: n, code: n, wasClean: n });
      Object.defineProperties(ErrorEvent.prototype, {
        [Symbol.toStringTag]: { value: "ErrorEvent", configurable: true },
        message: n,
        filename: n,
        lineno: n,
        colno: n,
        error: n,
      });
      s.converters.MessagePort = s.interfaceConverter(o);
      s.converters["sequence<MessagePort>"] = s.sequenceConverter(s.converters.MessagePort);
      const i = [
        { key: "bubbles", converter: s.converters.boolean, defaultValue: false },
        { key: "cancelable", converter: s.converters.boolean, defaultValue: false },
        { key: "composed", converter: s.converters.boolean, defaultValue: false },
      ];
      s.converters.MessageEventInit = s.dictionaryConverter([
        ...i,
        { key: "data", converter: s.converters.any, defaultValue: null },
        { key: "origin", converter: s.converters.USVString, defaultValue: "" },
        { key: "lastEventId", converter: s.converters.DOMString, defaultValue: "" },
        { key: "source", converter: s.nullableConverter(s.converters.MessagePort), defaultValue: null },
        {
          key: "ports",
          converter: s.converters["sequence<MessagePort>"],
          get defaultValue() {
            return [];
          },
        },
      ]);
      s.converters.CloseEventInit = s.dictionaryConverter([
        ...i,
        { key: "wasClean", converter: s.converters.boolean, defaultValue: false },
        { key: "code", converter: s.converters["unsigned short"], defaultValue: 0 },
        { key: "reason", converter: s.converters.USVString, defaultValue: "" },
      ]);
      s.converters.ErrorEventInit = s.dictionaryConverter([
        ...i,
        { key: "message", converter: s.converters.DOMString, defaultValue: "" },
        { key: "filename", converter: s.converters.USVString, defaultValue: "" },
        { key: "lineno", converter: s.converters["unsigned long"], defaultValue: 0 },
        { key: "colno", converter: s.converters["unsigned long"], defaultValue: 0 },
        { key: "error", converter: s.converters.any },
      ]);
      e.exports = { MessageEvent: MessageEvent, CloseEvent: CloseEvent, ErrorEvent: ErrorEvent };
    },
    31237: (e, t, r) => {
      "use strict";
      const { maxUnsigned16Bit: s } = r(45913);
      let n;
      try {
        n = r(76982);
      } catch {}
      class WebsocketFrameSend {
        constructor(e) {
          this.frameData = e;
          this.maskKey = n.randomBytes(4);
        }
        createFrame(e) {
          const t = this.frameData?.byteLength ?? 0;
          let r = t;
          let n = 6;
          if (t > s) {
            n += 8;
            r = 127;
          } else if (t > 125) {
            n += 2;
            r = 126;
          }
          const o = Buffer.allocUnsafe(t + n);
          o[0] = o[1] = 0;
          o[0] |= 128;
          o[0] = (o[0] & 240) + e;
          /*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> */ o[n - 4] = this.maskKey[0];
          o[n - 3] = this.maskKey[1];
          o[n - 2] = this.maskKey[2];
          o[n - 1] = this.maskKey[3];
          o[1] = r;
          if (r === 126) {
            o.writeUInt16BE(t, 2);
          } else if (r === 127) {
            o[2] = o[3] = 0;
            o.writeUIntBE(t, 4, 6);
          }
          o[1] |= 128;
          for (let e = 0; e < t; e++) {
            o[n + e] = this.frameData[e] ^ this.maskKey[e % 4];
          }
          return o;
        }
      }
      e.exports = { WebsocketFrameSend: WebsocketFrameSend };
    },
    43171: (e, t, r) => {
      "use strict";
      const { Writable: s } = r(2203);
      const n = r(31637);
      const { parserStates: o, opcodes: i, states: a, emptyBuffer: A } = r(45913);
      const { kReadyState: l, kSentClose: c, kResponse: d, kReceivedClose: p } = r(62933);
      const { isValidStatusCode: u, failWebsocketConnection: g, websocketMessageReceived: m } = r(3574);
      const { WebsocketFrameSend: h } = r(31237);
      const E = {};
      E.ping = n.channel("undici:websocket:ping");
      E.pong = n.channel("undici:websocket:pong");
      class ByteParser extends s {
        #i = [];
        #a = 0;
        #A = o.INFO;
        #l = {};
        #c = [];
        constructor(e) {
          super();
          this.ws = e;
        }
        _write(e, t, r) {
          this.#i.push(e);
          this.#a += e.length;
          this.run(r);
        }
        run(e) {
          while (true) {
            if (this.#A === o.INFO) {
              if (this.#a < 2) {
                return e();
              }
              const t = this.consume(2);
              this.#l.fin = (t[0] & 128) !== 0;
              this.#l.opcode = t[0] & 15;
              this.#l.originalOpcode ??= this.#l.opcode;
              this.#l.fragmented = !this.#l.fin && this.#l.opcode !== i.CONTINUATION;
              if (this.#l.fragmented && this.#l.opcode !== i.BINARY && this.#l.opcode !== i.TEXT) {
                g(this.ws, "Invalid frame type was fragmented.");
                return;
              }
              const r = t[1] & 127;
              if (r <= 125) {
                this.#l.payloadLength = r;
                this.#A = o.READ_DATA;
              } else if (r === 126) {
                this.#A = o.PAYLOADLENGTH_16;
              } else if (r === 127) {
                this.#A = o.PAYLOADLENGTH_64;
              }
              if (this.#l.fragmented && r > 125) {
                g(this.ws, "Fragmented frame exceeded 125 bytes.");
                return;
              } else if ((this.#l.opcode === i.PING || this.#l.opcode === i.PONG || this.#l.opcode === i.CLOSE) && r > 125) {
                g(this.ws, "Payload length for control frame exceeded 125 bytes.");
                return;
              } else if (this.#l.opcode === i.CLOSE) {
                if (r === 1) {
                  g(this.ws, "Received close frame with a 1-byte body.");
                  return;
                }
                const e = this.consume(r);
                this.#l.closeInfo = this.parseCloseBody(false, e);
                if (!this.ws[c]) {
                  const e = Buffer.allocUnsafe(2);
                  e.writeUInt16BE(this.#l.closeInfo.code, 0);
                  const t = new h(e);
                  this.ws[d].socket.write(t.createFrame(i.CLOSE), (e) => {
                    if (!e) {
                      this.ws[c] = true;
                    }
                  });
                }
                this.ws[l] = a.CLOSING;
                this.ws[p] = true;
                this.end();
                return;
              } else if (this.#l.opcode === i.PING) {
                const t = this.consume(r);
                if (!this.ws[p]) {
                  const e = new h(t);
                  this.ws[d].socket.write(e.createFrame(i.PONG));
                  if (E.ping.hasSubscribers) {
                    E.ping.publish({ payload: t });
                  }
                }
                this.#A = o.INFO;
                if (this.#a > 0) {
                  continue;
                } else {
                  e();
                  return;
                }
              } else if (this.#l.opcode === i.PONG) {
                const t = this.consume(r);
                if (E.pong.hasSubscribers) {
                  E.pong.publish({ payload: t });
                }
                if (this.#a > 0) {
                  continue;
                } else {
                  e();
                  return;
                }
              }
            } else if (this.#A === o.PAYLOADLENGTH_16) {
              if (this.#a < 2) {
                return e();
              }
              const t = this.consume(2);
              this.#l.payloadLength = t.readUInt16BE(0);
              this.#A = o.READ_DATA;
            } else if (this.#A === o.PAYLOADLENGTH_64) {
              if (this.#a < 8) {
                return e();
              }
              const t = this.consume(8);
              const r = t.readUInt32BE(0);
              if (r > 2 ** 31 - 1) {
                g(this.ws, "Received payload length > 2^31 bytes.");
                return;
              }
              const s = t.readUInt32BE(4);
              this.#l.payloadLength = (r << 8) + s;
              this.#A = o.READ_DATA;
            } else if (this.#A === o.READ_DATA) {
              if (this.#a < this.#l.payloadLength) {
                return e();
              } else if (this.#a >= this.#l.payloadLength) {
                const e = this.consume(this.#l.payloadLength);
                this.#c.push(e);
                if (!this.#l.fragmented || (this.#l.fin && this.#l.opcode === i.CONTINUATION)) {
                  const e = Buffer.concat(this.#c);
                  m(this.ws, this.#l.originalOpcode, e);
                  this.#l = {};
                  this.#c.length = 0;
                }
                this.#A = o.INFO;
              }
            }
            if (this.#a > 0) {
              continue;
            } else {
              e();
              break;
            }
          }
        }
        consume(e) {
          if (e > this.#a) {
            return null;
          } else if (e === 0) {
            return A;
          }
          if (this.#i[0].length === e) {
            this.#a -= this.#i[0].length;
            return this.#i.shift();
          }
          const t = Buffer.allocUnsafe(e);
          let r = 0;
          while (r !== e) {
            const s = this.#i[0];
            const { length: n } = s;
            if (n + r === e) {
              t.set(this.#i.shift(), r);
              break;
            } else if (n + r > e) {
              t.set(s.subarray(0, e - r), r);
              this.#i[0] = s.subarray(e - r);
              break;
            } else {
              t.set(this.#i.shift(), r);
              r += s.length;
            }
          }
          this.#a -= e;
          return t;
        }
        parseCloseBody(e, t) {
          let r;
          if (t.length >= 2) {
            r = t.readUInt16BE(0);
          }
          if (e) {
            if (!u(r)) {
              return null;
            }
            return { code: r };
          }
          let s = t.subarray(2);
          if (s[0] === 239 && s[1] === 187 && s[2] === 191) {
            s = s.subarray(3);
          }
          if (r !== undefined && !u(r)) {
            return null;
          }
          try {
            s = new TextDecoder("utf-8", { fatal: true }).decode(s);
          } catch {
            return null;
          }
          return { code: r, reason: s };
        }
        get closingInfo() {
          return this.#l.closeInfo;
        }
      }
      e.exports = { ByteParser: ByteParser };
    },
    62933: (e) => {
      "use strict";
      e.exports = {
        kWebSocketURL: Symbol("url"),
        kReadyState: Symbol("ready state"),
        kController: Symbol("controller"),
        kResponse: Symbol("response"),
        kBinaryType: Symbol("binary type"),
        kSentClose: Symbol("sent close"),
        kReceivedClose: Symbol("received close"),
        kByteParser: Symbol("byte parser"),
      };
    },
    3574: (e, t, r) => {
      "use strict";
      const { kReadyState: s, kController: n, kResponse: o, kBinaryType: i, kWebSocketURL: a } = r(62933);
      const { states: A, opcodes: l } = r(45913);
      const { MessageEvent: c, ErrorEvent: d } = r(46255);
      function isEstablished(e) {
        return e[s] === A.OPEN;
      }
      function isClosing(e) {
        return e[s] === A.CLOSING;
      }
      function isClosed(e) {
        return e[s] === A.CLOSED;
      }
      function fireEvent(e, t, r = Event, s) {
        const n = new r(e, s);
        t.dispatchEvent(n);
      }
      function websocketMessageReceived(e, t, r) {
        if (e[s] !== A.OPEN) {
          return;
        }
        let n;
        if (t === l.TEXT) {
          try {
            n = new TextDecoder("utf-8", { fatal: true }).decode(r);
          } catch {
            failWebsocketConnection(e, "Received invalid UTF-8 in text frame.");
            return;
          }
        } else if (t === l.BINARY) {
          if (e[i] === "blob") {
            n = new Blob([r]);
          } else {
            n = new Uint8Array(r).buffer;
          }
        }
        fireEvent("message", e, c, { origin: e[a].origin, data: n });
      }
      function isValidSubprotocol(e) {
        if (e.length === 0) {
          return false;
        }
        for (const t of e) {
          const e = t.charCodeAt(0);
          if (
            e < 33 ||
            e > 126 ||
            t === "(" ||
            t === ")" ||
            t === "<" ||
            t === ">" ||
            t === "@" ||
            t === "," ||
            t === ";" ||
            t === ":" ||
            t === "\\" ||
            t === '"' ||
            t === "/" ||
            t === "[" ||
            t === "]" ||
            t === "?" ||
            t === "=" ||
            t === "{" ||
            t === "}" ||
            e === 32 ||
            e === 9
          ) {
            return false;
          }
        }
        return true;
      }
      function isValidStatusCode(e) {
        if (e >= 1e3 && e < 1015) {
          return e !== 1004 && e !== 1005 && e !== 1006;
        }
        return e >= 3e3 && e <= 4999;
      }
      function failWebsocketConnection(e, t) {
        const { [n]: r, [o]: s } = e;
        r.abort();
        if (s?.socket && !s.socket.destroyed) {
          s.socket.destroy();
        }
        if (t) {
          fireEvent("error", e, d, { error: new Error(t) });
        }
      }
      e.exports = {
        isEstablished: isEstablished,
        isClosing: isClosing,
        isClosed: isClosed,
        fireEvent: fireEvent,
        isValidSubprotocol: isValidSubprotocol,
        isValidStatusCode: isValidStatusCode,
        failWebsocketConnection: failWebsocketConnection,
        websocketMessageReceived: websocketMessageReceived,
      };
    },
    55171: (e, t, r) => {
      "use strict";
      const { webidl: s } = r(74222);
      const { DOMException: n } = r(87326);
      const { URLSerializer: o } = r(94322);
      const { getGlobalOrigin: i } = r(75628);
      const { staticPropertyDescriptors: a, states: A, opcodes: l, emptyBuffer: c } = r(45913);
      const { kWebSocketURL: d, kReadyState: p, kController: u, kBinaryType: g, kResponse: m, kSentClose: h, kByteParser: E } = r(62933);
      const { isEstablished: I, isClosing: C, isValidSubprotocol: y, failWebsocketConnection: B, fireEvent: Q } = r(3574);
      const { establishWebSocketConnection: b } = r(68550);
      const { WebsocketFrameSend: w } = r(31237);
      const { ByteParser: v } = r(43171);
      const { kEnumerableProperty: T, isBlobLike: _ } = r(3440);
      const { getGlobalDispatcher: S } = r(32581);
      const { types: R } = r(39023);
      let D = false;
      class WebSocket extends EventTarget {
        #d = { open: null, error: null, close: null, message: null };
        #p = 0;
        #u = "";
        #g = "";
        constructor(e, t = []) {
          super();
          s.argumentLengthCheck(arguments, 1, { header: "WebSocket constructor" });
          if (!D) {
            D = true;
            process.emitWarning("WebSockets are experimental, expect them to change at any time.", { code: "UNDICI-WS" });
          }
          const r = s.converters["DOMString or sequence<DOMString> or WebSocketInit"](t);
          e = s.converters.USVString(e);
          t = r.protocols;
          const o = i();
          let a;
          try {
            a = new URL(e, o);
          } catch (e) {
            throw new n(e, "SyntaxError");
          }
          if (a.protocol === "http:") {
            a.protocol = "ws:";
          } else if (a.protocol === "https:") {
            a.protocol = "wss:";
          }
          if (a.protocol !== "ws:" && a.protocol !== "wss:") {
            throw new n(`Expected a ws: or wss: protocol, got ${a.protocol}`, "SyntaxError");
          }
          if (a.hash || a.href.endsWith("#")) {
            throw new n("Got fragment", "SyntaxError");
          }
          if (typeof t === "string") {
            t = [t];
          }
          if (t.length !== new Set(t.map((e) => e.toLowerCase())).size) {
            throw new n("Invalid Sec-WebSocket-Protocol value", "SyntaxError");
          }
          if (t.length > 0 && !t.every((e) => y(e))) {
            throw new n("Invalid Sec-WebSocket-Protocol value", "SyntaxError");
          }
          this[d] = new URL(a.href);
          this[u] = b(a, t, this, (e) => this.#m(e), r);
          this[p] = WebSocket.CONNECTING;
          this[g] = "blob";
        }
        close(e = undefined, t = undefined) {
          s.brandCheck(this, WebSocket);
          if (e !== undefined) {
            e = s.converters["unsigned short"](e, { clamp: true });
          }
          if (t !== undefined) {
            t = s.converters.USVString(t);
          }
          if (e !== undefined) {
            if (e !== 1e3 && (e < 3e3 || e > 4999)) {
              throw new n("invalid code", "InvalidAccessError");
            }
          }
          let r = 0;
          if (t !== undefined) {
            r = Buffer.byteLength(t);
            if (r > 123) {
              throw new n(`Reason must be less than 123 bytes; received ${r}`, "SyntaxError");
            }
          }
          if (this[p] === WebSocket.CLOSING || this[p] === WebSocket.CLOSED) {
          } else if (!I(this)) {
            B(this, "Connection was closed before it was established.");
            this[p] = WebSocket.CLOSING;
          } else if (!C(this)) {
            const s = new w();
            if (e !== undefined && t === undefined) {
              s.frameData = Buffer.allocUnsafe(2);
              s.frameData.writeUInt16BE(e, 0);
            } else if (e !== undefined && t !== undefined) {
              s.frameData = Buffer.allocUnsafe(2 + r);
              s.frameData.writeUInt16BE(e, 0);
              s.frameData.write(t, 2, "utf-8");
            } else {
              s.frameData = c;
            }
            const n = this[m].socket;
            n.write(s.createFrame(l.CLOSE), (e) => {
              if (!e) {
                this[h] = true;
              }
            });
            this[p] = A.CLOSING;
          } else {
            this[p] = WebSocket.CLOSING;
          }
        }
        send(e) {
          s.brandCheck(this, WebSocket);
          s.argumentLengthCheck(arguments, 1, { header: "WebSocket.send" });
          e = s.converters.WebSocketSendData(e);
          if (this[p] === WebSocket.CONNECTING) {
            throw new n("Sent before connected.", "InvalidStateError");
          }
          if (!I(this) || C(this)) {
            return;
          }
          const t = this[m].socket;
          if (typeof e === "string") {
            const r = Buffer.from(e);
            const s = new w(r);
            const n = s.createFrame(l.TEXT);
            this.#p += r.byteLength;
            t.write(n, () => {
              this.#p -= r.byteLength;
            });
          } else if (R.isArrayBuffer(e)) {
            const r = Buffer.from(e);
            const s = new w(r);
            const n = s.createFrame(l.BINARY);
            this.#p += r.byteLength;
            t.write(n, () => {
              this.#p -= r.byteLength;
            });
          } else if (ArrayBuffer.isView(e)) {
            const r = Buffer.from(e, e.byteOffset, e.byteLength);
            const s = new w(r);
            const n = s.createFrame(l.BINARY);
            this.#p += r.byteLength;
            t.write(n, () => {
              this.#p -= r.byteLength;
            });
          } else if (_(e)) {
            const r = new w();
            e.arrayBuffer().then((e) => {
              const s = Buffer.from(e);
              r.frameData = s;
              const n = r.createFrame(l.BINARY);
              this.#p += s.byteLength;
              t.write(n, () => {
                this.#p -= s.byteLength;
              });
            });
          }
        }
        get readyState() {
          s.brandCheck(this, WebSocket);
          return this[p];
        }
        get bufferedAmount() {
          s.brandCheck(this, WebSocket);
          return this.#p;
        }
        get url() {
          s.brandCheck(this, WebSocket);
          return o(this[d]);
        }
        get extensions() {
          s.brandCheck(this, WebSocket);
          return this.#g;
        }
        get protocol() {
          s.brandCheck(this, WebSocket);
          return this.#u;
        }
        get onopen() {
          s.brandCheck(this, WebSocket);
          return this.#d.open;
        }
        set onopen(e) {
          s.brandCheck(this, WebSocket);
          if (this.#d.open) {
            this.removeEventListener("open", this.#d.open);
          }
          if (typeof e === "function") {
            this.#d.open = e;
            this.addEventListener("open", e);
          } else {
            this.#d.open = null;
          }
        }
        get onerror() {
          s.brandCheck(this, WebSocket);
          return this.#d.error;
        }
        set onerror(e) {
          s.brandCheck(this, WebSocket);
          if (this.#d.error) {
            this.removeEventListener("error", this.#d.error);
          }
          if (typeof e === "function") {
            this.#d.error = e;
            this.addEventListener("error", e);
          } else {
            this.#d.error = null;
          }
        }
        get onclose() {
          s.brandCheck(this, WebSocket);
          return this.#d.close;
        }
        set onclose(e) {
          s.brandCheck(this, WebSocket);
          if (this.#d.close) {
            this.removeEventListener("close", this.#d.close);
          }
          if (typeof e === "function") {
            this.#d.close = e;
            this.addEventListener("close", e);
          } else {
            this.#d.close = null;
          }
        }
        get onmessage() {
          s.brandCheck(this, WebSocket);
          return this.#d.message;
        }
        set onmessage(e) {
          s.brandCheck(this, WebSocket);
          if (this.#d.message) {
            this.removeEventListener("message", this.#d.message);
          }
          if (typeof e === "function") {
            this.#d.message = e;
            this.addEventListener("message", e);
          } else {
            this.#d.message = null;
          }
        }
        get binaryType() {
          s.brandCheck(this, WebSocket);
          return this[g];
        }
        set binaryType(e) {
          s.brandCheck(this, WebSocket);
          if (e !== "blob" && e !== "arraybuffer") {
            this[g] = "blob";
          } else {
            this[g] = e;
          }
        }
        #m(e) {
          this[m] = e;
          const t = new v(this);
          t.on("drain", function onParserDrain() {
            this.ws[m].socket.resume();
          });
          e.socket.ws = this;
          this[E] = t;
          this[p] = A.OPEN;
          const r = e.headersList.get("sec-websocket-extensions");
          if (r !== null) {
            this.#g = r;
          }
          const s = e.headersList.get("sec-websocket-protocol");
          if (s !== null) {
            this.#u = s;
          }
          Q("open", this);
        }
      }
      WebSocket.CONNECTING = WebSocket.prototype.CONNECTING = A.CONNECTING;
      WebSocket.OPEN = WebSocket.prototype.OPEN = A.OPEN;
      WebSocket.CLOSING = WebSocket.prototype.CLOSING = A.CLOSING;
      WebSocket.CLOSED = WebSocket.prototype.CLOSED = A.CLOSED;
      Object.defineProperties(WebSocket.prototype, {
        CONNECTING: a,
        OPEN: a,
        CLOSING: a,
        CLOSED: a,
        url: T,
        readyState: T,
        bufferedAmount: T,
        onopen: T,
        onerror: T,
        onclose: T,
        close: T,
        onmessage: T,
        binaryType: T,
        send: T,
        extensions: T,
        protocol: T,
        [Symbol.toStringTag]: { value: "WebSocket", writable: false, enumerable: false, configurable: true },
      });
      Object.defineProperties(WebSocket, { CONNECTING: a, OPEN: a, CLOSING: a, CLOSED: a });
      s.converters["sequence<DOMString>"] = s.sequenceConverter(s.converters.DOMString);
      s.converters["DOMString or sequence<DOMString>"] = function (e) {
        if (s.util.Type(e) === "Object" && Symbol.iterator in e) {
          return s.converters["sequence<DOMString>"](e);
        }
        return s.converters.DOMString(e);
      };
      s.converters.WebSocketInit = s.dictionaryConverter([
        {
          key: "protocols",
          converter: s.converters["DOMString or sequence<DOMString>"],
          get defaultValue() {
            return [];
          },
        },
        {
          key: "dispatcher",
          converter: (e) => e,
          get defaultValue() {
            return S();
          },
        },
        { key: "headers", converter: s.nullableConverter(s.converters.HeadersInit) },
      ]);
      s.converters["DOMString or sequence<DOMString> or WebSocketInit"] = function (e) {
        if (s.util.Type(e) === "Object" && !(Symbol.iterator in e)) {
          return s.converters.WebSocketInit(e);
        }
        return { protocols: s.converters["DOMString or sequence<DOMString>"](e) };
      };
      s.converters.WebSocketSendData = function (e) {
        if (s.util.Type(e) === "Object") {
          if (_(e)) {
            return s.converters.Blob(e, { strict: false });
          }
          if (ArrayBuffer.isView(e) || R.isAnyArrayBuffer(e)) {
            return s.converters.BufferSource(e);
          }
        }
        return s.converters.USVString(e);
      };
      e.exports = { WebSocket: WebSocket };
    },
    33843: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      function getUserAgent() {
        if (typeof navigator === "object" && "userAgent" in navigator) {
          return navigator.userAgent;
        }
        if (typeof process === "object" && process.version !== undefined) {
          return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;
        }
        return "<environment undetectable>";
      }
      t.getUserAgent = getUserAgent;
    },
    12048: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      Object.defineProperty(t, "v1", {
        enumerable: true,
        get: function () {
          return s.default;
        },
      });
      Object.defineProperty(t, "v3", {
        enumerable: true,
        get: function () {
          return n.default;
        },
      });
      Object.defineProperty(t, "v4", {
        enumerable: true,
        get: function () {
          return o.default;
        },
      });
      Object.defineProperty(t, "v5", {
        enumerable: true,
        get: function () {
          return i.default;
        },
      });
      Object.defineProperty(t, "NIL", {
        enumerable: true,
        get: function () {
          return a.default;
        },
      });
      Object.defineProperty(t, "version", {
        enumerable: true,
        get: function () {
          return A.default;
        },
      });
      Object.defineProperty(t, "validate", {
        enumerable: true,
        get: function () {
          return l.default;
        },
      });
      Object.defineProperty(t, "stringify", {
        enumerable: true,
        get: function () {
          return c.default;
        },
      });
      Object.defineProperty(t, "parse", {
        enumerable: true,
        get: function () {
          return d.default;
        },
      });
      var s = _interopRequireDefault(r(6415));
      var n = _interopRequireDefault(r(51697));
      var o = _interopRequireDefault(r(4676));
      var i = _interopRequireDefault(r(69771));
      var a = _interopRequireDefault(r(37723));
      var A = _interopRequireDefault(r(15868));
      var l = _interopRequireDefault(r(36200));
      var c = _interopRequireDefault(r(37597));
      var d = _interopRequireDefault(r(17267));
      function _interopRequireDefault(e) {
        return e && e.__esModule ? e : { default: e };
      }
    },
    10216: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = void 0;
      var s = _interopRequireDefault(r(76982));
      function _interopRequireDefault(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function md5(e) {
        if (Array.isArray(e)) {
          e = Buffer.from(e);
        } else if (typeof e === "string") {
          e = Buffer.from(e, "utf8");
        }
        return s.default.createHash("md5").update(e).digest();
      }
      var n = md5;
      t["default"] = n;
    },
    37723: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = void 0;
      var r = "00000000-0000-0000-0000-000000000000";
      t["default"] = r;
    },
    17267: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = void 0;
      var s = _interopRequireDefault(r(36200));
      function _interopRequireDefault(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function parse(e) {
        if (!(0, s.default)(e)) {
          throw TypeError("Invalid UUID");
        }
        let t;
        const r = new Uint8Array(16);
        r[0] = (t = parseInt(e.slice(0, 8), 16)) >>> 24;
        r[1] = (t >>> 16) & 255;
        r[2] = (t >>> 8) & 255;
        r[3] = t & 255;
        r[4] = (t = parseInt(e.slice(9, 13), 16)) >>> 8;
        r[5] = t & 255;
        r[6] = (t = parseInt(e.slice(14, 18), 16)) >>> 8;
        r[7] = t & 255;
        r[8] = (t = parseInt(e.slice(19, 23), 16)) >>> 8;
        r[9] = t & 255;
        r[10] = ((t = parseInt(e.slice(24, 36), 16)) / 1099511627776) & 255;
        r[11] = (t / 4294967296) & 255;
        r[12] = (t >>> 24) & 255;
        r[13] = (t >>> 16) & 255;
        r[14] = (t >>> 8) & 255;
        r[15] = t & 255;
        return r;
      }
      var n = parse;
      t["default"] = n;
    },
    67879: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = void 0;
      var r = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
      t["default"] = r;
    },
    12973: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = rng;
      var s = _interopRequireDefault(r(76982));
      function _interopRequireDefault(e) {
        return e && e.__esModule ? e : { default: e };
      }
      const n = new Uint8Array(256);
      let o = n.length;
      function rng() {
        if (o > n.length - 16) {
          s.default.randomFillSync(n);
          o = 0;
        }
        return n.slice(o, (o += 16));
      }
    },
    507: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = void 0;
      var s = _interopRequireDefault(r(76982));
      function _interopRequireDefault(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function sha1(e) {
        if (Array.isArray(e)) {
          e = Buffer.from(e);
        } else if (typeof e === "string") {
          e = Buffer.from(e, "utf8");
        }
        return s.default.createHash("sha1").update(e).digest();
      }
      var n = sha1;
      t["default"] = n;
    },
    37597: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = void 0;
      var s = _interopRequireDefault(r(36200));
      function _interopRequireDefault(e) {
        return e && e.__esModule ? e : { default: e };
      }
      const n = [];
      for (let e = 0; e < 256; ++e) {
        n.push((e + 256).toString(16).substr(1));
      }
      function stringify(e, t = 0) {
        const r = (
          n[e[t + 0]] +
          n[e[t + 1]] +
          n[e[t + 2]] +
          n[e[t + 3]] +
          "-" +
          n[e[t + 4]] +
          n[e[t + 5]] +
          "-" +
          n[e[t + 6]] +
          n[e[t + 7]] +
          "-" +
          n[e[t + 8]] +
          n[e[t + 9]] +
          "-" +
          n[e[t + 10]] +
          n[e[t + 11]] +
          n[e[t + 12]] +
          n[e[t + 13]] +
          n[e[t + 14]] +
          n[e[t + 15]]
        ).toLowerCase();
        if (!(0, s.default)(r)) {
          throw TypeError("Stringified UUID is invalid");
        }
        return r;
      }
      var o = stringify;
      t["default"] = o;
    },
    6415: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = void 0;
      var s = _interopRequireDefault(r(12973));
      var n = _interopRequireDefault(r(37597));
      function _interopRequireDefault(e) {
        return e && e.__esModule ? e : { default: e };
      }
      let o;
      let i;
      let a = 0;
      let A = 0;
      function v1(e, t, r) {
        let l = (t && r) || 0;
        const c = t || new Array(16);
        e = e || {};
        let d = e.node || o;
        let p = e.clockseq !== undefined ? e.clockseq : i;
        if (d == null || p == null) {
          const t = e.random || (e.rng || s.default)();
          if (d == null) {
            d = o = [t[0] | 1, t[1], t[2], t[3], t[4], t[5]];
          }
          if (p == null) {
            p = i = ((t[6] << 8) | t[7]) & 16383;
          }
        }
        let u = e.msecs !== undefined ? e.msecs : Date.now();
        let g = e.nsecs !== undefined ? e.nsecs : A + 1;
        const m = u - a + (g - A) / 1e4;
        if (m < 0 && e.clockseq === undefined) {
          p = (p + 1) & 16383;
        }
        if ((m < 0 || u > a) && e.nsecs === undefined) {
          g = 0;
        }
        if (g >= 1e4) {
          throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
        }
        a = u;
        A = g;
        i = p;
        u += 122192928e5;
        const h = ((u & 268435455) * 1e4 + g) % 4294967296;
        c[l++] = (h >>> 24) & 255;
        c[l++] = (h >>> 16) & 255;
        c[l++] = (h >>> 8) & 255;
        c[l++] = h & 255;
        const E = ((u / 4294967296) * 1e4) & 268435455;
        c[l++] = (E >>> 8) & 255;
        c[l++] = E & 255;
        c[l++] = ((E >>> 24) & 15) | 16;
        c[l++] = (E >>> 16) & 255;
        c[l++] = (p >>> 8) | 128;
        c[l++] = p & 255;
        for (let e = 0; e < 6; ++e) {
          c[l + e] = d[e];
        }
        return t || (0, n.default)(c);
      }
      var l = v1;
      t["default"] = l;
    },
    51697: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = void 0;
      var s = _interopRequireDefault(r(92930));
      var n = _interopRequireDefault(r(10216));
      function _interopRequireDefault(e) {
        return e && e.__esModule ? e : { default: e };
      }
      const o = (0, s.default)("v3", 48, n.default);
      var i = o;
      t["default"] = i;
    },
    92930: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = _default;
      t.URL = t.DNS = void 0;
      var s = _interopRequireDefault(r(37597));
      var n = _interopRequireDefault(r(17267));
      function _interopRequireDefault(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function stringToBytes(e) {
        e = unescape(encodeURIComponent(e));
        const t = [];
        for (let r = 0; r < e.length; ++r) {
          t.push(e.charCodeAt(r));
        }
        return t;
      }
      const o = "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
      t.DNS = o;
      const i = "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
      t.URL = i;
      function _default(e, t, r) {
        function generateUUID(e, o, i, a) {
          if (typeof e === "string") {
            e = stringToBytes(e);
          }
          if (typeof o === "string") {
            o = (0, n.default)(o);
          }
          if (o.length !== 16) {
            throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");
          }
          let A = new Uint8Array(16 + e.length);
          A.set(o);
          A.set(e, o.length);
          A = r(A);
          A[6] = (A[6] & 15) | t;
          A[8] = (A[8] & 63) | 128;
          if (i) {
            a = a || 0;
            for (let e = 0; e < 16; ++e) {
              i[a + e] = A[e];
            }
            return i;
          }
          return (0, s.default)(A);
        }
        try {
          generateUUID.name = e;
        } catch (e) {}
        generateUUID.DNS = o;
        generateUUID.URL = i;
        return generateUUID;
      }
    },
    4676: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = void 0;
      var s = _interopRequireDefault(r(12973));
      var n = _interopRequireDefault(r(37597));
      function _interopRequireDefault(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function v4(e, t, r) {
        e = e || {};
        const o = e.random || (e.rng || s.default)();
        o[6] = (o[6] & 15) | 64;
        o[8] = (o[8] & 63) | 128;
        if (t) {
          r = r || 0;
          for (let e = 0; e < 16; ++e) {
            t[r + e] = o[e];
          }
          return t;
        }
        return (0, n.default)(o);
      }
      var o = v4;
      t["default"] = o;
    },
    69771: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = void 0;
      var s = _interopRequireDefault(r(92930));
      var n = _interopRequireDefault(r(507));
      function _interopRequireDefault(e) {
        return e && e.__esModule ? e : { default: e };
      }
      const o = (0, s.default)("v5", 80, n.default);
      var i = o;
      t["default"] = i;
    },
    36200: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = void 0;
      var s = _interopRequireDefault(r(67879));
      function _interopRequireDefault(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function validate(e) {
        return typeof e === "string" && s.default.test(e);
      }
      var n = validate;
      t["default"] = n;
    },
    15868: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t["default"] = void 0;
      var s = _interopRequireDefault(r(36200));
      function _interopRequireDefault(e) {
        return e && e.__esModule ? e : { default: e };
      }
      function version(e) {
        if (!(0, s.default)(e)) {
          throw TypeError("Invalid UUID");
        }
        return parseInt(e.substr(14, 1), 16);
      }
      var n = version;
      t["default"] = n;
    },
    37125: (e) => {
      "use strict";
      var t = {};
      e.exports = t;
      function sign(e) {
        return e < 0 ? -1 : 1;
      }
      function evenRound(e) {
        if (e % 1 === 0.5 && (e & 1) === 0) {
          return Math.floor(e);
        } else {
          return Math.round(e);
        }
      }
      function createNumberConversion(e, t) {
        if (!t.unsigned) {
          --e;
        }
        const r = t.unsigned ? 0 : -Math.pow(2, e);
        const s = Math.pow(2, e) - 1;
        const n = t.moduloBitLength ? Math.pow(2, t.moduloBitLength) : Math.pow(2, e);
        const o = t.moduloBitLength ? Math.pow(2, t.moduloBitLength - 1) : Math.pow(2, e - 1);
        return function (e, i) {
          if (!i) i = {};
          let a = +e;
          if (i.enforceRange) {
            if (!Number.isFinite(a)) {
              throw new TypeError("Argument is not a finite number");
            }
            a = sign(a) * Math.floor(Math.abs(a));
            if (a < r || a > s) {
              throw new TypeError("Argument is not in byte range");
            }
            return a;
          }
          if (!isNaN(a) && i.clamp) {
            a = evenRound(a);
            if (a < r) a = r;
            if (a > s) a = s;
            return a;
          }
          if (!Number.isFinite(a) || a === 0) {
            return 0;
          }
          a = sign(a) * Math.floor(Math.abs(a));
          a = a % n;
          if (!t.unsigned && a >= o) {
            return a - n;
          } else if (t.unsigned) {
            if (a < 0) {
              a += n;
            } else if (a === -0) {
              return 0;
            }
          }
          return a;
        };
      }
      t["void"] = function () {
        return undefined;
      };
      t["boolean"] = function (e) {
        return !!e;
      };
      t["byte"] = createNumberConversion(8, { unsigned: false });
      t["octet"] = createNumberConversion(8, { unsigned: true });
      t["short"] = createNumberConversion(16, { unsigned: false });
      t["unsigned short"] = createNumberConversion(16, { unsigned: true });
      t["long"] = createNumberConversion(32, { unsigned: false });
      t["unsigned long"] = createNumberConversion(32, { unsigned: true });
      t["long long"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });
      t["unsigned long long"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });
      t["double"] = function (e) {
        const t = +e;
        if (!Number.isFinite(t)) {
          throw new TypeError("Argument is not a finite floating-point value");
        }
        return t;
      };
      t["unrestricted double"] = function (e) {
        const t = +e;
        if (isNaN(t)) {
          throw new TypeError("Argument is NaN");
        }
        return t;
      };
      t["float"] = t["double"];
      t["unrestricted float"] = t["unrestricted double"];
      t["DOMString"] = function (e, t) {
        if (!t) t = {};
        if (t.treatNullAsEmptyString && e === null) {
          return "";
        }
        return String(e);
      };
      t["ByteString"] = function (e, t) {
        const r = String(e);
        let s = undefined;
        for (let e = 0; (s = r.codePointAt(e)) !== undefined; ++e) {
          if (s > 255) {
            throw new TypeError("Argument is not a valid bytestring");
          }
        }
        return r;
      };
      t["USVString"] = function (e) {
        const t = String(e);
        const r = t.length;
        const s = [];
        for (let e = 0; e < r; ++e) {
          const n = t.charCodeAt(e);
          if (n < 55296 || n > 57343) {
            s.push(String.fromCodePoint(n));
          } else if (56320 <= n && n <= 57343) {
            s.push(String.fromCodePoint(65533));
          } else {
            if (e === r - 1) {
              s.push(String.fromCodePoint(65533));
            } else {
              const r = t.charCodeAt(e + 1);
              if (56320 <= r && r <= 57343) {
                const t = n & 1023;
                const o = r & 1023;
                s.push(String.fromCodePoint((2 << 15) + (2 << 9) * t + o));
                ++e;
              } else {
                s.push(String.fromCodePoint(65533));
              }
            }
          }
        }
        return s.join("");
      };
      t["Date"] = function (e, t) {
        if (!(e instanceof Date)) {
          throw new TypeError("Argument is not a Date object");
        }
        if (isNaN(e)) {
          return undefined;
        }
        return e;
      };
      t["RegExp"] = function (e, t) {
        if (!(e instanceof RegExp)) {
          e = new RegExp(e);
        }
        return e;
      };
    },
    23184: (e, t, r) => {
      "use strict";
      const s = r(20905);
      t.implementation = class URLImpl {
        constructor(e) {
          const t = e[0];
          const r = e[1];
          let n = null;
          if (r !== undefined) {
            n = s.basicURLParse(r);
            if (n === "failure") {
              throw new TypeError("Invalid base URL");
            }
          }
          const o = s.basicURLParse(t, { baseURL: n });
          if (o === "failure") {
            throw new TypeError("Invalid URL");
          }
          this._url = o;
        }
        get href() {
          return s.serializeURL(this._url);
        }
        set href(e) {
          const t = s.basicURLParse(e);
          if (t === "failure") {
            throw new TypeError("Invalid URL");
          }
          this._url = t;
        }
        get origin() {
          return s.serializeURLOrigin(this._url);
        }
        get protocol() {
          return this._url.scheme + ":";
        }
        set protocol(e) {
          s.basicURLParse(e + ":", { url: this._url, stateOverride: "scheme start" });
        }
        get username() {
          return this._url.username;
        }
        set username(e) {
          if (s.cannotHaveAUsernamePasswordPort(this._url)) {
            return;
          }
          s.setTheUsername(this._url, e);
        }
        get password() {
          return this._url.password;
        }
        set password(e) {
          if (s.cannotHaveAUsernamePasswordPort(this._url)) {
            return;
          }
          s.setThePassword(this._url, e);
        }
        get host() {
          const e = this._url;
          if (e.host === null) {
            return "";
          }
          if (e.port === null) {
            return s.serializeHost(e.host);
          }
          return s.serializeHost(e.host) + ":" + s.serializeInteger(e.port);
        }
        set host(e) {
          if (this._url.cannotBeABaseURL) {
            return;
          }
          s.basicURLParse(e, { url: this._url, stateOverride: "host" });
        }
        get hostname() {
          if (this._url.host === null) {
            return "";
          }
          return s.serializeHost(this._url.host);
        }
        set hostname(e) {
          if (this._url.cannotBeABaseURL) {
            return;
          }
          s.basicURLParse(e, { url: this._url, stateOverride: "hostname" });
        }
        get port() {
          if (this._url.port === null) {
            return "";
          }
          return s.serializeInteger(this._url.port);
        }
        set port(e) {
          if (s.cannotHaveAUsernamePasswordPort(this._url)) {
            return;
          }
          if (e === "") {
            this._url.port = null;
          } else {
            s.basicURLParse(e, { url: this._url, stateOverride: "port" });
          }
        }
        get pathname() {
          if (this._url.cannotBeABaseURL) {
            return this._url.path[0];
          }
          if (this._url.path.length === 0) {
            return "";
          }
          return "/" + this._url.path.join("/");
        }
        set pathname(e) {
          if (this._url.cannotBeABaseURL) {
            return;
          }
          this._url.path = [];
          s.basicURLParse(e, { url: this._url, stateOverride: "path start" });
        }
        get search() {
          if (this._url.query === null || this._url.query === "") {
            return "";
          }
          return "?" + this._url.query;
        }
        set search(e) {
          const t = this._url;
          if (e === "") {
            t.query = null;
            return;
          }
          const r = e[0] === "?" ? e.substring(1) : e;
          t.query = "";
          s.basicURLParse(r, { url: t, stateOverride: "query" });
        }
        get hash() {
          if (this._url.fragment === null || this._url.fragment === "") {
            return "";
          }
          return "#" + this._url.fragment;
        }
        set hash(e) {
          if (e === "") {
            this._url.fragment = null;
            return;
          }
          const t = e[0] === "#" ? e.substring(1) : e;
          this._url.fragment = "";
          s.basicURLParse(t, { url: this._url, stateOverride: "fragment" });
        }
        toJSON() {
          return this.href;
        }
      };
    },
    66633: (e, t, r) => {
      "use strict";
      const s = r(37125);
      const n = r(39857);
      const o = r(23184);
      const i = n.implSymbol;
      function URL(t) {
        if (!this || this[i] || !(this instanceof URL)) {
          throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");
        }
        if (arguments.length < 1) {
          throw new TypeError("Failed to construct 'URL': 1 argument required, but only " + arguments.length + " present.");
        }
        const r = [];
        for (let e = 0; e < arguments.length && e < 2; ++e) {
          r[e] = arguments[e];
        }
        r[0] = s["USVString"](r[0]);
        if (r[1] !== undefined) {
          r[1] = s["USVString"](r[1]);
        }
        e.exports.setup(this, r);
      }
      URL.prototype.toJSON = function toJSON() {
        if (!this || !e.exports.is(this)) {
          throw new TypeError("Illegal invocation");
        }
        const t = [];
        for (let e = 0; e < arguments.length && e < 0; ++e) {
          t[e] = arguments[e];
        }
        return this[i].toJSON.apply(this[i], t);
      };
      Object.defineProperty(URL.prototype, "href", {
        get() {
          return this[i].href;
        },
        set(e) {
          e = s["USVString"](e);
          this[i].href = e;
        },
        enumerable: true,
        configurable: true,
      });
      URL.prototype.toString = function () {
        if (!this || !e.exports.is(this)) {
          throw new TypeError("Illegal invocation");
        }
        return this.href;
      };
      Object.defineProperty(URL.prototype, "origin", {
        get() {
          return this[i].origin;
        },
        enumerable: true,
        configurable: true,
      });
      Object.defineProperty(URL.prototype, "protocol", {
        get() {
          return this[i].protocol;
        },
        set(e) {
          e = s["USVString"](e);
          this[i].protocol = e;
        },
        enumerable: true,
        configurable: true,
      });
      Object.defineProperty(URL.prototype, "username", {
        get() {
          return this[i].username;
        },
        set(e) {
          e = s["USVString"](e);
          this[i].username = e;
        },
        enumerable: true,
        configurable: true,
      });
      Object.defineProperty(URL.prototype, "password", {
        get() {
          return this[i].password;
        },
        set(e) {
          e = s["USVString"](e);
          this[i].password = e;
        },
        enumerable: true,
        configurable: true,
      });
      Object.defineProperty(URL.prototype, "host", {
        get() {
          return this[i].host;
        },
        set(e) {
          e = s["USVString"](e);
          this[i].host = e;
        },
        enumerable: true,
        configurable: true,
      });
      Object.defineProperty(URL.prototype, "hostname", {
        get() {
          return this[i].hostname;
        },
        set(e) {
          e = s["USVString"](e);
          this[i].hostname = e;
        },
        enumerable: true,
        configurable: true,
      });
      Object.defineProperty(URL.prototype, "port", {
        get() {
          return this[i].port;
        },
        set(e) {
          e = s["USVString"](e);
          this[i].port = e;
        },
        enumerable: true,
        configurable: true,
      });
      Object.defineProperty(URL.prototype, "pathname", {
        get() {
          return this[i].pathname;
        },
        set(e) {
          e = s["USVString"](e);
          this[i].pathname = e;
        },
        enumerable: true,
        configurable: true,
      });
      Object.defineProperty(URL.prototype, "search", {
        get() {
          return this[i].search;
        },
        set(e) {
          e = s["USVString"](e);
          this[i].search = e;
        },
        enumerable: true,
        configurable: true,
      });
      Object.defineProperty(URL.prototype, "hash", {
        get() {
          return this[i].hash;
        },
        set(e) {
          e = s["USVString"](e);
          this[i].hash = e;
        },
        enumerable: true,
        configurable: true,
      });
      e.exports = {
        is(e) {
          return !!e && e[i] instanceof o.implementation;
        },
        create(e, t) {
          let r = Object.create(URL.prototype);
          this.setup(r, e, t);
          return r;
        },
        setup(e, t, r) {
          if (!r) r = {};
          r.wrapper = e;
          e[i] = new o.implementation(t, r);
          e[i][n.wrapperSymbol] = e;
        },
        interface: URL,
        expose: { Window: { URL: URL }, Worker: { URL: URL } },
      };
    },
    62686: (e, t, r) => {
      "use strict";
      t.URL = r(66633)["interface"];
      t.serializeURL = r(20905).serializeURL;
      t.serializeURLOrigin = r(20905).serializeURLOrigin;
      t.basicURLParse = r(20905).basicURLParse;
      t.setTheUsername = r(20905).setTheUsername;
      t.setThePassword = r(20905).setThePassword;
      t.serializeHost = r(20905).serializeHost;
      t.serializeInteger = r(20905).serializeInteger;
      t.parseURL = r(20905).parseURL;
    },
    20905: (e, t, r) => {
      "use strict";
      const s = r(24876);
      const n = r(1552);
      const o = { ftp: 21, file: null, gopher: 70, http: 80, https: 443, ws: 80, wss: 443 };
      const i = Symbol("failure");
      function countSymbols(e) {
        return s.ucs2.decode(e).length;
      }
      function at(e, t) {
        const r = e[t];
        return isNaN(r) ? undefined : String.fromCodePoint(r);
      }
      function isASCIIDigit(e) {
        return e >= 48 && e <= 57;
      }
      function isASCIIAlpha(e) {
        return (e >= 65 && e <= 90) || (e >= 97 && e <= 122);
      }
      function isASCIIAlphanumeric(e) {
        return isASCIIAlpha(e) || isASCIIDigit(e);
      }
      function isASCIIHex(e) {
        return isASCIIDigit(e) || (e >= 65 && e <= 70) || (e >= 97 && e <= 102);
      }
      function isSingleDot(e) {
        return e === "." || e.toLowerCase() === "%2e";
      }
      function isDoubleDot(e) {
        e = e.toLowerCase();
        return e === ".." || e === "%2e." || e === ".%2e" || e === "%2e%2e";
      }
      function isWindowsDriveLetterCodePoints(e, t) {
        return isASCIIAlpha(e) && (t === 58 || t === 124);
      }
      function isWindowsDriveLetterString(e) {
        return e.length === 2 && isASCIIAlpha(e.codePointAt(0)) && (e[1] === ":" || e[1] === "|");
      }
      function isNormalizedWindowsDriveLetterString(e) {
        return e.length === 2 && isASCIIAlpha(e.codePointAt(0)) && e[1] === ":";
      }
      function containsForbiddenHostCodePoint(e) {
        return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/) !== -1;
      }
      function containsForbiddenHostCodePointExcludingPercent(e) {
        return e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/) !== -1;
      }
      function isSpecialScheme(e) {
        return o[e] !== undefined;
      }
      function isSpecial(e) {
        return isSpecialScheme(e.scheme);
      }
      function defaultPort(e) {
        return o[e];
      }
      function percentEncode(e) {
        let t = e.toString(16).toUpperCase();
        if (t.length === 1) {
          t = "0" + t;
        }
        return "%" + t;
      }
      function utf8PercentEncode(e) {
        const t = new Buffer(e);
        let r = "";
        for (let e = 0; e < t.length; ++e) {
          r += percentEncode(t[e]);
        }
        return r;
      }
      function utf8PercentDecode(e) {
        const t = new Buffer(e);
        const r = [];
        for (let e = 0; e < t.length; ++e) {
          if (t[e] !== 37) {
            r.push(t[e]);
          } else if (t[e] === 37 && isASCIIHex(t[e + 1]) && isASCIIHex(t[e + 2])) {
            r.push(parseInt(t.slice(e + 1, e + 3).toString(), 16));
            e += 2;
          } else {
            r.push(t[e]);
          }
        }
        return new Buffer(r).toString();
      }
      function isC0ControlPercentEncode(e) {
        return e <= 31 || e > 126;
      }
      const a = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);
      function isPathPercentEncode(e) {
        return isC0ControlPercentEncode(e) || a.has(e);
      }
      const A = new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);
      function isUserinfoPercentEncode(e) {
        return isPathPercentEncode(e) || A.has(e);
      }
      function percentEncodeChar(e, t) {
        const r = String.fromCodePoint(e);
        if (t(e)) {
          return utf8PercentEncode(r);
        }
        return r;
      }
      function parseIPv4Number(e) {
        let t = 10;
        if (e.length >= 2 && e.charAt(0) === "0" && e.charAt(1).toLowerCase() === "x") {
          e = e.substring(2);
          t = 16;
        } else if (e.length >= 2 && e.charAt(0) === "0") {
          e = e.substring(1);
          t = 8;
        }
        if (e === "") {
          return 0;
        }
        const r = t === 10 ? /[^0-9]/ : t === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/;
        if (r.test(e)) {
          return i;
        }
        return parseInt(e, t);
      }
      function parseIPv4(e) {
        const t = e.split(".");
        if (t[t.length - 1] === "") {
          if (t.length > 1) {
            t.pop();
          }
        }
        if (t.length > 4) {
          return e;
        }
        const r = [];
        for (const s of t) {
          if (s === "") {
            return e;
          }
          const t = parseIPv4Number(s);
          if (t === i) {
            return e;
          }
          r.push(t);
        }
        for (let e = 0; e < r.length - 1; ++e) {
          if (r[e] > 255) {
            return i;
          }
        }
        if (r[r.length - 1] >= Math.pow(256, 5 - r.length)) {
          return i;
        }
        let s = r.pop();
        let n = 0;
        for (const e of r) {
          s += e * Math.pow(256, 3 - n);
          ++n;
        }
        return s;
      }
      function serializeIPv4(e) {
        let t = "";
        let r = e;
        for (let e = 1; e <= 4; ++e) {
          t = String(r % 256) + t;
          if (e !== 4) {
            t = "." + t;
          }
          r = Math.floor(r / 256);
        }
        return t;
      }
      function parseIPv6(e) {
        const t = [0, 0, 0, 0, 0, 0, 0, 0];
        let r = 0;
        let n = null;
        let o = 0;
        e = s.ucs2.decode(e);
        if (e[o] === 58) {
          if (e[o + 1] !== 58) {
            return i;
          }
          o += 2;
          ++r;
          n = r;
        }
        while (o < e.length) {
          if (r === 8) {
            return i;
          }
          if (e[o] === 58) {
            if (n !== null) {
              return i;
            }
            ++o;
            ++r;
            n = r;
            continue;
          }
          let s = 0;
          let a = 0;
          while (a < 4 && isASCIIHex(e[o])) {
            s = s * 16 + parseInt(at(e, o), 16);
            ++o;
            ++a;
          }
          if (e[o] === 46) {
            if (a === 0) {
              return i;
            }
            o -= a;
            if (r > 6) {
              return i;
            }
            let s = 0;
            while (e[o] !== undefined) {
              let n = null;
              if (s > 0) {
                if (e[o] === 46 && s < 4) {
                  ++o;
                } else {
                  return i;
                }
              }
              if (!isASCIIDigit(e[o])) {
                return i;
              }
              while (isASCIIDigit(e[o])) {
                const t = parseInt(at(e, o));
                if (n === null) {
                  n = t;
                } else if (n === 0) {
                  return i;
                } else {
                  n = n * 10 + t;
                }
                if (n > 255) {
                  return i;
                }
                ++o;
              }
              t[r] = t[r] * 256 + n;
              ++s;
              if (s === 2 || s === 4) {
                ++r;
              }
            }
            if (s !== 4) {
              return i;
            }
            break;
          } else if (e[o] === 58) {
            ++o;
            if (e[o] === undefined) {
              return i;
            }
          } else if (e[o] !== undefined) {
            return i;
          }
          t[r] = s;
          ++r;
        }
        if (n !== null) {
          let e = r - n;
          r = 7;
          while (r !== 0 && e > 0) {
            const s = t[n + e - 1];
            t[n + e - 1] = t[r];
            t[r] = s;
            --r;
            --e;
          }
        } else if (n === null && r !== 8) {
          return i;
        }
        return t;
      }
      function serializeIPv6(e) {
        let t = "";
        const r = findLongestZeroSequence(e);
        const s = r.idx;
        let n = false;
        for (let r = 0; r <= 7; ++r) {
          if (n && e[r] === 0) {
            continue;
          } else if (n) {
            n = false;
          }
          if (s === r) {
            const e = r === 0 ? "::" : ":";
            t += e;
            n = true;
            continue;
          }
          t += e[r].toString(16);
          if (r !== 7) {
            t += ":";
          }
        }
        return t;
      }
      function parseHost(e, t) {
        if (e[0] === "[") {
          if (e[e.length - 1] !== "]") {
            return i;
          }
          return parseIPv6(e.substring(1, e.length - 1));
        }
        if (!t) {
          return parseOpaqueHost(e);
        }
        const r = utf8PercentDecode(e);
        const s = n.toASCII(r, false, n.PROCESSING_OPTIONS.NONTRANSITIONAL, false);
        if (s === null) {
          return i;
        }
        if (containsForbiddenHostCodePoint(s)) {
          return i;
        }
        const o = parseIPv4(s);
        if (typeof o === "number" || o === i) {
          return o;
        }
        return s;
      }
      function parseOpaqueHost(e) {
        if (containsForbiddenHostCodePointExcludingPercent(e)) {
          return i;
        }
        let t = "";
        const r = s.ucs2.decode(e);
        for (let e = 0; e < r.length; ++e) {
          t += percentEncodeChar(r[e], isC0ControlPercentEncode);
        }
        return t;
      }
      function findLongestZeroSequence(e) {
        let t = null;
        let r = 1;
        let s = null;
        let n = 0;
        for (let o = 0; o < e.length; ++o) {
          if (e[o] !== 0) {
            if (n > r) {
              t = s;
              r = n;
            }
            s = null;
            n = 0;
          } else {
            if (s === null) {
              s = o;
            }
            ++n;
          }
        }
        if (n > r) {
          t = s;
          r = n;
        }
        return { idx: t, len: r };
      }
      function serializeHost(e) {
        if (typeof e === "number") {
          return serializeIPv4(e);
        }
        if (e instanceof Array) {
          return "[" + serializeIPv6(e) + "]";
        }
        return e;
      }
      function trimControlChars(e) {
        return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g, "");
      }
      function trimTabAndNewline(e) {
        return e.replace(/\u0009|\u000A|\u000D/g, "");
      }
      function shortenPath(e) {
        const t = e.path;
        if (t.length === 0) {
          return;
        }
        if (e.scheme === "file" && t.length === 1 && isNormalizedWindowsDriveLetter(t[0])) {
          return;
        }
        t.pop();
      }
      function includesCredentials(e) {
        return e.username !== "" || e.password !== "";
      }
      function cannotHaveAUsernamePasswordPort(e) {
        return e.host === null || e.host === "" || e.cannotBeABaseURL || e.scheme === "file";
      }
      function isNormalizedWindowsDriveLetter(e) {
        return /^[A-Za-z]:$/.test(e);
      }
      function URLStateMachine(e, t, r, n, o) {
        this.pointer = 0;
        this.input = e;
        this.base = t || null;
        this.encodingOverride = r || "utf-8";
        this.stateOverride = o;
        this.url = n;
        this.failure = false;
        this.parseError = false;
        if (!this.url) {
          this.url = { scheme: "", username: "", password: "", host: null, port: null, path: [], query: null, fragment: null, cannotBeABaseURL: false };
          const e = trimControlChars(this.input);
          if (e !== this.input) {
            this.parseError = true;
          }
          this.input = e;
        }
        const a = trimTabAndNewline(this.input);
        if (a !== this.input) {
          this.parseError = true;
        }
        this.input = a;
        this.state = o || "scheme start";
        this.buffer = "";
        this.atFlag = false;
        this.arrFlag = false;
        this.passwordTokenSeenFlag = false;
        this.input = s.ucs2.decode(this.input);
        for (; this.pointer <= this.input.length; ++this.pointer) {
          const e = this.input[this.pointer];
          const t = isNaN(e) ? undefined : String.fromCodePoint(e);
          const r = this["parse " + this.state](e, t);
          if (!r) {
            break;
          } else if (r === i) {
            this.failure = true;
            break;
          }
        }
      }
      URLStateMachine.prototype["parse scheme start"] = function parseSchemeStart(e, t) {
        if (isASCIIAlpha(e)) {
          this.buffer += t.toLowerCase();
          this.state = "scheme";
        } else if (!this.stateOverride) {
          this.state = "no scheme";
          --this.pointer;
        } else {
          this.parseError = true;
          return i;
        }
        return true;
      };
      URLStateMachine.prototype["parse scheme"] = function parseScheme(e, t) {
        if (isASCIIAlphanumeric(e) || e === 43 || e === 45 || e === 46) {
          this.buffer += t.toLowerCase();
        } else if (e === 58) {
          if (this.stateOverride) {
            if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {
              return false;
            }
            if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {
              return false;
            }
            if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === "file") {
              return false;
            }
            if (this.url.scheme === "file" && (this.url.host === "" || this.url.host === null)) {
              return false;
            }
          }
          this.url.scheme = this.buffer;
          this.buffer = "";
          if (this.stateOverride) {
            return false;
          }
          if (this.url.scheme === "file") {
            if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {
              this.parseError = true;
            }
            this.state = "file";
          } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {
            this.state = "special relative or authority";
          } else if (isSpecial(this.url)) {
            this.state = "special authority slashes";
          } else if (this.input[this.pointer + 1] === 47) {
            this.state = "path or authority";
            ++this.pointer;
          } else {
            this.url.cannotBeABaseURL = true;
            this.url.path.push("");
            this.state = "cannot-be-a-base-URL path";
          }
        } else if (!this.stateOverride) {
          this.buffer = "";
          this.state = "no scheme";
          this.pointer = -1;
        } else {
          this.parseError = true;
          return i;
        }
        return true;
      };
      URLStateMachine.prototype["parse no scheme"] = function parseNoScheme(e) {
        if (this.base === null || (this.base.cannotBeABaseURL && e !== 35)) {
          return i;
        } else if (this.base.cannotBeABaseURL && e === 35) {
          this.url.scheme = this.base.scheme;
          this.url.path = this.base.path.slice();
          this.url.query = this.base.query;
          this.url.fragment = "";
          this.url.cannotBeABaseURL = true;
          this.state = "fragment";
        } else if (this.base.scheme === "file") {
          this.state = "file";
          --this.pointer;
        } else {
          this.state = "relative";
          --this.pointer;
        }
        return true;
      };
      URLStateMachine.prototype["parse special relative or authority"] = function parseSpecialRelativeOrAuthority(e) {
        if (e === 47 && this.input[this.pointer + 1] === 47) {
          this.state = "special authority ignore slashes";
          ++this.pointer;
        } else {
          this.parseError = true;
          this.state = "relative";
          --this.pointer;
        }
        return true;
      };
      URLStateMachine.prototype["parse path or authority"] = function parsePathOrAuthority(e) {
        if (e === 47) {
          this.state = "authority";
        } else {
          this.state = "path";
          --this.pointer;
        }
        return true;
      };
      URLStateMachine.prototype["parse relative"] = function parseRelative(e) {
        this.url.scheme = this.base.scheme;
        if (isNaN(e)) {
          this.url.username = this.base.username;
          this.url.password = this.base.password;
          this.url.host = this.base.host;
          this.url.port = this.base.port;
          this.url.path = this.base.path.slice();
          this.url.query = this.base.query;
        } else if (e === 47) {
          this.state = "relative slash";
        } else if (e === 63) {
          this.url.username = this.base.username;
          this.url.password = this.base.password;
          this.url.host = this.base.host;
          this.url.port = this.base.port;
          this.url.path = this.base.path.slice();
          this.url.query = "";
          this.state = "query";
        } else if (e === 35) {
          this.url.username = this.base.username;
          this.url.password = this.base.password;
          this.url.host = this.base.host;
          this.url.port = this.base.port;
          this.url.path = this.base.path.slice();
          this.url.query = this.base.query;
          this.url.fragment = "";
          this.state = "fragment";
        } else if (isSpecial(this.url) && e === 92) {
          this.parseError = true;
          this.state = "relative slash";
        } else {
          this.url.username = this.base.username;
          this.url.password = this.base.password;
          this.url.host = this.base.host;
          this.url.port = this.base.port;
          this.url.path = this.base.path.slice(0, this.base.path.length - 1);
          this.state = "path";
          --this.pointer;
        }
        return true;
      };
      URLStateMachine.prototype["parse relative slash"] = function parseRelativeSlash(e) {
        if (isSpecial(this.url) && (e === 47 || e === 92)) {
          if (e === 92) {
            this.parseError = true;
          }
          this.state = "special authority ignore slashes";
        } else if (e === 47) {
          this.state = "authority";
        } else {
          this.url.username = this.base.username;
          this.url.password = this.base.password;
          this.url.host = this.base.host;
          this.url.port = this.base.port;
          this.state = "path";
          --this.pointer;
        }
        return true;
      };
      URLStateMachine.prototype["parse special authority slashes"] = function parseSpecialAuthoritySlashes(e) {
        if (e === 47 && this.input[this.pointer + 1] === 47) {
          this.state = "special authority ignore slashes";
          ++this.pointer;
        } else {
          this.parseError = true;
          this.state = "special authority ignore slashes";
          --this.pointer;
        }
        return true;
      };
      URLStateMachine.prototype["parse special authority ignore slashes"] = function parseSpecialAuthorityIgnoreSlashes(e) {
        if (e !== 47 && e !== 92) {
          this.state = "authority";
          --this.pointer;
        } else {
          this.parseError = true;
        }
        return true;
      };
      URLStateMachine.prototype["parse authority"] = function parseAuthority(e, t) {
        if (e === 64) {
          this.parseError = true;
          if (this.atFlag) {
            this.buffer = "%40" + this.buffer;
          }
          this.atFlag = true;
          const e = countSymbols(this.buffer);
          for (let t = 0; t < e; ++t) {
            const e = this.buffer.codePointAt(t);
            if (e === 58 && !this.passwordTokenSeenFlag) {
              this.passwordTokenSeenFlag = true;
              continue;
            }
            const r = percentEncodeChar(e, isUserinfoPercentEncode);
            if (this.passwordTokenSeenFlag) {
              this.url.password += r;
            } else {
              this.url.username += r;
            }
          }
          this.buffer = "";
        } else if (isNaN(e) || e === 47 || e === 63 || e === 35 || (isSpecial(this.url) && e === 92)) {
          if (this.atFlag && this.buffer === "") {
            this.parseError = true;
            return i;
          }
          this.pointer -= countSymbols(this.buffer) + 1;
          this.buffer = "";
          this.state = "host";
        } else {
          this.buffer += t;
        }
        return true;
      };
      URLStateMachine.prototype["parse hostname"] = URLStateMachine.prototype["parse host"] = function parseHostName(e, t) {
        if (this.stateOverride && this.url.scheme === "file") {
          --this.pointer;
          this.state = "file host";
        } else if (e === 58 && !this.arrFlag) {
          if (this.buffer === "") {
            this.parseError = true;
            return i;
          }
          const e = parseHost(this.buffer, isSpecial(this.url));
          if (e === i) {
            return i;
          }
          this.url.host = e;
          this.buffer = "";
          this.state = "port";
          if (this.stateOverride === "hostname") {
            return false;
          }
        } else if (isNaN(e) || e === 47 || e === 63 || e === 35 || (isSpecial(this.url) && e === 92)) {
          --this.pointer;
          if (isSpecial(this.url) && this.buffer === "") {
            this.parseError = true;
            return i;
          } else if (this.stateOverride && this.buffer === "" && (includesCredentials(this.url) || this.url.port !== null)) {
            this.parseError = true;
            return false;
          }
          const e = parseHost(this.buffer, isSpecial(this.url));
          if (e === i) {
            return i;
          }
          this.url.host = e;
          this.buffer = "";
          this.state = "path start";
          if (this.stateOverride) {
            return false;
          }
        } else {
          if (e === 91) {
            this.arrFlag = true;
          } else if (e === 93) {
            this.arrFlag = false;
          }
          this.buffer += t;
        }
        return true;
      };
      URLStateMachine.prototype["parse port"] = function parsePort(e, t) {
        if (isASCIIDigit(e)) {
          this.buffer += t;
        } else if (isNaN(e) || e === 47 || e === 63 || e === 35 || (isSpecial(this.url) && e === 92) || this.stateOverride) {
          if (this.buffer !== "") {
            const e = parseInt(this.buffer);
            if (e > Math.pow(2, 16) - 1) {
              this.parseError = true;
              return i;
            }
            this.url.port = e === defaultPort(this.url.scheme) ? null : e;
            this.buffer = "";
          }
          if (this.stateOverride) {
            return false;
          }
          this.state = "path start";
          --this.pointer;
        } else {
          this.parseError = true;
          return i;
        }
        return true;
      };
      const l = new Set([47, 92, 63, 35]);
      URLStateMachine.prototype["parse file"] = function parseFile(e) {
        this.url.scheme = "file";
        if (e === 47 || e === 92) {
          if (e === 92) {
            this.parseError = true;
          }
          this.state = "file slash";
        } else if (this.base !== null && this.base.scheme === "file") {
          if (isNaN(e)) {
            this.url.host = this.base.host;
            this.url.path = this.base.path.slice();
            this.url.query = this.base.query;
          } else if (e === 63) {
            this.url.host = this.base.host;
            this.url.path = this.base.path.slice();
            this.url.query = "";
            this.state = "query";
          } else if (e === 35) {
            this.url.host = this.base.host;
            this.url.path = this.base.path.slice();
            this.url.query = this.base.query;
            this.url.fragment = "";
            this.state = "fragment";
          } else {
            if (
              this.input.length - this.pointer - 1 === 0 ||
              !isWindowsDriveLetterCodePoints(e, this.input[this.pointer + 1]) ||
              (this.input.length - this.pointer - 1 >= 2 && !l.has(this.input[this.pointer + 2]))
            ) {
              this.url.host = this.base.host;
              this.url.path = this.base.path.slice();
              shortenPath(this.url);
            } else {
              this.parseError = true;
            }
            this.state = "path";
            --this.pointer;
          }
        } else {
          this.state = "path";
          --this.pointer;
        }
        return true;
      };
      URLStateMachine.prototype["parse file slash"] = function parseFileSlash(e) {
        if (e === 47 || e === 92) {
          if (e === 92) {
            this.parseError = true;
          }
          this.state = "file host";
        } else {
          if (this.base !== null && this.base.scheme === "file") {
            if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {
              this.url.path.push(this.base.path[0]);
            } else {
              this.url.host = this.base.host;
            }
          }
          this.state = "path";
          --this.pointer;
        }
        return true;
      };
      URLStateMachine.prototype["parse file host"] = function parseFileHost(e, t) {
        if (isNaN(e) || e === 47 || e === 92 || e === 63 || e === 35) {
          --this.pointer;
          if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {
            this.parseError = true;
            this.state = "path";
          } else if (this.buffer === "") {
            this.url.host = "";
            if (this.stateOverride) {
              return false;
            }
            this.state = "path start";
          } else {
            let e = parseHost(this.buffer, isSpecial(this.url));
            if (e === i) {
              return i;
            }
            if (e === "localhost") {
              e = "";
            }
            this.url.host = e;
            if (this.stateOverride) {
              return false;
            }
            this.buffer = "";
            this.state = "path start";
          }
        } else {
          this.buffer += t;
        }
        return true;
      };
      URLStateMachine.prototype["parse path start"] = function parsePathStart(e) {
        if (isSpecial(this.url)) {
          if (e === 92) {
            this.parseError = true;
          }
          this.state = "path";
          if (e !== 47 && e !== 92) {
            --this.pointer;
          }
        } else if (!this.stateOverride && e === 63) {
          this.url.query = "";
          this.state = "query";
        } else if (!this.stateOverride && e === 35) {
          this.url.fragment = "";
          this.state = "fragment";
        } else if (e !== undefined) {
          this.state = "path";
          if (e !== 47) {
            --this.pointer;
          }
        }
        return true;
      };
      URLStateMachine.prototype["parse path"] = function parsePath(e) {
        if (isNaN(e) || e === 47 || (isSpecial(this.url) && e === 92) || (!this.stateOverride && (e === 63 || e === 35))) {
          if (isSpecial(this.url) && e === 92) {
            this.parseError = true;
          }
          if (isDoubleDot(this.buffer)) {
            shortenPath(this.url);
            if (e !== 47 && !(isSpecial(this.url) && e === 92)) {
              this.url.path.push("");
            }
          } else if (isSingleDot(this.buffer) && e !== 47 && !(isSpecial(this.url) && e === 92)) {
            this.url.path.push("");
          } else if (!isSingleDot(this.buffer)) {
            if (this.url.scheme === "file" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {
              if (this.url.host !== "" && this.url.host !== null) {
                this.parseError = true;
                this.url.host = "";
              }
              this.buffer = this.buffer[0] + ":";
            }
            this.url.path.push(this.buffer);
          }
          this.buffer = "";
          if (this.url.scheme === "file" && (e === undefined || e === 63 || e === 35)) {
            while (this.url.path.length > 1 && this.url.path[0] === "") {
              this.parseError = true;
              this.url.path.shift();
            }
          }
          if (e === 63) {
            this.url.query = "";
            this.state = "query";
          }
          if (e === 35) {
            this.url.fragment = "";
            this.state = "fragment";
          }
        } else {
          if (e === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
            this.parseError = true;
          }
          this.buffer += percentEncodeChar(e, isPathPercentEncode);
        }
        return true;
      };
      URLStateMachine.prototype["parse cannot-be-a-base-URL path"] = function parseCannotBeABaseURLPath(e) {
        if (e === 63) {
          this.url.query = "";
          this.state = "query";
        } else if (e === 35) {
          this.url.fragment = "";
          this.state = "fragment";
        } else {
          if (!isNaN(e) && e !== 37) {
            this.parseError = true;
          }
          if (e === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
            this.parseError = true;
          }
          if (!isNaN(e)) {
            this.url.path[0] = this.url.path[0] + percentEncodeChar(e, isC0ControlPercentEncode);
          }
        }
        return true;
      };
      URLStateMachine.prototype["parse query"] = function parseQuery(e, t) {
        if (isNaN(e) || (!this.stateOverride && e === 35)) {
          if (!isSpecial(this.url) || this.url.scheme === "ws" || this.url.scheme === "wss") {
            this.encodingOverride = "utf-8";
          }
          const t = new Buffer(this.buffer);
          for (let e = 0; e < t.length; ++e) {
            if (t[e] < 33 || t[e] > 126 || t[e] === 34 || t[e] === 35 || t[e] === 60 || t[e] === 62) {
              this.url.query += percentEncode(t[e]);
            } else {
              this.url.query += String.fromCodePoint(t[e]);
            }
          }
          this.buffer = "";
          if (e === 35) {
            this.url.fragment = "";
            this.state = "fragment";
          }
        } else {
          if (e === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
            this.parseError = true;
          }
          this.buffer += t;
        }
        return true;
      };
      URLStateMachine.prototype["parse fragment"] = function parseFragment(e) {
        if (isNaN(e)) {
        } else if (e === 0) {
          this.parseError = true;
        } else {
          if (e === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {
            this.parseError = true;
          }
          this.url.fragment += percentEncodeChar(e, isC0ControlPercentEncode);
        }
        return true;
      };
      function serializeURL(e, t) {
        let r = e.scheme + ":";
        if (e.host !== null) {
          r += "//";
          if (e.username !== "" || e.password !== "") {
            r += e.username;
            if (e.password !== "") {
              r += ":" + e.password;
            }
            r += "@";
          }
          r += serializeHost(e.host);
          if (e.port !== null) {
            r += ":" + e.port;
          }
        } else if (e.host === null && e.scheme === "file") {
          r += "//";
        }
        if (e.cannotBeABaseURL) {
          r += e.path[0];
        } else {
          for (const t of e.path) {
            r += "/" + t;
          }
        }
        if (e.query !== null) {
          r += "?" + e.query;
        }
        if (!t && e.fragment !== null) {
          r += "#" + e.fragment;
        }
        return r;
      }
      function serializeOrigin(e) {
        let t = e.scheme + "://";
        t += serializeHost(e.host);
        if (e.port !== null) {
          t += ":" + e.port;
        }
        return t;
      }
      e.exports.serializeURL = serializeURL;
      e.exports.serializeURLOrigin = function (t) {
        switch (t.scheme) {
          case "blob":
            try {
              return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]));
            } catch (e) {
              return "null";
            }
          case "ftp":
          case "gopher":
          case "http":
          case "https":
          case "ws":
          case "wss":
            return serializeOrigin({ scheme: t.scheme, host: t.host, port: t.port });
          case "file":
            return "file://";
          default:
            return "null";
        }
      };
      e.exports.basicURLParse = function (e, t) {
        if (t === undefined) {
          t = {};
        }
        const r = new URLStateMachine(e, t.baseURL, t.encodingOverride, t.url, t.stateOverride);
        if (r.failure) {
          return "failure";
        }
        return r.url;
      };
      e.exports.setTheUsername = function (e, t) {
        e.username = "";
        const r = s.ucs2.decode(t);
        for (let t = 0; t < r.length; ++t) {
          e.username += percentEncodeChar(r[t], isUserinfoPercentEncode);
        }
      };
      e.exports.setThePassword = function (e, t) {
        e.password = "";
        const r = s.ucs2.decode(t);
        for (let t = 0; t < r.length; ++t) {
          e.password += percentEncodeChar(r[t], isUserinfoPercentEncode);
        }
      };
      e.exports.serializeHost = serializeHost;
      e.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;
      e.exports.serializeInteger = function (e) {
        return String(e);
      };
      e.exports.parseURL = function (t, r) {
        if (r === undefined) {
          r = {};
        }
        return e.exports.basicURLParse(t, { baseURL: r.baseURL, encodingOverride: r.encodingOverride });
      };
    },
    39857: (e) => {
      "use strict";
      e.exports.mixin = function mixin(e, t) {
        const r = Object.getOwnPropertyNames(t);
        for (let s = 0; s < r.length; ++s) {
          Object.defineProperty(e, r[s], Object.getOwnPropertyDescriptor(t, r[s]));
        }
      };
      e.exports.wrapperSymbol = Symbol("wrapper");
      e.exports.implSymbol = Symbol("impl");
      e.exports.wrapperForImpl = function (t) {
        return t[e.exports.wrapperSymbol];
      };
      e.exports.implForWrapper = function (t) {
        return t[e.exports.implSymbol];
      };
    },
    58264: (e) => {
      e.exports = wrappy;
      function wrappy(e, t) {
        if (e && t) return wrappy(e)(t);
        if (typeof e !== "function") throw new TypeError("need wrapper function");
        Object.keys(e).forEach(function (t) {
          wrapper[t] = e[t];
        });
        return wrapper;
        function wrapper() {
          var t = new Array(arguments.length);
          for (var r = 0; r < t.length; r++) {
            t[r] = arguments[r];
          }
          var s = e.apply(this, t);
          var n = t[t.length - 1];
          if (typeof s === "function" && s !== n) {
            Object.keys(n).forEach(function (e) {
              s[e] = n[e];
            });
          }
          return s;
        }
      }
    },
    11354: (e, t, r) => {
      "use strict";
      const s = r(56681);
      s.createWebSocketStream = r(86412);
      s.Server = r(70129);
      s.Receiver = r(20893);
      s.Sender = r(7389);
      s.WebSocket = s;
      s.WebSocketServer = s.Server;
      e.exports = s;
    },
    95803: (e, t, r) => {
      "use strict";
      const { EMPTY_BUFFER: s } = r(71791);
      const n = Buffer[Symbol.species];
      function concat(e, t) {
        if (e.length === 0) return s;
        if (e.length === 1) return e[0];
        const r = Buffer.allocUnsafe(t);
        let o = 0;
        for (let t = 0; t < e.length; t++) {
          const s = e[t];
          r.set(s, o);
          o += s.length;
        }
        if (o < t) {
          return new n(r.buffer, r.byteOffset, o);
        }
        return r;
      }
      function _mask(e, t, r, s, n) {
        for (let o = 0; o < n; o++) {
          r[s + o] = e[o] ^ t[o & 3];
        }
      }
      function _unmask(e, t) {
        for (let r = 0; r < e.length; r++) {
          e[r] ^= t[r & 3];
        }
      }
      function toArrayBuffer(e) {
        if (e.length === e.buffer.byteLength) {
          return e.buffer;
        }
        return e.buffer.slice(e.byteOffset, e.byteOffset + e.length);
      }
      function toBuffer(e) {
        toBuffer.readOnly = true;
        if (Buffer.isBuffer(e)) return e;
        let t;
        if (e instanceof ArrayBuffer) {
          t = new n(e);
        } else if (ArrayBuffer.isView(e)) {
          t = new n(e.buffer, e.byteOffset, e.byteLength);
        } else {
          t = Buffer.from(e);
          toBuffer.readOnly = false;
        }
        return t;
      }
      e.exports = { concat: concat, mask: _mask, toArrayBuffer: toArrayBuffer, toBuffer: toBuffer, unmask: _unmask };
      if (!process.env.WS_NO_BUFFER_UTIL) {
        try {
          const t = r(18327);
          e.exports.mask = function (e, r, s, n, o) {
            if (o < 48) _mask(e, r, s, n, o);
            else t.mask(e, r, s, n, o);
          };
          e.exports.unmask = function (e, r) {
            if (e.length < 32) _unmask(e, r);
            else t.unmask(e, r);
          };
        } catch (e) {}
      }
    },
    71791: (e) => {
      "use strict";
      e.exports = {
        BINARY_TYPES: ["nodebuffer", "arraybuffer", "fragments"],
        EMPTY_BUFFER: Buffer.alloc(0),
        GUID: "258EAFA5-E914-47DA-95CA-C5AB0DC85B11",
        kForOnEventAttribute: Symbol("kIsForOnEventAttribute"),
        kListener: Symbol("kListener"),
        kStatusCode: Symbol("status-code"),
        kWebSocket: Symbol("websocket"),
        NOOP: () => {},
      };
    },
    34634: (e, t, r) => {
      "use strict";
      const { kForOnEventAttribute: s, kListener: n } = r(71791);
      const o = Symbol("kCode");
      const i = Symbol("kData");
      const a = Symbol("kError");
      const A = Symbol("kMessage");
      const l = Symbol("kReason");
      const c = Symbol("kTarget");
      const d = Symbol("kType");
      const p = Symbol("kWasClean");
      class Event {
        constructor(e) {
          this[c] = null;
          this[d] = e;
        }
        get target() {
          return this[c];
        }
        get type() {
          return this[d];
        }
      }
      Object.defineProperty(Event.prototype, "target", { enumerable: true });
      Object.defineProperty(Event.prototype, "type", { enumerable: true });
      class CloseEvent extends Event {
        constructor(e, t = {}) {
          super(e);
          this[o] = t.code === undefined ? 0 : t.code;
          this[l] = t.reason === undefined ? "" : t.reason;
          this[p] = t.wasClean === undefined ? false : t.wasClean;
        }
        get code() {
          return this[o];
        }
        get reason() {
          return this[l];
        }
        get wasClean() {
          return this[p];
        }
      }
      Object.defineProperty(CloseEvent.prototype, "code", { enumerable: true });
      Object.defineProperty(CloseEvent.prototype, "reason", { enumerable: true });
      Object.defineProperty(CloseEvent.prototype, "wasClean", { enumerable: true });
      class ErrorEvent extends Event {
        constructor(e, t = {}) {
          super(e);
          this[a] = t.error === undefined ? null : t.error;
          this[A] = t.message === undefined ? "" : t.message;
        }
        get error() {
          return this[a];
        }
        get message() {
          return this[A];
        }
      }
      Object.defineProperty(ErrorEvent.prototype, "error", { enumerable: true });
      Object.defineProperty(ErrorEvent.prototype, "message", { enumerable: true });
      class MessageEvent extends Event {
        constructor(e, t = {}) {
          super(e);
          this[i] = t.data === undefined ? null : t.data;
        }
        get data() {
          return this[i];
        }
      }
      Object.defineProperty(MessageEvent.prototype, "data", { enumerable: true });
      const u = {
        addEventListener(e, t, r = {}) {
          for (const o of this.listeners(e)) {
            if (!r[s] && o[n] === t && !o[s]) {
              return;
            }
          }
          let o;
          if (e === "message") {
            o = function onMessage(e, r) {
              const s = new MessageEvent("message", { data: r ? e : e.toString() });
              s[c] = this;
              callListener(t, this, s);
            };
          } else if (e === "close") {
            o = function onClose(e, r) {
              const s = new CloseEvent("close", { code: e, reason: r.toString(), wasClean: this._closeFrameReceived && this._closeFrameSent });
              s[c] = this;
              callListener(t, this, s);
            };
          } else if (e === "error") {
            o = function onError(e) {
              const r = new ErrorEvent("error", { error: e, message: e.message });
              r[c] = this;
              callListener(t, this, r);
            };
          } else if (e === "open") {
            o = function onOpen() {
              const e = new Event("open");
              e[c] = this;
              callListener(t, this, e);
            };
          } else {
            return;
          }
          o[s] = !!r[s];
          o[n] = t;
          if (r.once) {
            this.once(e, o);
          } else {
            this.on(e, o);
          }
        },
        removeEventListener(e, t) {
          for (const r of this.listeners(e)) {
            if (r[n] === t && !r[s]) {
              this.removeListener(e, r);
              break;
            }
          }
        },
      };
      e.exports = { CloseEvent: CloseEvent, ErrorEvent: ErrorEvent, Event: Event, EventTarget: u, MessageEvent: MessageEvent };
      function callListener(e, t, r) {
        if (typeof e === "object" && e.handleEvent) {
          e.handleEvent.call(e, r);
        } else {
          e.call(t, r);
        }
      }
    },
    61335: (e, t, r) => {
      "use strict";
      const { tokenChars: s } = r(26615);
      function push(e, t, r) {
        if (e[t] === undefined) e[t] = [r];
        else e[t].push(r);
      }
      function parse(e) {
        const t = Object.create(null);
        let r = Object.create(null);
        let n = false;
        let o = false;
        let i = false;
        let a;
        let A;
        let l = -1;
        let c = -1;
        let d = -1;
        let p = 0;
        for (; p < e.length; p++) {
          c = e.charCodeAt(p);
          if (a === undefined) {
            if (d === -1 && s[c] === 1) {
              if (l === -1) l = p;
            } else if (p !== 0 && (c === 32 || c === 9)) {
              if (d === -1 && l !== -1) d = p;
            } else if (c === 59 || c === 44) {
              if (l === -1) {
                throw new SyntaxError(`Unexpected character at index ${p}`);
              }
              if (d === -1) d = p;
              const s = e.slice(l, d);
              if (c === 44) {
                push(t, s, r);
                r = Object.create(null);
              } else {
                a = s;
              }
              l = d = -1;
            } else {
              throw new SyntaxError(`Unexpected character at index ${p}`);
            }
          } else if (A === undefined) {
            if (d === -1 && s[c] === 1) {
              if (l === -1) l = p;
            } else if (c === 32 || c === 9) {
              if (d === -1 && l !== -1) d = p;
            } else if (c === 59 || c === 44) {
              if (l === -1) {
                throw new SyntaxError(`Unexpected character at index ${p}`);
              }
              if (d === -1) d = p;
              push(r, e.slice(l, d), true);
              if (c === 44) {
                push(t, a, r);
                r = Object.create(null);
                a = undefined;
              }
              l = d = -1;
            } else if (c === 61 && l !== -1 && d === -1) {
              A = e.slice(l, p);
              l = d = -1;
            } else {
              throw new SyntaxError(`Unexpected character at index ${p}`);
            }
          } else {
            if (o) {
              if (s[c] !== 1) {
                throw new SyntaxError(`Unexpected character at index ${p}`);
              }
              if (l === -1) l = p;
              else if (!n) n = true;
              o = false;
            } else if (i) {
              if (s[c] === 1) {
                if (l === -1) l = p;
              } else if (c === 34 && l !== -1) {
                i = false;
                d = p;
              } else if (c === 92) {
                o = true;
              } else {
                throw new SyntaxError(`Unexpected character at index ${p}`);
              }
            } else if (c === 34 && e.charCodeAt(p - 1) === 61) {
              i = true;
            } else if (d === -1 && s[c] === 1) {
              if (l === -1) l = p;
            } else if (l !== -1 && (c === 32 || c === 9)) {
              if (d === -1) d = p;
            } else if (c === 59 || c === 44) {
              if (l === -1) {
                throw new SyntaxError(`Unexpected character at index ${p}`);
              }
              if (d === -1) d = p;
              let s = e.slice(l, d);
              if (n) {
                s = s.replace(/\\/g, "");
                n = false;
              }
              push(r, A, s);
              if (c === 44) {
                push(t, a, r);
                r = Object.create(null);
                a = undefined;
              }
              A = undefined;
              l = d = -1;
            } else {
              throw new SyntaxError(`Unexpected character at index ${p}`);
            }
          }
        }
        if (l === -1 || i || c === 32 || c === 9) {
          throw new SyntaxError("Unexpected end of input");
        }
        if (d === -1) d = p;
        const u = e.slice(l, d);
        if (a === undefined) {
          push(t, u, r);
        } else {
          if (A === undefined) {
            push(r, u, true);
          } else if (n) {
            push(r, A, u.replace(/\\/g, ""));
          } else {
            push(r, A, u);
          }
          push(t, a, r);
        }
        return t;
      }
      function format(e) {
        return Object.keys(e)
          .map((t) => {
            let r = e[t];
            if (!Array.isArray(r)) r = [r];
            return r
              .map((e) =>
                [t]
                  .concat(
                    Object.keys(e).map((t) => {
                      let r = e[t];
                      if (!Array.isArray(r)) r = [r];
                      return r.map((e) => (e === true ? t : `${t}=${e}`)).join("; ");
                    })
                  )
                  .join("; ")
              )
              .join(", ");
          })
          .join(", ");
      }
      e.exports = { format: format, parse: parse };
    },
    10958: (e) => {
      "use strict";
      const t = Symbol("kDone");
      const r = Symbol("kRun");
      class Limiter {
        constructor(e) {
          this[t] = () => {
            this.pending--;
            this[r]();
          };
          this.concurrency = e || Infinity;
          this.jobs = [];
          this.pending = 0;
        }
        add(e) {
          this.jobs.push(e);
          this[r]();
        }
        [r]() {
          if (this.pending === this.concurrency) return;
          if (this.jobs.length) {
            const e = this.jobs.shift();
            this.pending++;
            e(this[t]);
          }
        }
      }
      e.exports = Limiter;
    },
    4376: (e, t, r) => {
      "use strict";
      const s = r(43106);
      const n = r(95803);
      const o = r(10958);
      const { kStatusCode: i } = r(71791);
      const a = Buffer[Symbol.species];
      const A = Buffer.from([0, 0, 255, 255]);
      const l = Symbol("permessage-deflate");
      const c = Symbol("total-length");
      const d = Symbol("callback");
      const p = Symbol("buffers");
      const u = Symbol("error");
      let g;
      class PerMessageDeflate {
        constructor(e, t, r) {
          this._maxPayload = r | 0;
          this._options = e || {};
          this._threshold = this._options.threshold !== undefined ? this._options.threshold : 1024;
          this._isServer = !!t;
          this._deflate = null;
          this._inflate = null;
          this.params = null;
          if (!g) {
            const e = this._options.concurrencyLimit !== undefined ? this._options.concurrencyLimit : 10;
            g = new o(e);
          }
        }
        static get extensionName() {
          return "permessage-deflate";
        }
        offer() {
          const e = {};
          if (this._options.serverNoContextTakeover) {
            e.server_no_context_takeover = true;
          }
          if (this._options.clientNoContextTakeover) {
            e.client_no_context_takeover = true;
          }
          if (this._options.serverMaxWindowBits) {
            e.server_max_window_bits = this._options.serverMaxWindowBits;
          }
          if (this._options.clientMaxWindowBits) {
            e.client_max_window_bits = this._options.clientMaxWindowBits;
          } else if (this._options.clientMaxWindowBits == null) {
            e.client_max_window_bits = true;
          }
          return e;
        }
        accept(e) {
          e = this.normalizeParams(e);
          this.params = this._isServer ? this.acceptAsServer(e) : this.acceptAsClient(e);
          return this.params;
        }
        cleanup() {
          if (this._inflate) {
            this._inflate.close();
            this._inflate = null;
          }
          if (this._deflate) {
            const e = this._deflate[d];
            this._deflate.close();
            this._deflate = null;
            if (e) {
              e(new Error("The deflate stream was closed while data was being processed"));
            }
          }
        }
        acceptAsServer(e) {
          const t = this._options;
          const r = e.find((e) => {
            if (
              (t.serverNoContextTakeover === false && e.server_no_context_takeover) ||
              (e.server_max_window_bits &&
                (t.serverMaxWindowBits === false || (typeof t.serverMaxWindowBits === "number" && t.serverMaxWindowBits > e.server_max_window_bits))) ||
              (typeof t.clientMaxWindowBits === "number" && !e.client_max_window_bits)
            ) {
              return false;
            }
            return true;
          });
          if (!r) {
            throw new Error("None of the extension offers can be accepted");
          }
          if (t.serverNoContextTakeover) {
            r.server_no_context_takeover = true;
          }
          if (t.clientNoContextTakeover) {
            r.client_no_context_takeover = true;
          }
          if (typeof t.serverMaxWindowBits === "number") {
            r.server_max_window_bits = t.serverMaxWindowBits;
          }
          if (typeof t.clientMaxWindowBits === "number") {
            r.client_max_window_bits = t.clientMaxWindowBits;
          } else if (r.client_max_window_bits === true || t.clientMaxWindowBits === false) {
            delete r.client_max_window_bits;
          }
          return r;
        }
        acceptAsClient(e) {
          const t = e[0];
          if (this._options.clientNoContextTakeover === false && t.client_no_context_takeover) {
            throw new Error('Unexpected parameter "client_no_context_takeover"');
          }
          if (!t.client_max_window_bits) {
            if (typeof this._options.clientMaxWindowBits === "number") {
              t.client_max_window_bits = this._options.clientMaxWindowBits;
            }
          } else if (
            this._options.clientMaxWindowBits === false ||
            (typeof this._options.clientMaxWindowBits === "number" && t.client_max_window_bits > this._options.clientMaxWindowBits)
          ) {
            throw new Error('Unexpected or invalid parameter "client_max_window_bits"');
          }
          return t;
        }
        normalizeParams(e) {
          e.forEach((e) => {
            Object.keys(e).forEach((t) => {
              let r = e[t];
              if (r.length > 1) {
                throw new Error(`Parameter "${t}" must have only a single value`);
              }
              r = r[0];
              if (t === "client_max_window_bits") {
                if (r !== true) {
                  const e = +r;
                  if (!Number.isInteger(e) || e < 8 || e > 15) {
                    throw new TypeError(`Invalid value for parameter "${t}": ${r}`);
                  }
                  r = e;
                } else if (!this._isServer) {
                  throw new TypeError(`Invalid value for parameter "${t}": ${r}`);
                }
              } else if (t === "server_max_window_bits") {
                const e = +r;
                if (!Number.isInteger(e) || e < 8 || e > 15) {
                  throw new TypeError(`Invalid value for parameter "${t}": ${r}`);
                }
                r = e;
              } else if (t === "client_no_context_takeover" || t === "server_no_context_takeover") {
                if (r !== true) {
                  throw new TypeError(`Invalid value for parameter "${t}": ${r}`);
                }
              } else {
                throw new Error(`Unknown parameter "${t}"`);
              }
              e[t] = r;
            });
          });
          return e;
        }
        decompress(e, t, r) {
          g.add((s) => {
            this._decompress(e, t, (e, t) => {
              s();
              r(e, t);
            });
          });
        }
        compress(e, t, r) {
          g.add((s) => {
            this._compress(e, t, (e, t) => {
              s();
              r(e, t);
            });
          });
        }
        _decompress(e, t, r) {
          const o = this._isServer ? "client" : "server";
          if (!this._inflate) {
            const e = `${o}_max_window_bits`;
            const t = typeof this.params[e] !== "number" ? s.Z_DEFAULT_WINDOWBITS : this.params[e];
            this._inflate = s.createInflateRaw({ ...this._options.zlibInflateOptions, windowBits: t });
            this._inflate[l] = this;
            this._inflate[c] = 0;
            this._inflate[p] = [];
            this._inflate.on("error", inflateOnError);
            this._inflate.on("data", inflateOnData);
          }
          this._inflate[d] = r;
          this._inflate.write(e);
          if (t) this._inflate.write(A);
          this._inflate.flush(() => {
            const e = this._inflate[u];
            if (e) {
              this._inflate.close();
              this._inflate = null;
              r(e);
              return;
            }
            const s = n.concat(this._inflate[p], this._inflate[c]);
            if (this._inflate._readableState.endEmitted) {
              this._inflate.close();
              this._inflate = null;
            } else {
              this._inflate[c] = 0;
              this._inflate[p] = [];
              if (t && this.params[`${o}_no_context_takeover`]) {
                this._inflate.reset();
              }
            }
            r(null, s);
          });
        }
        _compress(e, t, r) {
          const o = this._isServer ? "server" : "client";
          if (!this._deflate) {
            const e = `${o}_max_window_bits`;
            const t = typeof this.params[e] !== "number" ? s.Z_DEFAULT_WINDOWBITS : this.params[e];
            this._deflate = s.createDeflateRaw({ ...this._options.zlibDeflateOptions, windowBits: t });
            this._deflate[c] = 0;
            this._deflate[p] = [];
            this._deflate.on("data", deflateOnData);
          }
          this._deflate[d] = r;
          this._deflate.write(e);
          this._deflate.flush(s.Z_SYNC_FLUSH, () => {
            if (!this._deflate) {
              return;
            }
            let e = n.concat(this._deflate[p], this._deflate[c]);
            if (t) {
              e = new a(e.buffer, e.byteOffset, e.length - 4);
            }
            this._deflate[d] = null;
            this._deflate[c] = 0;
            this._deflate[p] = [];
            if (t && this.params[`${o}_no_context_takeover`]) {
              this._deflate.reset();
            }
            r(null, e);
          });
        }
      }
      e.exports = PerMessageDeflate;
      function deflateOnData(e) {
        this[p].push(e);
        this[c] += e.length;
      }
      function inflateOnData(e) {
        this[c] += e.length;
        if (this[l]._maxPayload < 1 || this[c] <= this[l]._maxPayload) {
          this[p].push(e);
          return;
        }
        this[u] = new RangeError("Max payload size exceeded");
        this[u].code = "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH";
        this[u][i] = 1009;
        this.removeListener("data", inflateOnData);
        this.reset();
      }
      function inflateOnError(e) {
        this[l]._inflate = null;
        e[i] = 1007;
        this[d](e);
      }
    },
    20893: (e, t, r) => {
      "use strict";
      const { Writable: s } = r(2203);
      const n = r(4376);
      const { BINARY_TYPES: o, EMPTY_BUFFER: i, kStatusCode: a, kWebSocket: A } = r(71791);
      const { concat: l, toArrayBuffer: c, unmask: d } = r(95803);
      const { isValidStatusCode: p, isValidUTF8: u } = r(26615);
      const g = Buffer[Symbol.species];
      const m = 0;
      const h = 1;
      const E = 2;
      const I = 3;
      const C = 4;
      const y = 5;
      const B = 6;
      class Receiver extends s {
        constructor(e = {}) {
          super();
          this._allowSynchronousEvents = e.allowSynchronousEvents !== undefined ? e.allowSynchronousEvents : true;
          this._binaryType = e.binaryType || o[0];
          this._extensions = e.extensions || {};
          this._isServer = !!e.isServer;
          this._maxPayload = e.maxPayload | 0;
          this._skipUTF8Validation = !!e.skipUTF8Validation;
          this[A] = undefined;
          this._bufferedBytes = 0;
          this._buffers = [];
          this._compressed = false;
          this._payloadLength = 0;
          this._mask = undefined;
          this._fragmented = 0;
          this._masked = false;
          this._fin = false;
          this._opcode = 0;
          this._totalPayloadLength = 0;
          this._messageLength = 0;
          this._fragments = [];
          this._errored = false;
          this._loop = false;
          this._state = m;
        }
        _write(e, t, r) {
          if (this._opcode === 8 && this._state == m) return r();
          this._bufferedBytes += e.length;
          this._buffers.push(e);
          this.startLoop(r);
        }
        consume(e) {
          this._bufferedBytes -= e;
          if (e === this._buffers[0].length) return this._buffers.shift();
          if (e < this._buffers[0].length) {
            const t = this._buffers[0];
            this._buffers[0] = new g(t.buffer, t.byteOffset + e, t.length - e);
            return new g(t.buffer, t.byteOffset, e);
          }
          const t = Buffer.allocUnsafe(e);
          do {
            const r = this._buffers[0];
            const s = t.length - e;
            if (e >= r.length) {
              t.set(this._buffers.shift(), s);
            } else {
              t.set(new Uint8Array(r.buffer, r.byteOffset, e), s);
              this._buffers[0] = new g(r.buffer, r.byteOffset + e, r.length - e);
            }
            e -= r.length;
          } while (e > 0);
          return t;
        }
        startLoop(e) {
          this._loop = true;
          do {
            switch (this._state) {
              case m:
                this.getInfo(e);
                break;
              case h:
                this.getPayloadLength16(e);
                break;
              case E:
                this.getPayloadLength64(e);
                break;
              case I:
                this.getMask();
                break;
              case C:
                this.getData(e);
                break;
              case y:
              case B:
                this._loop = false;
                return;
            }
          } while (this._loop);
          if (!this._errored) e();
        }
        getInfo(e) {
          if (this._bufferedBytes < 2) {
            this._loop = false;
            return;
          }
          const t = this.consume(2);
          if ((t[0] & 48) !== 0) {
            const t = this.createError(RangeError, "RSV2 and RSV3 must be clear", true, 1002, "WS_ERR_UNEXPECTED_RSV_2_3");
            e(t);
            return;
          }
          const r = (t[0] & 64) === 64;
          if (r && !this._extensions[n.extensionName]) {
            const t = this.createError(RangeError, "RSV1 must be clear", true, 1002, "WS_ERR_UNEXPECTED_RSV_1");
            e(t);
            return;
          }
          this._fin = (t[0] & 128) === 128;
          this._opcode = t[0] & 15;
          this._payloadLength = t[1] & 127;
          if (this._opcode === 0) {
            if (r) {
              const t = this.createError(RangeError, "RSV1 must be clear", true, 1002, "WS_ERR_UNEXPECTED_RSV_1");
              e(t);
              return;
            }
            if (!this._fragmented) {
              const t = this.createError(RangeError, "invalid opcode 0", true, 1002, "WS_ERR_INVALID_OPCODE");
              e(t);
              return;
            }
            this._opcode = this._fragmented;
          } else if (this._opcode === 1 || this._opcode === 2) {
            if (this._fragmented) {
              const t = this.createError(RangeError, `invalid opcode ${this._opcode}`, true, 1002, "WS_ERR_INVALID_OPCODE");
              e(t);
              return;
            }
            this._compressed = r;
          } else if (this._opcode > 7 && this._opcode < 11) {
            if (!this._fin) {
              const t = this.createError(RangeError, "FIN must be set", true, 1002, "WS_ERR_EXPECTED_FIN");
              e(t);
              return;
            }
            if (r) {
              const t = this.createError(RangeError, "RSV1 must be clear", true, 1002, "WS_ERR_UNEXPECTED_RSV_1");
              e(t);
              return;
            }
            if (this._payloadLength > 125 || (this._opcode === 8 && this._payloadLength === 1)) {
              const t = this.createError(RangeError, `invalid payload length ${this._payloadLength}`, true, 1002, "WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH");
              e(t);
              return;
            }
          } else {
            const t = this.createError(RangeError, `invalid opcode ${this._opcode}`, true, 1002, "WS_ERR_INVALID_OPCODE");
            e(t);
            return;
          }
          if (!this._fin && !this._fragmented) this._fragmented = this._opcode;
          this._masked = (t[1] & 128) === 128;
          if (this._isServer) {
            if (!this._masked) {
              const t = this.createError(RangeError, "MASK must be set", true, 1002, "WS_ERR_EXPECTED_MASK");
              e(t);
              return;
            }
          } else if (this._masked) {
            const t = this.createError(RangeError, "MASK must be clear", true, 1002, "WS_ERR_UNEXPECTED_MASK");
            e(t);
            return;
          }
          if (this._payloadLength === 126) this._state = h;
          else if (this._payloadLength === 127) this._state = E;
          else this.haveLength(e);
        }
        getPayloadLength16(e) {
          if (this._bufferedBytes < 2) {
            this._loop = false;
            return;
          }
          this._payloadLength = this.consume(2).readUInt16BE(0);
          this.haveLength(e);
        }
        getPayloadLength64(e) {
          if (this._bufferedBytes < 8) {
            this._loop = false;
            return;
          }
          const t = this.consume(8);
          const r = t.readUInt32BE(0);
          if (r > Math.pow(2, 53 - 32) - 1) {
            const t = this.createError(
              RangeError,
              "Unsupported WebSocket frame: payload length > 2^53 - 1",
              false,
              1009,
              "WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH"
            );
            e(t);
            return;
          }
          this._payloadLength = r * Math.pow(2, 32) + t.readUInt32BE(4);
          this.haveLength(e);
        }
        haveLength(e) {
          if (this._payloadLength && this._opcode < 8) {
            this._totalPayloadLength += this._payloadLength;
            if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {
              const t = this.createError(RangeError, "Max payload size exceeded", false, 1009, "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH");
              e(t);
              return;
            }
          }
          if (this._masked) this._state = I;
          else this._state = C;
        }
        getMask() {
          if (this._bufferedBytes < 4) {
            this._loop = false;
            return;
          }
          this._mask = this.consume(4);
          this._state = C;
        }
        getData(e) {
          let t = i;
          if (this._payloadLength) {
            if (this._bufferedBytes < this._payloadLength) {
              this._loop = false;
              return;
            }
            t = this.consume(this._payloadLength);
            if (this._masked && (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0) {
              d(t, this._mask);
            }
          }
          if (this._opcode > 7) {
            this.controlMessage(t, e);
            return;
          }
          if (this._compressed) {
            this._state = y;
            this.decompress(t, e);
            return;
          }
          if (t.length) {
            this._messageLength = this._totalPayloadLength;
            this._fragments.push(t);
          }
          this.dataMessage(e);
        }
        decompress(e, t) {
          const r = this._extensions[n.extensionName];
          r.decompress(e, this._fin, (e, r) => {
            if (e) return t(e);
            if (r.length) {
              this._messageLength += r.length;
              if (this._messageLength > this._maxPayload && this._maxPayload > 0) {
                const e = this.createError(RangeError, "Max payload size exceeded", false, 1009, "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH");
                t(e);
                return;
              }
              this._fragments.push(r);
            }
            this.dataMessage(t);
            if (this._state === m) this.startLoop(t);
          });
        }
        dataMessage(e) {
          if (!this._fin) {
            this._state = m;
            return;
          }
          const t = this._messageLength;
          const r = this._fragments;
          this._totalPayloadLength = 0;
          this._messageLength = 0;
          this._fragmented = 0;
          this._fragments = [];
          if (this._opcode === 2) {
            let s;
            if (this._binaryType === "nodebuffer") {
              s = l(r, t);
            } else if (this._binaryType === "arraybuffer") {
              s = c(l(r, t));
            } else {
              s = r;
            }
            if (this._allowSynchronousEvents) {
              this.emit("message", s, true);
              this._state = m;
            } else {
              this._state = B;
              setImmediate(() => {
                this.emit("message", s, true);
                this._state = m;
                this.startLoop(e);
              });
            }
          } else {
            const s = l(r, t);
            if (!this._skipUTF8Validation && !u(s)) {
              const t = this.createError(Error, "invalid UTF-8 sequence", true, 1007, "WS_ERR_INVALID_UTF8");
              e(t);
              return;
            }
            if (this._state === y || this._allowSynchronousEvents) {
              this.emit("message", s, false);
              this._state = m;
            } else {
              this._state = B;
              setImmediate(() => {
                this.emit("message", s, false);
                this._state = m;
                this.startLoop(e);
              });
            }
          }
        }
        controlMessage(e, t) {
          if (this._opcode === 8) {
            if (e.length === 0) {
              this._loop = false;
              this.emit("conclude", 1005, i);
              this.end();
            } else {
              const r = e.readUInt16BE(0);
              if (!p(r)) {
                const e = this.createError(RangeError, `invalid status code ${r}`, true, 1002, "WS_ERR_INVALID_CLOSE_CODE");
                t(e);
                return;
              }
              const s = new g(e.buffer, e.byteOffset + 2, e.length - 2);
              if (!this._skipUTF8Validation && !u(s)) {
                const e = this.createError(Error, "invalid UTF-8 sequence", true, 1007, "WS_ERR_INVALID_UTF8");
                t(e);
                return;
              }
              this._loop = false;
              this.emit("conclude", r, s);
              this.end();
            }
            this._state = m;
            return;
          }
          if (this._allowSynchronousEvents) {
            this.emit(this._opcode === 9 ? "ping" : "pong", e);
            this._state = m;
          } else {
            this._state = B;
            setImmediate(() => {
              this.emit(this._opcode === 9 ? "ping" : "pong", e);
              this._state = m;
              this.startLoop(t);
            });
          }
        }
        createError(e, t, r, s, n) {
          this._loop = false;
          this._errored = true;
          const o = new e(r ? `Invalid WebSocket frame: ${t}` : t);
          Error.captureStackTrace(o, this.createError);
          o.code = n;
          o[a] = s;
          return o;
        }
      }
      e.exports = Receiver;
    },
    7389: (e, t, r) => {
      "use strict";
      const { Duplex: s } = r(2203);
      const { randomFillSync: n } = r(76982);
      const o = r(4376);
      const { EMPTY_BUFFER: i } = r(71791);
      const { isValidStatusCode: a } = r(26615);
      const { mask: A, toBuffer: l } = r(95803);
      const c = Symbol("kByteLength");
      const d = Buffer.alloc(4);
      class Sender {
        constructor(e, t, r) {
          this._extensions = t || {};
          if (r) {
            this._generateMask = r;
            this._maskBuffer = Buffer.alloc(4);
          }
          this._socket = e;
          this._firstFragment = true;
          this._compress = false;
          this._bufferedBytes = 0;
          this._deflating = false;
          this._queue = [];
        }
        static frame(e, t) {
          let r;
          let s = false;
          let o = 2;
          let i = false;
          if (t.mask) {
            r = t.maskBuffer || d;
            if (t.generateMask) {
              t.generateMask(r);
            } else {
              n(r, 0, 4);
            }
            i = (r[0] | r[1] | r[2] | r[3]) === 0;
            o = 6;
          }
          let a;
          if (typeof e === "string") {
            if ((!t.mask || i) && t[c] !== undefined) {
              a = t[c];
            } else {
              e = Buffer.from(e);
              a = e.length;
            }
          } else {
            a = e.length;
            s = t.mask && t.readOnly && !i;
          }
          let l = a;
          if (a >= 65536) {
            o += 8;
            l = 127;
          } else if (a > 125) {
            o += 2;
            l = 126;
          }
          const p = Buffer.allocUnsafe(s ? a + o : o);
          p[0] = t.fin ? t.opcode | 128 : t.opcode;
          if (t.rsv1) p[0] |= 64;
          p[1] = l;
          if (l === 126) {
            p.writeUInt16BE(a, 2);
          } else if (l === 127) {
            p[2] = p[3] = 0;
            p.writeUIntBE(a, 4, 6);
          }
          if (!t.mask) return [p, e];
          p[1] |= 128;
          p[o - 4] = r[0];
          p[o - 3] = r[1];
          p[o - 2] = r[2];
          p[o - 1] = r[3];
          if (i) return [p, e];
          if (s) {
            A(e, r, p, o, a);
            return [p];
          }
          A(e, r, e, 0, a);
          return [p, e];
        }
        close(e, t, r, s) {
          let n;
          if (e === undefined) {
            n = i;
          } else if (typeof e !== "number" || !a(e)) {
            throw new TypeError("First argument must be a valid error code number");
          } else if (t === undefined || !t.length) {
            n = Buffer.allocUnsafe(2);
            n.writeUInt16BE(e, 0);
          } else {
            const r = Buffer.byteLength(t);
            if (r > 123) {
              throw new RangeError("The message must not be greater than 123 bytes");
            }
            n = Buffer.allocUnsafe(2 + r);
            n.writeUInt16BE(e, 0);
            if (typeof t === "string") {
              n.write(t, 2);
            } else {
              n.set(t, 2);
            }
          }
          const o = {
            [c]: n.length,
            fin: true,
            generateMask: this._generateMask,
            mask: r,
            maskBuffer: this._maskBuffer,
            opcode: 8,
            readOnly: false,
            rsv1: false,
          };
          if (this._deflating) {
            this.enqueue([this.dispatch, n, false, o, s]);
          } else {
            this.sendFrame(Sender.frame(n, o), s);
          }
        }
        ping(e, t, r) {
          let s;
          let n;
          if (typeof e === "string") {
            s = Buffer.byteLength(e);
            n = false;
          } else {
            e = l(e);
            s = e.length;
            n = l.readOnly;
          }
          if (s > 125) {
            throw new RangeError("The data size must not be greater than 125 bytes");
          }
          const o = { [c]: s, fin: true, generateMask: this._generateMask, mask: t, maskBuffer: this._maskBuffer, opcode: 9, readOnly: n, rsv1: false };
          if (this._deflating) {
            this.enqueue([this.dispatch, e, false, o, r]);
          } else {
            this.sendFrame(Sender.frame(e, o), r);
          }
        }
        pong(e, t, r) {
          let s;
          let n;
          if (typeof e === "string") {
            s = Buffer.byteLength(e);
            n = false;
          } else {
            e = l(e);
            s = e.length;
            n = l.readOnly;
          }
          if (s > 125) {
            throw new RangeError("The data size must not be greater than 125 bytes");
          }
          const o = { [c]: s, fin: true, generateMask: this._generateMask, mask: t, maskBuffer: this._maskBuffer, opcode: 10, readOnly: n, rsv1: false };
          if (this._deflating) {
            this.enqueue([this.dispatch, e, false, o, r]);
          } else {
            this.sendFrame(Sender.frame(e, o), r);
          }
        }
        send(e, t, r) {
          const s = this._extensions[o.extensionName];
          let n = t.binary ? 2 : 1;
          let i = t.compress;
          let a;
          let A;
          if (typeof e === "string") {
            a = Buffer.byteLength(e);
            A = false;
          } else {
            e = l(e);
            a = e.length;
            A = l.readOnly;
          }
          if (this._firstFragment) {
            this._firstFragment = false;
            if (i && s && s.params[s._isServer ? "server_no_context_takeover" : "client_no_context_takeover"]) {
              i = a >= s._threshold;
            }
            this._compress = i;
          } else {
            i = false;
            n = 0;
          }
          if (t.fin) this._firstFragment = true;
          if (s) {
            const s = { [c]: a, fin: t.fin, generateMask: this._generateMask, mask: t.mask, maskBuffer: this._maskBuffer, opcode: n, readOnly: A, rsv1: i };
            if (this._deflating) {
              this.enqueue([this.dispatch, e, this._compress, s, r]);
            } else {
              this.dispatch(e, this._compress, s, r);
            }
          } else {
            this.sendFrame(
              Sender.frame(e, {
                [c]: a,
                fin: t.fin,
                generateMask: this._generateMask,
                mask: t.mask,
                maskBuffer: this._maskBuffer,
                opcode: n,
                readOnly: A,
                rsv1: false,
              }),
              r
            );
          }
        }
        dispatch(e, t, r, s) {
          if (!t) {
            this.sendFrame(Sender.frame(e, r), s);
            return;
          }
          const n = this._extensions[o.extensionName];
          this._bufferedBytes += r[c];
          this._deflating = true;
          n.compress(e, r.fin, (e, t) => {
            if (this._socket.destroyed) {
              const e = new Error("The socket was closed while data was being compressed");
              if (typeof s === "function") s(e);
              for (let t = 0; t < this._queue.length; t++) {
                const r = this._queue[t];
                const s = r[r.length - 1];
                if (typeof s === "function") s(e);
              }
              return;
            }
            this._bufferedBytes -= r[c];
            this._deflating = false;
            r.readOnly = false;
            this.sendFrame(Sender.frame(t, r), s);
            this.dequeue();
          });
        }
        dequeue() {
          while (!this._deflating && this._queue.length) {
            const e = this._queue.shift();
            this._bufferedBytes -= e[3][c];
            Reflect.apply(e[0], this, e.slice(1));
          }
        }
        enqueue(e) {
          this._bufferedBytes += e[3][c];
          this._queue.push(e);
        }
        sendFrame(e, t) {
          if (e.length === 2) {
            this._socket.cork();
            this._socket.write(e[0]);
            this._socket.write(e[1], t);
            this._socket.uncork();
          } else {
            this._socket.write(e[0], t);
          }
        }
      }
      e.exports = Sender;
    },
    86412: (e, t, r) => {
      "use strict";
      const { Duplex: s } = r(2203);
      function emitClose(e) {
        e.emit("close");
      }
      function duplexOnEnd() {
        if (!this.destroyed && this._writableState.finished) {
          this.destroy();
        }
      }
      function duplexOnError(e) {
        this.removeListener("error", duplexOnError);
        this.destroy();
        if (this.listenerCount("error") === 0) {
          this.emit("error", e);
        }
      }
      function createWebSocketStream(e, t) {
        let r = true;
        const n = new s({ ...t, autoDestroy: false, emitClose: false, objectMode: false, writableObjectMode: false });
        e.on("message", function message(t, r) {
          const s = !r && n._readableState.objectMode ? t.toString() : t;
          if (!n.push(s)) e.pause();
        });
        e.once("error", function error(e) {
          if (n.destroyed) return;
          r = false;
          n.destroy(e);
        });
        e.once("close", function close() {
          if (n.destroyed) return;
          n.push(null);
        });
        n._destroy = function (t, s) {
          if (e.readyState === e.CLOSED) {
            s(t);
            process.nextTick(emitClose, n);
            return;
          }
          let o = false;
          e.once("error", function error(e) {
            o = true;
            s(e);
          });
          e.once("close", function close() {
            if (!o) s(t);
            process.nextTick(emitClose, n);
          });
          if (r) e.terminate();
        };
        n._final = function (t) {
          if (e.readyState === e.CONNECTING) {
            e.once("open", function open() {
              n._final(t);
            });
            return;
          }
          if (e._socket === null) return;
          if (e._socket._writableState.finished) {
            t();
            if (n._readableState.endEmitted) n.destroy();
          } else {
            e._socket.once("finish", function finish() {
              t();
            });
            e.close();
          }
        };
        n._read = function () {
          if (e.isPaused) e.resume();
        };
        n._write = function (t, r, s) {
          if (e.readyState === e.CONNECTING) {
            e.once("open", function open() {
              n._write(t, r, s);
            });
            return;
          }
          e.send(t, s);
        };
        n.on("end", duplexOnEnd);
        n.on("error", duplexOnError);
        return n;
      }
      e.exports = createWebSocketStream;
    },
    43332: (e, t, r) => {
      "use strict";
      const { tokenChars: s } = r(26615);
      function parse(e) {
        const t = new Set();
        let r = -1;
        let n = -1;
        let o = 0;
        for (o; o < e.length; o++) {
          const i = e.charCodeAt(o);
          if (n === -1 && s[i] === 1) {
            if (r === -1) r = o;
          } else if (o !== 0 && (i === 32 || i === 9)) {
            if (n === -1 && r !== -1) n = o;
          } else if (i === 44) {
            if (r === -1) {
              throw new SyntaxError(`Unexpected character at index ${o}`);
            }
            if (n === -1) n = o;
            const s = e.slice(r, n);
            if (t.has(s)) {
              throw new SyntaxError(`The "${s}" subprotocol is duplicated`);
            }
            t.add(s);
            r = n = -1;
          } else {
            throw new SyntaxError(`Unexpected character at index ${o}`);
          }
        }
        if (r === -1 || n !== -1) {
          throw new SyntaxError("Unexpected end of input");
        }
        const i = e.slice(r, o);
        if (t.has(i)) {
          throw new SyntaxError(`The "${i}" subprotocol is duplicated`);
        }
        t.add(i);
        return t;
      }
      e.exports = { parse: parse };
    },
    26615: (e, t, r) => {
      "use strict";
      const { isUtf8: s } = r(20181);
      const n = [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0,
      ];
      function isValidStatusCode(e) {
        return (e >= 1e3 && e <= 1014 && e !== 1004 && e !== 1005 && e !== 1006) || (e >= 3e3 && e <= 4999);
      }
      function _isValidUTF8(e) {
        const t = e.length;
        let r = 0;
        while (r < t) {
          if ((e[r] & 128) === 0) {
            r++;
          } else if ((e[r] & 224) === 192) {
            if (r + 1 === t || (e[r + 1] & 192) !== 128 || (e[r] & 254) === 192) {
              return false;
            }
            r += 2;
          } else if ((e[r] & 240) === 224) {
            if (
              r + 2 >= t ||
              (e[r + 1] & 192) !== 128 ||
              (e[r + 2] & 192) !== 128 ||
              (e[r] === 224 && (e[r + 1] & 224) === 128) ||
              (e[r] === 237 && (e[r + 1] & 224) === 160)
            ) {
              return false;
            }
            r += 3;
          } else if ((e[r] & 248) === 240) {
            if (
              r + 3 >= t ||
              (e[r + 1] & 192) !== 128 ||
              (e[r + 2] & 192) !== 128 ||
              (e[r + 3] & 192) !== 128 ||
              (e[r] === 240 && (e[r + 1] & 240) === 128) ||
              (e[r] === 244 && e[r + 1] > 143) ||
              e[r] > 244
            ) {
              return false;
            }
            r += 4;
          } else {
            return false;
          }
        }
        return true;
      }
      e.exports = { isValidStatusCode: isValidStatusCode, isValidUTF8: _isValidUTF8, tokenChars: n };
      if (s) {
        e.exports.isValidUTF8 = function (e) {
          return e.length < 24 ? _isValidUTF8(e) : s(e);
        };
      } else if (!process.env.WS_NO_UTF_8_VALIDATE) {
        try {
          const t = r(62414);
          e.exports.isValidUTF8 = function (e) {
            return e.length < 32 ? _isValidUTF8(e) : t(e);
          };
        } catch (e) {}
      }
    },
    70129: (e, t, r) => {
      "use strict";
      const s = r(24434);
      const n = r(58611);
      const { Duplex: o } = r(2203);
      const { createHash: i } = r(76982);
      const a = r(61335);
      const A = r(4376);
      const l = r(43332);
      const c = r(56681);
      const { GUID: d, kWebSocket: p } = r(71791);
      const u = /^[+/0-9A-Za-z]{22}==$/;
      const g = 0;
      const m = 1;
      const h = 2;
      class WebSocketServer extends s {
        constructor(e, t) {
          super();
          e = {
            allowSynchronousEvents: true,
            autoPong: true,
            maxPayload: 100 * 1024 * 1024,
            skipUTF8Validation: false,
            perMessageDeflate: false,
            handleProtocols: null,
            clientTracking: true,
            verifyClient: null,
            noServer: false,
            backlog: null,
            server: null,
            host: null,
            path: null,
            port: null,
            WebSocket: c,
            ...e,
          };
          if ((e.port == null && !e.server && !e.noServer) || (e.port != null && (e.server || e.noServer)) || (e.server && e.noServer)) {
            throw new TypeError('One and only one of the "port", "server", or "noServer" options ' + "must be specified");
          }
          if (e.port != null) {
            this._server = n.createServer((e, t) => {
              const r = n.STATUS_CODES[426];
              t.writeHead(426, { "Content-Length": r.length, "Content-Type": "text/plain" });
              t.end(r);
            });
            this._server.listen(e.port, e.host, e.backlog, t);
          } else if (e.server) {
            this._server = e.server;
          }
          if (this._server) {
            const e = this.emit.bind(this, "connection");
            this._removeListeners = addListeners(this._server, {
              listening: this.emit.bind(this, "listening"),
              error: this.emit.bind(this, "error"),
              upgrade: (t, r, s) => {
                this.handleUpgrade(t, r, s, e);
              },
            });
          }
          if (e.perMessageDeflate === true) e.perMessageDeflate = {};
          if (e.clientTracking) {
            this.clients = new Set();
            this._shouldEmitClose = false;
          }
          this.options = e;
          this._state = g;
        }
        address() {
          if (this.options.noServer) {
            throw new Error('The server is operating in "noServer" mode');
          }
          if (!this._server) return null;
          return this._server.address();
        }
        close(e) {
          if (this._state === h) {
            if (e) {
              this.once("close", () => {
                e(new Error("The server is not running"));
              });
            }
            process.nextTick(emitClose, this);
            return;
          }
          if (e) this.once("close", e);
          if (this._state === m) return;
          this._state = m;
          if (this.options.noServer || this.options.server) {
            if (this._server) {
              this._removeListeners();
              this._removeListeners = this._server = null;
            }
            if (this.clients) {
              if (!this.clients.size) {
                process.nextTick(emitClose, this);
              } else {
                this._shouldEmitClose = true;
              }
            } else {
              process.nextTick(emitClose, this);
            }
          } else {
            const e = this._server;
            this._removeListeners();
            this._removeListeners = this._server = null;
            e.close(() => {
              emitClose(this);
            });
          }
        }
        shouldHandle(e) {
          if (this.options.path) {
            const t = e.url.indexOf("?");
            const r = t !== -1 ? e.url.slice(0, t) : e.url;
            if (r !== this.options.path) return false;
          }
          return true;
        }
        handleUpgrade(e, t, r, s) {
          t.on("error", socketOnError);
          const n = e.headers["sec-websocket-key"];
          const o = +e.headers["sec-websocket-version"];
          if (e.method !== "GET") {
            const r = "Invalid HTTP method";
            abortHandshakeOrEmitwsClientError(this, e, t, 405, r);
            return;
          }
          if (e.headers.upgrade.toLowerCase() !== "websocket") {
            const r = "Invalid Upgrade header";
            abortHandshakeOrEmitwsClientError(this, e, t, 400, r);
            return;
          }
          if (!n || !u.test(n)) {
            const r = "Missing or invalid Sec-WebSocket-Key header";
            abortHandshakeOrEmitwsClientError(this, e, t, 400, r);
            return;
          }
          if (o !== 8 && o !== 13) {
            const r = "Missing or invalid Sec-WebSocket-Version header";
            abortHandshakeOrEmitwsClientError(this, e, t, 400, r);
            return;
          }
          if (!this.shouldHandle(e)) {
            abortHandshake(t, 400);
            return;
          }
          const i = e.headers["sec-websocket-protocol"];
          let c = new Set();
          if (i !== undefined) {
            try {
              c = l.parse(i);
            } catch (r) {
              const s = "Invalid Sec-WebSocket-Protocol header";
              abortHandshakeOrEmitwsClientError(this, e, t, 400, s);
              return;
            }
          }
          const d = e.headers["sec-websocket-extensions"];
          const p = {};
          if (this.options.perMessageDeflate && d !== undefined) {
            const r = new A(this.options.perMessageDeflate, true, this.options.maxPayload);
            try {
              const e = a.parse(d);
              if (e[A.extensionName]) {
                r.accept(e[A.extensionName]);
                p[A.extensionName] = r;
              }
            } catch (r) {
              const s = "Invalid or unacceptable Sec-WebSocket-Extensions header";
              abortHandshakeOrEmitwsClientError(this, e, t, 400, s);
              return;
            }
          }
          if (this.options.verifyClient) {
            const i = { origin: e.headers[`${o === 8 ? "sec-websocket-origin" : "origin"}`], secure: !!(e.socket.authorized || e.socket.encrypted), req: e };
            if (this.options.verifyClient.length === 2) {
              this.options.verifyClient(i, (o, i, a, A) => {
                if (!o) {
                  return abortHandshake(t, i || 401, a, A);
                }
                this.completeUpgrade(p, n, c, e, t, r, s);
              });
              return;
            }
            if (!this.options.verifyClient(i)) return abortHandshake(t, 401);
          }
          this.completeUpgrade(p, n, c, e, t, r, s);
        }
        completeUpgrade(e, t, r, s, n, o, l) {
          if (!n.readable || !n.writable) return n.destroy();
          if (n[p]) {
            throw new Error("server.handleUpgrade() was called more than once with the same " + "socket, possibly due to a misconfiguration");
          }
          if (this._state > g) return abortHandshake(n, 503);
          const c = i("sha1")
            .update(t + d)
            .digest("base64");
          const u = ["HTTP/1.1 101 Switching Protocols", "Upgrade: websocket", "Connection: Upgrade", `Sec-WebSocket-Accept: ${c}`];
          const m = new this.options.WebSocket(null, undefined, this.options);
          if (r.size) {
            const e = this.options.handleProtocols ? this.options.handleProtocols(r, s) : r.values().next().value;
            if (e) {
              u.push(`Sec-WebSocket-Protocol: ${e}`);
              m._protocol = e;
            }
          }
          if (e[A.extensionName]) {
            const t = e[A.extensionName].params;
            const r = a.format({ [A.extensionName]: [t] });
            u.push(`Sec-WebSocket-Extensions: ${r}`);
            m._extensions = e;
          }
          this.emit("headers", u, s);
          n.write(u.concat("\r\n").join("\r\n"));
          n.removeListener("error", socketOnError);
          m.setSocket(n, o, {
            allowSynchronousEvents: this.options.allowSynchronousEvents,
            maxPayload: this.options.maxPayload,
            skipUTF8Validation: this.options.skipUTF8Validation,
          });
          if (this.clients) {
            this.clients.add(m);
            m.on("close", () => {
              this.clients.delete(m);
              if (this._shouldEmitClose && !this.clients.size) {
                process.nextTick(emitClose, this);
              }
            });
          }
          l(m, s);
        }
      }
      e.exports = WebSocketServer;
      function addListeners(e, t) {
        for (const r of Object.keys(t)) e.on(r, t[r]);
        return function removeListeners() {
          for (const r of Object.keys(t)) {
            e.removeListener(r, t[r]);
          }
        };
      }
      function emitClose(e) {
        e._state = h;
        e.emit("close");
      }
      function socketOnError() {
        this.destroy();
      }
      function abortHandshake(e, t, r, s) {
        r = r || n.STATUS_CODES[t];
        s = { Connection: "close", "Content-Type": "text/html", "Content-Length": Buffer.byteLength(r), ...s };
        e.once("finish", e.destroy);
        e.end(
          `HTTP/1.1 ${t} ${n.STATUS_CODES[t]}\r\n` +
            Object.keys(s)
              .map((e) => `${e}: ${s[e]}`)
              .join("\r\n") +
            "\r\n\r\n" +
            r
        );
      }
      function abortHandshakeOrEmitwsClientError(e, t, r, s, n) {
        if (e.listenerCount("wsClientError")) {
          const s = new Error(n);
          Error.captureStackTrace(s, abortHandshakeOrEmitwsClientError);
          e.emit("wsClientError", s, r, t);
        } else {
          abortHandshake(r, s, n);
        }
      }
    },
    56681: (e, t, r) => {
      "use strict";
      const s = r(24434);
      const n = r(65692);
      const o = r(58611);
      const i = r(69278);
      const a = r(64756);
      const { randomBytes: A, createHash: l } = r(76982);
      const { Duplex: c, Readable: d } = r(2203);
      const { URL: p } = r(87016);
      const u = r(4376);
      const g = r(20893);
      const m = r(7389);
      const { BINARY_TYPES: h, EMPTY_BUFFER: E, GUID: I, kForOnEventAttribute: C, kListener: y, kStatusCode: B, kWebSocket: Q, NOOP: b } = r(71791);
      const {
        EventTarget: { addEventListener: w, removeEventListener: v },
      } = r(34634);
      const { format: T, parse: _ } = r(61335);
      const { toBuffer: S } = r(95803);
      const R = 30 * 1e3;
      const D = Symbol("kAborted");
      const k = [8, 13];
      const F = ["CONNECTING", "OPEN", "CLOSING", "CLOSED"];
      const O = /^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/;
      class WebSocket extends s {
        constructor(e, t, r) {
          super();
          this._binaryType = h[0];
          this._closeCode = 1006;
          this._closeFrameReceived = false;
          this._closeFrameSent = false;
          this._closeMessage = E;
          this._closeTimer = null;
          this._extensions = {};
          this._paused = false;
          this._protocol = "";
          this._readyState = WebSocket.CONNECTING;
          this._receiver = null;
          this._sender = null;
          this._socket = null;
          if (e !== null) {
            this._bufferedAmount = 0;
            this._isServer = false;
            this._redirects = 0;
            if (t === undefined) {
              t = [];
            } else if (!Array.isArray(t)) {
              if (typeof t === "object" && t !== null) {
                r = t;
                t = [];
              } else {
                t = [t];
              }
            }
            initAsClient(this, e, t, r);
          } else {
            this._autoPong = r.autoPong;
            this._isServer = true;
          }
        }
        get binaryType() {
          return this._binaryType;
        }
        set binaryType(e) {
          if (!h.includes(e)) return;
          this._binaryType = e;
          if (this._receiver) this._receiver._binaryType = e;
        }
        get bufferedAmount() {
          if (!this._socket) return this._bufferedAmount;
          return this._socket._writableState.length + this._sender._bufferedBytes;
        }
        get extensions() {
          return Object.keys(this._extensions).join();
        }
        get isPaused() {
          return this._paused;
        }
        get onclose() {
          return null;
        }
        get onerror() {
          return null;
        }
        get onopen() {
          return null;
        }
        get onmessage() {
          return null;
        }
        get protocol() {
          return this._protocol;
        }
        get readyState() {
          return this._readyState;
        }
        get url() {
          return this._url;
        }
        setSocket(e, t, r) {
          const s = new g({
            allowSynchronousEvents: r.allowSynchronousEvents,
            binaryType: this.binaryType,
            extensions: this._extensions,
            isServer: this._isServer,
            maxPayload: r.maxPayload,
            skipUTF8Validation: r.skipUTF8Validation,
          });
          this._sender = new m(e, this._extensions, r.generateMask);
          this._receiver = s;
          this._socket = e;
          s[Q] = this;
          e[Q] = this;
          s.on("conclude", receiverOnConclude);
          s.on("drain", receiverOnDrain);
          s.on("error", receiverOnError);
          s.on("message", receiverOnMessage);
          s.on("ping", receiverOnPing);
          s.on("pong", receiverOnPong);
          if (e.setTimeout) e.setTimeout(0);
          if (e.setNoDelay) e.setNoDelay();
          if (t.length > 0) e.unshift(t);
          e.on("close", socketOnClose);
          e.on("data", socketOnData);
          e.on("end", socketOnEnd);
          e.on("error", socketOnError);
          this._readyState = WebSocket.OPEN;
          this.emit("open");
        }
        emitClose() {
          if (!this._socket) {
            this._readyState = WebSocket.CLOSED;
            this.emit("close", this._closeCode, this._closeMessage);
            return;
          }
          if (this._extensions[u.extensionName]) {
            this._extensions[u.extensionName].cleanup();
          }
          this._receiver.removeAllListeners();
          this._readyState = WebSocket.CLOSED;
          this.emit("close", this._closeCode, this._closeMessage);
        }
        close(e, t) {
          if (this.readyState === WebSocket.CLOSED) return;
          if (this.readyState === WebSocket.CONNECTING) {
            const e = "WebSocket was closed before the connection was established";
            abortHandshake(this, this._req, e);
            return;
          }
          if (this.readyState === WebSocket.CLOSING) {
            if (this._closeFrameSent && (this._closeFrameReceived || this._receiver._writableState.errorEmitted)) {
              this._socket.end();
            }
            return;
          }
          this._readyState = WebSocket.CLOSING;
          this._sender.close(e, t, !this._isServer, (e) => {
            if (e) return;
            this._closeFrameSent = true;
            if (this._closeFrameReceived || this._receiver._writableState.errorEmitted) {
              this._socket.end();
            }
          });
          this._closeTimer = setTimeout(this._socket.destroy.bind(this._socket), R);
        }
        pause() {
          if (this.readyState === WebSocket.CONNECTING || this.readyState === WebSocket.CLOSED) {
            return;
          }
          this._paused = true;
          this._socket.pause();
        }
        ping(e, t, r) {
          if (this.readyState === WebSocket.CONNECTING) {
            throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");
          }
          if (typeof e === "function") {
            r = e;
            e = t = undefined;
          } else if (typeof t === "function") {
            r = t;
            t = undefined;
          }
          if (typeof e === "number") e = e.toString();
          if (this.readyState !== WebSocket.OPEN) {
            sendAfterClose(this, e, r);
            return;
          }
          if (t === undefined) t = !this._isServer;
          this._sender.ping(e || E, t, r);
        }
        pong(e, t, r) {
          if (this.readyState === WebSocket.CONNECTING) {
            throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");
          }
          if (typeof e === "function") {
            r = e;
            e = t = undefined;
          } else if (typeof t === "function") {
            r = t;
            t = undefined;
          }
          if (typeof e === "number") e = e.toString();
          if (this.readyState !== WebSocket.OPEN) {
            sendAfterClose(this, e, r);
            return;
          }
          if (t === undefined) t = !this._isServer;
          this._sender.pong(e || E, t, r);
        }
        resume() {
          if (this.readyState === WebSocket.CONNECTING || this.readyState === WebSocket.CLOSED) {
            return;
          }
          this._paused = false;
          if (!this._receiver._writableState.needDrain) this._socket.resume();
        }
        send(e, t, r) {
          if (this.readyState === WebSocket.CONNECTING) {
            throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");
          }
          if (typeof t === "function") {
            r = t;
            t = {};
          }
          if (typeof e === "number") e = e.toString();
          if (this.readyState !== WebSocket.OPEN) {
            sendAfterClose(this, e, r);
            return;
          }
          const s = { binary: typeof e !== "string", mask: !this._isServer, compress: true, fin: true, ...t };
          if (!this._extensions[u.extensionName]) {
            s.compress = false;
          }
          this._sender.send(e || E, s, r);
        }
        terminate() {
          if (this.readyState === WebSocket.CLOSED) return;
          if (this.readyState === WebSocket.CONNECTING) {
            const e = "WebSocket was closed before the connection was established";
            abortHandshake(this, this._req, e);
            return;
          }
          if (this._socket) {
            this._readyState = WebSocket.CLOSING;
            this._socket.destroy();
          }
        }
      }
      Object.defineProperty(WebSocket, "CONNECTING", { enumerable: true, value: F.indexOf("CONNECTING") });
      Object.defineProperty(WebSocket.prototype, "CONNECTING", { enumerable: true, value: F.indexOf("CONNECTING") });
      Object.defineProperty(WebSocket, "OPEN", { enumerable: true, value: F.indexOf("OPEN") });
      Object.defineProperty(WebSocket.prototype, "OPEN", { enumerable: true, value: F.indexOf("OPEN") });
      Object.defineProperty(WebSocket, "CLOSING", { enumerable: true, value: F.indexOf("CLOSING") });
      Object.defineProperty(WebSocket.prototype, "CLOSING", { enumerable: true, value: F.indexOf("CLOSING") });
      Object.defineProperty(WebSocket, "CLOSED", { enumerable: true, value: F.indexOf("CLOSED") });
      Object.defineProperty(WebSocket.prototype, "CLOSED", { enumerable: true, value: F.indexOf("CLOSED") });
      ["binaryType", "bufferedAmount", "extensions", "isPaused", "protocol", "readyState", "url"].forEach((e) => {
        Object.defineProperty(WebSocket.prototype, e, { enumerable: true });
      });
      ["open", "error", "close", "message"].forEach((e) => {
        Object.defineProperty(WebSocket.prototype, `on${e}`, {
          enumerable: true,
          get() {
            for (const t of this.listeners(e)) {
              if (t[C]) return t[y];
            }
            return null;
          },
          set(t) {
            for (const t of this.listeners(e)) {
              if (t[C]) {
                this.removeListener(e, t);
                break;
              }
            }
            if (typeof t !== "function") return;
            this.addEventListener(e, t, { [C]: true });
          },
        });
      });
      WebSocket.prototype.addEventListener = w;
      WebSocket.prototype.removeEventListener = v;
      e.exports = WebSocket;
      function initAsClient(e, t, r, s) {
        const i = {
          allowSynchronousEvents: true,
          autoPong: true,
          protocolVersion: k[1],
          maxPayload: 100 * 1024 * 1024,
          skipUTF8Validation: false,
          perMessageDeflate: true,
          followRedirects: false,
          maxRedirects: 10,
          ...s,
          socketPath: undefined,
          hostname: undefined,
          protocol: undefined,
          timeout: undefined,
          method: "GET",
          host: undefined,
          path: undefined,
          port: undefined,
        };
        e._autoPong = i.autoPong;
        if (!k.includes(i.protocolVersion)) {
          throw new RangeError(`Unsupported protocol version: ${i.protocolVersion} ` + `(supported versions: ${k.join(", ")})`);
        }
        let a;
        if (t instanceof p) {
          a = t;
        } else {
          try {
            a = new p(t);
          } catch (e) {
            throw new SyntaxError(`Invalid URL: ${t}`);
          }
        }
        if (a.protocol === "http:") {
          a.protocol = "ws:";
        } else if (a.protocol === "https:") {
          a.protocol = "wss:";
        }
        e._url = a.href;
        const c = a.protocol === "wss:";
        const d = a.protocol === "ws+unix:";
        let g;
        if (a.protocol !== "ws:" && !c && !d) {
          g = 'The URL\'s protocol must be one of "ws:", "wss:", ' + '"http:", "https", or "ws+unix:"';
        } else if (d && !a.pathname) {
          g = "The URL's pathname is empty";
        } else if (a.hash) {
          g = "The URL contains a fragment identifier";
        }
        if (g) {
          const t = new SyntaxError(g);
          if (e._redirects === 0) {
            throw t;
          } else {
            emitErrorAndClose(e, t);
            return;
          }
        }
        const m = c ? 443 : 80;
        const h = A(16).toString("base64");
        const E = c ? n.request : o.request;
        const C = new Set();
        let y;
        i.createConnection = i.createConnection || (c ? tlsConnect : netConnect);
        i.defaultPort = i.defaultPort || m;
        i.port = a.port || m;
        i.host = a.hostname.startsWith("[") ? a.hostname.slice(1, -1) : a.hostname;
        i.headers = { ...i.headers, "Sec-WebSocket-Version": i.protocolVersion, "Sec-WebSocket-Key": h, Connection: "Upgrade", Upgrade: "websocket" };
        i.path = a.pathname + a.search;
        i.timeout = i.handshakeTimeout;
        if (i.perMessageDeflate) {
          y = new u(i.perMessageDeflate !== true ? i.perMessageDeflate : {}, false, i.maxPayload);
          i.headers["Sec-WebSocket-Extensions"] = T({ [u.extensionName]: y.offer() });
        }
        if (r.length) {
          for (const e of r) {
            if (typeof e !== "string" || !O.test(e) || C.has(e)) {
              throw new SyntaxError("An invalid or duplicated subprotocol was specified");
            }
            C.add(e);
          }
          i.headers["Sec-WebSocket-Protocol"] = r.join(",");
        }
        if (i.origin) {
          if (i.protocolVersion < 13) {
            i.headers["Sec-WebSocket-Origin"] = i.origin;
          } else {
            i.headers.Origin = i.origin;
          }
        }
        if (a.username || a.password) {
          i.auth = `${a.username}:${a.password}`;
        }
        if (d) {
          const e = i.path.split(":");
          i.socketPath = e[0];
          i.path = e[1];
        }
        let B;
        if (i.followRedirects) {
          if (e._redirects === 0) {
            e._originalIpc = d;
            e._originalSecure = c;
            e._originalHostOrSocketPath = d ? i.socketPath : a.host;
            const t = s && s.headers;
            s = { ...s, headers: {} };
            if (t) {
              for (const [e, r] of Object.entries(t)) {
                s.headers[e.toLowerCase()] = r;
              }
            }
          } else if (e.listenerCount("redirect") === 0) {
            const t = d
              ? e._originalIpc
                ? i.socketPath === e._originalHostOrSocketPath
                : false
              : e._originalIpc
                ? false
                : a.host === e._originalHostOrSocketPath;
            if (!t || (e._originalSecure && !c)) {
              delete i.headers.authorization;
              delete i.headers.cookie;
              if (!t) delete i.headers.host;
              i.auth = undefined;
            }
          }
          if (i.auth && !s.headers.authorization) {
            s.headers.authorization = "Basic " + Buffer.from(i.auth).toString("base64");
          }
          B = e._req = E(i);
          if (e._redirects) {
            e.emit("redirect", e.url, B);
          }
        } else {
          B = e._req = E(i);
        }
        if (i.timeout) {
          B.on("timeout", () => {
            abortHandshake(e, B, "Opening handshake has timed out");
          });
        }
        B.on("error", (t) => {
          if (B === null || B[D]) return;
          B = e._req = null;
          emitErrorAndClose(e, t);
        });
        B.on("response", (n) => {
          const o = n.headers.location;
          const a = n.statusCode;
          if (o && i.followRedirects && a >= 300 && a < 400) {
            if (++e._redirects > i.maxRedirects) {
              abortHandshake(e, B, "Maximum redirects exceeded");
              return;
            }
            B.abort();
            let n;
            try {
              n = new p(o, t);
            } catch (t) {
              const r = new SyntaxError(`Invalid URL: ${o}`);
              emitErrorAndClose(e, r);
              return;
            }
            initAsClient(e, n, r, s);
          } else if (!e.emit("unexpected-response", B, n)) {
            abortHandshake(e, B, `Unexpected server response: ${n.statusCode}`);
          }
        });
        B.on("upgrade", (t, r, s) => {
          e.emit("upgrade", t);
          if (e.readyState !== WebSocket.CONNECTING) return;
          B = e._req = null;
          if (t.headers.upgrade.toLowerCase() !== "websocket") {
            abortHandshake(e, r, "Invalid Upgrade header");
            return;
          }
          const n = l("sha1")
            .update(h + I)
            .digest("base64");
          if (t.headers["sec-websocket-accept"] !== n) {
            abortHandshake(e, r, "Invalid Sec-WebSocket-Accept header");
            return;
          }
          const o = t.headers["sec-websocket-protocol"];
          let a;
          if (o !== undefined) {
            if (!C.size) {
              a = "Server sent a subprotocol but none was requested";
            } else if (!C.has(o)) {
              a = "Server sent an invalid subprotocol";
            }
          } else if (C.size) {
            a = "Server sent no subprotocol";
          }
          if (a) {
            abortHandshake(e, r, a);
            return;
          }
          if (o) e._protocol = o;
          const A = t.headers["sec-websocket-extensions"];
          if (A !== undefined) {
            if (!y) {
              const t = "Server sent a Sec-WebSocket-Extensions header but no extension " + "was requested";
              abortHandshake(e, r, t);
              return;
            }
            let t;
            try {
              t = _(A);
            } catch (t) {
              const s = "Invalid Sec-WebSocket-Extensions header";
              abortHandshake(e, r, s);
              return;
            }
            const s = Object.keys(t);
            if (s.length !== 1 || s[0] !== u.extensionName) {
              const t = "Server indicated an extension that was not requested";
              abortHandshake(e, r, t);
              return;
            }
            try {
              y.accept(t[u.extensionName]);
            } catch (t) {
              const s = "Invalid Sec-WebSocket-Extensions header";
              abortHandshake(e, r, s);
              return;
            }
            e._extensions[u.extensionName] = y;
          }
          e.setSocket(r, s, {
            allowSynchronousEvents: i.allowSynchronousEvents,
            generateMask: i.generateMask,
            maxPayload: i.maxPayload,
            skipUTF8Validation: i.skipUTF8Validation,
          });
        });
        if (i.finishRequest) {
          i.finishRequest(B, e);
        } else {
          B.end();
        }
      }
      function emitErrorAndClose(e, t) {
        e._readyState = WebSocket.CLOSING;
        e.emit("error", t);
        e.emitClose();
      }
      function netConnect(e) {
        e.path = e.socketPath;
        return i.connect(e);
      }
      function tlsConnect(e) {
        e.path = undefined;
        if (!e.servername && e.servername !== "") {
          e.servername = i.isIP(e.host) ? "" : e.host;
        }
        return a.connect(e);
      }
      function abortHandshake(e, t, r) {
        e._readyState = WebSocket.CLOSING;
        const s = new Error(r);
        Error.captureStackTrace(s, abortHandshake);
        if (t.setHeader) {
          t[D] = true;
          t.abort();
          if (t.socket && !t.socket.destroyed) {
            t.socket.destroy();
          }
          process.nextTick(emitErrorAndClose, e, s);
        } else {
          t.destroy(s);
          t.once("error", e.emit.bind(e, "error"));
          t.once("close", e.emitClose.bind(e));
        }
      }
      function sendAfterClose(e, t, r) {
        if (t) {
          const r = S(t).length;
          if (e._socket) e._sender._bufferedBytes += r;
          else e._bufferedAmount += r;
        }
        if (r) {
          const t = new Error(`WebSocket is not open: readyState ${e.readyState} ` + `(${F[e.readyState]})`);
          process.nextTick(r, t);
        }
      }
      function receiverOnConclude(e, t) {
        const r = this[Q];
        r._closeFrameReceived = true;
        r._closeMessage = t;
        r._closeCode = e;
        if (r._socket[Q] === undefined) return;
        r._socket.removeListener("data", socketOnData);
        process.nextTick(resume, r._socket);
        if (e === 1005) r.close();
        else r.close(e, t);
      }
      function receiverOnDrain() {
        const e = this[Q];
        if (!e.isPaused) e._socket.resume();
      }
      function receiverOnError(e) {
        const t = this[Q];
        if (t._socket[Q] !== undefined) {
          t._socket.removeListener("data", socketOnData);
          process.nextTick(resume, t._socket);
          t.close(e[B]);
        }
        t.emit("error", e);
      }
      function receiverOnFinish() {
        this[Q].emitClose();
      }
      function receiverOnMessage(e, t) {
        this[Q].emit("message", e, t);
      }
      function receiverOnPing(e) {
        const t = this[Q];
        if (t._autoPong) t.pong(e, !this._isServer, b);
        t.emit("ping", e);
      }
      function receiverOnPong(e) {
        this[Q].emit("pong", e);
      }
      function resume(e) {
        e.resume();
      }
      function socketOnClose() {
        const e = this[Q];
        this.removeListener("close", socketOnClose);
        this.removeListener("data", socketOnData);
        this.removeListener("end", socketOnEnd);
        e._readyState = WebSocket.CLOSING;
        let t;
        if (!this._readableState.endEmitted && !e._closeFrameReceived && !e._receiver._writableState.errorEmitted && (t = e._socket.read()) !== null) {
          e._receiver.write(t);
        }
        e._receiver.end();
        this[Q] = undefined;
        clearTimeout(e._closeTimer);
        if (e._receiver._writableState.finished || e._receiver._writableState.errorEmitted) {
          e.emitClose();
        } else {
          e._receiver.on("error", receiverOnFinish);
          e._receiver.on("finish", receiverOnFinish);
        }
      }
      function socketOnData(e) {
        if (!this[Q]._receiver.write(e)) {
          this.pause();
        }
      }
      function socketOnEnd() {
        const e = this[Q];
        e._readyState = WebSocket.CLOSING;
        e._receiver.end();
        this.end();
      }
      function socketOnError() {
        const e = this[Q];
        this.removeListener("error", socketOnError);
        this.on("error", b);
        if (e) {
          e._readyState = WebSocket.CLOSING;
          this.destroy();
        }
      }
    },
    72322: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.createAdapters = createAdapters;
      const s = r(45007);
      const n = r(28842);
      const o = r(68251);
      const i = r(39342);
      function createAdapters(e, t) {
        return { supabase: { access: new s.Access(e, t), user: new n.User(e, t), label: new o.Label(e, t), super: new i.Super(e, t) } };
      }
    },
    45007: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.Access = void 0;
      const n = r(39342);
      class Access extends n.Super {
        constructor(e, t) {
          super(e, t);
        }
        getAccess(e, t) {
          return s(this, void 0, void 0, function* () {
            const { data: r, error: s } = yield this.supabase
              .from("access")
              .select("*")
              .filter("user_id", "eq", e)
              .filter("repository_id", "eq", t)
              .limit(1)
              .maybeSingle();
            if (s) {
              this.context.logger.error(s.message, s);
              throw new Error(s.message);
            }
            return r;
          });
        }
        setAccess(e, t, r) {
          return s(this, void 0, void 0, function* () {
            if (!r.length) {
              return this.clearAccess(e, t);
            }
            const { data: s, error: n } = yield this.supabase.from("access").upsert({ user_id: e, repository_id: t, labels: r }).select().maybeSingle();
            if (n) throw new Error(n.message);
            return s;
          });
        }
        clearAccess(e, t) {
          return s(this, void 0, void 0, function* () {
            const { data: r, error: s } = yield this.supabase.from("access").delete().filter("user_id", "eq", e).filter("repository_id", "eq", t);
            if (s) throw new Error(s.message);
            return r;
          });
        }
      }
      t.Access = Access;
    },
    68251: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.Label = void 0;
      const n = r(39342);
      class Label extends n.Super {
        constructor(e, t) {
          super(e, t);
        }
        saveLabelChange(e) {
          return s(this, arguments, void 0, function* ({ previousLabel: e, currentLabel: t, authorized: r, userId: s, repositoryId: n }) {
            const { data: o, error: i } = yield this.supabase
              .from("labels")
              .insert({ label_from: e, label_to: t, authorized: r, user_id: s, repository_id: n })
              .select()
              .single();
            if (i) throw new Error(i.message);
            return o;
          });
        }
        getLabelChanges(e) {
          return s(this, void 0, void 0, function* () {
            const { data: t, error: r } = yield this.supabase.from("labels").select("*").eq("repository_id", e).eq("authorized", false);
            if (r) throw new Error(r.message);
            return t;
          });
        }
        approveLabelChange(e) {
          return s(this, void 0, void 0, function* () {
            const { data: t, error: r } = yield this.supabase.from("labels").update({ authorized: true }).eq("id", e);
            if (r) throw new Error(r.message);
            return t;
          });
        }
      }
      t.Label = Label;
    },
    39342: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.Super = void 0;
      class Super {
        constructor(e, t) {
          this.supabase = e;
          this.context = t;
        }
      }
      t.Super = Super;
    },
    28842: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.User = void 0;
      const n = r(39342);
      class User extends n.Super {
        constructor(e, t) {
          super(e, t);
        }
        getUserId(e, t) {
          return s(this, void 0, void 0, function* () {
            const { data: r } = yield e.octokit.rest.users.getByUsername({ username: t });
            return r.id;
          });
        }
      }
      t.User = User;
    },
    5508: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.ZERO_SHA = void 0;
      t.isConfigModified = isConfigModified;
      const n = r(36273);
      const o = r(67393);
      t.ZERO_SHA = "0000000000000000000000000000000000000000";
      const i = [".github/ubiquibot-config.yml", ".github/.ubiquibot-config.yml"];
      function isConfigModified(e) {
        return s(this, void 0, void 0, function* () {
          if (!(0, n.isPushEvent)(e)) {
            e.logger.debug("Not a push event");
            return false;
          }
          const { logger: r, payload: s } = e;
          if (s.before === t.ZERO_SHA) {
            r.info("Skipping push events. A new branch was created");
            return false;
          }
          const a = (0, o.getCommitChanges)(s.commits);
          if (a && a.length === 0) {
            r.info("No files were changed in the commits, so no action is required.");
            return false;
          }
          let A = false;
          for (const e of i) {
            if (a.includes(e)) {
              r.info(`${e} was modified or added in the commits`);
              A = true;
              break;
            }
          }
          return A;
        });
      }
    },
    45396: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__importDefault) ||
        function (e) {
          return e && e.__esModule ? e : { default: e };
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.isValidCommand = isValidCommand;
      const n = r(27033);
      const o = r(18909);
      const i = s(r(8330));
      const a = ["allow"];
      function isValidCommand(e) {
        const t = e.match(/^\/\S+/);
        if (!t) {
          return false;
        }
        return a.includes(t[0].slice(1));
      }
      function parseUser(e) {
        if (!e.length || e.length < 2) {
          throw new o.InvalidArgumentError("Username should be at least 2 characters long.");
        }
        if (e[0] !== "@") {
          throw new o.InvalidArgumentError("Username should start with @.");
        }
        return e.slice(1);
      }
      function parseCommand(e) {
        if (!e.length || e.length < 2) {
          throw new o.InvalidArgumentError("Command should be at least 2 characters long.");
        }
        if (e[0] !== "/") {
          throw new o.InvalidArgumentError("Command should start with /.");
        }
        const t = e.slice(1);
        if (!a.includes(t)) {
          throw new o.InvalidArgumentError(`${e} is not a valid command.`);
        }
        return t;
      }
      const A = new n.Command()
        .name(" ")
        .usage("/<command> @<username> [labels...]")
        .argument("<command>", "The command to execute, e.g. /allow", parseCommand)
        .argument("<username>", "User name to allow rights to, e.g @ubiquibot", parseUser)
        .argument("[labels...]", "Labels to allow, e.g time priority")
        .exitOverride()
        .version(i.default.version);
      A.configureOutput({
        writeOut(e) {
          console.log(e);
        },
        writeErr(e) {
          console.error(e);
        },
        getErrHelpWidth() {
          return 0;
        },
        getOutHelpWidth() {
          return 0;
        },
      });
      t["default"] = A;
    },
    90682: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.prototype.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      var i =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.handleComment = handleComment;
      const a = r(78416);
      const A = r(36273);
      const l = o(r(45396));
      const c = {
        allow(e, t) {
          return i(this, arguments, void 0, function* (e, { username: t, labels: r }) {
            var s, n;
            const o = e.logger;
            if (!(0, A.isCommentEvent)(e)) {
              o.debug("Not an comment event");
              return;
            }
            const i = e.payload;
            const l = (s = i.sender) === null || s === void 0 ? void 0 : s.login;
            const { access: c, user: d } = e.adapters.supabase;
            const p = (n = i.comment) === null || n === void 0 ? void 0 : n.html_url;
            if (!p) throw new Error("Comment url is undefined");
            const u = yield d.getUserId(e, t);
            yield c.setAccess(u, i.repository.id, r);
            if (!r.length) {
              return yield (0, a.addCommentToIssue)(e, `@${l}, successfully cleared access for @${t}`, i.issue.number);
            }
            return yield (0, a.addCommentToIssue)(e, `@${l}, successfully set access for @${t}`, i.issue.number);
          });
        },
      };
      function handleComment(e) {
        return i(this, void 0, void 0, function* () {
          var t;
          const r = e.logger;
          if (!(0, A.isCommentEvent)(e)) {
            return r.debug("Not an comment event");
          }
          const s = e.payload;
          const n = (t = s.sender) === null || t === void 0 ? void 0 : t.login;
          const o = s.comment.body.trim();
          if (!(0, l.isValidCommand)(o)) {
            return r.debug("Not a valid command.");
          }
          const i = yield (0, a.isUserAdminOrBillingManager)(e, n);
          if (!i) {
            yield (0, a.addCommentToIssue)(e, `@${n}, You are not allowed to set access`, s.issue.number);
          }
          try {
            const t = parseComment(o);
            yield c[t.command](e, t);
          } catch (t) {
            yield (0, a.addCommentToIssue)(
              e,
              `\`\`\`\nassistive-pricing plugin failed to run.\n${t}\n\n${l.default.helpInformation()}\n\`\`\``,
              s.issue.number
            );
          }
        });
      }
      function parseComment(e) {
        let t = null;
        l.default
          .action((e, r, s) => {
            t = { command: e, username: r, labels: s };
          })
          .parse(e.split(/\s+/), { from: "user" });
        if (!t) {
          throw new Error("The command could not be parsed.");
        }
        return t;
      }
    },
    22032: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.getBaseRateChanges = getBaseRateChanges;
      const n = r(36273);
      function getBaseRateChanges(e) {
        return s(this, void 0, void 0, function* () {
          var t;
          if (!(0, n.isPushEvent)(e)) {
            e.logger.debug("Not a push event");
            return { previousBaseRate: null, newBaseRate: null };
          }
          const {
            logger: r,
            payload: { repository: s, head_commit: o },
          } = e;
          const i = o === null || o === void 0 ? void 0 : o.id;
          let a;
          if (!i) {
            throw new Error("No commit sha found");
          }
          const A = (t = s.owner) === null || t === void 0 ? void 0 : t.login;
          if (!A) {
            throw r.error("No owner found in the repository");
          }
          try {
            a = yield e.octokit.repos.getCommit({ owner: A, repo: s.name, ref: i, mediaType: { format: "diff" } });
          } catch (e) {
            r.debug("Commit sha error.", { err: e });
          }
          if (!a) {
            throw new Error("No commit data found");
          }
          const l = a.data;
          const c = l.split("\n");
          const d = /\+\s*basePriceMultiplier:\s*(\S+)/;
          const p = /-\s*basePriceMultiplier:\s*(\S+)/;
          const u = extractBaseRate(c, d);
          const g = extractBaseRate(c, p);
          if (!g && !u) {
            r.error("No base rate changes found in the diff");
          }
          return { previousBaseRate: g ? parseFloat(g) : null, newBaseRate: u ? parseFloat(u) : null };
        });
      }
      function extractBaseRate(e, t) {
        const r = e === null || e === void 0 ? void 0 : e.find((e) => t.test(e));
        const s = r === null || r === void 0 ? void 0 : r.match(t);
        return s ? s[1] : undefined;
      }
    },
    67393: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.getCommitChanges = getCommitChanges;
      function getCommitChanges(e) {
        var t, r;
        const s = [];
        for (const n of e) {
          if ((t = n.modified) === null || t === void 0 ? void 0 : t.length) {
            for (const e of n.modified) {
              s.push(e);
            }
          }
          if ((r = n.added) === null || r === void 0 ? void 0 : r.length) {
            for (const e of n.added) {
              s.push(e);
            }
          }
        }
        return s;
      }
    },
    22880: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.getLabelsChanges = getLabelsChanges;
      const n = r(36273);
      function getLabelsChanges(e) {
        return s(this, void 0, void 0, function* () {
          var t;
          if (!(0, n.isPushEvent)(e)) {
            e.logger.debug("Not a push event");
            return false;
          }
          const {
            logger: r,
            payload: { repository: s, head_commit: o },
          } = e;
          const i = o === null || o === void 0 ? void 0 : o.id;
          let a;
          if (!i) {
            throw new Error("No commit sha found");
          }
          const A = (t = s.owner) === null || t === void 0 ? void 0 : t.login;
          if (!A) {
            throw r.error("No owner found in the repository");
          }
          try {
            a = yield e.octokit.repos.getCommit({ owner: A, repo: s.name, ref: i, mediaType: { format: "diff" } });
          } catch (e) {
            r.debug("Commit sha error.", { err: e });
          }
          if (!a) {
            throw new Error("No commit data found");
          }
          const l = a.data;
          const c = l.split("\n");
          const d = /\+\s*collaboratorOnly:\s*(\S+)/;
          const p = /-\s*collaboratorOnly:\s*(\S+)/;
          const u = extractLabels(c, d);
          const g = extractLabels(c, p);
          if (!g && !u) {
            r.error("No label changes found in the diff");
          }
          return !!(g === null || g === void 0 ? void 0 : g.length) || !!(u === null || u === void 0 ? void 0 : u.length);
        });
      }
      function extractLabels(e, t) {
        const r = e === null || e === void 0 ? void 0 : e.find((e) => t.test(e));
        const s = r === null || r === void 0 ? void 0 : r.match(t);
        return s ? s[1] : undefined;
      }
    },
    26109: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.globalLabelUpdate = globalLabelUpdate;
      const n = r(5508);
      const o = r(22032);
      const i = r(22880);
      const a = r(4045);
      const A = r(74534);
      const l = r(36273);
      const c = r(78416);
      function isAuthed(e) {
        return s(this, void 0, void 0, function* () {
          var t, r;
          if (!(0, l.isPushEvent)(e)) {
            e.logger.debug("Not a push event");
            return false;
          }
          const { payload: s, logger: n } = e;
          const o = (t = s.sender) === null || t === void 0 ? void 0 : t.login;
          const i = (r = s.pusher) === null || r === void 0 ? void 0 : r.name;
          const a = yield (0, c.isUserAdminOrBillingManager)(e, i);
          const A = yield (0, c.isUserAdminOrBillingManager)(e, o);
          if (!a) {
            n.error("Pusher is not an admin or billing manager");
          }
          if (!A) {
            n.error("Sender is not an admin or billing manager");
          }
          return !!(a && A);
        });
      }
      function globalLabelUpdate(e) {
        return s(this, void 0, void 0, function* () {
          if (!(0, l.isPushEvent)(e)) {
            e.logger.debug("Not a push event");
            return;
          }
          const { logger: t, config: r } = e;
          if (!(yield isAuthed(e))) {
            t.error("Changes should be pushed and triggered by an admin or billing manager.");
            return;
          }
          if (!(yield (0, n.isConfigModified)(e))) {
            return;
          }
          const s = yield (0, o.getBaseRateChanges)(e);
          const A = yield (0, i.getLabelsChanges)(e);
          if (s.newBaseRate === null && !A) {
            t.error("No changes found in the diff, skipping.");
            return;
          }
          if (s.newBaseRate !== null) {
            t.info(`Updating base rate from ${s.previousBaseRate} to ${s.newBaseRate}`);
            r.basePriceMultiplier = s.newBaseRate;
          }
          const d = yield (0, c.listOrgRepos)(e);
          for (const t of d) {
            const r = Object.assign(Object.assign({}, e), { payload: { repository: t } });
            yield (0, a.syncPriceLabelsToConfig)(r);
          }
          if (r.globalConfigUpdate) {
            yield updateAllIssuePriceLabels(e);
          }
        });
      }
      function updateAllIssuePriceLabels(e) {
        return s(this, void 0, void 0, function* () {
          const { logger: t, config: r } = e;
          const s = yield (0, c.listOrgRepos)(e);
          for (const n of s) {
            t.info(`Fetching issues for ${n.name}`);
            const s = yield (0, c.listRepoIssues)(e, n.owner.login, n.name);
            for (const o of s) {
              t.info(`Updating issue ${o.number} in ${n.name}`);
              yield (0, A.setPriceLabel)(Object.assign(Object.assign({}, e), { payload: { repository: n, issue: o } }), o.labels, r);
              yield new Promise((e) => setTimeout(e, 50));
            }
          }
        });
      }
    },
    76392: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.handleParentIssue = handleParentIssue;
      t.sortLabelsByValue = sortLabelsByValue;
      t.isParentIssue = isParentIssue;
      const n = r(20801);
      const o = r(74273);
      function handleParentIssue(e, t) {
        return s(this, void 0, void 0, function* () {
          const r = t.filter((e) => e.name.toString().startsWith("Price:"));
          if (r.length) {
            yield (0, n.clearAllPriceLabelsOnIssue)(e);
          }
          throw e.logger.error("Pricing is disabled on parent issues.");
        });
      }
      function sortLabelsByValue(e) {
        return e.sort((e, t) => (0, o.calculateLabelValue)(e.name) - (0, o.calculateLabelValue)(t.name));
      }
      function isParentIssue(e) {
        const t = /-\s+\[( |x)\]\s+#\d+/;
        return e.match(t);
      }
    },
    52182: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.watchLabelChange = watchLabelChange;
      const n = r(78416);
      const o = r(36273);
      function watchLabelChange(e) {
        return s(this, void 0, void 0, function* () {
          var t;
          const r = e.logger;
          if (!(0, o.isLabelEditedEvent)(e)) {
            r.debug("Not a label event");
            return;
          }
          const s = e.payload;
          const { label: n, changes: i, sender: a } = s;
          const A = (t = i === null || i === void 0 ? void 0 : i.name) === null || t === void 0 ? void 0 : t.from;
          if (!A) {
            const e = "previous label name is undefined";
            r.error(e);
            throw new Error(e);
          }
          const l = n === null || n === void 0 ? void 0 : n.name;
          const c = a === null || a === void 0 ? void 0 : a.login;
          const d = a === null || a === void 0 ? void 0 : a.id;
          if (!A || !l) {
            return r.debug("No label name change.. skipping");
          }
          if (!c || !d) {
            return r.debug("No user found.. skipping");
          }
          const p = yield hasLabelEditPermission(e, l, c);
          yield e.adapters.supabase.label.saveLabelChange({ previousLabel: A, currentLabel: l, authorized: p, repositoryId: s.repository.id, userId: d });
          return r.debug("label name change saved to db");
        });
      }
      function hasLabelEditPermission(e, t, r) {
        return s(this, void 0, void 0, function* () {
          var s;
          const o = yield (0, n.isUserAdminOrBillingManager)(e, r);
          const i = t.split(":");
          if (i.length == 0) return false;
          const a = i[0].toLowerCase();
          if (o) {
            const { access: t, user: n } = e.adapters.supabase;
            const o = yield n.getUserId(e, r);
            const i = yield t.getAccess(o, e.payload.repository.id);
            return i !== null && ((s = i.labels) === null || s === void 0 ? void 0 : s.includes(a)) === true;
          }
          return true;
        });
      }
    },
    74534: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.onLabelChangeSetPricing = onLabelChangeSetPricing;
      t.setPriceLabel = setPriceLabel;
      const n = r(20801);
      const o = r(44643);
      const i = r(89264);
      const a = r(74273);
      const A = r(76392);
      const l = r(28813);
      const c = r(36273);
      function onLabelChangeSetPricing(e) {
        return s(this, void 0, void 0, function* () {
          var t, r;
          if (!(0, c.isIssueLabelEvent)(e)) {
            e.logger.debug("Not an issue event");
            return;
          }
          const s = e.config;
          const n = e.logger;
          const i = e.payload;
          const a = (t = i.repository.owner) === null || t === void 0 ? void 0 : t.login;
          if (!a) {
            n.error("No owner found in the repository");
            return;
          }
          const l = i.issue.labels;
          if (!l) {
            n.info(`No labels to calculate price`);
            return;
          }
          if (i.issue.body && (0, A.isParentIssue)(i.issue.body)) {
            yield (0, A.handleParentIssue)(e, l);
            return;
          }
          const d = yield (0, o.labelAccessPermissionsCheck)(e);
          if (!d) {
            return;
          }
          const p = (r = i.label) === null || r === void 0 ? void 0 : r.name.includes("Price: ");
          if (p) {
            n.info("This is setting the price label directly so skipping the rest of the action.");
            const t = l.filter((e) => e.name.includes("Price: "));
            const r = (0, A.sortLabelsByValue)(t);
            const s = r.shift();
            const o = s === null || s === void 0 ? void 0 : s.name;
            if (o) {
              for (const t of r) {
                yield e.octokit.issues.removeLabel({ owner: a, repo: i.repository.name, issue_number: i.issue.number, name: t.name });
              }
            }
            return;
          }
          yield setPriceLabel(e, l, s);
        });
      }
      function setPriceLabel(e, t, r) {
        return s(this, void 0, void 0, function* () {
          const s = e.logger;
          const o = t.map((e) => e.name);
          const i = getRecognizedLabels(t, r);
          if (!i.time.length || !i.priority.length) {
            s.error("No recognized labels to calculate price");
            yield (0, n.clearAllPriceLabelsOnIssue)(e);
            return;
          }
          const A = getMinLabels(i);
          if (!A.time || !A.priority) {
            s.error("No label to calculate price");
            return;
          }
          const l = (0, a.getPrice)(e, A.time, A.priority);
          if (l) {
            yield handleTargetPriceLabel(e, { name: l, description: null }, o);
          } else {
            yield (0, n.clearAllPriceLabelsOnIssue)(e);
            s.info(`Skipping action...`);
          }
        });
      }
      function getRecognizedLabels(e, t) {
        function isRecognizedLabel(e, t) {
          return (typeof e === "string" || typeof e === "object") && t.some((t) => t === e.name);
        }
        const r = e.filter((e) =>
          isRecognizedLabel(
            e,
            t.labels.time.map((e) => e.name)
          )
        );
        const s = e.filter((e) =>
          isRecognizedLabel(
            e,
            t.labels.priority.map((e) => e.name)
          )
        );
        return { time: r, priority: s };
      }
      function getMinLabels(e) {
        const t = (0, A.sortLabelsByValue)(e.time).shift();
        const r = (0, A.sortLabelsByValue)(e.priority).shift();
        return { time: t, priority: r };
      }
      function handleTargetPriceLabel(e, t, r) {
        return s(this, void 0, void 0, function* () {
          const { repository: s } = e.payload;
          if (s.name === "devpool-directory") {
            t.name = t.name.replace("Price: ", "Pricing: ");
          }
          const o = r.find((e) => e.includes(t.name));
          if (o) {
            yield handleExistingPriceLabel(e, t.name);
          } else {
            const r = yield (0, n.listLabelsForRepo)(e);
            if (r.filter((e) => e.name.includes(t.name)).length === 0) {
              yield (0, n.createLabel)(e, t.name, "price", t.description ? l.COLLABORATOR_ONLY_DESCRIPTION : undefined);
            }
            yield addPriceLabelToIssue(e, t.name);
          }
        });
      }
      function handleExistingPriceLabel(e, t) {
        return s(this, void 0, void 0, function* () {
          var r;
          const s = e.logger;
          let n = yield getAllLabeledEvents(e);
          if (!n) return s.error("No labeled events found");
          n = n.filter((e) => "label" in e && e.label.name.includes("Price"));
          if (!n.length) return s.error("No price labeled events found");
          if (((r = n[n.length - 1].actor) === null || r === void 0 ? void 0 : r.type) == i.UserType.User) {
            s.info(`Skipping... already exists`);
          } else {
            yield addPriceLabelToIssue(e, t);
          }
        });
      }
      function addPriceLabelToIssue(e, t) {
        return s(this, void 0, void 0, function* () {
          yield (0, n.clearAllPriceLabelsOnIssue)(e);
          yield (0, n.addLabelToIssue)(e, t);
        });
      }
      function getAllLabeledEvents(e) {
        return s(this, void 0, void 0, function* () {
          const t = yield getAllIssueEvents(e);
          if (!t) return null;
          return t.filter((e) => e.event === "labeled");
        });
      }
      function getAllIssueEvents(e) {
        return s(this, void 0, void 0, function* () {
          if (!("issue" in e.payload) || !e.payload.issue) {
            e.logger.debug("Not an issue event");
            return;
          }
          try {
            return yield e.octokit.paginate(e.octokit.issues.listEvents, {
              owner: e.payload.repository.owner.login,
              repo: e.payload.repository.name,
              issue_number: e.payload.issue.number,
              per_page: 100,
            });
          } catch (t) {
            e.logger.error("Failed to fetch lists of events", { err: t });
            return [];
          }
        });
      }
    },
    4045: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.syncPriceLabelsToConfig = syncPriceLabelsToConfig;
      const n = r(20801);
      const o = r(74273);
      const i = r(28813);
      const a = "No owner found in the repository!";
      function syncPriceLabelsToConfig(e) {
        return s(this, void 0, void 0, function* () {
          var t, r, s;
          const { config: A, logger: l } = e;
          const c = [];
          for (const t of A.labels.time) {
            for (const r of A.labels.priority) {
              const s = (0, o.calculateTaskPrice)(e, (0, o.calculateLabelValue)(t.name), (0, o.calculateLabelValue)(r.name), A.basePriceMultiplier);
              const n = `Price: ${s} USD`;
              c.push({ name: n, collaboratorOnly: false });
            }
          }
          const d = [...c, ...A.labels.time, ...A.labels.priority];
          const p = yield (0, n.listLabelsForRepo)(e);
          const u = p.filter((e) => e.name.startsWith("Price: ") && !c.some((t) => t.name === e.name));
          if (u.length > 0 && A.globalConfigUpdate) {
            l.info("Incorrect price labels found, removing them", { incorrectPriceLabels: u.map((e) => e.name) });
            const r = (t = e.payload.repository.owner) === null || t === void 0 ? void 0 : t.login;
            if (!r) {
              throw l.error(a);
            }
            yield Promise.allSettled(u.map((t) => e.octokit.rest.issues.deleteLabel({ owner: r, repo: e.payload.repository.name, name: t.name })));
            l.info(`Removing incorrect price labels done`);
          }
          const g = p.filter((e) => e.name.startsWith("Price: ") && e.color !== n.COLORS.price);
          if (g.length > 0) {
            l.info("Incorrect color labels found, updating them", { incorrectColorPriceLabels: g.map((e) => e.name) });
            const t = (r = e.payload.repository.owner) === null || r === void 0 ? void 0 : r.login;
            if (!t) {
              throw l.error(a);
            }
            yield Promise.allSettled(
              g.map((r) => e.octokit.rest.issues.updateLabel({ owner: t, repo: e.payload.repository.name, name: r.name, color: n.COLORS.price }))
            );
            l.info(`Updating incorrect color labels done`);
          }
          const m = d.filter((e) => {
            const t = p.find((t) => t.name === e.name);
            return Boolean(
              !!t &&
                !e.name.startsWith("Price: ") &&
                ((e.collaboratorOnly && (!t.description || t.description !== i.COLLABORATOR_ONLY_DESCRIPTION)) || (!e.collaboratorOnly && t.description))
            );
          });
          if (m.length > 0) {
            l.info("Incorrect description labels found, updating them", { incorrectDescriptionLabels: m.map((e) => e.name) });
            const t = (s = e.payload.repository.owner) === null || s === void 0 ? void 0 : s.login;
            if (!t) {
              throw l.error(a);
            }
            yield Promise.allSettled(
              m.map((r) =>
                e.octokit.rest.issues.updateLabel({
                  owner: t,
                  repo: e.payload.repository.name,
                  name: r.name,
                  description: r.collaboratorOnly ? i.COLLABORATOR_ONLY_DESCRIPTION : undefined,
                })
              )
            );
            l.info(`Updating incorrect description labels done`);
          }
          const h = [...new Set(d.filter((e) => !p.map((e) => e.name).includes(e.name)))];
          if (h.length > 0) {
            l.info("Missing labels found, creating them", { missingLabels: h });
            yield Promise.allSettled(h.map((t) => (0, n.createLabel)(e, t.name, "default", t.collaboratorOnly ? i.COLLABORATOR_ONLY_DESCRIPTION : undefined)));
            l.info(`Creating missing labels done`);
          }
        });
      }
    },
    57696: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.run = run;
      const n = r(65772);
      const o = r(85036);
      const i = r(72322);
      const a = r(90682);
      const A = r(52182);
      const l = r(74534);
      const c = r(4045);
      const d = r(26109);
      const p = r(36273);
      const u = r(42629);
      function run(e, t) {
        return s(this, void 0, void 0, function* () {
          const r = new n.Octokit({ auth: e.authToken });
          const s = (0, o.createClient)(t.SUPABASE_URL, t.SUPABASE_KEY);
          const g = { eventName: e.eventName, payload: e.eventPayload, config: e.settings, octokit: r, logger: new u.Logs("info"), adapters: {}, env: t };
          g.adapters = (0, i.createAdapters)(s, g);
          const m = e.eventName;
          switch (m) {
            case "issues.labeled":
            case "issues.unlabeled":
              if ((0, p.isIssueLabelEvent)(g)) {
                yield (0, c.syncPriceLabelsToConfig)(g);
                yield (0, l.onLabelChangeSetPricing)(g);
              }
              break;
            case "label.edited":
              yield (0, A.watchLabelChange)(g);
              break;
            case "issue_comment.created":
              yield (0, a.handleComment)(g);
              break;
            case "push":
              yield (0, d.globalLabelUpdate)(g);
              break;
            default:
              g.logger.error(`Event ${m} is not supported`);
          }
        });
      }
    },
    78416: function (e, t) {
      "use strict";
      var r =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.isUserAdminOrBillingManager = isUserAdminOrBillingManager;
      t.addCommentToIssue = addCommentToIssue;
      t.listOrgRepos = listOrgRepos;
      t.listRepoIssues = listRepoIssues;
      function checkIfIsAdmin(e, t) {
        return r(this, void 0, void 0, function* () {
          var r;
          const s = (r = e.payload.repository.owner) === null || r === void 0 ? void 0 : r.login;
          if (!s) throw e.logger.error("No owner found in the repository!");
          const n = yield e.octokit.rest.repos.getCollaboratorPermissionLevel({ owner: s, repo: e.payload.repository.name, username: t });
          return n.data.permission === "admin";
        });
      }
      function checkIfIsBillingManager(e, t) {
        return r(this, void 0, void 0, function* () {
          if (!e.payload.organization) throw e.logger.error(`No organization found in payload!`);
          try {
            yield e.octokit.rest.orgs.checkMembershipForUser({ org: e.payload.organization.login, username: t });
          } catch (e) {
            return false;
          }
          const { data: r } = yield e.octokit.rest.orgs.getMembershipForUser({ org: e.payload.organization.login, username: t });
          return r.role === "billing_manager";
        });
      }
      function isUserAdminOrBillingManager(e, t) {
        return r(this, void 0, void 0, function* () {
          if (!t) return false;
          const r = yield checkIfIsAdmin(e, t);
          if (r) return "admin";
          const s = yield checkIfIsBillingManager(e, t);
          if (s) return "billing_manager";
          return false;
        });
      }
      function addCommentToIssue(e, t, s, n, o) {
        return r(this, void 0, void 0, function* () {
          var r;
          const i = e.payload;
          const a = n || ((r = i.repository.owner) === null || r === void 0 ? void 0 : r.login);
          if (!a) throw e.logger.error("No owner found in the repository!");
          try {
            yield e.octokit.issues.createComment({ owner: a, repo: o !== null && o !== void 0 ? o : i.repository.name, issue_number: s, body: t });
          } catch (t) {
            e.logger.error("Adding a comment failed!", { err: t });
          }
        });
      }
      function listOrgRepos(e) {
        return r(this, void 0, void 0, function* () {
          var t;
          const r = (t = e.payload.organization) === null || t === void 0 ? void 0 : t.login;
          if (!r) throw e.logger.error("No organization found in payload!");
          try {
            const t = yield e.octokit.rest.repos.listForOrg({ org: r });
            return t.data.filter((t) => {
              var r;
              return !t.archived && !t.disabled && !((r = e.config.globalConfigUpdate) === null || r === void 0 ? void 0 : r.excludeRepos.includes(t.name));
            });
          } catch (t) {
            throw e.logger.error("Listing org repos failed!", { err: t });
          }
        });
      }
      function listRepoIssues(e, t, s) {
        return r(this, void 0, void 0, function* () {
          try {
            const r = yield e.octokit.rest.issues.listForRepo({ owner: t, repo: s });
            return r.data;
          } catch (t) {
            throw e.logger.error("Listing repo issues failed!", { err: t });
          }
        });
      }
    },
    20801: function (e, t) {
      "use strict";
      var r =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.COLORS = void 0;
      t.listLabelsForRepo = listLabelsForRepo;
      t.createLabel = createLabel;
      t.clearAllPriceLabelsOnIssue = clearAllPriceLabelsOnIssue;
      t.addLabelToIssue = addLabelToIssue;
      t.removeLabelFromIssue = removeLabelFromIssue;
      t.COLORS = { default: "ededed", price: "1f883d" };
      const s = "No owner found in the repository!";
      function listLabelsForRepo(e) {
        return r(this, void 0, void 0, function* () {
          var t;
          const { payload: r, octokit: n } = e;
          const o = (t = r.repository.owner) === null || t === void 0 ? void 0 : t.login;
          if (!o) {
            throw e.logger.error(s);
          }
          const i = yield n.paginate(n.rest.issues.listLabelsForRepo, { owner: o, repo: r.repository.name, per_page: 100, page: 1 });
          if (i.length > 0) {
            yield new Promise((e) => setTimeout(e, 5e3));
            return i;
          }
          throw e.logger.error("Failed to fetch lists of labels", { status: 500 });
        });
      }
      function createLabel(e, n) {
        return r(this, arguments, void 0, function* (e, r, n = "default", o) {
          var i;
          const a = e.payload;
          const A = r.startsWith("Price: ") ? t.COLORS.price : t.COLORS[n];
          const l = (i = a.repository.owner) === null || i === void 0 ? void 0 : i.login;
          if (!l) {
            throw e.logger.error(s);
          }
          try {
            yield e.octokit.rest.issues.createLabel({ owner: l, repo: a.repository.name, name: r, color: A, description: o });
          } catch (t) {
            throw e.logger.error("Creating a label failed!", { err: t });
          }
        });
      }
      function clearAllPriceLabelsOnIssue(e) {
        return r(this, void 0, void 0, function* () {
          const t = e.payload;
          if (!("issue" in t) || !t.issue) {
            return;
          }
          const r = t.issue.labels;
          if (!r) return;
          const s = r.filter((e) => e.name.toString().startsWith("Price: ") || e.name.toString().startsWith("Pricing: "));
          if (!s.length) return;
          for (const r of s) {
            try {
              yield e.octokit.issues.removeLabel({ owner: t.repository.owner.login, repo: t.repository.name, issue_number: t.issue.number, name: r.name });
            } catch (t) {
              throw e.logger.error("Clearing all price labels failed!", { err: t });
            }
          }
        });
      }
      function addLabelToIssue(e, t) {
        return r(this, void 0, void 0, function* () {
          const r = e.payload;
          if (!("issue" in r) || !r.issue) {
            return;
          }
          try {
            yield e.octokit.issues.addLabels({ owner: r.repository.owner.login, repo: r.repository.name, issue_number: r.issue.number, labels: [t] });
          } catch (t) {
            throw e.logger.error("Adding a label to issue failed!", { err: t });
          }
        });
      }
      function removeLabelFromIssue(e, t) {
        return r(this, void 0, void 0, function* () {
          const r = e.payload;
          if (!("issue" in r) || !r.issue) {
            return;
          }
          try {
            yield e.octokit.issues.removeLabel({ owner: r.repository.owner.login, repo: r.repository.name, issue_number: r.issue.number, name: t });
          } catch (t) {
            throw e.logger.error("Adding a label to issue failed!", { err: t });
          }
        });
      }
    },
    44643: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      t.labelAccessPermissionsCheck = labelAccessPermissionsCheck;
      const n = r(89264);
      const o = r(36273);
      const i = r(78416);
      const a = r(20801);
      function labelAccessPermissionsCheck(e) {
        return s(this, void 0, void 0, function* () {
          var t, r, s, a, A;
          if (!(0, o.isIssueLabelEvent)(e)) {
            e.logger.debug("Not an issue event");
            return;
          }
          const { logger: l, payload: c } = e;
          const { publicAccessControl: d } = e.config;
          if (!((t = c.label) === null || t === void 0 ? void 0 : t.name)) return;
          if (d.setLabel) {
            l.info("Public access control is enabled for setting labels");
            return true;
          }
          if (((r = c.sender) === null || r === void 0 ? void 0 : r.type) === n.UserType.Bot) {
            l.info("Bot has full control over all labels");
            return true;
          }
          const p = (s = c.sender) === null || s === void 0 ? void 0 : s.login;
          if (!p) {
            throw l.error("No sender found in the payload");
          }
          const u = c.repository;
          const g = yield (0, i.isUserAdminOrBillingManager)(e, p);
          let m;
          if ("action" in c) {
            m = c.action;
          } else {
            throw new Error("No action found in payload");
          }
          const h = m === "labeled" ? "add" : "remove";
          const E = c.label.name;
          const I = (A = (a = c.label) === null || a === void 0 ? void 0 : a.name) === null || A === void 0 ? void 0 : A.split(":");
          if (I.length == 0) return;
          const C = I[0].toLowerCase();
          if (g) {
            l.info("Admin and billing managers have full control over all labels", { repo: u.full_name, user: p, labelType: C });
            return true;
          } else {
            return handleInsufficientPrivileges(e, C, p, u, m, E, h);
          }
        });
      }
      function handleInsufficientPrivileges(e, t, r, n, o, A, l) {
        return s(this, void 0, void 0, function* () {
          var s;
          const { logger: c, payload: d } = e;
          c.info("Checking access for labels", { repo: n.full_name, user: r, labelType: t });
          const { access: p, user: u } = e.adapters.supabase;
          const g = yield u.getUserId(e, r);
          const m = yield p.getAccess(g, n.id);
          if (m && ((s = m.labels) === null || s === void 0 ? void 0 : s.includes(t))) {
            return true;
          }
          if (o === "labeled") {
            yield (0, a.removeLabelFromIssue)(e, A);
          } else if (o === "unlabeled") {
            yield (0, a.addLabelToIssue)(e, A);
          }
          if ("issue" in d && d.issue) {
            yield (0, i.addCommentToIssue)(e, `@${r}, You are not allowed to ${l} ${A}`, d.issue.number);
            c.info("No access to edit label", { sender: r, label: A });
          }
          return false;
        });
      }
    },
    74273: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.calculateTaskPrice = calculateTaskPrice;
      t.getPrice = getPrice;
      t.calculateLabelValue = calculateLabelValue;
      const s = r(92183);
      function calculateTaskPrice(e, t, r, n) {
        const o = n !== null && n !== void 0 ? n : e.config.basePriceMultiplier;
        const i = new s.Decimal(r).div(10);
        return new s.Decimal(o).mul(1e3).mul(t).mul(i).toDecimalPlaces(2).toString();
      }
      function getPrice(e, t, r) {
        const s = e.logger;
        const { labels: n } = e.config;
        if (!t || !r) throw s.error("Time or priority label is not defined");
        const o = n.time.find((e) => e.name === t.name);
        if (!o) throw s.error("Time label is not recognized");
        const i = n.priority.find((e) => e.name === r.name);
        if (!i) throw s.error("Priority label is not recognized");
        const a = calculateLabelValue(o.name);
        if (!a) throw s.error("Time value is not defined");
        const A = calculateLabelValue(i.name);
        if (!A) throw s.error("Priority value is not defined");
        const l = calculateTaskPrice(e, a, A);
        return `Price: ${l} USD`;
      }
      function calculateLabelValue(e) {
        const t = e.match(/\d+/);
        const r = t && t.length > 0 ? parseInt(t[0]) || 0 : 0;
        if (e.toLowerCase().includes("priority")) return r;
        if (e.toLowerCase().includes("minute")) return r * 0.002;
        if (e.toLowerCase().includes("hour")) return r * 0.125;
        if (e.toLowerCase().includes("day")) return 1 + (r - 1) * 0.25;
        if (e.toLowerCase().includes("week")) return r + 1;
        if (e.toLowerCase().includes("month")) return 5 + (r - 1) * 8;
        return 0;
      }
    },
    50304: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.envConfigValidator = t.envSchema = void 0;
      const s = r(14019);
      r(52874);
      const n = r(80619);
      t.envSchema = s.Type.Object({ SUPABASE_URL: s.Type.String(), SUPABASE_KEY: s.Type.String(), UBIQUIBOT_PUBLIC_KEY: s.Type.Optional(s.Type.String()) });
      t.envConfigValidator = new n.StandardValidator(t.envSchema);
    },
    89264: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.UserType = void 0;
      var r;
      (function (e) {
        e["User"] = "User";
        e["Bot"] = "Bot";
      })(r || (t.UserType = r = {}));
    },
    28813: (e, t, r) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.COLLABORATOR_ONLY_DESCRIPTION = t.assistivePricingSchemaValidator = t.pluginSettingsSchema = void 0;
      const s = r(80619);
      const n = r(14019);
      t.pluginSettingsSchema = n.Type.Object(
        {
          globalConfigUpdate: n.Type.Optional(n.Type.Object({ excludeRepos: n.Type.Array(n.Type.String()) })),
          labels: n.Type.Object(
            {
              time: n.Type.Array(n.Type.Object({ name: n.Type.String(), collaboratorOnly: n.Type.Boolean({ default: false }) }), { default: [] }),
              priority: n.Type.Array(n.Type.Object({ name: n.Type.String(), collaboratorOnly: n.Type.Boolean({ default: false }) }), { default: [] }),
            },
            { default: {} }
          ),
          basePriceMultiplier: n.Type.Number({ default: 1 }),
          publicAccessControl: n.Type.Object(
            { setLabel: n.Type.Boolean({ default: false }), fundExternalClosedIssue: n.Type.Boolean({ default: false }) },
            { default: {} }
          ),
        },
        { default: {} }
      );
      t.assistivePricingSchemaValidator = new s.StandardValidator(t.pluginSettingsSchema);
      t.COLLABORATOR_ONLY_DESCRIPTION = "⚠️ Collaborator only";
    },
    36273: (e, t) => {
      "use strict";
      Object.defineProperty(t, "__esModule", { value: true });
      t.isCommentEvent = isCommentEvent;
      t.isIssueLabelEvent = isIssueLabelEvent;
      t.isPushEvent = isPushEvent;
      t.isLabelEditedEvent = isLabelEditedEvent;
      function isCommentEvent(e) {
        return e.eventName.startsWith("issue_comment.");
      }
      function isIssueLabelEvent(e) {
        return e.eventName === "issues.labeled" || e.eventName === "issues.unlabeled";
      }
      function isPushEvent(e) {
        return e.eventName === "push";
      }
      function isLabelEditedEvent(e) {
        return e.eventName === "label.edited";
      }
    },
    79407: function (e, t, r) {
      "use strict";
      var s =
        (this && this.__createBinding) ||
        (Object.create
          ? function (e, t, r, s) {
              if (s === undefined) s = r;
              var n = Object.getOwnPropertyDescriptor(t, r);
              if (!n || ("get" in n ? !t.__esModule : n.writable || n.configurable)) {
                n = {
                  enumerable: true,
                  get: function () {
                    return t[r];
                  },
                };
              }
              Object.defineProperty(e, s, n);
            }
          : function (e, t, r, s) {
              if (s === undefined) s = r;
              e[s] = t[r];
            });
      var n =
        (this && this.__setModuleDefault) ||
        (Object.create
          ? function (e, t) {
              Object.defineProperty(e, "default", { enumerable: true, value: t });
            }
          : function (e, t) {
              e["default"] = t;
            });
      var o =
        (this && this.__importStar) ||
        function (e) {
          if (e && e.__esModule) return e;
          var t = {};
          if (e != null) for (var r in e) if (r !== "default" && Object.prototype.hasOwnProperty.call(e, r)) s(t, e, r);
          n(t, e);
          return t;
        };
      var i =
        (this && this.__awaiter) ||
        function (e, t, r, s) {
          function adopt(e) {
            return e instanceof r
              ? e
              : new r(function (t) {
                  t(e);
                });
          }
          return new (r || (r = Promise))(function (r, n) {
            function fulfilled(e) {
              try {
                step(s.next(e));
              } catch (e) {
                n(e);
              }
            }
            function rejected(e) {
              try {
                step(s["throw"](e));
              } catch (e) {
                n(e);
              }
            }
            function step(e) {
              e.done ? r(e.value) : adopt(e.value).then(fulfilled, rejected);
            }
            step((s = s.apply(e, t || [])).next());
          });
        };
      Object.defineProperty(t, "__esModule", { value: true });
      const a = o(r(93228));
      const A = o(r(37484));
      const l = r(45105);
      const c = r(50304);
      const d = r(28813);
      const p = r(57696);
      function actionRun() {
        return i(this, void 0, void 0, function* () {
          const e = {
            SUPABASE_KEY: process.env.SUPABASE_KEY,
            SUPABASE_URL: process.env.SUPABASE_URL,
            UBIQUIBOT_PUBLIC_KEY: process.env.UBIQUIBOT_PUBLIC_KEY || "temporarily-disabled",
          };
          const t = l.Value.Decode(c.envSchema, e);
          const r = a.context.payload.inputs;
          const s = l.Value.Decode(d.pluginSettingsSchema, l.Value.Default(d.pluginSettingsSchema, JSON.parse(r.settings)));
          const n = { stateId: r.stateId, eventName: r.eventName, eventPayload: JSON.parse(r.eventPayload), settings: s, authToken: r.authToken, ref: r.ref };
          yield (0, p.run)(n, t);
        });
      }
      actionRun()
        .then((e) => A.setOutput("result", e))
        .catch((e) => {
          console.error(e);
          A.setFailed(e);
        });
    },
    18327: (module) => {
      module.exports = eval("require")("bufferutil");
    },
    62414: (module) => {
      module.exports = eval("require")("utf-8-validate");
    },
    42613: (e) => {
      "use strict";
      e.exports = require("assert");
    },
    90290: (e) => {
      "use strict";
      e.exports = require("async_hooks");
    },
    20181: (e) => {
      "use strict";
      e.exports = require("buffer");
    },
    35317: (e) => {
      "use strict";
      e.exports = require("child_process");
    },
    64236: (e) => {
      "use strict";
      e.exports = require("console");
    },
    76982: (e) => {
      "use strict";
      e.exports = require("crypto");
    },
    31637: (e) => {
      "use strict";
      e.exports = require("diagnostics_channel");
    },
    24434: (e) => {
      "use strict";
      e.exports = require("events");
    },
    79896: (e) => {
      "use strict";
      e.exports = require("fs");
    },
    58611: (e) => {
      "use strict";
      e.exports = require("http");
    },
    85675: (e) => {
      "use strict";
      e.exports = require("http2");
    },
    65692: (e) => {
      "use strict";
      e.exports = require("https");
    },
    69278: (e) => {
      "use strict";
      e.exports = require("net");
    },
    78474: (e) => {
      "use strict";
      e.exports = require("node:events");
    },
    57075: (e) => {
      "use strict";
      e.exports = require("node:stream");
    },
    57975: (e) => {
      "use strict";
      e.exports = require("node:util");
    },
    70857: (e) => {
      "use strict";
      e.exports = require("os");
    },
    16928: (e) => {
      "use strict";
      e.exports = require("path");
    },
    82987: (e) => {
      "use strict";
      e.exports = require("perf_hooks");
    },
    932: (e) => {
      "use strict";
      e.exports = require("process");
    },
    24876: (e) => {
      "use strict";
      e.exports = require("punycode");
    },
    83480: (e) => {
      "use strict";
      e.exports = require("querystring");
    },
    2203: (e) => {
      "use strict";
      e.exports = require("stream");
    },
    63774: (e) => {
      "use strict";
      e.exports = require("stream/web");
    },
    13193: (e) => {
      "use strict";
      e.exports = require("string_decoder");
    },
    64756: (e) => {
      "use strict";
      e.exports = require("tls");
    },
    87016: (e) => {
      "use strict";
      e.exports = require("url");
    },
    39023: (e) => {
      "use strict";
      e.exports = require("util");
    },
    98253: (e) => {
      "use strict";
      e.exports = require("util/types");
    },
    28167: (e) => {
      "use strict";
      e.exports = require("worker_threads");
    },
    43106: (e) => {
      "use strict";
      e.exports = require("zlib");
    },
    27033: (e, t, r) => {
      const s = r(18909);
      t = e.exports = {};
      t.program = new s.Command();
      t.Argument = s.Argument;
      t.Command = s.Command;
      t.CommanderError = s.CommanderError;
      t.Help = s.Help;
      t.InvalidArgumentError = s.InvalidArgumentError;
      t.InvalidOptionArgumentError = s.InvalidArgumentError;
      t.Option = s.Option;
      t.createCommand = (e) => new s.Command(e);
      t.createOption = (e, t) => new s.Option(e, t);
      t.createArgument = (e, t) => new s.Argument(e, t);
    },
    27182: (e, t, r) => {
      "use strict";
      const s = r(57075).Writable;
      const n = r(57975).inherits;
      const o = r(84136);
      const i = r(50612);
      const a = r(62271);
      const A = 45;
      const l = Buffer.from("-");
      const c = Buffer.from("\r\n");
      const EMPTY_FN = function () {};
      function Dicer(e) {
        if (!(this instanceof Dicer)) {
          return new Dicer(e);
        }
        s.call(this, e);
        if (!e || (!e.headerFirst && typeof e.boundary !== "string")) {
          throw new TypeError("Boundary required");
        }
        if (typeof e.boundary === "string") {
          this.setBoundary(e.boundary);
        } else {
          this._bparser = undefined;
        }
        this._headerFirst = e.headerFirst;
        this._dashes = 0;
        this._parts = 0;
        this._finished = false;
        this._realFinish = false;
        this._isPreamble = true;
        this._justMatched = false;
        this._firstWrite = true;
        this._inHeader = true;
        this._part = undefined;
        this._cb = undefined;
        this._ignoreData = false;
        this._partOpts = { highWaterMark: e.partHwm };
        this._pause = false;
        const t = this;
        this._hparser = new a(e);
        this._hparser.on("header", function (e) {
          t._inHeader = false;
          t._part.emit("header", e);
        });
      }
      n(Dicer, s);
      Dicer.prototype.emit = function (e) {
        if (e === "finish" && !this._realFinish) {
          if (!this._finished) {
            const e = this;
            process.nextTick(function () {
              e.emit("error", new Error("Unexpected end of multipart data"));
              if (e._part && !e._ignoreData) {
                const t = e._isPreamble ? "Preamble" : "Part";
                e._part.emit("error", new Error(t + " terminated early due to unexpected end of multipart data"));
                e._part.push(null);
                process.nextTick(function () {
                  e._realFinish = true;
                  e.emit("finish");
                  e._realFinish = false;
                });
                return;
              }
              e._realFinish = true;
              e.emit("finish");
              e._realFinish = false;
            });
          }
        } else {
          s.prototype.emit.apply(this, arguments);
        }
      };
      Dicer.prototype._write = function (e, t, r) {
        if (!this._hparser && !this._bparser) {
          return r();
        }
        if (this._headerFirst && this._isPreamble) {
          if (!this._part) {
            this._part = new i(this._partOpts);
            if (this.listenerCount("preamble") !== 0) {
              this.emit("preamble", this._part);
            } else {
              this._ignore();
            }
          }
          const t = this._hparser.push(e);
          if (!this._inHeader && t !== undefined && t < e.length) {
            e = e.slice(t);
          } else {
            return r();
          }
        }
        if (this._firstWrite) {
          this._bparser.push(c);
          this._firstWrite = false;
        }
        this._bparser.push(e);
        if (this._pause) {
          this._cb = r;
        } else {
          r();
        }
      };
      Dicer.prototype.reset = function () {
        this._part = undefined;
        this._bparser = undefined;
        this._hparser = undefined;
      };
      Dicer.prototype.setBoundary = function (e) {
        const t = this;
        this._bparser = new o("\r\n--" + e);
        this._bparser.on("info", function (e, r, s, n) {
          t._oninfo(e, r, s, n);
        });
      };
      Dicer.prototype._ignore = function () {
        if (this._part && !this._ignoreData) {
          this._ignoreData = true;
          this._part.on("error", EMPTY_FN);
          this._part.resume();
        }
      };
      Dicer.prototype._oninfo = function (e, t, r, s) {
        let n;
        const o = this;
        let a = 0;
        let c;
        let d = true;
        if (!this._part && this._justMatched && t) {
          while (this._dashes < 2 && r + a < s) {
            if (t[r + a] === A) {
              ++a;
              ++this._dashes;
            } else {
              if (this._dashes) {
                n = l;
              }
              this._dashes = 0;
              break;
            }
          }
          if (this._dashes === 2) {
            if (r + a < s && this.listenerCount("trailer") !== 0) {
              this.emit("trailer", t.slice(r + a, s));
            }
            this.reset();
            this._finished = true;
            if (o._parts === 0) {
              o._realFinish = true;
              o.emit("finish");
              o._realFinish = false;
            }
          }
          if (this._dashes) {
            return;
          }
        }
        if (this._justMatched) {
          this._justMatched = false;
        }
        if (!this._part) {
          this._part = new i(this._partOpts);
          this._part._read = function (e) {
            o._unpause();
          };
          if (this._isPreamble && this.listenerCount("preamble") !== 0) {
            this.emit("preamble", this._part);
          } else if (this._isPreamble !== true && this.listenerCount("part") !== 0) {
            this.emit("part", this._part);
          } else {
            this._ignore();
          }
          if (!this._isPreamble) {
            this._inHeader = true;
          }
        }
        if (t && r < s && !this._ignoreData) {
          if (this._isPreamble || !this._inHeader) {
            if (n) {
              d = this._part.push(n);
            }
            d = this._part.push(t.slice(r, s));
            if (!d) {
              this._pause = true;
            }
          } else if (!this._isPreamble && this._inHeader) {
            if (n) {
              this._hparser.push(n);
            }
            c = this._hparser.push(t.slice(r, s));
            if (!this._inHeader && c !== undefined && c < s) {
              this._oninfo(false, t, r + c, s);
            }
          }
        }
        if (e) {
          this._hparser.reset();
          if (this._isPreamble) {
            this._isPreamble = false;
          } else {
            if (r !== s) {
              ++this._parts;
              this._part.on("end", function () {
                if (--o._parts === 0) {
                  if (o._finished) {
                    o._realFinish = true;
                    o.emit("finish");
                    o._realFinish = false;
                  } else {
                    o._unpause();
                  }
                }
              });
            }
          }
          this._part.push(null);
          this._part = undefined;
          this._ignoreData = false;
          this._justMatched = true;
          this._dashes = 0;
        }
      };
      Dicer.prototype._unpause = function () {
        if (!this._pause) {
          return;
        }
        this._pause = false;
        if (this._cb) {
          const e = this._cb;
          this._cb = undefined;
          e();
        }
      };
      e.exports = Dicer;
    },
    62271: (e, t, r) => {
      "use strict";
      const s = r(78474).EventEmitter;
      const n = r(57975).inherits;
      const o = r(22393);
      const i = r(84136);
      const a = Buffer.from("\r\n\r\n");
      const A = /\r\n/g;
      const l = /^([^:]+):[ \t]?([\x00-\xFF]+)?$/;
      function HeaderParser(e) {
        s.call(this);
        e = e || {};
        const t = this;
        this.nread = 0;
        this.maxed = false;
        this.npairs = 0;
        this.maxHeaderPairs = o(e, "maxHeaderPairs", 2e3);
        this.maxHeaderSize = o(e, "maxHeaderSize", 80 * 1024);
        this.buffer = "";
        this.header = {};
        this.finished = false;
        this.ss = new i(a);
        this.ss.on("info", function (e, r, s, n) {
          if (r && !t.maxed) {
            if (t.nread + n - s >= t.maxHeaderSize) {
              n = t.maxHeaderSize - t.nread + s;
              t.nread = t.maxHeaderSize;
              t.maxed = true;
            } else {
              t.nread += n - s;
            }
            t.buffer += r.toString("binary", s, n);
          }
          if (e) {
            t._finish();
          }
        });
      }
      n(HeaderParser, s);
      HeaderParser.prototype.push = function (e) {
        const t = this.ss.push(e);
        if (this.finished) {
          return t;
        }
      };
      HeaderParser.prototype.reset = function () {
        this.finished = false;
        this.buffer = "";
        this.header = {};
        this.ss.reset();
      };
      HeaderParser.prototype._finish = function () {
        if (this.buffer) {
          this._parseHeader();
        }
        this.ss.matches = this.ss.maxMatches;
        const e = this.header;
        this.header = {};
        this.buffer = "";
        this.finished = true;
        this.nread = this.npairs = 0;
        this.maxed = false;
        this.emit("header", e);
      };
      HeaderParser.prototype._parseHeader = function () {
        if (this.npairs === this.maxHeaderPairs) {
          return;
        }
        const e = this.buffer.split(A);
        const t = e.length;
        let r, s;
        for (var n = 0; n < t; ++n) {
          if (e[n].length === 0) {
            continue;
          }
          if (e[n][0] === "\t" || e[n][0] === " ") {
            if (s) {
              this.header[s][this.header[s].length - 1] += e[n];
              continue;
            }
          }
          const t = e[n].indexOf(":");
          if (t === -1 || t === 0) {
            return;
          }
          r = l.exec(e[n]);
          s = r[1].toLowerCase();
          this.header[s] = this.header[s] || [];
          this.header[s].push(r[2] || "");
          if (++this.npairs === this.maxHeaderPairs) {
            break;
          }
        }
      };
      e.exports = HeaderParser;
    },
    50612: (e, t, r) => {
      "use strict";
      const s = r(57975).inherits;
      const n = r(57075).Readable;
      function PartStream(e) {
        n.call(this, e);
      }
      s(PartStream, n);
      PartStream.prototype._read = function (e) {};
      e.exports = PartStream;
    },
    84136: (e, t, r) => {
      "use strict";
      const s = r(78474).EventEmitter;
      const n = r(57975).inherits;
      function SBMH(e) {
        if (typeof e === "string") {
          e = Buffer.from(e);
        }
        if (!Buffer.isBuffer(e)) {
          throw new TypeError("The needle has to be a String or a Buffer.");
        }
        const t = e.length;
        if (t === 0) {
          throw new Error("The needle cannot be an empty String/Buffer.");
        }
        if (t > 256) {
          throw new Error("The needle cannot have a length bigger than 256.");
        }
        this.maxMatches = Infinity;
        this.matches = 0;
        this._occ = new Array(256).fill(t);
        this._lookbehind_size = 0;
        this._needle = e;
        this._bufpos = 0;
        this._lookbehind = Buffer.alloc(t);
        for (var r = 0; r < t - 1; ++r) {
          this._occ[e[r]] = t - 1 - r;
        }
      }
      n(SBMH, s);
      SBMH.prototype.reset = function () {
        this._lookbehind_size = 0;
        this.matches = 0;
        this._bufpos = 0;
      };
      SBMH.prototype.push = function (e, t) {
        if (!Buffer.isBuffer(e)) {
          e = Buffer.from(e, "binary");
        }
        const r = e.length;
        this._bufpos = t || 0;
        let s;
        while (s !== r && this.matches < this.maxMatches) {
          s = this._sbmh_feed(e);
        }
        return s;
      };
      SBMH.prototype._sbmh_feed = function (e) {
        const t = e.length;
        const r = this._needle;
        const s = r.length;
        const n = r[s - 1];
        let o = -this._lookbehind_size;
        let i;
        if (o < 0) {
          while (o < 0 && o <= t - s) {
            i = this._sbmh_lookup_char(e, o + s - 1);
            if (i === n && this._sbmh_memcmp(e, o, s - 1)) {
              this._lookbehind_size = 0;
              ++this.matches;
              this.emit("info", true);
              return (this._bufpos = o + s);
            }
            o += this._occ[i];
          }
          if (o < 0) {
            while (o < 0 && !this._sbmh_memcmp(e, o, t - o)) {
              ++o;
            }
          }
          if (o >= 0) {
            this.emit("info", false, this._lookbehind, 0, this._lookbehind_size);
            this._lookbehind_size = 0;
          } else {
            const r = this._lookbehind_size + o;
            if (r > 0) {
              this.emit("info", false, this._lookbehind, 0, r);
            }
            this._lookbehind.copy(this._lookbehind, 0, r, this._lookbehind_size - r);
            this._lookbehind_size -= r;
            e.copy(this._lookbehind, this._lookbehind_size);
            this._lookbehind_size += t;
            this._bufpos = t;
            return t;
          }
        }
        o += (o >= 0) * this._bufpos;
        if (e.indexOf(r, o) !== -1) {
          o = e.indexOf(r, o);
          ++this.matches;
          if (o > 0) {
            this.emit("info", true, e, this._bufpos, o);
          } else {
            this.emit("info", true);
          }
          return (this._bufpos = o + s);
        } else {
          o = t - s;
        }
        while (o < t && (e[o] !== r[0] || Buffer.compare(e.subarray(o, o + t - o), r.subarray(0, t - o)) !== 0)) {
          ++o;
        }
        if (o < t) {
          e.copy(this._lookbehind, 0, o, o + (t - o));
          this._lookbehind_size = t - o;
        }
        if (o > 0) {
          this.emit("info", false, e, this._bufpos, o < t ? o : t);
        }
        this._bufpos = t;
        return t;
      };
      SBMH.prototype._sbmh_lookup_char = function (e, t) {
        return t < 0 ? this._lookbehind[this._lookbehind_size + t] : e[t];
      };
      SBMH.prototype._sbmh_memcmp = function (e, t, r) {
        for (var s = 0; s < r; ++s) {
          if (this._sbmh_lookup_char(e, t + s) !== this._needle[s]) {
            return false;
          }
        }
        return true;
      };
      e.exports = SBMH;
    },
    89581: (e, t, r) => {
      "use strict";
      const s = r(57075).Writable;
      const { inherits: n } = r(57975);
      const o = r(27182);
      const i = r(41192);
      const a = r(80855);
      const A = r(8929);
      function Busboy(e) {
        if (!(this instanceof Busboy)) {
          return new Busboy(e);
        }
        if (typeof e !== "object") {
          throw new TypeError("Busboy expected an options-Object.");
        }
        if (typeof e.headers !== "object") {
          throw new TypeError("Busboy expected an options-Object with headers-attribute.");
        }
        if (typeof e.headers["content-type"] !== "string") {
          throw new TypeError("Missing Content-Type-header.");
        }
        const { headers: t, ...r } = e;
        this.opts = { autoDestroy: false, ...r };
        s.call(this, this.opts);
        this._done = false;
        this._parser = this.getParserByHeaders(t);
        this._finished = false;
      }
      n(Busboy, s);
      Busboy.prototype.emit = function (e) {
        if (e === "finish") {
          if (!this._done) {
            this._parser?.end();
            return;
          } else if (this._finished) {
            return;
          }
          this._finished = true;
        }
        s.prototype.emit.apply(this, arguments);
      };
      Busboy.prototype.getParserByHeaders = function (e) {
        const t = A(e["content-type"]);
        const r = {
          defCharset: this.opts.defCharset,
          fileHwm: this.opts.fileHwm,
          headers: e,
          highWaterMark: this.opts.highWaterMark,
          isPartAFile: this.opts.isPartAFile,
          limits: this.opts.limits,
          parsedConType: t,
          preservePath: this.opts.preservePath,
        };
        if (i.detect.test(t[0])) {
          return new i(this, r);
        }
        if (a.detect.test(t[0])) {
          return new a(this, r);
        }
        throw new Error("Unsupported Content-Type.");
      };
      Busboy.prototype._write = function (e, t, r) {
        this._parser.write(e, r);
      };
      e.exports = Busboy;
      e.exports["default"] = Busboy;
      e.exports.Busboy = Busboy;
      e.exports.Dicer = o;
    },
    41192: (e, t, r) => {
      "use strict";
      const { Readable: s } = r(57075);
      const { inherits: n } = r(57975);
      const o = r(27182);
      const i = r(8929);
      const a = r(72747);
      const A = r(20692);
      const l = r(22393);
      const c = /^boundary$/i;
      const d = /^form-data$/i;
      const p = /^charset$/i;
      const u = /^filename$/i;
      const g = /^name$/i;
      Multipart.detect = /^multipart\/form-data/i;
      function Multipart(e, t) {
        let r;
        let s;
        const n = this;
        let m;
        const h = t.limits;
        const E = t.isPartAFile || ((e, t, r) => t === "application/octet-stream" || r !== undefined);
        const I = t.parsedConType || [];
        const C = t.defCharset || "utf8";
        const y = t.preservePath;
        const B = { highWaterMark: t.fileHwm };
        for (r = 0, s = I.length; r < s; ++r) {
          if (Array.isArray(I[r]) && c.test(I[r][0])) {
            m = I[r][1];
            break;
          }
        }
        function checkFinished() {
          if (k === 0 && N && !e._done) {
            N = false;
            n.end();
          }
        }
        if (typeof m !== "string") {
          throw new Error("Multipart: Boundary not found");
        }
        const Q = l(h, "fieldSize", 1 * 1024 * 1024);
        const b = l(h, "fileSize", Infinity);
        const w = l(h, "files", Infinity);
        const v = l(h, "fields", Infinity);
        const T = l(h, "parts", Infinity);
        const _ = l(h, "headerPairs", 2e3);
        const S = l(h, "headerSize", 80 * 1024);
        let R = 0;
        let D = 0;
        let k = 0;
        let F;
        let O;
        let N = false;
        this._needDrain = false;
        this._pause = false;
        this._cb = undefined;
        this._nparts = 0;
        this._boy = e;
        const P = { boundary: m, maxHeaderPairs: _, maxHeaderSize: S, partHwm: B.highWaterMark, highWaterMark: t.highWaterMark };
        this.parser = new o(P);
        this.parser
          .on("drain", function () {
            n._needDrain = false;
            if (n._cb && !n._pause) {
              const e = n._cb;
              n._cb = undefined;
              e();
            }
          })
          .on("part", function onPart(t) {
            if (++n._nparts > T) {
              n.parser.removeListener("part", onPart);
              n.parser.on("part", skipPart);
              e.hitPartsLimit = true;
              e.emit("partsLimit");
              return skipPart(t);
            }
            if (O) {
              const e = O;
              e.emit("end");
              e.removeAllListeners("end");
            }
            t.on("header", function (o) {
              let l;
              let c;
              let m;
              let h;
              let I;
              let T;
              let _ = 0;
              if (o["content-type"]) {
                m = i(o["content-type"][0]);
                if (m[0]) {
                  l = m[0].toLowerCase();
                  for (r = 0, s = m.length; r < s; ++r) {
                    if (p.test(m[r][0])) {
                      h = m[r][1].toLowerCase();
                      break;
                    }
                  }
                }
              }
              if (l === undefined) {
                l = "text/plain";
              }
              if (h === undefined) {
                h = C;
              }
              if (o["content-disposition"]) {
                m = i(o["content-disposition"][0]);
                if (!d.test(m[0])) {
                  return skipPart(t);
                }
                for (r = 0, s = m.length; r < s; ++r) {
                  if (g.test(m[r][0])) {
                    c = m[r][1];
                  } else if (u.test(m[r][0])) {
                    T = m[r][1];
                    if (!y) {
                      T = A(T);
                    }
                  }
                }
              } else {
                return skipPart(t);
              }
              if (o["content-transfer-encoding"]) {
                I = o["content-transfer-encoding"][0].toLowerCase();
              } else {
                I = "7bit";
              }
              let S, N;
              if (E(c, l, T)) {
                if (R === w) {
                  if (!e.hitFilesLimit) {
                    e.hitFilesLimit = true;
                    e.emit("filesLimit");
                  }
                  return skipPart(t);
                }
                ++R;
                if (e.listenerCount("file") === 0) {
                  n.parser._ignore();
                  return;
                }
                ++k;
                const r = new FileStream(B);
                F = r;
                r.on("end", function () {
                  --k;
                  n._pause = false;
                  checkFinished();
                  if (n._cb && !n._needDrain) {
                    const e = n._cb;
                    n._cb = undefined;
                    e();
                  }
                });
                r._read = function (e) {
                  if (!n._pause) {
                    return;
                  }
                  n._pause = false;
                  if (n._cb && !n._needDrain) {
                    const e = n._cb;
                    n._cb = undefined;
                    e();
                  }
                };
                e.emit("file", c, r, T, I, l);
                S = function (e) {
                  if ((_ += e.length) > b) {
                    const s = b - _ + e.length;
                    if (s > 0) {
                      r.push(e.slice(0, s));
                    }
                    r.truncated = true;
                    r.bytesRead = b;
                    t.removeAllListeners("data");
                    r.emit("limit");
                    return;
                  } else if (!r.push(e)) {
                    n._pause = true;
                  }
                  r.bytesRead = _;
                };
                N = function () {
                  F = undefined;
                  r.push(null);
                };
              } else {
                if (D === v) {
                  if (!e.hitFieldsLimit) {
                    e.hitFieldsLimit = true;
                    e.emit("fieldsLimit");
                  }
                  return skipPart(t);
                }
                ++D;
                ++k;
                let r = "";
                let s = false;
                O = t;
                S = function (e) {
                  if ((_ += e.length) > Q) {
                    const n = Q - (_ - e.length);
                    r += e.toString("binary", 0, n);
                    s = true;
                    t.removeAllListeners("data");
                  } else {
                    r += e.toString("binary");
                  }
                };
                N = function () {
                  O = undefined;
                  if (r.length) {
                    r = a(r, "binary", h);
                  }
                  e.emit("field", c, r, false, s, I, l);
                  --k;
                  checkFinished();
                };
              }
              t._readableState.sync = false;
              t.on("data", S);
              t.on("end", N);
            }).on("error", function (e) {
              if (F) {
                F.emit("error", e);
              }
            });
          })
          .on("error", function (t) {
            e.emit("error", t);
          })
          .on("finish", function () {
            N = true;
            checkFinished();
          });
      }
      Multipart.prototype.write = function (e, t) {
        const r = this.parser.write(e);
        if (r && !this._pause) {
          t();
        } else {
          this._needDrain = !r;
          this._cb = t;
        }
      };
      Multipart.prototype.end = function () {
        const e = this;
        if (e.parser.writable) {
          e.parser.end();
        } else if (!e._boy._done) {
          process.nextTick(function () {
            e._boy._done = true;
            e._boy.emit("finish");
          });
        }
      };
      function skipPart(e) {
        e.resume();
      }
      function FileStream(e) {
        s.call(this, e);
        this.bytesRead = 0;
        this.truncated = false;
      }
      n(FileStream, s);
      FileStream.prototype._read = function (e) {};
      e.exports = Multipart;
    },
    80855: (e, t, r) => {
      "use strict";
      const s = r(11496);
      const n = r(72747);
      const o = r(22393);
      const i = /^charset$/i;
      UrlEncoded.detect = /^application\/x-www-form-urlencoded/i;
      function UrlEncoded(e, t) {
        const r = t.limits;
        const n = t.parsedConType;
        this.boy = e;
        this.fieldSizeLimit = o(r, "fieldSize", 1 * 1024 * 1024);
        this.fieldNameSizeLimit = o(r, "fieldNameSize", 100);
        this.fieldsLimit = o(r, "fields", Infinity);
        let a;
        for (var A = 0, l = n.length; A < l; ++A) {
          if (Array.isArray(n[A]) && i.test(n[A][0])) {
            a = n[A][1].toLowerCase();
            break;
          }
        }
        if (a === undefined) {
          a = t.defCharset || "utf8";
        }
        this.decoder = new s();
        this.charset = a;
        this._fields = 0;
        this._state = "key";
        this._checkingBytes = true;
        this._bytesKey = 0;
        this._bytesVal = 0;
        this._key = "";
        this._val = "";
        this._keyTrunc = false;
        this._valTrunc = false;
        this._hitLimit = false;
      }
      UrlEncoded.prototype.write = function (e, t) {
        if (this._fields === this.fieldsLimit) {
          if (!this.boy.hitFieldsLimit) {
            this.boy.hitFieldsLimit = true;
            this.boy.emit("fieldsLimit");
          }
          return t();
        }
        let r;
        let s;
        let o;
        let i = 0;
        const a = e.length;
        while (i < a) {
          if (this._state === "key") {
            r = s = undefined;
            for (o = i; o < a; ++o) {
              if (!this._checkingBytes) {
                ++i;
              }
              if (e[o] === 61) {
                r = o;
                break;
              } else if (e[o] === 38) {
                s = o;
                break;
              }
              if (this._checkingBytes && this._bytesKey === this.fieldNameSizeLimit) {
                this._hitLimit = true;
                break;
              } else if (this._checkingBytes) {
                ++this._bytesKey;
              }
            }
            if (r !== undefined) {
              if (r > i) {
                this._key += this.decoder.write(e.toString("binary", i, r));
              }
              this._state = "val";
              this._hitLimit = false;
              this._checkingBytes = true;
              this._val = "";
              this._bytesVal = 0;
              this._valTrunc = false;
              this.decoder.reset();
              i = r + 1;
            } else if (s !== undefined) {
              ++this._fields;
              let r;
              const o = this._keyTrunc;
              if (s > i) {
                r = this._key += this.decoder.write(e.toString("binary", i, s));
              } else {
                r = this._key;
              }
              this._hitLimit = false;
              this._checkingBytes = true;
              this._key = "";
              this._bytesKey = 0;
              this._keyTrunc = false;
              this.decoder.reset();
              if (r.length) {
                this.boy.emit("field", n(r, "binary", this.charset), "", o, false);
              }
              i = s + 1;
              if (this._fields === this.fieldsLimit) {
                return t();
              }
            } else if (this._hitLimit) {
              if (o > i) {
                this._key += this.decoder.write(e.toString("binary", i, o));
              }
              i = o;
              if ((this._bytesKey = this._key.length) === this.fieldNameSizeLimit) {
                this._checkingBytes = false;
                this._keyTrunc = true;
              }
            } else {
              if (i < a) {
                this._key += this.decoder.write(e.toString("binary", i));
              }
              i = a;
            }
          } else {
            s = undefined;
            for (o = i; o < a; ++o) {
              if (!this._checkingBytes) {
                ++i;
              }
              if (e[o] === 38) {
                s = o;
                break;
              }
              if (this._checkingBytes && this._bytesVal === this.fieldSizeLimit) {
                this._hitLimit = true;
                break;
              } else if (this._checkingBytes) {
                ++this._bytesVal;
              }
            }
            if (s !== undefined) {
              ++this._fields;
              if (s > i) {
                this._val += this.decoder.write(e.toString("binary", i, s));
              }
              this.boy.emit("field", n(this._key, "binary", this.charset), n(this._val, "binary", this.charset), this._keyTrunc, this._valTrunc);
              this._state = "key";
              this._hitLimit = false;
              this._checkingBytes = true;
              this._key = "";
              this._bytesKey = 0;
              this._keyTrunc = false;
              this.decoder.reset();
              i = s + 1;
              if (this._fields === this.fieldsLimit) {
                return t();
              }
            } else if (this._hitLimit) {
              if (o > i) {
                this._val += this.decoder.write(e.toString("binary", i, o));
              }
              i = o;
              if ((this._val === "" && this.fieldSizeLimit === 0) || (this._bytesVal = this._val.length) === this.fieldSizeLimit) {
                this._checkingBytes = false;
                this._valTrunc = true;
              }
            } else {
              if (i < a) {
                this._val += this.decoder.write(e.toString("binary", i));
              }
              i = a;
            }
          }
        }
        t();
      };
      UrlEncoded.prototype.end = function () {
        if (this.boy._done) {
          return;
        }
        if (this._state === "key" && this._key.length > 0) {
          this.boy.emit("field", n(this._key, "binary", this.charset), "", this._keyTrunc, false);
        } else if (this._state === "val") {
          this.boy.emit("field", n(this._key, "binary", this.charset), n(this._val, "binary", this.charset), this._keyTrunc, this._valTrunc);
        }
        this.boy._done = true;
        this.boy.emit("finish");
      };
      e.exports = UrlEncoded;
    },
    11496: (e) => {
      "use strict";
      const t = /\+/g;
      const r = [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      ];
      function Decoder() {
        this.buffer = undefined;
      }
      Decoder.prototype.write = function (e) {
        e = e.replace(t, " ");
        let s = "";
        let n = 0;
        let o = 0;
        const i = e.length;
        for (; n < i; ++n) {
          if (this.buffer !== undefined) {
            if (!r[e.charCodeAt(n)]) {
              s += "%" + this.buffer;
              this.buffer = undefined;
              --n;
            } else {
              this.buffer += e[n];
              ++o;
              if (this.buffer.length === 2) {
                s += String.fromCharCode(parseInt(this.buffer, 16));
                this.buffer = undefined;
              }
            }
          } else if (e[n] === "%") {
            if (n > o) {
              s += e.substring(o, n);
              o = n;
            }
            this.buffer = "";
            ++o;
          }
        }
        if (o < i && this.buffer === undefined) {
          s += e.substring(o);
        }
        return s;
      };
      Decoder.prototype.reset = function () {
        this.buffer = undefined;
      };
      e.exports = Decoder;
    },
    20692: (e) => {
      "use strict";
      e.exports = function basename(e) {
        if (typeof e !== "string") {
          return "";
        }
        for (var t = e.length - 1; t >= 0; --t) {
          switch (e.charCodeAt(t)) {
            case 47:
            case 92:
              e = e.slice(t + 1);
              return e === ".." || e === "." ? "" : e;
          }
        }
        return e === ".." || e === "." ? "" : e;
      };
    },
    72747: function (e) {
      "use strict";
      const t = new TextDecoder("utf-8");
      const r = new Map([
        ["utf-8", t],
        ["utf8", t],
      ]);
      function getDecoder(e) {
        let t;
        while (true) {
          switch (e) {
            case "utf-8":
            case "utf8":
              return s.utf8;
            case "latin1":
            case "ascii":
            case "us-ascii":
            case "iso-8859-1":
            case "iso8859-1":
            case "iso88591":
            case "iso_8859-1":
            case "windows-1252":
            case "iso_8859-1:1987":
            case "cp1252":
            case "x-cp1252":
              return s.latin1;
            case "utf16le":
            case "utf-16le":
            case "ucs2":
            case "ucs-2":
              return s.utf16le;
            case "base64":
              return s.base64;
            default:
              if (t === undefined) {
                t = true;
                e = e.toLowerCase();
                continue;
              }
              return s.other.bind(e);
          }
        }
      }
      const s = {
        utf8: (e, t) => {
          if (e.length === 0) {
            return "";
          }
          if (typeof e === "string") {
            e = Buffer.from(e, t);
          }
          return e.utf8Slice(0, e.length);
        },
        latin1: (e, t) => {
          if (e.length === 0) {
            return "";
          }
          if (typeof e === "string") {
            return e;
          }
          return e.latin1Slice(0, e.length);
        },
        utf16le: (e, t) => {
          if (e.length === 0) {
            return "";
          }
          if (typeof e === "string") {
            e = Buffer.from(e, t);
          }
          return e.ucs2Slice(0, e.length);
        },
        base64: (e, t) => {
          if (e.length === 0) {
            return "";
          }
          if (typeof e === "string") {
            e = Buffer.from(e, t);
          }
          return e.base64Slice(0, e.length);
        },
        other: (e, t) => {
          if (e.length === 0) {
            return "";
          }
          if (typeof e === "string") {
            e = Buffer.from(e, t);
          }
          if (r.has(this.toString())) {
            try {
              return r.get(this).decode(e);
            } catch {}
          }
          return typeof e === "string" ? e : e.toString();
        },
      };
      function decodeText(e, t, r) {
        if (e) {
          return getDecoder(r)(e, t);
        }
        return e;
      }
      e.exports = decodeText;
    },
    22393: (e) => {
      "use strict";
      e.exports = function getLimit(e, t, r) {
        if (!e || e[t] === undefined || e[t] === null) {
          return r;
        }
        if (typeof e[t] !== "number" || isNaN(e[t])) {
          throw new TypeError("Limit " + t + " is not a valid number");
        }
        return e[t];
      };
    },
    8929: (e, t, r) => {
      "use strict";
      const s = r(72747);
      const n = /%[a-fA-F0-9][a-fA-F0-9]/g;
      const o = {
        "%00": "\0",
        "%01": "",
        "%02": "",
        "%03": "",
        "%04": "",
        "%05": "",
        "%06": "",
        "%07": "",
        "%08": "\b",
        "%09": "\t",
        "%0a": "\n",
        "%0A": "\n",
        "%0b": "\v",
        "%0B": "\v",
        "%0c": "\f",
        "%0C": "\f",
        "%0d": "\r",
        "%0D": "\r",
        "%0e": "",
        "%0E": "",
        "%0f": "",
        "%0F": "",
        "%10": "",
        "%11": "",
        "%12": "",
        "%13": "",
        "%14": "",
        "%15": "",
        "%16": "",
        "%17": "",
        "%18": "",
        "%19": "",
        "%1a": "",
        "%1A": "",
        "%1b": "",
        "%1B": "",
        "%1c": "",
        "%1C": "",
        "%1d": "",
        "%1D": "",
        "%1e": "",
        "%1E": "",
        "%1f": "",
        "%1F": "",
        "%20": " ",
        "%21": "!",
        "%22": '"',
        "%23": "#",
        "%24": "$",
        "%25": "%",
        "%26": "&",
        "%27": "'",
        "%28": "(",
        "%29": ")",
        "%2a": "*",
        "%2A": "*",
        "%2b": "+",
        "%2B": "+",
        "%2c": ",",
        "%2C": ",",
        "%2d": "-",
        "%2D": "-",
        "%2e": ".",
        "%2E": ".",
        "%2f": "/",
        "%2F": "/",
        "%30": "0",
        "%31": "1",
        "%32": "2",
        "%33": "3",
        "%34": "4",
        "%35": "5",
        "%36": "6",
        "%37": "7",
        "%38": "8",
        "%39": "9",
        "%3a": ":",
        "%3A": ":",
        "%3b": ";",
        "%3B": ";",
        "%3c": "<",
        "%3C": "<",
        "%3d": "=",
        "%3D": "=",
        "%3e": ">",
        "%3E": ">",
        "%3f": "?",
        "%3F": "?",
        "%40": "@",
        "%41": "A",
        "%42": "B",
        "%43": "C",
        "%44": "D",
        "%45": "E",
        "%46": "F",
        "%47": "G",
        "%48": "H",
        "%49": "I",
        "%4a": "J",
        "%4A": "J",
        "%4b": "K",
        "%4B": "K",
        "%4c": "L",
        "%4C": "L",
        "%4d": "M",
        "%4D": "M",
        "%4e": "N",
        "%4E": "N",
        "%4f": "O",
        "%4F": "O",
        "%50": "P",
        "%51": "Q",
        "%52": "R",
        "%53": "S",
        "%54": "T",
        "%55": "U",
        "%56": "V",
        "%57": "W",
        "%58": "X",
        "%59": "Y",
        "%5a": "Z",
        "%5A": "Z",
        "%5b": "[",
        "%5B": "[",
        "%5c": "\\",
        "%5C": "\\",
        "%5d": "]",
        "%5D": "]",
        "%5e": "^",
        "%5E": "^",
        "%5f": "_",
        "%5F": "_",
        "%60": "`",
        "%61": "a",
        "%62": "b",
        "%63": "c",
        "%64": "d",
        "%65": "e",
        "%66": "f",
        "%67": "g",
        "%68": "h",
        "%69": "i",
        "%6a": "j",
        "%6A": "j",
        "%6b": "k",
        "%6B": "k",
        "%6c": "l",
        "%6C": "l",
        "%6d": "m",
        "%6D": "m",
        "%6e": "n",
        "%6E": "n",
        "%6f": "o",
        "%6F": "o",
        "%70": "p",
        "%71": "q",
        "%72": "r",
        "%73": "s",
        "%74": "t",
        "%75": "u",
        "%76": "v",
        "%77": "w",
        "%78": "x",
        "%79": "y",
        "%7a": "z",
        "%7A": "z",
        "%7b": "{",
        "%7B": "{",
        "%7c": "|",
        "%7C": "|",
        "%7d": "}",
        "%7D": "}",
        "%7e": "~",
        "%7E": "~",
        "%7f": "",
        "%7F": "",
        "%80": "",
        "%81": "",
        "%82": "",
        "%83": "",
        "%84": "",
        "%85": "",
        "%86": "",
        "%87": "",
        "%88": "",
        "%89": "",
        "%8a": "",
        "%8A": "",
        "%8b": "",
        "%8B": "",
        "%8c": "",
        "%8C": "",
        "%8d": "",
        "%8D": "",
        "%8e": "",
        "%8E": "",
        "%8f": "",
        "%8F": "",
        "%90": "",
        "%91": "",
        "%92": "",
        "%93": "",
        "%94": "",
        "%95": "",
        "%96": "",
        "%97": "",
        "%98": "",
        "%99": "",
        "%9a": "",
        "%9A": "",
        "%9b": "",
        "%9B": "",
        "%9c": "",
        "%9C": "",
        "%9d": "",
        "%9D": "",
        "%9e": "",
        "%9E": "",
        "%9f": "",
        "%9F": "",
        "%a0": " ",
        "%A0": " ",
        "%a1": "¡",
        "%A1": "¡",
        "%a2": "¢",
        "%A2": "¢",
        "%a3": "£",
        "%A3": "£",
        "%a4": "¤",
        "%A4": "¤",
        "%a5": "¥",
        "%A5": "¥",
        "%a6": "¦",
        "%A6": "¦",
        "%a7": "§",
        "%A7": "§",
        "%a8": "¨",
        "%A8": "¨",
        "%a9": "©",
        "%A9": "©",
        "%aa": "ª",
        "%Aa": "ª",
        "%aA": "ª",
        "%AA": "ª",
        "%ab": "«",
        "%Ab": "«",
        "%aB": "«",
        "%AB": "«",
        "%ac": "¬",
        "%Ac": "¬",
        "%aC": "¬",
        "%AC": "¬",
        "%ad": "­",
        "%Ad": "­",
        "%aD": "­",
        "%AD": "­",
        "%ae": "®",
        "%Ae": "®",
        "%aE": "®",
        "%AE": "®",
        "%af": "¯",
        "%Af": "¯",
        "%aF": "¯",
        "%AF": "¯",
        "%b0": "°",
        "%B0": "°",
        "%b1": "±",
        "%B1": "±",
        "%b2": "²",
        "%B2": "²",
        "%b3": "³",
        "%B3": "³",
        "%b4": "´",
        "%B4": "´",
        "%b5": "µ",
        "%B5": "µ",
        "%b6": "¶",
        "%B6": "¶",
        "%b7": "·",
        "%B7": "·",
        "%b8": "¸",
        "%B8": "¸",
        "%b9": "¹",
        "%B9": "¹",
        "%ba": "º",
        "%Ba": "º",
        "%bA": "º",
        "%BA": "º",
        "%bb": "»",
        "%Bb": "»",
        "%bB": "»",
        "%BB": "»",
        "%bc": "¼",
        "%Bc": "¼",
        "%bC": "¼",
        "%BC": "¼",
        "%bd": "½",
        "%Bd": "½",
        "%bD": "½",
        "%BD": "½",
        "%be": "¾",
        "%Be": "¾",
        "%bE": "¾",
        "%BE": "¾",
        "%bf": "¿",
        "%Bf": "¿",
        "%bF": "¿",
        "%BF": "¿",
        "%c0": "À",
        "%C0": "À",
        "%c1": "Á",
        "%C1": "Á",
        "%c2": "Â",
        "%C2": "Â",
        "%c3": "Ã",
        "%C3": "Ã",
        "%c4": "Ä",
        "%C4": "Ä",
        "%c5": "Å",
        "%C5": "Å",
        "%c6": "Æ",
        "%C6": "Æ",
        "%c7": "Ç",
        "%C7": "Ç",
        "%c8": "È",
        "%C8": "È",
        "%c9": "É",
        "%C9": "É",
        "%ca": "Ê",
        "%Ca": "Ê",
        "%cA": "Ê",
        "%CA": "Ê",
        "%cb": "Ë",
        "%Cb": "Ë",
        "%cB": "Ë",
        "%CB": "Ë",
        "%cc": "Ì",
        "%Cc": "Ì",
        "%cC": "Ì",
        "%CC": "Ì",
        "%cd": "Í",
        "%Cd": "Í",
        "%cD": "Í",
        "%CD": "Í",
        "%ce": "Î",
        "%Ce": "Î",
        "%cE": "Î",
        "%CE": "Î",
        "%cf": "Ï",
        "%Cf": "Ï",
        "%cF": "Ï",
        "%CF": "Ï",
        "%d0": "Ð",
        "%D0": "Ð",
        "%d1": "Ñ",
        "%D1": "Ñ",
        "%d2": "Ò",
        "%D2": "Ò",
        "%d3": "Ó",
        "%D3": "Ó",
        "%d4": "Ô",
        "%D4": "Ô",
        "%d5": "Õ",
        "%D5": "Õ",
        "%d6": "Ö",
        "%D6": "Ö",
        "%d7": "×",
        "%D7": "×",
        "%d8": "Ø",
        "%D8": "Ø",
        "%d9": "Ù",
        "%D9": "Ù",
        "%da": "Ú",
        "%Da": "Ú",
        "%dA": "Ú",
        "%DA": "Ú",
        "%db": "Û",
        "%Db": "Û",
        "%dB": "Û",
        "%DB": "Û",
        "%dc": "Ü",
        "%Dc": "Ü",
        "%dC": "Ü",
        "%DC": "Ü",
        "%dd": "Ý",
        "%Dd": "Ý",
        "%dD": "Ý",
        "%DD": "Ý",
        "%de": "Þ",
        "%De": "Þ",
        "%dE": "Þ",
        "%DE": "Þ",
        "%df": "ß",
        "%Df": "ß",
        "%dF": "ß",
        "%DF": "ß",
        "%e0": "à",
        "%E0": "à",
        "%e1": "á",
        "%E1": "á",
        "%e2": "â",
        "%E2": "â",
        "%e3": "ã",
        "%E3": "ã",
        "%e4": "ä",
        "%E4": "ä",
        "%e5": "å",
        "%E5": "å",
        "%e6": "æ",
        "%E6": "æ",
        "%e7": "ç",
        "%E7": "ç",
        "%e8": "è",
        "%E8": "è",
        "%e9": "é",
        "%E9": "é",
        "%ea": "ê",
        "%Ea": "ê",
        "%eA": "ê",
        "%EA": "ê",
        "%eb": "ë",
        "%Eb": "ë",
        "%eB": "ë",
        "%EB": "ë",
        "%ec": "ì",
        "%Ec": "ì",
        "%eC": "ì",
        "%EC": "ì",
        "%ed": "í",
        "%Ed": "í",
        "%eD": "í",
        "%ED": "í",
        "%ee": "î",
        "%Ee": "î",
        "%eE": "î",
        "%EE": "î",
        "%ef": "ï",
        "%Ef": "ï",
        "%eF": "ï",
        "%EF": "ï",
        "%f0": "ð",
        "%F0": "ð",
        "%f1": "ñ",
        "%F1": "ñ",
        "%f2": "ò",
        "%F2": "ò",
        "%f3": "ó",
        "%F3": "ó",
        "%f4": "ô",
        "%F4": "ô",
        "%f5": "õ",
        "%F5": "õ",
        "%f6": "ö",
        "%F6": "ö",
        "%f7": "÷",
        "%F7": "÷",
        "%f8": "ø",
        "%F8": "ø",
        "%f9": "ù",
        "%F9": "ù",
        "%fa": "ú",
        "%Fa": "ú",
        "%fA": "ú",
        "%FA": "ú",
        "%fb": "û",
        "%Fb": "û",
        "%fB": "û",
        "%FB": "û",
        "%fc": "ü",
        "%Fc": "ü",
        "%fC": "ü",
        "%FC": "ü",
        "%fd": "ý",
        "%Fd": "ý",
        "%fD": "ý",
        "%FD": "ý",
        "%fe": "þ",
        "%Fe": "þ",
        "%fE": "þ",
        "%FE": "þ",
        "%ff": "ÿ",
        "%Ff": "ÿ",
        "%fF": "ÿ",
        "%FF": "ÿ",
      };
      function encodedReplacer(e) {
        return o[e];
      }
      const i = 0;
      const a = 1;
      const A = 2;
      const l = 3;
      function parseParams(e) {
        const t = [];
        let r = i;
        let o = "";
        let c = false;
        let d = false;
        let p = 0;
        let u = "";
        const g = e.length;
        for (var m = 0; m < g; ++m) {
          const g = e[m];
          if (g === "\\" && c) {
            if (d) {
              d = false;
            } else {
              d = true;
              continue;
            }
          } else if (g === '"') {
            if (!d) {
              if (c) {
                c = false;
                r = i;
              } else {
                c = true;
              }
              continue;
            } else {
              d = false;
            }
          } else {
            if (d && c) {
              u += "\\";
            }
            d = false;
            if ((r === A || r === l) && g === "'") {
              if (r === A) {
                r = l;
                o = u.substring(1);
              } else {
                r = a;
              }
              u = "";
              continue;
            } else if (r === i && (g === "*" || g === "=") && t.length) {
              r = g === "*" ? A : a;
              t[p] = [u, undefined];
              u = "";
              continue;
            } else if (!c && g === ";") {
              r = i;
              if (o) {
                if (u.length) {
                  u = s(u.replace(n, encodedReplacer), "binary", o);
                }
                o = "";
              } else if (u.length) {
                u = s(u, "binary", "utf8");
              }
              if (t[p] === undefined) {
                t[p] = u;
              } else {
                t[p][1] = u;
              }
              u = "";
              ++p;
              continue;
            } else if (!c && (g === " " || g === "\t")) {
              continue;
            }
          }
          u += g;
        }
        if (o && u.length) {
          u = s(u.replace(n, encodedReplacer), "binary", o);
        } else if (u) {
          u = s(u, "binary", "utf8");
        }
        if (t[p] === undefined) {
          if (u) {
            t[p] = u;
          }
        } else {
          t[p][1] = u;
        }
        return t;
      }
      e.exports = parseParams;
    },
    18909: (e, t, r) => {
      const { Argument: s } = r(49154);
      const { Command: n } = r(34348);
      const { CommanderError: o, InvalidArgumentError: i } = r(41135);
      const { Help: a } = r(79754);
      const { Option: A } = r(45240);
      t.program = new n();
      t.createCommand = (e) => new n(e);
      t.createOption = (e, t) => new A(e, t);
      t.createArgument = (e, t) => new s(e, t);
      t.Command = n;
      t.Option = A;
      t.Argument = s;
      t.Help = a;
      t.CommanderError = o;
      t.InvalidArgumentError = i;
      t.InvalidOptionArgumentError = i;
    },
    49154: (e, t, r) => {
      const { InvalidArgumentError: s } = r(41135);
      class Argument {
        constructor(e, t) {
          this.description = t || "";
          this.variadic = false;
          this.parseArg = undefined;
          this.defaultValue = undefined;
          this.defaultValueDescription = undefined;
          this.argChoices = undefined;
          switch (e[0]) {
            case "<":
              this.required = true;
              this._name = e.slice(1, -1);
              break;
            case "[":
              this.required = false;
              this._name = e.slice(1, -1);
              break;
            default:
              this.required = true;
              this._name = e;
              break;
          }
          if (this._name.length > 3 && this._name.slice(-3) === "...") {
            this.variadic = true;
            this._name = this._name.slice(0, -3);
          }
        }
        name() {
          return this._name;
        }
        _concatValue(e, t) {
          if (t === this.defaultValue || !Array.isArray(t)) {
            return [e];
          }
          return t.concat(e);
        }
        default(e, t) {
          this.defaultValue = e;
          this.defaultValueDescription = t;
          return this;
        }
        argParser(e) {
          this.parseArg = e;
          return this;
        }
        choices(e) {
          this.argChoices = e.slice();
          this.parseArg = (e, t) => {
            if (!this.argChoices.includes(e)) {
              throw new s(`Allowed choices are ${this.argChoices.join(", ")}.`);
            }
            if (this.variadic) {
              return this._concatValue(e, t);
            }
            return e;
          };
          return this;
        }
        argRequired() {
          this.required = true;
          return this;
        }
        argOptional() {
          this.required = false;
          return this;
        }
      }
      function humanReadableArgName(e) {
        const t = e.name() + (e.variadic === true ? "..." : "");
        return e.required ? "<" + t + ">" : "[" + t + "]";
      }
      t.Argument = Argument;
      t.humanReadableArgName = humanReadableArgName;
    },
    34348: (e, t, r) => {
      const s = r(24434).EventEmitter;
      const n = r(35317);
      const o = r(16928);
      const i = r(79896);
      const a = r(932);
      const { Argument: A, humanReadableArgName: l } = r(49154);
      const { CommanderError: c } = r(41135);
      const { Help: d } = r(79754);
      const { Option: p, DualOptions: u } = r(45240);
      const { suggestSimilar: g } = r(65030);
      class Command extends s {
        constructor(e) {
          super();
          this.commands = [];
          this.options = [];
          this.parent = null;
          this._allowUnknownOption = false;
          this._allowExcessArguments = true;
          this.registeredArguments = [];
          this._args = this.registeredArguments;
          this.args = [];
          this.rawArgs = [];
          this.processedArgs = [];
          this._scriptPath = null;
          this._name = e || "";
          this._optionValues = {};
          this._optionValueSources = {};
          this._storeOptionsAsProperties = false;
          this._actionHandler = null;
          this._executableHandler = false;
          this._executableFile = null;
          this._executableDir = null;
          this._defaultCommandName = null;
          this._exitCallback = null;
          this._aliases = [];
          this._combineFlagAndOptionalValue = true;
          this._description = "";
          this._summary = "";
          this._argsDescription = undefined;
          this._enablePositionalOptions = false;
          this._passThroughOptions = false;
          this._lifeCycleHooks = {};
          this._showHelpAfterError = false;
          this._showSuggestionAfterError = true;
          this._outputConfiguration = {
            writeOut: (e) => a.stdout.write(e),
            writeErr: (e) => a.stderr.write(e),
            getOutHelpWidth: () => (a.stdout.isTTY ? a.stdout.columns : undefined),
            getErrHelpWidth: () => (a.stderr.isTTY ? a.stderr.columns : undefined),
            outputError: (e, t) => t(e),
          };
          this._hidden = false;
          this._helpOption = undefined;
          this._addImplicitHelpCommand = undefined;
          this._helpCommand = undefined;
          this._helpConfiguration = {};
        }
        copyInheritedSettings(e) {
          this._outputConfiguration = e._outputConfiguration;
          this._helpOption = e._helpOption;
          this._helpCommand = e._helpCommand;
          this._helpConfiguration = e._helpConfiguration;
          this._exitCallback = e._exitCallback;
          this._storeOptionsAsProperties = e._storeOptionsAsProperties;
          this._combineFlagAndOptionalValue = e._combineFlagAndOptionalValue;
          this._allowExcessArguments = e._allowExcessArguments;
          this._enablePositionalOptions = e._enablePositionalOptions;
          this._showHelpAfterError = e._showHelpAfterError;
          this._showSuggestionAfterError = e._showSuggestionAfterError;
          return this;
        }
        _getCommandAndAncestors() {
          const e = [];
          for (let t = this; t; t = t.parent) {
            e.push(t);
          }
          return e;
        }
        command(e, t, r) {
          let s = t;
          let n = r;
          if (typeof s === "object" && s !== null) {
            n = s;
            s = null;
          }
          n = n || {};
          const [, o, i] = e.match(/([^ ]+) *(.*)/);
          const a = this.createCommand(o);
          if (s) {
            a.description(s);
            a._executableHandler = true;
          }
          if (n.isDefault) this._defaultCommandName = a._name;
          a._hidden = !!(n.noHelp || n.hidden);
          a._executableFile = n.executableFile || null;
          if (i) a.arguments(i);
          this._registerCommand(a);
          a.parent = this;
          a.copyInheritedSettings(this);
          if (s) return this;
          return a;
        }
        createCommand(e) {
          return new Command(e);
        }
        createHelp() {
          return Object.assign(new d(), this.configureHelp());
        }
        configureHelp(e) {
          if (e === undefined) return this._helpConfiguration;
          this._helpConfiguration = e;
          return this;
        }
        configureOutput(e) {
          if (e === undefined) return this._outputConfiguration;
          Object.assign(this._outputConfiguration, e);
          return this;
        }
        showHelpAfterError(e = true) {
          if (typeof e !== "string") e = !!e;
          this._showHelpAfterError = e;
          return this;
        }
        showSuggestionAfterError(e = true) {
          this._showSuggestionAfterError = !!e;
          return this;
        }
        addCommand(e, t) {
          if (!e._name) {
            throw new Error(`Command passed to .addCommand() must have a name\n- specify the name in Command constructor or using .name()`);
          }
          t = t || {};
          if (t.isDefault) this._defaultCommandName = e._name;
          if (t.noHelp || t.hidden) e._hidden = true;
          this._registerCommand(e);
          e.parent = this;
          e._checkForBrokenPassThrough();
          return this;
        }
        createArgument(e, t) {
          return new A(e, t);
        }
        argument(e, t, r, s) {
          const n = this.createArgument(e, t);
          if (typeof r === "function") {
            n.default(s).argParser(r);
          } else {
            n.default(r);
          }
          this.addArgument(n);
          return this;
        }
        arguments(e) {
          e.trim()
            .split(/ +/)
            .forEach((e) => {
              this.argument(e);
            });
          return this;
        }
        addArgument(e) {
          const t = this.registeredArguments.slice(-1)[0];
          if (t && t.variadic) {
            throw new Error(`only the last argument can be variadic '${t.name()}'`);
          }
          if (e.required && e.defaultValue !== undefined && e.parseArg === undefined) {
            throw new Error(`a default value for a required argument is never used: '${e.name()}'`);
          }
          this.registeredArguments.push(e);
          return this;
        }
        helpCommand(e, t) {
          if (typeof e === "boolean") {
            this._addImplicitHelpCommand = e;
            return this;
          }
          e = e ?? "help [command]";
          const [, r, s] = e.match(/([^ ]+) *(.*)/);
          const n = t ?? "display help for command";
          const o = this.createCommand(r);
          o.helpOption(false);
          if (s) o.arguments(s);
          if (n) o.description(n);
          this._addImplicitHelpCommand = true;
          this._helpCommand = o;
          return this;
        }
        addHelpCommand(e, t) {
          if (typeof e !== "object") {
            this.helpCommand(e, t);
            return this;
          }
          this._addImplicitHelpCommand = true;
          this._helpCommand = e;
          return this;
        }
        _getHelpCommand() {
          const e = this._addImplicitHelpCommand ?? (this.commands.length && !this._actionHandler && !this._findCommand("help"));
          if (e) {
            if (this._helpCommand === undefined) {
              this.helpCommand(undefined, undefined);
            }
            return this._helpCommand;
          }
          return null;
        }
        hook(e, t) {
          const r = ["preSubcommand", "preAction", "postAction"];
          if (!r.includes(e)) {
            throw new Error(`Unexpected value for event passed to hook : '${e}'.\nExpecting one of '${r.join("', '")}'`);
          }
          if (this._lifeCycleHooks[e]) {
            this._lifeCycleHooks[e].push(t);
          } else {
            this._lifeCycleHooks[e] = [t];
          }
          return this;
        }
        exitOverride(e) {
          if (e) {
            this._exitCallback = e;
          } else {
            this._exitCallback = (e) => {
              if (e.code !== "commander.executeSubCommandAsync") {
                throw e;
              } else {
              }
            };
          }
          return this;
        }
        _exit(e, t, r) {
          if (this._exitCallback) {
            this._exitCallback(new c(e, t, r));
          }
          a.exit(e);
        }
        action(e) {
          const listener = (t) => {
            const r = this.registeredArguments.length;
            const s = t.slice(0, r);
            if (this._storeOptionsAsProperties) {
              s[r] = this;
            } else {
              s[r] = this.opts();
            }
            s.push(this);
            return e.apply(this, s);
          };
          this._actionHandler = listener;
          return this;
        }
        createOption(e, t) {
          return new p(e, t);
        }
        _callParseArg(e, t, r, s) {
          try {
            return e.parseArg(t, r);
          } catch (e) {
            if (e.code === "commander.invalidArgument") {
              const t = `${s} ${e.message}`;
              this.error(t, { exitCode: e.exitCode, code: e.code });
            }
            throw e;
          }
        }
        _registerOption(e) {
          const t = (e.short && this._findOption(e.short)) || (e.long && this._findOption(e.long));
          if (t) {
            const r = e.long && this._findOption(e.long) ? e.long : e.short;
            throw new Error(
              `Cannot add option '${e.flags}'${this._name && ` to command '${this._name}'`} due to conflicting flag '${r}'\n-  already used by option '${t.flags}'`
            );
          }
          this.options.push(e);
        }
        _registerCommand(e) {
          const knownBy = (e) => [e.name()].concat(e.aliases());
          const t = knownBy(e).find((e) => this._findCommand(e));
          if (t) {
            const r = knownBy(this._findCommand(t)).join("|");
            const s = knownBy(e).join("|");
            throw new Error(`cannot add command '${s}' as already have command '${r}'`);
          }
          this.commands.push(e);
        }
        addOption(e) {
          this._registerOption(e);
          const t = e.name();
          const r = e.attributeName();
          if (e.negate) {
            const t = e.long.replace(/^--no-/, "--");
            if (!this._findOption(t)) {
              this.setOptionValueWithSource(r, e.defaultValue === undefined ? true : e.defaultValue, "default");
            }
          } else if (e.defaultValue !== undefined) {
            this.setOptionValueWithSource(r, e.defaultValue, "default");
          }
          const handleOptionValue = (t, s, n) => {
            if (t == null && e.presetArg !== undefined) {
              t = e.presetArg;
            }
            const o = this.getOptionValue(r);
            if (t !== null && e.parseArg) {
              t = this._callParseArg(e, t, o, s);
            } else if (t !== null && e.variadic) {
              t = e._concatValue(t, o);
            }
            if (t == null) {
              if (e.negate) {
                t = false;
              } else if (e.isBoolean() || e.optional) {
                t = true;
              } else {
                t = "";
              }
            }
            this.setOptionValueWithSource(r, t, n);
          };
          this.on("option:" + t, (t) => {
            const r = `error: option '${e.flags}' argument '${t}' is invalid.`;
            handleOptionValue(t, r, "cli");
          });
          if (e.envVar) {
            this.on("optionEnv:" + t, (t) => {
              const r = `error: option '${e.flags}' value '${t}' from env '${e.envVar}' is invalid.`;
              handleOptionValue(t, r, "env");
            });
          }
          return this;
        }
        _optionEx(e, t, r, s, n) {
          if (typeof t === "object" && t instanceof p) {
            throw new Error("To add an Option object use addOption() instead of option() or requiredOption()");
          }
          const o = this.createOption(t, r);
          o.makeOptionMandatory(!!e.mandatory);
          if (typeof s === "function") {
            o.default(n).argParser(s);
          } else if (s instanceof RegExp) {
            const e = s;
            s = (t, r) => {
              const s = e.exec(t);
              return s ? s[0] : r;
            };
            o.default(n).argParser(s);
          } else {
            o.default(s);
          }
          return this.addOption(o);
        }
        option(e, t, r, s) {
          return this._optionEx({}, e, t, r, s);
        }
        requiredOption(e, t, r, s) {
          return this._optionEx({ mandatory: true }, e, t, r, s);
        }
        combineFlagAndOptionalValue(e = true) {
          this._combineFlagAndOptionalValue = !!e;
          return this;
        }
        allowUnknownOption(e = true) {
          this._allowUnknownOption = !!e;
          return this;
        }
        allowExcessArguments(e = true) {
          this._allowExcessArguments = !!e;
          return this;
        }
        enablePositionalOptions(e = true) {
          this._enablePositionalOptions = !!e;
          return this;
        }
        passThroughOptions(e = true) {
          this._passThroughOptions = !!e;
          this._checkForBrokenPassThrough();
          return this;
        }
        _checkForBrokenPassThrough() {
          if (this.parent && this._passThroughOptions && !this.parent._enablePositionalOptions) {
            throw new Error(`passThroughOptions cannot be used for '${this._name}' without turning on enablePositionalOptions for parent command(s)`);
          }
        }
        storeOptionsAsProperties(e = true) {
          if (this.options.length) {
            throw new Error("call .storeOptionsAsProperties() before adding options");
          }
          if (Object.keys(this._optionValues).length) {
            throw new Error("call .storeOptionsAsProperties() before setting option values");
          }
          this._storeOptionsAsProperties = !!e;
          return this;
        }
        getOptionValue(e) {
          if (this._storeOptionsAsProperties) {
            return this[e];
          }
          return this._optionValues[e];
        }
        setOptionValue(e, t) {
          return this.setOptionValueWithSource(e, t, undefined);
        }
        setOptionValueWithSource(e, t, r) {
          if (this._storeOptionsAsProperties) {
            this[e] = t;
          } else {
            this._optionValues[e] = t;
          }
          this._optionValueSources[e] = r;
          return this;
        }
        getOptionValueSource(e) {
          return this._optionValueSources[e];
        }
        getOptionValueSourceWithGlobals(e) {
          let t;
          this._getCommandAndAncestors().forEach((r) => {
            if (r.getOptionValueSource(e) !== undefined) {
              t = r.getOptionValueSource(e);
            }
          });
          return t;
        }
        _prepareUserArgs(e, t) {
          if (e !== undefined && !Array.isArray(e)) {
            throw new Error("first parameter to parse must be array or undefined");
          }
          t = t || {};
          if (e === undefined) {
            e = a.argv;
            if (a.versions && a.versions.electron) {
              t.from = "electron";
            }
          }
          this.rawArgs = e.slice();
          let r;
          switch (t.from) {
            case undefined:
            case "node":
              this._scriptPath = e[1];
              r = e.slice(2);
              break;
            case "electron":
              if (a.defaultApp) {
                this._scriptPath = e[1];
                r = e.slice(2);
              } else {
                r = e.slice(1);
              }
              break;
            case "user":
              r = e.slice(0);
              break;
            default:
              throw new Error(`unexpected parse option { from: '${t.from}' }`);
          }
          if (!this._name && this._scriptPath) this.nameFromFilename(this._scriptPath);
          this._name = this._name || "program";
          return r;
        }
        parse(e, t) {
          const r = this._prepareUserArgs(e, t);
          this._parseCommand([], r);
          return this;
        }
        async parseAsync(e, t) {
          const r = this._prepareUserArgs(e, t);
          await this._parseCommand([], r);
          return this;
        }
        _executeSubCommand(e, t) {
          t = t.slice();
          let r = false;
          const s = [".js", ".ts", ".tsx", ".mjs", ".cjs"];
          function findFile(e, t) {
            const r = o.resolve(e, t);
            if (i.existsSync(r)) return r;
            if (s.includes(o.extname(t))) return undefined;
            const n = s.find((e) => i.existsSync(`${r}${e}`));
            if (n) return `${r}${n}`;
            return undefined;
          }
          this._checkForMissingMandatoryOptions();
          this._checkForConflictingOptions();
          let A = e._executableFile || `${this._name}-${e._name}`;
          let l = this._executableDir || "";
          if (this._scriptPath) {
            let e;
            try {
              e = i.realpathSync(this._scriptPath);
            } catch (t) {
              e = this._scriptPath;
            }
            l = o.resolve(o.dirname(e), l);
          }
          if (l) {
            let t = findFile(l, A);
            if (!t && !e._executableFile && this._scriptPath) {
              const r = o.basename(this._scriptPath, o.extname(this._scriptPath));
              if (r !== this._name) {
                t = findFile(l, `${r}-${e._name}`);
              }
            }
            A = t || A;
          }
          r = s.includes(o.extname(A));
          let d;
          if (a.platform !== "win32") {
            if (r) {
              t.unshift(A);
              t = incrementNodeInspectorPort(a.execArgv).concat(t);
              d = n.spawn(a.argv[0], t, { stdio: "inherit" });
            } else {
              d = n.spawn(A, t, { stdio: "inherit" });
            }
          } else {
            t.unshift(A);
            t = incrementNodeInspectorPort(a.execArgv).concat(t);
            d = n.spawn(a.execPath, t, { stdio: "inherit" });
          }
          if (!d.killed) {
            const e = ["SIGUSR1", "SIGUSR2", "SIGTERM", "SIGINT", "SIGHUP"];
            e.forEach((e) => {
              a.on(e, () => {
                if (d.killed === false && d.exitCode === null) {
                  d.kill(e);
                }
              });
            });
          }
          const p = this._exitCallback;
          d.on("close", (e, t) => {
            e = e ?? 1;
            if (!p) {
              a.exit(e);
            } else {
              p(new c(e, "commander.executeSubCommandAsync", "(close)"));
            }
          });
          d.on("error", (t) => {
            if (t.code === "ENOENT") {
              const t = l
                ? `searched for local subcommand relative to directory '${l}'`
                : "no directory for search for local subcommand, use .executableDir() to supply a custom directory";
              const r = `'${A}' does not exist\n - if '${e._name}' is not meant to be an executable command, remove description parameter from '.command()' and use '.description()' instead\n - if the default executable name is not suitable, use the executableFile option to supply a custom name or path\n - ${t}`;
              throw new Error(r);
            } else if (t.code === "EACCES") {
              throw new Error(`'${A}' not executable`);
            }
            if (!p) {
              a.exit(1);
            } else {
              const e = new c(1, "commander.executeSubCommandAsync", "(error)");
              e.nestedError = t;
              p(e);
            }
          });
          this.runningCommand = d;
        }
        _dispatchSubcommand(e, t, r) {
          const s = this._findCommand(e);
          if (!s) this.help({ error: true });
          let n;
          n = this._chainOrCallSubCommandHook(n, s, "preSubcommand");
          n = this._chainOrCall(n, () => {
            if (s._executableHandler) {
              this._executeSubCommand(s, t.concat(r));
            } else {
              return s._parseCommand(t, r);
            }
          });
          return n;
        }
        _dispatchHelpCommand(e) {
          if (!e) {
            this.help();
          }
          const t = this._findCommand(e);
          if (t && !t._executableHandler) {
            t.help();
          }
          return this._dispatchSubcommand(e, [], [this._getHelpOption()?.long ?? this._getHelpOption()?.short ?? "--help"]);
        }
        _checkNumberOfArguments() {
          this.registeredArguments.forEach((e, t) => {
            if (e.required && this.args[t] == null) {
              this.missingArgument(e.name());
            }
          });
          if (this.registeredArguments.length > 0 && this.registeredArguments[this.registeredArguments.length - 1].variadic) {
            return;
          }
          if (this.args.length > this.registeredArguments.length) {
            this._excessArguments(this.args);
          }
        }
        _processArguments() {
          const myParseArg = (e, t, r) => {
            let s = t;
            if (t !== null && e.parseArg) {
              const n = `error: command-argument value '${t}' is invalid for argument '${e.name()}'.`;
              s = this._callParseArg(e, t, r, n);
            }
            return s;
          };
          this._checkNumberOfArguments();
          const e = [];
          this.registeredArguments.forEach((t, r) => {
            let s = t.defaultValue;
            if (t.variadic) {
              if (r < this.args.length) {
                s = this.args.slice(r);
                if (t.parseArg) {
                  s = s.reduce((e, r) => myParseArg(t, r, e), t.defaultValue);
                }
              } else if (s === undefined) {
                s = [];
              }
            } else if (r < this.args.length) {
              s = this.args[r];
              if (t.parseArg) {
                s = myParseArg(t, s, t.defaultValue);
              }
            }
            e[r] = s;
          });
          this.processedArgs = e;
        }
        _chainOrCall(e, t) {
          if (e && e.then && typeof e.then === "function") {
            return e.then(() => t());
          }
          return t();
        }
        _chainOrCallHooks(e, t) {
          let r = e;
          const s = [];
          this._getCommandAndAncestors()
            .reverse()
            .filter((e) => e._lifeCycleHooks[t] !== undefined)
            .forEach((e) => {
              e._lifeCycleHooks[t].forEach((t) => {
                s.push({ hookedCommand: e, callback: t });
              });
            });
          if (t === "postAction") {
            s.reverse();
          }
          s.forEach((e) => {
            r = this._chainOrCall(r, () => e.callback(e.hookedCommand, this));
          });
          return r;
        }
        _chainOrCallSubCommandHook(e, t, r) {
          let s = e;
          if (this._lifeCycleHooks[r] !== undefined) {
            this._lifeCycleHooks[r].forEach((e) => {
              s = this._chainOrCall(s, () => e(this, t));
            });
          }
          return s;
        }
        _parseCommand(e, t) {
          const r = this.parseOptions(t);
          this._parseOptionsEnv();
          this._parseOptionsImplied();
          e = e.concat(r.operands);
          t = r.unknown;
          this.args = e.concat(t);
          if (e && this._findCommand(e[0])) {
            return this._dispatchSubcommand(e[0], e.slice(1), t);
          }
          if (this._getHelpCommand() && e[0] === this._getHelpCommand().name()) {
            return this._dispatchHelpCommand(e[1]);
          }
          if (this._defaultCommandName) {
            this._outputHelpIfRequested(t);
            return this._dispatchSubcommand(this._defaultCommandName, e, t);
          }
          if (this.commands.length && this.args.length === 0 && !this._actionHandler && !this._defaultCommandName) {
            this.help({ error: true });
          }
          this._outputHelpIfRequested(r.unknown);
          this._checkForMissingMandatoryOptions();
          this._checkForConflictingOptions();
          const checkForUnknownOptions = () => {
            if (r.unknown.length > 0) {
              this.unknownOption(r.unknown[0]);
            }
          };
          const s = `command:${this.name()}`;
          if (this._actionHandler) {
            checkForUnknownOptions();
            this._processArguments();
            let r;
            r = this._chainOrCallHooks(r, "preAction");
            r = this._chainOrCall(r, () => this._actionHandler(this.processedArgs));
            if (this.parent) {
              r = this._chainOrCall(r, () => {
                this.parent.emit(s, e, t);
              });
            }
            r = this._chainOrCallHooks(r, "postAction");
            return r;
          }
          if (this.parent && this.parent.listenerCount(s)) {
            checkForUnknownOptions();
            this._processArguments();
            this.parent.emit(s, e, t);
          } else if (e.length) {
            if (this._findCommand("*")) {
              return this._dispatchSubcommand("*", e, t);
            }
            if (this.listenerCount("command:*")) {
              this.emit("command:*", e, t);
            } else if (this.commands.length) {
              this.unknownCommand();
            } else {
              checkForUnknownOptions();
              this._processArguments();
            }
          } else if (this.commands.length) {
            checkForUnknownOptions();
            this.help({ error: true });
          } else {
            checkForUnknownOptions();
            this._processArguments();
          }
        }
        _findCommand(e) {
          if (!e) return undefined;
          return this.commands.find((t) => t._name === e || t._aliases.includes(e));
        }
        _findOption(e) {
          return this.options.find((t) => t.is(e));
        }
        _checkForMissingMandatoryOptions() {
          this._getCommandAndAncestors().forEach((e) => {
            e.options.forEach((t) => {
              if (t.mandatory && e.getOptionValue(t.attributeName()) === undefined) {
                e.missingMandatoryOptionValue(t);
              }
            });
          });
        }
        _checkForConflictingLocalOptions() {
          const e = this.options.filter((e) => {
            const t = e.attributeName();
            if (this.getOptionValue(t) === undefined) {
              return false;
            }
            return this.getOptionValueSource(t) !== "default";
          });
          const t = e.filter((e) => e.conflictsWith.length > 0);
          t.forEach((t) => {
            const r = e.find((e) => t.conflictsWith.includes(e.attributeName()));
            if (r) {
              this._conflictingOption(t, r);
            }
          });
        }
        _checkForConflictingOptions() {
          this._getCommandAndAncestors().forEach((e) => {
            e._checkForConflictingLocalOptions();
          });
        }
        parseOptions(e) {
          const t = [];
          const r = [];
          let s = t;
          const n = e.slice();
          function maybeOption(e) {
            return e.length > 1 && e[0] === "-";
          }
          let o = null;
          while (n.length) {
            const e = n.shift();
            if (e === "--") {
              if (s === r) s.push(e);
              s.push(...n);
              break;
            }
            if (o && !maybeOption(e)) {
              this.emit(`option:${o.name()}`, e);
              continue;
            }
            o = null;
            if (maybeOption(e)) {
              const t = this._findOption(e);
              if (t) {
                if (t.required) {
                  const e = n.shift();
                  if (e === undefined) this.optionMissingArgument(t);
                  this.emit(`option:${t.name()}`, e);
                } else if (t.optional) {
                  let e = null;
                  if (n.length > 0 && !maybeOption(n[0])) {
                    e = n.shift();
                  }
                  this.emit(`option:${t.name()}`, e);
                } else {
                  this.emit(`option:${t.name()}`);
                }
                o = t.variadic ? t : null;
                continue;
              }
            }
            if (e.length > 2 && e[0] === "-" && e[1] !== "-") {
              const t = this._findOption(`-${e[1]}`);
              if (t) {
                if (t.required || (t.optional && this._combineFlagAndOptionalValue)) {
                  this.emit(`option:${t.name()}`, e.slice(2));
                } else {
                  this.emit(`option:${t.name()}`);
                  n.unshift(`-${e.slice(2)}`);
                }
                continue;
              }
            }
            if (/^--[^=]+=/.test(e)) {
              const t = e.indexOf("=");
              const r = this._findOption(e.slice(0, t));
              if (r && (r.required || r.optional)) {
                this.emit(`option:${r.name()}`, e.slice(t + 1));
                continue;
              }
            }
            if (maybeOption(e)) {
              s = r;
            }
            if ((this._enablePositionalOptions || this._passThroughOptions) && t.length === 0 && r.length === 0) {
              if (this._findCommand(e)) {
                t.push(e);
                if (n.length > 0) r.push(...n);
                break;
              } else if (this._getHelpCommand() && e === this._getHelpCommand().name()) {
                t.push(e);
                if (n.length > 0) t.push(...n);
                break;
              } else if (this._defaultCommandName) {
                r.push(e);
                if (n.length > 0) r.push(...n);
                break;
              }
            }
            if (this._passThroughOptions) {
              s.push(e);
              if (n.length > 0) s.push(...n);
              break;
            }
            s.push(e);
          }
          return { operands: t, unknown: r };
        }
        opts() {
          if (this._storeOptionsAsProperties) {
            const e = {};
            const t = this.options.length;
            for (let r = 0; r < t; r++) {
              const t = this.options[r].attributeName();
              e[t] = t === this._versionOptionName ? this._version : this[t];
            }
            return e;
          }
          return this._optionValues;
        }
        optsWithGlobals() {
          return this._getCommandAndAncestors().reduce((e, t) => Object.assign(e, t.opts()), {});
        }
        error(e, t) {
          this._outputConfiguration.outputError(`${e}\n`, this._outputConfiguration.writeErr);
          if (typeof this._showHelpAfterError === "string") {
            this._outputConfiguration.writeErr(`${this._showHelpAfterError}\n`);
          } else if (this._showHelpAfterError) {
            this._outputConfiguration.writeErr("\n");
            this.outputHelp({ error: true });
          }
          const r = t || {};
          const s = r.exitCode || 1;
          const n = r.code || "commander.error";
          this._exit(s, n, e);
        }
        _parseOptionsEnv() {
          this.options.forEach((e) => {
            if (e.envVar && e.envVar in a.env) {
              const t = e.attributeName();
              if (this.getOptionValue(t) === undefined || ["default", "config", "env"].includes(this.getOptionValueSource(t))) {
                if (e.required || e.optional) {
                  this.emit(`optionEnv:${e.name()}`, a.env[e.envVar]);
                } else {
                  this.emit(`optionEnv:${e.name()}`);
                }
              }
            }
          });
        }
        _parseOptionsImplied() {
          const e = new u(this.options);
          const hasCustomOptionValue = (e) => this.getOptionValue(e) !== undefined && !["default", "implied"].includes(this.getOptionValueSource(e));
          this.options
            .filter((t) => t.implied !== undefined && hasCustomOptionValue(t.attributeName()) && e.valueFromOption(this.getOptionValue(t.attributeName()), t))
            .forEach((e) => {
              Object.keys(e.implied)
                .filter((e) => !hasCustomOptionValue(e))
                .forEach((t) => {
                  this.setOptionValueWithSource(t, e.implied[t], "implied");
                });
            });
        }
        missingArgument(e) {
          const t = `error: missing required argument '${e}'`;
          this.error(t, { code: "commander.missingArgument" });
        }
        optionMissingArgument(e) {
          const t = `error: option '${e.flags}' argument missing`;
          this.error(t, { code: "commander.optionMissingArgument" });
        }
        missingMandatoryOptionValue(e) {
          const t = `error: required option '${e.flags}' not specified`;
          this.error(t, { code: "commander.missingMandatoryOptionValue" });
        }
        _conflictingOption(e, t) {
          const findBestOptionFromValue = (e) => {
            const t = e.attributeName();
            const r = this.getOptionValue(t);
            const s = this.options.find((e) => e.negate && t === e.attributeName());
            const n = this.options.find((e) => !e.negate && t === e.attributeName());
            if (s && ((s.presetArg === undefined && r === false) || (s.presetArg !== undefined && r === s.presetArg))) {
              return s;
            }
            return n || e;
          };
          const getErrorMessage = (e) => {
            const t = findBestOptionFromValue(e);
            const r = t.attributeName();
            const s = this.getOptionValueSource(r);
            if (s === "env") {
              return `environment variable '${t.envVar}'`;
            }
            return `option '${t.flags}'`;
          };
          const r = `error: ${getErrorMessage(e)} cannot be used with ${getErrorMessage(t)}`;
          this.error(r, { code: "commander.conflictingOption" });
        }
        unknownOption(e) {
          if (this._allowUnknownOption) return;
          let t = "";
          if (e.startsWith("--") && this._showSuggestionAfterError) {
            let r = [];
            let s = this;
            do {
              const e = s
                .createHelp()
                .visibleOptions(s)
                .filter((e) => e.long)
                .map((e) => e.long);
              r = r.concat(e);
              s = s.parent;
            } while (s && !s._enablePositionalOptions);
            t = g(e, r);
          }
          const r = `error: unknown option '${e}'${t}`;
          this.error(r, { code: "commander.unknownOption" });
        }
        _excessArguments(e) {
          if (this._allowExcessArguments) return;
          const t = this.registeredArguments.length;
          const r = t === 1 ? "" : "s";
          const s = this.parent ? ` for '${this.name()}'` : "";
          const n = `error: too many arguments${s}. Expected ${t} argument${r} but got ${e.length}.`;
          this.error(n, { code: "commander.excessArguments" });
        }
        unknownCommand() {
          const e = this.args[0];
          let t = "";
          if (this._showSuggestionAfterError) {
            const r = [];
            this.createHelp()
              .visibleCommands(this)
              .forEach((e) => {
                r.push(e.name());
                if (e.alias()) r.push(e.alias());
              });
            t = g(e, r);
          }
          const r = `error: unknown command '${e}'${t}`;
          this.error(r, { code: "commander.unknownCommand" });
        }
        version(e, t, r) {
          if (e === undefined) return this._version;
          this._version = e;
          t = t || "-V, --version";
          r = r || "output the version number";
          const s = this.createOption(t, r);
          this._versionOptionName = s.attributeName();
          this._registerOption(s);
          this.on("option:" + s.name(), () => {
            this._outputConfiguration.writeOut(`${e}\n`);
            this._exit(0, "commander.version", e);
          });
          return this;
        }
        description(e, t) {
          if (e === undefined && t === undefined) return this._description;
          this._description = e;
          if (t) {
            this._argsDescription = t;
          }
          return this;
        }
        summary(e) {
          if (e === undefined) return this._summary;
          this._summary = e;
          return this;
        }
        alias(e) {
          if (e === undefined) return this._aliases[0];
          let t = this;
          if (this.commands.length !== 0 && this.commands[this.commands.length - 1]._executableHandler) {
            t = this.commands[this.commands.length - 1];
          }
          if (e === t._name) throw new Error("Command alias can't be the same as its name");
          const r = this.parent?._findCommand(e);
          if (r) {
            const t = [r.name()].concat(r.aliases()).join("|");
            throw new Error(`cannot add alias '${e}' to command '${this.name()}' as already have command '${t}'`);
          }
          t._aliases.push(e);
          return this;
        }
        aliases(e) {
          if (e === undefined) return this._aliases;
          e.forEach((e) => this.alias(e));
          return this;
        }
        usage(e) {
          if (e === undefined) {
            if (this._usage) return this._usage;
            const e = this.registeredArguments.map((e) => l(e));
            return []
              .concat(
                this.options.length || this._helpOption !== null ? "[options]" : [],
                this.commands.length ? "[command]" : [],
                this.registeredArguments.length ? e : []
              )
              .join(" ");
          }
          this._usage = e;
          return this;
        }
        name(e) {
          if (e === undefined) return this._name;
          this._name = e;
          return this;
        }
        nameFromFilename(e) {
          this._name = o.basename(e, o.extname(e));
          return this;
        }
        executableDir(e) {
          if (e === undefined) return this._executableDir;
          this._executableDir = e;
          return this;
        }
        helpInformation(e) {
          const t = this.createHelp();
          if (t.helpWidth === undefined) {
            t.helpWidth = e && e.error ? this._outputConfiguration.getErrHelpWidth() : this._outputConfiguration.getOutHelpWidth();
          }
          return t.formatHelp(this, t);
        }
        _getHelpContext(e) {
          e = e || {};
          const t = { error: !!e.error };
          let r;
          if (t.error) {
            r = (e) => this._outputConfiguration.writeErr(e);
          } else {
            r = (e) => this._outputConfiguration.writeOut(e);
          }
          t.write = e.write || r;
          t.command = this;
          return t;
        }
        outputHelp(e) {
          let t;
          if (typeof e === "function") {
            t = e;
            e = undefined;
          }
          const r = this._getHelpContext(e);
          this._getCommandAndAncestors()
            .reverse()
            .forEach((e) => e.emit("beforeAllHelp", r));
          this.emit("beforeHelp", r);
          let s = this.helpInformation(r);
          if (t) {
            s = t(s);
            if (typeof s !== "string" && !Buffer.isBuffer(s)) {
              throw new Error("outputHelp callback must return a string or a Buffer");
            }
          }
          r.write(s);
          if (this._getHelpOption()?.long) {
            this.emit(this._getHelpOption().long);
          }
          this.emit("afterHelp", r);
          this._getCommandAndAncestors().forEach((e) => e.emit("afterAllHelp", r));
        }
        helpOption(e, t) {
          if (typeof e === "boolean") {
            if (e) {
              this._helpOption = this._helpOption ?? undefined;
            } else {
              this._helpOption = null;
            }
            return this;
          }
          e = e ?? "-h, --help";
          t = t ?? "display help for command";
          this._helpOption = this.createOption(e, t);
          return this;
        }
        _getHelpOption() {
          if (this._helpOption === undefined) {
            this.helpOption(undefined, undefined);
          }
          return this._helpOption;
        }
        addHelpOption(e) {
          this._helpOption = e;
          return this;
        }
        help(e) {
          this.outputHelp(e);
          let t = a.exitCode || 0;
          if (t === 0 && e && typeof e !== "function" && e.error) {
            t = 1;
          }
          this._exit(t, "commander.help", "(outputHelp)");
        }
        addHelpText(e, t) {
          const r = ["beforeAll", "before", "after", "afterAll"];
          if (!r.includes(e)) {
            throw new Error(`Unexpected value for position to addHelpText.\nExpecting one of '${r.join("', '")}'`);
          }
          const s = `${e}Help`;
          this.on(s, (e) => {
            let r;
            if (typeof t === "function") {
              r = t({ error: e.error, command: e.command });
            } else {
              r = t;
            }
            if (r) {
              e.write(`${r}\n`);
            }
          });
          return this;
        }
        _outputHelpIfRequested(e) {
          const t = this._getHelpOption();
          const r = t && e.find((e) => t.is(e));
          if (r) {
            this.outputHelp();
            this._exit(0, "commander.helpDisplayed", "(outputHelp)");
          }
        }
      }
      function incrementNodeInspectorPort(e) {
        return e.map((e) => {
          if (!e.startsWith("--inspect")) {
            return e;
          }
          let t;
          let r = "127.0.0.1";
          let s = "9229";
          let n;
          if ((n = e.match(/^(--inspect(-brk)?)$/)) !== null) {
            t = n[1];
          } else if ((n = e.match(/^(--inspect(-brk|-port)?)=([^:]+)$/)) !== null) {
            t = n[1];
            if (/^\d+$/.test(n[3])) {
              s = n[3];
            } else {
              r = n[3];
            }
          } else if ((n = e.match(/^(--inspect(-brk|-port)?)=([^:]+):(\d+)$/)) !== null) {
            t = n[1];
            r = n[3];
            s = n[4];
          }
          if (t && s !== "0") {
            return `${t}=${r}:${parseInt(s) + 1}`;
          }
          return e;
        });
      }
      t.Command = Command;
    },
    41135: (e, t) => {
      class CommanderError extends Error {
        constructor(e, t, r) {
          super(r);
          Error.captureStackTrace(this, this.constructor);
          this.name = this.constructor.name;
          this.code = t;
          this.exitCode = e;
          this.nestedError = undefined;
        }
      }
      class InvalidArgumentError extends CommanderError {
        constructor(e) {
          super(1, "commander.invalidArgument", e);
          Error.captureStackTrace(this, this.constructor);
          this.name = this.constructor.name;
        }
      }
      t.CommanderError = CommanderError;
      t.InvalidArgumentError = InvalidArgumentError;
    },
    79754: (e, t, r) => {
      const { humanReadableArgName: s } = r(49154);
      class Help {
        constructor() {
          this.helpWidth = undefined;
          this.sortSubcommands = false;
          this.sortOptions = false;
          this.showGlobalOptions = false;
        }
        visibleCommands(e) {
          const t = e.commands.filter((e) => !e._hidden);
          const r = e._getHelpCommand();
          if (r && !r._hidden) {
            t.push(r);
          }
          if (this.sortSubcommands) {
            t.sort((e, t) => e.name().localeCompare(t.name()));
          }
          return t;
        }
        compareOptions(e, t) {
          const getSortKey = (e) => (e.short ? e.short.replace(/^-/, "") : e.long.replace(/^--/, ""));
          return getSortKey(e).localeCompare(getSortKey(t));
        }
        visibleOptions(e) {
          const t = e.options.filter((e) => !e.hidden);
          const r = e._getHelpOption();
          if (r && !r.hidden) {
            const s = r.short && e._findOption(r.short);
            const n = r.long && e._findOption(r.long);
            if (!s && !n) {
              t.push(r);
            } else if (r.long && !n) {
              t.push(e.createOption(r.long, r.description));
            } else if (r.short && !s) {
              t.push(e.createOption(r.short, r.description));
            }
          }
          if (this.sortOptions) {
            t.sort(this.compareOptions);
          }
          return t;
        }
        visibleGlobalOptions(e) {
          if (!this.showGlobalOptions) return [];
          const t = [];
          for (let r = e.parent; r; r = r.parent) {
            const e = r.options.filter((e) => !e.hidden);
            t.push(...e);
          }
          if (this.sortOptions) {
            t.sort(this.compareOptions);
          }
          return t;
        }
        visibleArguments(e) {
          if (e._argsDescription) {
            e.registeredArguments.forEach((t) => {
              t.description = t.description || e._argsDescription[t.name()] || "";
            });
          }
          if (e.registeredArguments.find((e) => e.description)) {
            return e.registeredArguments;
          }
          return [];
        }
        subcommandTerm(e) {
          const t = e.registeredArguments.map((e) => s(e)).join(" ");
          return e._name + (e._aliases[0] ? "|" + e._aliases[0] : "") + (e.options.length ? " [options]" : "") + (t ? " " + t : "");
        }
        optionTerm(e) {
          return e.flags;
        }
        argumentTerm(e) {
          return e.name();
        }
        longestSubcommandTermLength(e, t) {
          return t.visibleCommands(e).reduce((e, r) => Math.max(e, t.subcommandTerm(r).length), 0);
        }
        longestOptionTermLength(e, t) {
          return t.visibleOptions(e).reduce((e, r) => Math.max(e, t.optionTerm(r).length), 0);
        }
        longestGlobalOptionTermLength(e, t) {
          return t.visibleGlobalOptions(e).reduce((e, r) => Math.max(e, t.optionTerm(r).length), 0);
        }
        longestArgumentTermLength(e, t) {
          return t.visibleArguments(e).reduce((e, r) => Math.max(e, t.argumentTerm(r).length), 0);
        }
        commandUsage(e) {
          let t = e._name;
          if (e._aliases[0]) {
            t = t + "|" + e._aliases[0];
          }
          let r = "";
          for (let t = e.parent; t; t = t.parent) {
            r = t.name() + " " + r;
          }
          return r + t + " " + e.usage();
        }
        commandDescription(e) {
          return e.description();
        }
        subcommandDescription(e) {
          return e.summary() || e.description();
        }
        optionDescription(e) {
          const t = [];
          if (e.argChoices) {
            t.push(`choices: ${e.argChoices.map((e) => JSON.stringify(e)).join(", ")}`);
          }
          if (e.defaultValue !== undefined) {
            const r = e.required || e.optional || (e.isBoolean() && typeof e.defaultValue === "boolean");
            if (r) {
              t.push(`default: ${e.defaultValueDescription || JSON.stringify(e.defaultValue)}`);
            }
          }
          if (e.presetArg !== undefined && e.optional) {
            t.push(`preset: ${JSON.stringify(e.presetArg)}`);
          }
          if (e.envVar !== undefined) {
            t.push(`env: ${e.envVar}`);
          }
          if (t.length > 0) {
            return `${e.description} (${t.join(", ")})`;
          }
          return e.description;
        }
        argumentDescription(e) {
          const t = [];
          if (e.argChoices) {
            t.push(`choices: ${e.argChoices.map((e) => JSON.stringify(e)).join(", ")}`);
          }
          if (e.defaultValue !== undefined) {
            t.push(`default: ${e.defaultValueDescription || JSON.stringify(e.defaultValue)}`);
          }
          if (t.length > 0) {
            const r = `(${t.join(", ")})`;
            if (e.description) {
              return `${e.description} ${r}`;
            }
            return r;
          }
          return e.description;
        }
        formatHelp(e, t) {
          const r = t.padWidth(e, t);
          const s = t.helpWidth || 80;
          const n = 2;
          const o = 2;
          function formatItem(e, i) {
            if (i) {
              const a = `${e.padEnd(r + o)}${i}`;
              return t.wrap(a, s - n, r + o);
            }
            return e;
          }
          function formatList(e) {
            return e.join("\n").replace(/^/gm, " ".repeat(n));
          }
          let i = [`Usage: ${t.commandUsage(e)}`, ""];
          const a = t.commandDescription(e);
          if (a.length > 0) {
            i = i.concat([t.wrap(a, s, 0), ""]);
          }
          const A = t.visibleArguments(e).map((e) => formatItem(t.argumentTerm(e), t.argumentDescription(e)));
          if (A.length > 0) {
            i = i.concat(["Arguments:", formatList(A), ""]);
          }
          const l = t.visibleOptions(e).map((e) => formatItem(t.optionTerm(e), t.optionDescription(e)));
          if (l.length > 0) {
            i = i.concat(["Options:", formatList(l), ""]);
          }
          if (this.showGlobalOptions) {
            const r = t.visibleGlobalOptions(e).map((e) => formatItem(t.optionTerm(e), t.optionDescription(e)));
            if (r.length > 0) {
              i = i.concat(["Global Options:", formatList(r), ""]);
            }
          }
          const c = t.visibleCommands(e).map((e) => formatItem(t.subcommandTerm(e), t.subcommandDescription(e)));
          if (c.length > 0) {
            i = i.concat(["Commands:", formatList(c), ""]);
          }
          return i.join("\n");
        }
        padWidth(e, t) {
          return Math.max(
            t.longestOptionTermLength(e, t),
            t.longestGlobalOptionTermLength(e, t),
            t.longestSubcommandTermLength(e, t),
            t.longestArgumentTermLength(e, t)
          );
        }
        wrap(e, t, r, s = 40) {
          const n = " \\f\\t\\v   -   　\ufeff";
          const o = new RegExp(`[\\n][${n}]+`);
          if (e.match(o)) return e;
          const i = t - r;
          if (i < s) return e;
          const a = e.slice(0, r);
          const A = e.slice(r).replace("\r\n", "\n");
          const l = " ".repeat(r);
          const c = "​";
          const d = `\\s${c}`;
          const p = new RegExp(`\n|.{1,${i - 1}}([${d}]|$)|[^${d}]+?([${d}]|$)`, "g");
          const u = A.match(p) || [];
          return (
            a +
            u
              .map((e, t) => {
                if (e === "\n") return "";
                return (t > 0 ? l : "") + e.trimEnd();
              })
              .join("\n")
          );
        }
      }
      t.Help = Help;
    },
    45240: (e, t, r) => {
      const { InvalidArgumentError: s } = r(41135);
      class Option {
        constructor(e, t) {
          this.flags = e;
          this.description = t || "";
          this.required = e.includes("<");
          this.optional = e.includes("[");
          this.variadic = /\w\.\.\.[>\]]$/.test(e);
          this.mandatory = false;
          const r = splitOptionFlags(e);
          this.short = r.shortFlag;
          this.long = r.longFlag;
          this.negate = false;
          if (this.long) {
            this.negate = this.long.startsWith("--no-");
          }
          this.defaultValue = undefined;
          this.defaultValueDescription = undefined;
          this.presetArg = undefined;
          this.envVar = undefined;
          this.parseArg = undefined;
          this.hidden = false;
          this.argChoices = undefined;
          this.conflictsWith = [];
          this.implied = undefined;
        }
        default(e, t) {
          this.defaultValue = e;
          this.defaultValueDescription = t;
          return this;
        }
        preset(e) {
          this.presetArg = e;
          return this;
        }
        conflicts(e) {
          this.conflictsWith = this.conflictsWith.concat(e);
          return this;
        }
        implies(e) {
          let t = e;
          if (typeof e === "string") {
            t = { [e]: true };
          }
          this.implied = Object.assign(this.implied || {}, t);
          return this;
        }
        env(e) {
          this.envVar = e;
          return this;
        }
        argParser(e) {
          this.parseArg = e;
          return this;
        }
        makeOptionMandatory(e = true) {
          this.mandatory = !!e;
          return this;
        }
        hideHelp(e = true) {
          this.hidden = !!e;
          return this;
        }
        _concatValue(e, t) {
          if (t === this.defaultValue || !Array.isArray(t)) {
            return [e];
          }
          return t.concat(e);
        }
        choices(e) {
          this.argChoices = e.slice();
          this.parseArg = (e, t) => {
            if (!this.argChoices.includes(e)) {
              throw new s(`Allowed choices are ${this.argChoices.join(", ")}.`);
            }
            if (this.variadic) {
              return this._concatValue(e, t);
            }
            return e;
          };
          return this;
        }
        name() {
          if (this.long) {
            return this.long.replace(/^--/, "");
          }
          return this.short.replace(/^-/, "");
        }
        attributeName() {
          return camelcase(this.name().replace(/^no-/, ""));
        }
        is(e) {
          return this.short === e || this.long === e;
        }
        isBoolean() {
          return !this.required && !this.optional && !this.negate;
        }
      }
      class DualOptions {
        constructor(e) {
          this.positiveOptions = new Map();
          this.negativeOptions = new Map();
          this.dualOptions = new Set();
          e.forEach((e) => {
            if (e.negate) {
              this.negativeOptions.set(e.attributeName(), e);
            } else {
              this.positiveOptions.set(e.attributeName(), e);
            }
          });
          this.negativeOptions.forEach((e, t) => {
            if (this.positiveOptions.has(t)) {
              this.dualOptions.add(t);
            }
          });
        }
        valueFromOption(e, t) {
          const r = t.attributeName();
          if (!this.dualOptions.has(r)) return true;
          const s = this.negativeOptions.get(r).presetArg;
          const n = s !== undefined ? s : false;
          return t.negate === (n === e);
        }
      }
      function camelcase(e) {
        return e.split("-").reduce((e, t) => e + t[0].toUpperCase() + t.slice(1));
      }
      function splitOptionFlags(e) {
        let t;
        let r;
        const s = e.split(/[ |,]+/);
        if (s.length > 1 && !/^[[<]/.test(s[1])) t = s.shift();
        r = s.shift();
        if (!t && /^-[^-]$/.test(r)) {
          t = r;
          r = undefined;
        }
        return { shortFlag: t, longFlag: r };
      }
      t.Option = Option;
      t.DualOptions = DualOptions;
    },
    65030: (e, t) => {
      const r = 3;
      function editDistance(e, t) {
        if (Math.abs(e.length - t.length) > r) return Math.max(e.length, t.length);
        const s = [];
        for (let t = 0; t <= e.length; t++) {
          s[t] = [t];
        }
        for (let e = 0; e <= t.length; e++) {
          s[0][e] = e;
        }
        for (let r = 1; r <= t.length; r++) {
          for (let n = 1; n <= e.length; n++) {
            let o = 1;
            if (e[n - 1] === t[r - 1]) {
              o = 0;
            } else {
              o = 1;
            }
            s[n][r] = Math.min(s[n - 1][r] + 1, s[n][r - 1] + 1, s[n - 1][r - 1] + o);
            if (n > 1 && r > 1 && e[n - 1] === t[r - 2] && e[n - 2] === t[r - 1]) {
              s[n][r] = Math.min(s[n][r], s[n - 2][r - 2] + 1);
            }
          }
        }
        return s[e.length][t.length];
      }
      function suggestSimilar(e, t) {
        if (!t || t.length === 0) return "";
        t = Array.from(new Set(t));
        const s = e.startsWith("--");
        if (s) {
          e = e.slice(2);
          t = t.map((e) => e.slice(2));
        }
        let n = [];
        let o = r;
        const i = 0.4;
        t.forEach((t) => {
          if (t.length <= 1) return;
          const r = editDistance(e, t);
          const s = Math.max(e.length, t.length);
          const a = (s - r) / s;
          if (a > i) {
            if (r < o) {
              o = r;
              n = [t];
            } else if (r === o) {
              n.push(t);
            }
          }
        });
        n.sort((e, t) => e.localeCompare(t));
        if (s) {
          n = n.map((e) => `--${e}`);
        }
        if (n.length > 1) {
          return `\n(Did you mean one of ${n.join(", ")}?)`;
        }
        if (n.length === 1) {
          return `\n(Did you mean ${n[0]}?)`;
        }
        return "";
      }
      t.suggestSimilar = suggestSimilar;
    },
    42629: (e) => {
      "use strict";
      var t = Object.defineProperty;
      var r = Object.getOwnPropertyDescriptor;
      var s = Object.getOwnPropertyNames;
      var n = Object.prototype.hasOwnProperty;
      var __export = (e, r) => {
        for (var s in r) t(e, s, { get: r[s], enumerable: true });
      };
      var __copyProps = (e, o, i, a) => {
        if ((o && typeof o === "object") || typeof o === "function") {
          for (let A of s(o)) if (!n.call(e, A) && A !== i) t(e, A, { get: () => o[A], enumerable: !(a = r(o, A)) || a.enumerable });
        }
        return e;
      };
      var __toCommonJS = (e) => __copyProps(t({}, "__esModule", { value: true }), e);
      var o = {};
      __export(o, {
        COLORS: () => i,
        LOG_LEVEL: () => a,
        LogReturn: () => l,
        Logs: () => c,
        PrettyLogs: () => A,
        cleanLogString: () => cleanLogString,
        cleanSpyLogs: () => cleanSpyLogs,
      });
      e.exports = __toCommonJS(o);
      var i = {
        reset: "[0m",
        bright: "[1m",
        dim: "[2m",
        underscore: "[4m",
        blink: "[5m",
        reverse: "[7m",
        hidden: "[8m",
        fgBlack: "[30m",
        fgRed: "[31m",
        fgGreen: "[32m",
        fgYellow: "[33m",
        fgBlue: "[34m",
        fgMagenta: "[35m",
        fgCyan: "[36m",
        fgWhite: "[37m",
        bgBlack: "[40m",
        bgRed: "[41m",
        bgGreen: "[42m",
        bgYellow: "[43m",
        bgBlue: "[44m",
        bgMagenta: "[45m",
        bgCyan: "[46m",
        bgWhite: "[47m",
      };
      var a = { FATAL: "fatal", ERROR: "error", INFO: "info", VERBOSE: "verbose", DEBUG: "debug" };
      var A = class {
        constructor() {
          this.ok = this.ok.bind(this);
          this.info = this.info.bind(this);
          this.error = this.error.bind(this);
          this.fatal = this.fatal.bind(this);
          this.debug = this.debug.bind(this);
          this.verbose = this.verbose.bind(this);
        }
        fatal(e, t) {
          this._logWithStack(a.FATAL, e, t);
        }
        error(e, t) {
          this._logWithStack(a.ERROR, e, t);
        }
        ok(e, t) {
          this._logWithStack("ok", e, t);
        }
        info(e, t) {
          this._logWithStack(a.INFO, e, t);
        }
        debug(e, t) {
          this._logWithStack(a.DEBUG, e, t);
        }
        verbose(e, t) {
          this._logWithStack(a.VERBOSE, e, t);
        }
        _logWithStack(e, t, r) {
          this._log(e, t);
          if (typeof r === "string") {
            this._log(e, r);
            return;
          }
          if (r) {
            const t = r;
            let s = t?.error?.stack || t?.stack;
            if (!s) {
              const e = new Error().stack?.split("\n");
              if (e) {
                e.splice(0, 4);
                s = e.filter((e) => e.includes(".ts:")).join("\n");
              }
            }
            const n = { ...t };
            delete n.message;
            delete n.name;
            delete n.stack;
            if (!this._isEmpty(n)) {
              this._log(e, n);
            }
            if (typeof s == "string") {
              const t = this._formatStackTrace(s, 1);
              const r = this._colorizeText(t, i.dim);
              this._log(e, r);
            } else if (s) {
              const t = this._formatStackTrace(s.join("\n"), 1);
              const r = this._colorizeText(t, i.dim);
              this._log(e, r);
            } else {
              throw new Error("Stack is null");
            }
          }
        }
        _colorizeText(e, t) {
          if (!t) {
            throw new Error(`Invalid color: ${t}`);
          }
          return t.concat(e).concat(i.reset);
        }
        _formatStackTrace(e, t = 0, r = "") {
          const s = e.split("\n");
          for (let e = 0; e < t; e++) {
            s.shift();
          }
          return s.map((e) => `${r}${e.replace(/\s*at\s*/, "  ↳  ")}`).join("\n");
        }
        _isEmpty(e) {
          return !Reflect.ownKeys(e).some((t) => typeof e[String(t)] !== "function");
        }
        _log(e, t) {
          const r = { fatal: "×", ok: "✓", error: "⚠", info: "›", debug: "››", verbose: "💬" };
          const s = r[e];
          const n = typeof t === "string" ? t : JSON.stringify(t, null, 2);
          const o = n.split("\n");
          const a = o
            .map((e, t) => {
              const r = t === 0 ? `\t${s}` : `\t${" ".repeat(s.length)}`;
              return `${r} ${e}`;
            })
            .join("\n");
          const A = a;
          const l = {
            fatal: ["error", i.fgRed],
            ok: ["log", i.fgGreen],
            error: ["warn", i.fgYellow],
            info: ["info", i.dim],
            debug: ["debug", i.fgMagenta],
            verbose: ["debug", i.dim],
          };
          const c = console[l[e][0]];
          if (typeof c === "function" && A.length > 12) {
            c(this._colorizeText(A, l[e][1]));
          } else if (A.length <= 12) {
            return;
          } else {
            throw new Error(A);
          }
        }
      };
      var l = class {
        logMessage;
        metadata;
        constructor(e, t) {
          this.logMessage = e;
          this.metadata = t;
        }
      };
      var c = class _Logs {
        _maxLevel = -1;
        static console;
        _log({ level: e, consoleLog: t, logMessage: r, metadata: s, type: n }) {
          if (this._getNumericLevel(e) <= this._maxLevel) {
            t(r, s);
          }
          return new l({ raw: r, diff: this._diffColorCommentMessage(n, r), type: n, level: e }, s);
        }
        _addDiagnosticInformation(e) {
          if (!e) {
            e = {};
          } else if (typeof e !== "object") {
            e = { message: e };
          }
          const t = new Error().stack?.split("\n") || [];
          if (t.length > 3) {
            const r = t[3];
            const s = r.match(/at (\S+)/);
            if (s) {
              e.caller = s[1];
            }
          }
          return e;
        }
        ok(e, t) {
          t = this._addDiagnosticInformation(t);
          return this._log({ level: a.INFO, consoleLog: _Logs.console.ok, logMessage: e, metadata: t, type: "ok" });
        }
        info(e, t) {
          t = this._addDiagnosticInformation(t);
          return this._log({ level: a.INFO, consoleLog: _Logs.console.info, logMessage: e, metadata: t, type: "info" });
        }
        error(e, t) {
          t = this._addDiagnosticInformation(t);
          return this._log({ level: a.ERROR, consoleLog: _Logs.console.error, logMessage: e, metadata: t, type: "error" });
        }
        debug(e, t) {
          t = this._addDiagnosticInformation(t);
          return this._log({ level: a.DEBUG, consoleLog: _Logs.console.debug, logMessage: e, metadata: t, type: "debug" });
        }
        fatal(e, t) {
          if (!t) {
            t = _Logs.convertErrorsIntoObjects(new Error(e));
            const r = t.stack;
            r.splice(1, 1);
            t.stack = r;
          }
          if (t instanceof Error) {
            t = _Logs.convertErrorsIntoObjects(t);
            const e = t.stack;
            e.splice(1, 1);
            t.stack = e;
          }
          t = this._addDiagnosticInformation(t);
          return this._log({ level: a.FATAL, consoleLog: _Logs.console.fatal, logMessage: e, metadata: t, type: "fatal" });
        }
        verbose(e, t) {
          t = this._addDiagnosticInformation(t);
          return this._log({ level: a.VERBOSE, consoleLog: _Logs.console.verbose, logMessage: e, metadata: t, type: "verbose" });
        }
        constructor(e) {
          this._maxLevel = this._getNumericLevel(e);
          _Logs.console = new A();
        }
        _diffColorCommentMessage(e, t) {
          const r = { fatal: "-", ok: "+", error: "!", info: "#", debug: "@@@@" };
          const s = r[e];
          if (s) {
            t = t
              .trim()
              .split("\n")
              .map((e) => `${s} ${e}`)
              .join("\n");
          } else if (e === "debug") {
            t = t
              .split("\n")
              .map((e) => `@@ ${e} @@`)
              .join("\n");
          } else {
            t = t
              .split("\n")
              .map((e) => `# ${e}`)
              .join("\n");
          }
          const n = "```diff";
          const o = "```";
          return [n, t, o].join("\n");
        }
        _getNumericLevel(e) {
          switch (e) {
            case a.FATAL:
              return 0;
            case a.ERROR:
              return 1;
            case a.INFO:
              return 2;
            case a.VERBOSE:
              return 4;
            case a.DEBUG:
              return 5;
            default:
              return -1;
          }
        }
        static convertErrorsIntoObjects(e) {
          if (e instanceof Error) {
            return { message: e.message, name: e.name, stack: e.stack ? e.stack.split("\n") : null };
          } else if (typeof e === "object" && e !== null) {
            const t = Object.keys(e);
            t.forEach((t) => {
              e[t] = this.convertErrorsIntoObjects(e[t]);
            });
          }
          return e;
        }
      };
      var d = /\x1b\[\d+m|\s/g;
      function cleanLogs(e) {
        const t = e.mock.calls.map((e) => e.map((e) => e?.toString()).join(" "));
        return t.flat().map((e) => cleanLogString(e));
      }
      function cleanLogString(e) {
        return e.replaceAll(d, "").replaceAll(/\n/g, "").replaceAll(/\r/g, "").replaceAll(/\t/g, "").trim();
      }
      function cleanSpyLogs(e) {
        return cleanLogs(e);
      }
      0 && 0;
    },
    80056: (e) => {
      "use strict";
      e.exports = JSON.parse(
        '{"name":"dotenv","version":"16.4.5","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","lint-readme":"standard-markdown","pretest":"npm run lint && npm run dts-check","test":"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3","decache":"^4.6.1","sinon":"^14.0.1","standard":"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0","tap":"^16.3.0","tar":"^6.1.11","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}'
      );
    },
    92472: (e) => {
      "use strict";
      e.exports = JSON.parse(
        '[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]'
      );
    },
    8330: (e) => {
      "use strict";
      e.exports = JSON.parse(
        '{"name":"@ubiquibot/assistive-pricing","version":"1.0.0","description":"Helps set pricing for GitHub Issues and their rewards.","main":"build/index.ts","author":"Ubiquity DAO","license":"MIT","engines":{"node":">=20.10.0"},"scripts":{"worker":"wrangler dev --env dev --port 4000","start":"tsx src/index.ts","format":"run-s format:lint format:prettier format:cspell","format:lint":"eslint --fix .","format:prettier":"prettier --write .","format:cspell":"cspell **/*","knip":"knip --config .github/knip.ts","knip-ci":"knip --no-exit-code --reporter json --config .github/knip.ts","prepare":"husky install","test":"jest --setupFiles dotenv/config --coverage","supabase:generate:local":"supabase gen types typescript --local > src/adapters/supabase/types/database.ts","supabase:generate:remote":"dotenv -- cross-env-shell supabase gen types typescript --project-id $SUPABASE_PROJECT_ID --schema public > src/adapters/supabase/types/database.ts"},"keywords":["typescript","template","dao","ubiquity","open-source"],"dependencies":{"@actions/core":"^1.10.1","@actions/github":"^6.0.0","@commander-js/extra-typings":"12.0.1","@octokit/rest":"^20.0.2","@octokit/webhooks":"^13.1.0","@sinclair/typebox":"^0.32.15","@supabase/supabase-js":"2.43.1","@ubiquity-dao/ubiquibot-logger":"^1.3.1","commander":"12.0.0","decimal.js":"^10.4.3","dotenv":"^16.4.5","typebox-validators":"0.3.5"},"devDependencies":{"@commitlint/cli":"^18.6.1","@commitlint/config-conventional":"^18.6.2","@cspell/dict-node":"^4.0.3","@cspell/dict-software-terms":"^3.3.18","@cspell/dict-typescript":"^3.1.2","@jest/globals":"29.7.0","@mswjs/data":"0.16.1","@types/jest":"29.5.12","@types/node":"^20.11.19","@typescript-eslint/eslint-plugin":"^7.0.1","@typescript-eslint/parser":"^7.0.1","@vercel/ncc":"0.38.2","cross-env":"7.0.3","cspell":"^8.4.0","dotenv-cli":"7.4.2","eslint":"^8.56.0","eslint-plugin-sonarjs":"^0.24.0","husky":"^9.0.11","jest":"29.7.0","jest-junit":"16.0.0","jest-md-dashboard":"0.8.0","knip":"^5.0.1","lint-staged":"^15.2.2","npm-run-all":"^4.1.5","prettier":"^3.2.5","supabase":"1.165.0","ts-jest":"29.1.2","ts-node":"10.9.2","tsx":"^4.7.1","typescript":"5.6.2","wrangler":"3.79.0"},"lint-staged":{"*.ts":["yarn prettier --write","eslint --fix"],"src/**.{ts,json}":["cspell"]},"commitlint":{"extends":["@commitlint/config-conventional"]},"packageManager":"yarn@1.22.22"}'
      );
    },
  };
  var __webpack_module_cache__ = {};
  function __nccwpck_require__(e) {
    var t = __webpack_module_cache__[e];
    if (t !== undefined) {
      return t.exports;
    }
    var r = (__webpack_module_cache__[e] = { exports: {} });
    var s = true;
    try {
      __webpack_modules__[e].call(r.exports, r, r.exports, __nccwpck_require__);
      s = false;
    } finally {
      if (s) delete __webpack_module_cache__[e];
    }
    return r.exports;
  }
  if (typeof __nccwpck_require__ !== "undefined") __nccwpck_require__.ab = __dirname + "/";
  var __webpack_exports__ = __nccwpck_require__(79407);
  module.exports = __webpack_exports__;
})();
